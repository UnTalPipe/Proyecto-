/*==============================| Servidor |==================================\\
||					     	     _____    _                                   ||
||						        |  __ \  | |                                  ||
||						        | |__) | | |                                  ||
||			        		    |  _  /  | |                                  ||
||			         		    | | \ \  | |____                              ||
||				       		    |_|  \_\ |______|                             ||
||                                                                            ||
||                                                                            ||
\\=========================== INFORMACION ====================================*/
//             © Copyright 2013 - 2015 - Revolucion Latina                    //
//==============================================================================
// Includes                                                                   //
//==============================================================================
#include <a_samp>
#include <mxINI>
#include <lethaldudb2>
#include <Streamer>
#include <foreach>
#include <TextoEs>
#include <sscanf2>
#include <seif_walk>
#include <mSelection>
#include <aDialog>
#pragma tabsize 0
//=================== HORA FELIZ GameZoneFr ============//
 new HoraFelizRL;
//
new rconAttempts[MAX_PLAYERS];
//=======================
new balason [MAX_PLAYERS];
//=======================
new OBengala[MAX_PLAYERS];
forward ChauBengala(playerid);
forward ChauBengala2(playerid);
forward ChauBengala3(playerid);
forward UsaIPKick(playerid);
//=======================
new ParkourPremio;
new ParkourLose;
new Run;
//Autos Arcoiris
new Tiempo1;
new Tiempo2;
new Tiempo3;
new Tiempo4;
new Tiempo5;
forward Color1(playerid);
forward Color2(playerid);
forward Color3(playerid);
forward Color4(playerid);
forward Color5(playerid);
//
forward SetPlayerRandomPositionGR(playerid);
forward SetPlayerRandomPosition(playerid);

	new Float:PlayerRandomPos[6][6] = {
	{2676.2397,2813.4780,38.3222},
	{2696.1421,2784.7336,59.0212},
	{2717.5513,2774.5952,77.3594},
	{2729.4258,2683.3374,59.0234},
	{2621.2744,2657.9429,37.3286},
	{2508.9514,2693.0676,74.8281}
	};
			new Float:PlayerRandomPosGR[6][6] = {
	{-1013.1832,-614.0562,32.0078},
	{-989.3470,-669.1602,32.0078},
	{-1052.5387,-710.8019,32.0078},
	{-1062.3840,-696.0997,56.3359},
	{-1092.1545,-691.4456,52.2290},
	{-1092.1545,-691.4456,52.2290}
	};
//==============================================================================
new FireShotON[MAX_PLAYERS];
new FireShot[MAX_PLAYERS];
new	gRocketObj[MAX_PLAYERS];
forward ShotFire(playerid);
//=============================================================================
new optimusprime;
new bumblebee;
new jazz;
new ratchet;
new ironhide;
//========Bloquear los autos en desmadre
new SoloWW2[MAX_PLAYERS];
//SuperSaltos VIP
new SaltarMas[MAX_PLAYERS];
new Saltos[MAX_PLAYERS];

new MAXIMOS_METROS = 6;
forward ImpulsarSaltos(playerid);
//PM PRIVADOSS
//new ReceiverID[MAX_PLAYERS];
//new PMfrom[MAX_PLAYERS];
//new reply[MAX_PLAYERS];
//=============================================================================
/*new LCmd[MAX_PLAYERS];
new bounty[MAX_PLAYERS];
forward TiempoCmd(playerid);*/
//=============================================================================
#define SetPlayerHoldingObject(%1,%2,%3,%4,%5,%6,%7,%8,%9) SetPlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1,%2,%3,%4,%5,%6,%7,%8,%9)
#define StopPlayerHoldingObject(%1) RemovePlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define IsPlayerHoldingObject(%1) IsPlayerAttachedObjectSlotUsed(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)

//==============================================================================
/*new FPS[MAX_PLAYERS];
new FPSS[MAX_PLAYERS];
new Text:AbajoVida[MAX_PLAYERS];*/
//==============================================================================
new Text:Textdraw1;
new Text:Textdraw2;
new Text:Textdraw3;


//Ingame
new Text:ITextdraw0;
new Text:ITextdraw1;
new Text:ITextdraw2;
new Text:ITextdraw3;
new Text:ITextdraw4;

//Logueo by carlosxp
new Text:LTextdraw0;
new Text:LTextdraw1;
new Text:LTextdraw2;
new Text:LTextdraw3;
new Text:LTextdraw4;
new Text:LTextdraw5;
new Text:LTextdraw6;
//==============================================================================
forward TimeNickAnn();
forward TimeNickAnn1();
new Text:ByNickAnn;
new Text:ByNickAnn1;
//==============================================================================
forward Cargar(playerid);
// Timer Stats Player
//==============================================================================
//new TimerStats[MAX_PLAYERS];
//=============================================================================
new Text:InvisibleT;
//News´music=================================================
#define GENERO 32270
#define SONG 545699
#define DialogAdmin 1919


//SISTEMA DJ
#define DIALOG_PARTY 9010
#define DIALOG_MUSICNAME 9011
#define DIALOG_MUSICURL 9012
#define MinimumParticipants 1
new IsADJ[MAX_PLAYERS];
new PartyStarted;
new PartyPrepared;
new JoinedD[MAX_PLAYERS];
new Float:PartyX;
new Float:PartyY;
new Float:PartyZ;
new CurrentParticipants; 
new SongName[128];
new Palo;
new Palo2;
new Palo3;
new Palo4;
new Palo5;
new Palo6;
new Palo7;
new Palo8;
new Maquina;
new Maquina1;
new Maquina2;
new Maquina3;
new Maquina4;
new Maquina5;
new Maquina6;
new Maquina7;
new Maquina8;
new Maquina9;
new Maquina10;


//===Armas en la espalda
#define ARMEDBODY_USE_HEAVY_WEAPON               (false)

static armedbody_pTick[MAX_PLAYERS];
//
static iPlayerChatTime[MAX_PLAYERS];
//==============================================================================
#pragma unused evtext
#define Autorizados "AdminAutorizado.ini"
//==============================================================================
// Anti Dialogo Hack
//==============================================================================
#define INVALID_DIALOG_ID       (-1)
stock _ShowPlayerDialog(playerid, dialogid, style, caption[], info[], button1[], button2[])
{
    SetPVarInt(playerid, "CurrentDialog", dialogid);
    return ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
}

//==============================================================================
// Anti Hack
//==============================================================================
#define RATE_INC (500) // The sensitivity per message, no need to modify.
#define RATE_MAX (2500) // When the flood rate reaches this value the action below will be taken

#define THRESOLD_ACTION 1

enum LISTA_ANTIFLOOD
{
	UltimoUpd,
	VelocidadFlood
}

new AntiFlood_Data[MAX_PLAYERS][LISTA_ANTIFLOOD];

// Stock -----------------------------------------------------------------------

Antiflood( playerid, bool:inc=true )
{
	AntiFlood_Data[playerid][VelocidadFlood] += inc ? RATE_INC : 0;
	AntiFlood_Data[playerid][VelocidadFlood] = AntiFlood_Data[playerid][VelocidadFlood] - ( GetTickCount() - AntiFlood_Data[playerid][UltimoUpd] );
	AntiFlood_Data[playerid][UltimoUpd] = GetTickCount();
	AntiFlood_Data[playerid][VelocidadFlood] = AntiFlood_Data[playerid][VelocidadFlood] < 0 ? 0 : AntiFlood_Data[playerid][VelocidadFlood];

	if ( AntiFlood_Data[playerid][VelocidadFlood] >= RATE_MAX )
	{
		#if THRESOLD_ACTION == 1
			new msg[200], name[MAX_PLAYER_NAME];

			GetPlayerName( playerid, name, sizeof( name ) );

			format( msg, sizeof( msg ), "¡Info!: {FFFFFF}%s ha sido Baneado por el AntiBotRL. [Razón: Herramientas Hacks Detectadas]", name );

			SendClientMessageToAll( 0xFF0000AA, msg );

			printf("%s",msg);

			Ban(playerid);
		#endif

		return false;
	}

	return true;
}

AntiFlood_Hack( playerid )
{
	AntiFlood_Data[playerid][UltimoUpd] = GetTickCount();
	AntiFlood_Data[playerid][VelocidadFlood] = 0;
}

/*stock BanIP(playerid)
{
	#if LOG_FLOODER == 1
		new filename[128], y, m, d;
		getdate(y, m, d);
		format(filename, sizeof(filename), "FlooderBan.txt", y, m);
		if(!fexist(filename))
		{
			new File:tmpfile = fopen(filename, io_write);
			fclose(tmpfile);
		}
		new File:sfhandler = fopen(filename, io_append),
		sfilestr[128];
		new h,mi,s; gettime(h,mi,s);
		format(sfilestr, sizeof(sfilestr),

		// Details by Month / Day / Year / Hour / Minute / Second Then Players name and the Players IP.
		"| %02d/%02d/%d %02d:%02d:%02d (M/D/Y H:M:S) | > Flooder: %s (IP:%s). \r\n",
		// --------------------------------------------------------------------------------------------
		m, d, y, h, mi, s, NombreXDD(playerid), PlayerIP(playerid));
		fwrite(sfhandler, sfilestr); fclose(sfhandler);
	#endif

	new string[128];
	#if SHOW_MESSAGE == 1
	format(string, sizeof(string), "{FF0000}Revolucion Latina  {FFFFFF}%s {FF0000}Fue ReBaneado Automaticamente Del Servidor Razon:(Herramientas Hacks Detectadas).", PlayerIP(playerid));
	SendClientMessageToAll(0xFF0000AA, string);
	#endif
	printf("Banned %s(%d), %s. Connection flooding.", NombreXDD(playerid), playerid, PlayerIP(playerid));
	format(string, sizeof(string), "banip %s", PlayerIP(playerid));
	SendRconCommand(string);
	SendRconCommand("reloadbans");
}*/
//==============================================================================
//Code Rak SAMP
//==============================================================================
#define RakSAMP "DA0E5085558CCACC88ECCA40C4CEC49A9408EEE8"
native gpci(playerid,const serial[],maxlen);
//==============================================================================
// Defines, variables, arrays, etc
//==============================================================================
// Varios
    #define DATABASENAME	"IpToCountry.db.db"
    #pragma dynamic 145000
    #pragma tabsize 0
    #pragma unused ret_memcpy
//==============================================================================
public OnFilterScriptInit()
{
return 1;
}
//==================Loquendo y loquenda=========================================
#define loquendoVoz 23
#define loquendaV 24
#define Warning 128
//
#define LimiteCmd                        50
//-- Sistema de Neon --//
//	#define neondialog 8131
//*eventos nuevos
//==============================================================================
new Text:ConcText;
new Text:GanoText;
new Text:GanoText2;
static SEVENTO;
//==============================================================================
// Supervivencia
//==============================================================================
static boxon,boxplaying,boxrank,boxtimer,reward,SBOX;
static arenabox1, arenabox2;
static Pala, Dildo, Bate, Golf, Nmm, Puno, Desert, Shotgun, Spray;
static CountTimerSurvival, CountAmountSv;

forward RewardCalc(playerid,min,max);
public RewardCalc(playerid,min,max)
{
	reward = (min + (random(max-min)));
}
//==============================================================================
// OP7
//==============================================================================
static tdmon,tdmplaying,tdmrank;
static redplayers,blueplayers,tdmcolor,tdmtimer;
static CountTimerOP7, CountAmount7;
static RushChallenge, DeathSquare, Otro;
static startvar[8], SOP7;

// Spawn de Rush Challenge
static Float:RUSHBLUE[8][3] = {
{3376.6223,3034.4812,7.7806},
{3370.0088,3034.1707,7.7806},
{3362.5798,3033.0271,7.7806},
{3354.6599,3033.7732,7.7806},
{3347.8040,3032.6104,7.7806},
{3340.3164,3032.0315,7.7806},
{3332.8223,3032.8059,7.7806},
{3325.7463,3032.3604,7.7806}
};

static Float:RUSHRED[8][3] = {
{3336.6750,3139.5464,7.7806},
{3344.4111,3139.8623,7.7806},
{3350.0310,3139.4751,7.7806},
{3357.4661,3138.7202,7.7806},
{3364.7810,3139.9307,7.7806},
{3369.9167,3140.5237,7.7806},
{3375.8127,3140.4692,7.7806},
{3382.8567,3140.4531,7.7806}
};
// Spawn de Death Square
static Float:DEATHBLUE[8][3] = {
{-1771.2924,-3473.0698,5.5916},
{-1768.1865,-3473.5491,5.5916},
{-1765.6431,-3473.5859,5.5916},
{-1761.9675,-3473.7148,5.5916},
{-1769.3113,-3469.3447,5.5916},
{-1766.3783,-3469.8843,5.5916},
{-1761.7878,-3470.0823,5.5916},
{-1767.8109,-3466.0056,5.5916}
};

static Float:DEATHRED[8][3] = {
{-1785.6317,-3560.6609,5.6916},
{-1788.3715,-3560.5525,5.6916},
{-1791.8571,-3560.5496,5.6916},
{-1786.9561,-3563.8159,5.6916},
{-1791.6180,-3563.5242,5.6916},
{-1796.5225,-3563.2480,5.6916},
{-1788.4053,-3566.4639,5.6916},
{-1795.7937,-3565.9006,5.6916}
};
// Spawn de Otro
static Float:OTROBLUE[8][3] = {
{-2315.8167,-115.0632,35.3203},
{-2316.0164,-109.6758,35.3203},
{-2316.6550,-105.8298,35.3203},
{-2316.8359,-102.1139,35.3203},
{-2317.2573,-97.4604,35.3203},
{-2315.7388,-91.8711,35.3203},
{-2315.5457,-86.7487,35.3203},
{-2316.5454,-81.7016,35.3203}
};

static Float:OTRORED[8][3] = {
{-2359.3438,-84.5289,35.3203},
{-2358.7734,-88.6654,35.3203},
{-2357.6602,-93.0944,35.3203},
{-2356.7039,-96.7000,35.3203},
{-2356.9534,-100.6926,35.3203},
{-2356.0813,-104.0380,35.3203},
{-2355.4321,-107.5903,35.3203},
{-2354.7898,-112.2762,35.3203}
};
//==============================================================================
// No te Mojes
//==============================================================================
	#define MAX_SLOTS 		54
	static CountTimerGET, CountAmountGet;
	new bool:Minigamer_[MAX_PLAYERS char];
	new bool:VIEW_FROM_ABOVE;
	static inProgress, uTimer, GT;
	static Objects_[2][MAX_SLOTS];
	static Iterator:_Minigamer	<MAX_SLOTS>;
	static Iterator:_Objects	<MAX_SLOTS>;

static pReadyText[3][64] =
{
	"~n~ ~n~ ~n~ ~y~matente listo...",
	"~n~ ~n~ ~n~ ~y~Preparate!",
	"~n~ ~n~ ~n~ ~y~¿Estas listo?"
};

static pFellOffText[4][28] =
{
	"~n~ ~r~perdedor!",
	"~n~ ~r~perdistes",
	"~n~ ~r~lol te caistes!",
	"~n~ ~r~AL agua... daaaa!"
};

static Float:gCoords[MAX_SLOTS][7] = {

	{ -5309.198120,-199.052383,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5309.198120,-195.786071,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5309.198120,-192.510620,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5309.198120,-189.250564,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5309.198120,-185.987960,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5309.198120,-182.727081,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5309.198120,-179.463394,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5309.198120,-176.205261,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5304.841796,-176.205261,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5304.841796,-179.468795,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5304.841796,-182.737884,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5304.841796,-185.989654,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5304.841796,-189.259185,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5304.841796,-192.518615,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5304.841796,-195.785491,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5304.841796,-199.054733,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5300.489990,-199.054733,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5300.489990,-195.782165,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5300.489990,-192.531250,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5300.489990,-189.274765,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5300.489990,-186.003005,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5300.489990,-182.735229,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5300.489990,-179.471069,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5300.489990,-176.208007,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5296.138061,-176.208007,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5296.138061,-179.479248,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5296.138061,-182.744735,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5296.138061,-186.002944,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5296.138061,-189.274505,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5296.138061,-192.533691,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5296.138061,-195.788970,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5296.138061,-199.048782,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5291.776000,-199.050140,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5291.776000,-195.790634,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5291.776000,-192.542922,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5291.776000,-189.277542,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5291.776000,-186.013275,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5291.776000,-182.742355,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5291.776000,-179.475021,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5291.776000,-176.215805,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5287.432250,-176.215805,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5287.432250,-179.485168,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5287.432250,-182.739608,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5287.432250,-186.016723,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5287.432250,-189.277816,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5287.432250,-192.539001,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5287.432250,-195.796325,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5287.432250,-199.053771,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5287.431274,-202.320648,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5291.781616,-202.320648,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5296.136718,-202.320648,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5300.493652,-202.320648,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5304.848876,-202.320648,22.593704,-90.000000,0.000000,0.000000,150.0 },
	{ -5309.201660,-202.320648,22.593704,-90.000000,0.000000,0.000000,150.0 }
	};
//==============================================================================
// Juegos del Hambre
//==============================================================================
static hgon,hgplaying,hgrank,hgtimer,SHG;
static CountTimerHg, CountAmountHg;
static ArenaHG1, ArenaHG2;

new Arma1;
new Arma2;
new Arma3;
new Arma4;
new Arma5;
new Arma6;
new Arma7;
new Arma8;
new Arma9;
new Arma10;
new Arma11;
new Arma12;
new Arma13;
new Arma14;
new Arma15;
new Arma16;
new Arma17;
new Arma18;
new Arma19;
new Arma20;
new VidaHg;
new ChalecoHg;

static Float:SpawnHg[11][3] = {
{-2639.4224, 2385.2185, 11.7365},
{-2504.2004, 2413.0503, 16.6906},
{-2430.3665, 2494.2083, 13.9198},
{-2317.8208, 2419.9829, 6.4805},
{-2274.1135, 2284.5081, 4.9326},
{-2482.3372, 2251.2935, 5.1066},
{-2492.2659, 2292.5598, 5.5036},
{-2441.9382, 2368.5479, 5.0174},
{-2519.3909, 2330.9053, 4.9213},
{-2363.5576, 2404.7305, 7.2385},
{-2378.0776, 2394.7783, 8.9165}
};

static Float:SpawnHg2[11][3] = {
{1370.57654, 433.75949, 19.80610},
{1428.51501, 186.49429, 21.49290},
{1241.25012, 125.52716, 20.16259},
{1197.81189, 294.84012, 19.51325},
{1219.66675, 357.39410, 19.48720},
{1382.77588, 267.45230, 19.57590},
{1232.10229, 185.36327, 19.75690},
{1347.89587, 346.14609, 20.24865},
{1330.30273, 223.38010, 19.65814},
{1293.31787, 219.57970, 19.66166},
{1463.63318, 267.17969, 19.26747}
};
//==============================================================================
// Derby
//==============================================================================
static derbyon,derbyplaying,derbyrank,derbytimer,SDERBY;
static ArenaDerby1, ArenaDerby2;
static CountTimerDerby, TimerDerby, CountAmountDerby;

new VehDerby[]={
	412,
	495,
	504
};

//==============================================================================//
new MR[26][] =
{
	"~r~TIP: ~b~Para no recibir duelos, usa ~p~/Noduelo~b~.",
	"~r~TIP: ~b~Puedes tener armas usando ~p~/Armas~b~.",
	"~r~TIP: ~b~Los mensajes privados se envian con ~p~/Pm~b~.",
	"~r~TIP: ~b~Para ver a los Vips conectados, usa ~p~/Vips~b~.",
	"~r~TIP: ~b~Mira los vehiculos con ~p~/Autos~b~.",
	"~r~TIP: ~b~Usa ~p~/Cmds ~y~/Ayuda ~p~/Solicitar ~y~ /Admins~b~.",
	"~r~TIP: ~b~Necesitas 10 de score para registrarte.",
	"~r~TIP: ~b~Para llamar un admin, utiliza ~p~/Solicitar~b~.",
	"~r~TIP: ~b~Para ver a los ~p~Admins ~w~usa~p~ /Admins~b~.",
	"~r~TIP: ~b~La lista de teleports DM estan en ~p~/DmTeles~b~.",
	"~r~TIP: ~b~Para insertar neones a tu auto, usa ~p~/neones~b~.",
	"~r~TIP: ~b~Cambia las luces de tu auto con ~p~/luces~b~.",
	"~r~TIP: ~b~Nueva WEB ~r~www.axone12.esy.es~b~.",
	"~r~TIP: ~b~Los insultos se hacen en ~y~confianza ~b~y ~p~broma~b~.",
	"~r~TIP: ~b~Para ser ~y~Vip~b~, puedes mirar ~p~/Cmds7~b~.",
	"~r~TIP: ~b~Recuerda no hacer SPAM, sino sera ~r~ban ~b~o~w~ kick~b~.",
	"~r~TIP: ~b~Para ver los interiores usa ~p~/Interiores~b~.",
	"~r~TIP: ~b~Mira info de clanes con ~p~/Clan~b~.",
	"~r~TIP: ~b~Para poner una recompensa de un Jugador usa ~p~/Recompensa~b~.",
	"~r~TIP: ~b~Mira las drogas con ~p~/Drogas~b~.",
	"~r~TIP: ~b~Si sos nuevo en ~y~SA:MP~b~ usa ~p~/Sampinfo~b~.",
	"~r~TIP: ~b~Mira lista de objetos con ~p~/Items~b~.",
	"~r~TIP: ~b~Los usuarios afk ~b~figuran usando el comando ~p~/Afks~b~.",
	"~r~TIP: ~b~Apretando ~p~'N'~b~, podras ver el menu del usuario.",
	"~r~TIP: ~b~Mira los mejores usuarios con ~p~/TOP~b~.",
	"~r~TIP: ~b~Para cambiar el clima usa ~p~/tiempo~b~."
};
forward TimerMR(playerid);
//==============================================================================
new RDTX[][] =
{
	"/CMDS",
	"/CREDITOS",
	"/REPORTAR",
	"/AYUDA",
	"/PREGUNTA",
	"/SOLICITAR",
	"/MINIJUEGOS",
	"/STATS ID",
	"/REGLAS",
    "/VIPS",
    "/CLAN",
	"/TELES",
	"/TOP",
	"/COLORES",
	"/ARMAS",
	"/RANGOS",
	"/CONTEO",
    "/AFKS",
	"/RW",
	"/WW",
	"/AUTOS",
	"/NEONES",
    "/ITEMS",
    "/PELEAS",
    "/CAMINAR",
    "/SKIN",
    "/DARDINERO",
	"/AFK",
	"/DROGAS",
	"/TIEMPO",
	"/LUCES",
	"/ADMINS",
	"/SAMPINFO",
    "/ACCIONES",
    "/EVENTOS",
    "/INTERIORES"
};
forward TimerRDTX(playerid);

/*new bum[][] =
{
	"ld_dual:ex1",
	"ld_dual:ex2",
	"ld_dual:ex3",
	"ld_dual:ex4"
};
forward Timerbum(playerid);*/

// Revolucion
//==============================================================================
static swaton,swatplaying,swatrank;
static swatcolor,swattimer;
static CountTimerSwat, CountAmountSwat;
static ArenaSwat1, ArenaSwat2;
static SSWAT;

// Spawn de Revolucion
static Float:ARENASBLUE[7][7] = {
{-3407.7444,-765.8571,4.2600},
{-3408.7302,-770.0630,4.2600},
{-3407.2832,-777.1659,4.2600},
{-3406.3669,-772.9046,4.2600},
{-3404.3408,-764.3701,4.2600},
{-3400.9436,-771.1047,4.2600},
{-3393.1975,-776.8387,4.2600}
};

static Float:ARENASRED[7][7] = {
{-3300.0068,-867.7424,4.2600},
{-3301.1050,-861.0511,4.2600},
{-3301.7676,-865.1616,4.2600},
{-3301.8186,-871.3715,4.2600},
{-3302.1956,-874.8290,4.2600},
{-3309.7820,-867.4419,4.2600},
{-3313.3594,-861.5363,4.2600}
};

// NO TOCAR ERROR !!
static Float:ARENASBLUE2[5][3] = {
{249.7384, 1846.0098, 8.7832},
{249.7508, 1849.4751, 8.7832},
{248.2428, 1847.5844, 8.7832},
{246.5052, 1846.2710, 8.7832},
{246.7431, 1849.7032, 8.7832}
};

static Float:ARENASRED2[5][3] = {
{112.3070, 1916.8254, 19.0127},
{116.1750, 1917.1792, 19.0127},
{113.7785, 1919.6112, 19.0127},
{111.8333, 1922.4333, 19.0127},
{115.7092, 1922.0007, 19.0127}
};
//==============================================================================
// Rhino
//==============================================================================
static rhinoon,rhinoplaying,rhinorank,rhinotimer,SRHINO;
static CountTimerRhino, CountAmountRhino, ArenaRhino1, ArenaRhino2, RankOcupado;

static Float:SpawnCaja[16][3] = {
{-1067.8506, 2868.1035, 228.7279},
{-1011.1990, 2848.8792, 228.7279},
{-1121.8170, 2782.6682, 228.7279},
{-1141.2419, 2945.9167, 228.7279},
{-1158.9602, 2829.5728, 228.7279},
{-1124.7946, 2853.4153, 228.7279},
{-1010.6334, 2937.0840, 228.7279},
{-1000.6265, 2783.6917, 228.7279},
{-1422.9457, 2792.2009, 228.7279},
{-1438.0763, 2912.8586, 228.7279},
{-1410.1772, 2957.6428, 228.7279},
{-1284.5967, 2910.6047, 228.7279},
{-1335.8600, 2824.9570, 228.7279},
{-1342.2616, 2958.3154, 228.7279},
{-1349.3660, 2885.8899, 228.7279},
{-1298.2157, 2777.7253, 228.7279}
};
//==============================================================================
// Laberinto
//==============================================================================
static labon,labplaying,labrank,labtimer,SLAB;
static ArenaL1;
static CountTimerLaberinto, CountAmountLaberinto;
new LabPick1;

static Float:LABRANDOM1[5][3] = {
{856.12799, -2994.23608, 12.86290},
{843.25006, -2995.12329, 12.86290},
{849.94666, -2991.27881, 12.86290},
{855.39117, -2988.29663, 12.86290},
{843.67340, -2987.36475, 12.86290}
};

/*static Float:LABRANDOM2[5][3] = {
{2203.41431, -2681.08472, 866.34644},
{2190.97339, -2680.48779, 866.34644},
{2189.77930, -2673.86035, 866.34644},
{2205.65063, -2672.73608, 866.34644},
{2198.33740, -2679.57813, 866.64941}
};*/

//==============================================================================
// Parkour
//==============================================================================
static parkon,parkplaying,parkrank,parktimer,SPARK;
static ArenaP1, ArenaP2;
static CountTimerParkour, CountAmountParkour;
new ParkPick1;
new ParkPick2;

static Float:PARKRANDOM1[5][3] = {
{-1004.017639,1613.899414,623.163879},
{-1004.332763,1615.317749,623.163879},
{-1004.345214,1618.703979,623.163879},
{1004.564331,1622.637695,623.163879},
{-1004.798339,1629.674560,623.163879}
};

static Float:PARKRANDOM2[5][3] = {
{2203.41431, -2681.08472, 866.34644},
{2190.97339, -2680.48779, 866.34644},
{2189.77930, -2673.86035, 866.34644},
{2205.65063, -2672.73608, 866.34644},
{2198.33740, -2679.57813, 866.64941}
};

//==============================================================================
// Zombie
//==============================================================================
static zombieon,zombieplaying,zombierank;
static zombieplayers,humanplayers,zombiecolor,zombietimer;
static CountTimerZombie, CountAmountZombie;
static ArenaZombie1, ArenaZombie2;
static SZOMBIE;

// Spawn de Zombie
static Float:ARENA1Z[7][3] = {
{-3351.3655,1657.1870,59.0994},
{-3366.7720,1767.2821,65.2337},
{-3357.3376,1765.2642,65.1410},
{-3359.4541,1810.6895,66.6934},
{-3342.9268,1885.3073,68.0081},
{-3347.8809,1885.0485,67.9941},
{-3354.0122,1884.4883,68.3941}
};

static Float:ARENA1H[7][3] = {
{-3343.2285,2267.9270,55.4231},
{-3352.3318,2269.2849,55.6388},
{-3361.3557,2269.7729,55.4231},
{-3368.2239,2270.0979,55.8138},
{-3361.9961,2267.3618,55.4231},
{-3346.9978,2265.9023,55.4231},
{-3353.6023,2256.8042,55.8138}
};

static Float:ARENA2Z[5][3] = {
{-1594.9171, 933.2885, 7.6511},
{-1601.8007, 930.5383, 7.6511},
{-1596.2421, 925.2766, 7.6511},
{-1601.9177, 920.9981, 7.6511},
{-1595.1628, 915.9992, 7.6511}
};

static Float:ARENA2H[5][3] = {
{-1876.5466, 916.3085, 35.0508},
{-1867.7317, 918.4924, 35.0508},
{-1873.4469, 923.4041, 35.0508},
{-1876.2625, 929.2817, 35.0508},
{-1867.7633, 928.2527, 35.0508}
};
//==============================================================================
// Sistema de Clanes
	#define MAX_GANG 	400
	#define MAX_ZONE 	400
	#define CFG 	    "ladmin/CFG.ini"
	#define GANG_FILE 	"ladmin/clanes/%d.ini"
	#define ZONE_FILE	"ladmin/zonas/%d.ini"
	#define GREY        0xAFAFAFAA
	#define MAX_USERS 200
	#define CONQUISTADORES 3
	#define MAX_AREAS_TO_CHECK 100
	#define PLAYERS 200
	#define MAX_ZONE_NAME 80
	#define UpdateConfig1     500
	#define INVITAR 	343
    enum MainZone{
	Zone_Name[28], Float:Zone_Area[6] };
	forward TIMER_DCallbacks();
	new Float:AREACHECK_Coords[MAX_AREAS_TO_CHECK][4];
	new AREACHECK_Player[MAX_PLAYERS];
	new AREACHECK_Count=0;
	forward JoinGang(playerid, gangid);
	forward GangRadar(playerid);
	forward LeaveGang(playerid, gangid);
	forward ConquistaGZ(areaid, gangid);
	new GANG_NUMBER;
	new ZONE_NUMBER;
	new Float:x1, Float:y1, Float:z1;
	new Float:x2, Float:y2, Float:z2;
	new creating = 0;
	new zoneid = 0;
	new PlayerGang[MAX_PLAYERS];
	new PlayerLider[MAX_PLAYERS];
	new gradar[MAX_PLAYERS];
	new gradartimer[MAX_PLAYERS];
	new invited[MAX_PLAYERS];
	new GangTimer[MAX_GANG][MAX_ZONE];
	new Invaders[MAX_GANG][MAX_ZONE];
	new RandomColors[400] = {
	0x4F5152D4,0xFF0000AA,0x7E49D7AA,0x20B2AAAA,0xDC143CAA,0xFFFF00AA,0x0BE472AA,0x4F5152AA,0xFF1493AA,
	0xFFD720AA,0x8b4513AA,0x008000AA,0x148b8bAA,0x14ff7fAA,0x6152C2AA,0xCF72A9AA,0xE59338AA,0xEEDC2DAA,
	0x534081AA,0x0495CDAA,0xEF6CE8AA,0xFFFF00AA,0x247C1BAA,0x0C8E5DAA,0x635B03AA,0xCB7ED3AA,0x65ADEBAA,
	0x5C1ACCAA,0xF2F853AA,0x11F891AA,0x7B39AAAA,0x53EB10AA,0x54137DAA,0x275222AA,0xF09F5BAA,0x3D0A4FAA,
	0x22F767AA,0xD63034AA,0x9A6980AA,0xDFB935AA,0x3793FAAA,0x90239DAA,0xE9AB2FAA,0xAF2FF3AA,0x057F94AA,
	0xB98519AA,0x388EEAAA,0x028151AA,0xA55043AA,0x0DE018AA,0x93AB1CAA,0x95BAF0AA,0x369976AA,0xf0e68cAA,
	0x4B8987AA,0x491B9EAA,0x829DC7AA,0xBCE635AA,0x247C1BAA,0x20D4ADAA,0x2D74FDAA,0x3C1C0DAA,0x12D6D4AA,
	0x48C000AA,0x2A51E2AA,0xE3AC12AA,0xFC42A8AA,0x2FC827AA,0x1A30BFAA,0xB740C2AA,0x42ACF5AA,0x2FD9DEAA,
	0xFAFB71AA,0x05D1CDAA,0xC471BDAA,0x94436EAA,0xC1F7ECAA,0xCE79EEAA,0xBD1EF2AA,0x93B7E4AA,0x3214AAAA,
	0x184D3BAA,0xAE4B99AA,0x7E49D7AA,0x4C436EAA,0xFA24CCAA,0xCE76BEAA,0xA04E0AAA,0x9F945CAA,0xDCDE3DAA,
	0x10C9C5AA,0x70524DAA,0x0BE472AA,0x8A2CD7AA,0x6152C2AA,0xCF72A9AA,0xE59338AA,0xEEDC2DAA,0xD8C762AA,
	0xD8C762AA,0xFF8C13AA,0xC715FFAA,0x20B2AAAA,0xDC143CAA,0x6495EDAA,0xf0e68cAA,0x778899AA,0xFF1493AA,
	0xF4A460AA,0xEE82EEAA,0xFFD720AA,0x8b4513AA,0x4949A0AA,0x148b8bAA,0x14ff7FAA,0x556b2fAA,0x0FD9FAAA,
	0x10DC29AA,0x534081AA,0x0495CDAA,0xEF6CE8AA,0xBD34AAAA,0x247C1BAA,0x0C8E5DAA,0x635B03AA,0xCB7ED3AA,
	0x65ADEBAA,0x5C1ACCAA,0xF2F853AA,0x11F891AA,0x7B39AAAA,0x53EB10AA,0x54137DAA,0x275222AA,0xF09F5BAA,
	0x3D0A4FAA,0x22F767AA,0xD63034AA,0x9A6980AA,0xDFB935AA,0x3793FAAA,0x90239DAA,0xE9AB2FAA,0xAF2FF3AA,
	0x057F94AA,0xB98519AA,0x388EEAAA,0x028151AA,0xA55043AA,0x0DE018AA,0x93AB1CAA,0x95BAF0AA,0x369976AA,
	0x18F71FAA,0x4B8987AA,0x491B9EAA,0x829DC7AA,0xBCE635AA,0xCEA6DFAA,0x20D4ADAA,0x2D74FDAA,0x3C1C0DAA,
	0x12D6D4AA,0x48C000AA,0x2A51E2AA,0xE3AC12AA,0xFC42A8AA,0x2FC827AA,0x1A30BFAA,0xB740C2AA,0x42ACF5AA,
	0x2FD9DEAA,0xFAFB71AA,0x05D1CDAA,0xC471BDAA,0x94436EAA,0xC1F7ECAA,0xCE79EEAA,0xBD1EF2AA,0x93B7E4AA,
	0x3214AAAA,0x184D3BAA,0xAE4B99AA,0x7E49D7AA,0x4C436EAA,0xFA24CCAA,0xCE76BEAA,0xA04E0AAA,0x9F945CAA,
	0xDCDE3DAA,0x10C9C5AA,0x70524DAA,0x0BE472AA,0x8A2CD7AA,0x6152C2AA,0xCF72A9AA,0xE59338AA,0xEEDC2DAA,
	0xD8C762AA,0xD8C762AA,0x4F5152D4,0xFF8C13AA,0xC715FFAA,0x20B2AAAA,0xDC143CAA,0x6495EDAA,0xf0e68cAA,
	0xFFD720AA,0x8b4513AA,0x4949A0AA,0x148b8bAA,0x14ff7fAA,0x556b2fAA,0x0FD9FAAA,0x10DC29AA,0xF4A460AA,
	0x534081AA,0x0495CDAA,0xEF6CE8AA,0xBD34AAAA,0x247C1BAA,0x0C8E5DAA,0x635B03AA,0xCB7ED3AA,0x65ADEBAA,
	0x5C1ACCAA,0xF2F853AA,0x11F891AA,0x7B39AAAA,0x53EB10AA,0x54137DAA,0x275222AA,0xF09F5BAA,0x3D0A4FAA,
	0x22F767AA,0xD63034AA,0x9A6980AA,0xDFB935AA,0x3793FAAA,0x90239DAA,0xE9AB2FAA,0xAF2FF3AA,0x057F94AA,
	0xB98519AA,0x388EEAAA,0x028151AA,0xA55043AA,0x0DE018AA,0x93AB1CAA,0x95BAF0AA,0x369976AA,0x18F71FAA,
	0x4B8987AA,0x491B9EAA,0x829DC7AA,0xBCE635AA,0xCEA6DFAA,0x20D4ADAA,0x2D74FDAA,0x3C1C0DAA,0x12D6D4AA,
	0x48C000AA,0x2A51E2AA,0xE3AC12AA,0xFC42A8AA,0x2FC827AA,0x1A30BFAA,0xB740C2AA,0x42ACF5AA,0x2FD9DEAA,
	0xFAFB71AA,0x05D1CDAA,0xC471BDAA,0x94436EAA,0xC1F7ECAA,0xCE79EEAA,0xBD1EF2AA,0x93B7E4AA,0x3214AAAA,
	0x184D3BAA,0xAE4B99AA,0x7E49D7AA,0x4C436EAA,0xFA24CCAA,0xCE76BEAA,0xA04E0AAA,0x9F945CAA,0xDCDE3DAA,
	0x10C9C5AA,0x70524DAA,0x0BE472AA,0x8A2CD7AA,0x6152C2AA,0xCF72A9AA,0xE59338AA,0xEEDC2DAA,0xD8C762AA,
	0xD8C762AA,0xFF8C13AA,0xC715FFAA,0x20B2AAAA,0xDC143CAA,0x6495EDAA,0xf0e68cAA,0x778899AA,0xFF1493AA,
	0xF4A460AA,0xEE82EEAA,0xFFD720AA,0x8b4513AA,0x4949A0AA,0x148b8bAA,0x14ff7fAA,0x556b2fAA,0x0FD9FAAA,
	0x10DC29AA,0x534081AA,0x0495CDAA,0xEF6CE8AA,0xBD34AAAA,0x247C1BAA,0x0C8E5DAA,0x635B03AA,0xCB7ED3AA,
	0x65ADEBAA,0x5C1ACCAA,0xF2F853AA,0x11F891AA,0x7B39AAAA,0x53EB10AA,0x54137DAA,0x275222AA,0xF09F5BAA,
	0x3D0A4FAA,0x22F767AA,0xD63034AA,0x9A6980AA,0xDFB935AA,0x3793FAAA,0x90239DAA,0xE9AB2FAA,0xAF2FF3AA,
	0x057F94AA,0xB98519AA,0x388EEAAA,0x028151AA,0xA55043AA,0x0DE018AA,0x93AB1CAA,0x95BAF0AA,0x369976AA,
	0x18F71FAA,0x4B8987AA,0x491B9EAA,0x829DC7AA,0xBCE635AA,0xCEA6DFAA,0x20D4ADAA,0x2D74FDAA,0x3C1C0DAA,
	0x12D6D4AA,0x48C000AA,0x2A51E2AA,0xE3AC12AA,0xFC42A8AA,0x2FC827AA,0x1A30BFAA,0xB740C2AA,0x42ACF5AA,
	0x2FD9DEAA,0xFAFB71AA,0x05D1CDAA,0xC471BDAA,0x94436EAA,0xC1F7ECAA,0xCE79EEAA,0xBD1EF2AA,0x93B7E4AA,
	0x3214AAAA,0x184D3BAA,0xAE4B99AA,0x7E49D7AA,0x4C436EAA,0xFA24CCAA,0xCE76BEAA,0xA04E0AAA,0x9F945CAA,
	0xDCDE3DAA,0x10C9C5AA,0x70524DAA,0x0BE472AA,0x8A2CD7AA,0x6152C2AA,0xCF72A9AA,0xE59338AA,0xEEDC2DAA,
	0xD8C762AA,0xD8C762AA
	};

	enum GANG_MAIN {
		GANG_ID,
		GANG_NAME[20],
	 	GANG_COLOR,
	 	GANG_NZONE,
		GANG_MEMBERS,
		GANG_SCORE
		}

	enum ZONE_MAIN {
		ZONE_ID,
		ZONE_GZID,
	 	ZONE_GANGID,
		ZONE_COLOR,
	 	Float:ZONE_X1,
		Float:ZONE_Y1,
		Float:ZONE_X2,
		Float:ZONE_Y2
	}
	new GangInfo[MAX_GANG][GANG_MAIN];
	new ZoneInfo[MAX_ZONE][ZONE_MAIN];
    new Text:Information[MAX_PLAYERS];
//==============================================================================
//Otros
#define Dialog_Pelea 1779
#define climax 6789
#define DIALOG_SKIN 247
#define INTDIALOG 1612
//==============================================================================
//Items
#define Obje 15635
#define Obje2 15636
#define Obje3 15637
#define SetPlayerHoldingObject(%1,%2,%3,%4,%5,%6,%7,%8,%9) SetPlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1,%2,%3,%4,%5,%6,%7,%8,%9)
#define StopPlayerHoldingObject(%1) RemovePlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define IsPlayerHoldingObject(%1) IsPlayerAttachedObjectSlotUsed(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
//==============================================================================
//Sistema Admin
#define SAVE_LOGS
#define ENABLE_SPEC
#define USE_STATS
#define HIDE_ADMINS
#define ENABLE_FAKE_CMDS
#define MAX_RCON_ATTEMPS  1
#define UNBAN 2222
#define MAX_WARNINGS 3
#define MAX_ADMINWARN 5
#define MAX_KICKS 4
#define MAX_REPORTS 7
#define MAX_CHAT_LINES 905
#define SPAM_MAX_MSGS 4
#define SPAM_TIMELIMIT 5
#define PING_MAX_EXCEEDS 4
#define PING_TIMELIMIT 60
#define MAX_FAIL_LOGINS 4
#define VOTETIME 30000
#define WAIT_TIME 120000
//==============================================================================
//Otros
#define isodd(%0) %0 % 2

#define ForEach(%0,%1) \
	for(new %0 = 0; %0 != %1; %0++) if(IsPlayerConnected(%0) && !IsPlayerNPC(%0))

#define Loop(%0,%1) \
	for(new %0 = 0; %0 != %1; %0++)

#define IsOdd(%1) \
	((%1) & 1)

#define ConvertTime(%0,%1,%2,%3,%4) \
	new \
	    Float: %0 = floatdiv(%1, 60000) \
	;\
	%2 = floatround(%0, floatround_tozero); \
	%3 = floatround(floatmul(%0 - %2, 60), floatround_tozero); \
	%4 = floatround(floatmul(floatmul(%0 - %2, 60) - %3, 1000), floatround_tozero)

#define function%0(%1) \
	forward%0(%1); public%0(%1)
//==============================================================================
//Sistema de Carreras
#define MAX_VEHICULOS_INCOMPATIBLES 44
#define VCN IsPlayerInInvalidNosVehicle
#define VM GetVehicleModel
#define MAX_RACE_CHECKPOINTS_EACH_RACE 120
#define MAX_RACES 100
#define COUNT_DOWN_TILL_RACE_START 30
#define MAX_RACE_TIME 600
#define RACE_CHECKPOINT_SIZE 12.0
#define DEBUG_RACE 1
#define RACE_IN_OTHER_WORLD
#define DIALOG_RACE 2015

//new DownRace[MAX_PLAYERS];

new	RaceBusy = 0x00,
	RaceName[30],
	RaceVehicle,
	RaceType,
	TotalCP,
	Float: RaceVehCoords[2][4],
	Float: CPCoords[MAX_RACE_CHECKPOINTS_EACH_RACE][10],
	CreatedRaceVeh[MAX_PLAYERS],
	Index2,
	PlayersCount[2],
	CountTimer,
	CountAmount,
	bool: Joined[MAX_PLAYERS],
	RaceTick,
	RaceStarted,
	CPProgess[MAX_PLAYERS],
	Position,
	FinishCount,
	JoinCount,
	rCounter,
	RaceTime,
	InfoTimer[MAX_PLAYERS],
	RacePosition[MAX_PLAYERS],
	RaceNames[MAX_RACES][128],
 	TotalRaces,
 	bool: AutomaticRace,
 	TimeProgress
;
//==============================================================================
//Otros
#define Tuning 6300
#define ARMA 9908
//==============================================================================
// Spawn zona vip
new ZonaVip[5] = {
957,
-55,
1001,
280,
3
};
//==============================================================================
//Sistema de eventos
#define				DIALOG_EVENTO				950
#define				DIALOG_ABRIREVENTO			951
#define				DIALOG_NOMEEVENTO			952
#define				DIALOG_PREMIO1				953
#define				DIALOG_PREMIO2				954
#define				DIALOG_PREMIO3				955
#define				DIALOG_PREMIO4				976
#define				DIALOG_PREMIO5				977
#define				DIALOG_CARRO				956
#define				DIALOG_COR1					957
#define				DIALOG_COR2					958
#define				DIALOG_ARMA  				959
#define				DIALOG_MUNICAO				960
#define				DIALOG_VIDAVEICULOS			961
#define				DIALOG_KICK					962
#define				DIALOG_FIM1					963
#define				DIALOG_FIM2					964
#define				DIALOG_FIM3					965
#define				DIALOG_VIDA					966
#define				DIALOG_COLETE				967
#define				DIALOG_SKIN1				968
#define				DIALOG_DEFINIR				975
#define				COR_EVENTO					0xFF8000AA
#define				COR_ERRO					0xff0000ff
#define				COR_INFO					0xFFFF00AA

new CountAmountEvento;
new CountTimerEvento;

new evtext;

new NomePlayer[MAX_PLAYER_NAME],
	NameA[64],
	Format[2500],
	Float:PosX,
	Float:PosY,
	Float:PosZ,
	Float:PosA;

enum eventInfo
{
	Float:Xq,
	Float:Yq,
	Float:Zq,
	Float:Aq,
	VirtualWorld,
	Interior,
	Nome[64],
	Criado,
	Aberto,
	Cerrado,
	Premio1,
	Premio2,
	Premio3,
	PremioS,
	PremioN,
	Carro,
	Cor1,
	Cor2,
	Arma,
	Admin[64],
	Vida,
};

enum pInfo
{
	NoEvento,
	Carro,
};
//==============================================================================
//Neones, hola y anuncios del chat
    enum pInfoH
    {
    Neon,
    Luz,
    Lol
    };
    new PlayerInfoH[MAX_PLAYERS][pInfoH];
    new UsarCMDHola[MAX_PLAYERS];
    new Msg;
    new EventInfo[eventInfo];
    new PlayerInfoE[MAX_PLAYERS][pInfo];
//==============================================================================
// Actores *NUEVO*
new AAMesero;
new AAMesera;
new AAMilitar1;
new AAMilitar2;
new AAMilitar3;
new AAMilitar4;
new AAMilitar5;
new AAMilitar6;
// Bots en Puticlub de LS
new Actor0;
new Actor1;
new Actor2;
new Actor3;
new Actor4;
new Actor5;
new Actor6;
new Actor7;
//Bots en /porno
new Actor8;
new Actor9;
//==============================================================================
//HP Y AR
new Text:HP0;
new Text:AR1;
//==============================================================================
// Variables Admin
//==============================================================================
new AdminTemp2[MAX_PLAYERS];
new AdminOn[MAX_PLAYERS];
//==============================================================================
// pname universal
//==============================================================================
new pname[MAX_PLAYER_NAME];
//==============================================================================
//Colores
//==============================================================================
#define blue                   0x375FFFFF
#define ColorAdmin             0x008080FF
#define COLOR_CYAN 			   0x00FFFF7B
#define red                    0xFF0000AA
#define lightred               0x33CCFFAA
#define green                  0x33FF33AA
#define yellow                 0xFFFF00AA
#define grey                   0xC0C0C0AA
#define blue1                  0x2641FEAA
#define lightblue              0x33CCFFAA
#define orange                 0xFF9900AA
#define COLOR_GRAD1            0xB4B5B7FF
#define black                  0x2C2727AA
#define COLOR_GREEN            0x33AA33AA
#define COLOR_VERDE            0x00cb38ff
#define COLOR_PINK             0xFF66FFAA
#define COLOR_BLUE             0x0000BBAA
#define COLOR_PURPLE           0x800080AA
#define COLOR_BLACK            0x000000AA
#define COLOR_WHITE            0xFFFFFFAA
#define COLOR_LIME	           0x00FF00FF
#define COLOR_GREEN1           0x33AA33AA
#define COLOR_BROWN            0xA52A2AAA
#define COLOR_orange           0xFF8040FF
#define COLOR_red 	           0xFF0000AA
#define COLOR_WHITE            0xFFFFFFAA
#define LIGHTBLUE2             0x0BBF6AA
#define LIGHTBLUE              0x0BBF6AA
#define COLOR_ROJO             0xFF0000FF
#define azul                   0x0000FFFF
#define naranja                0xff9900ff
#define amarillo               0xffff00ff
#define morado                 0xcc00ccff
#define gris                   0x999999ff
#define negro                  0x1C1C1Cff
#define blanco                 0xffffffff
#define rosa                   0xff33ffff
#define azul_claro             0x0080FFff
#define verde                  0x339900ff
#define verde_claro            0x33ff33ff
#define rojo_oscuro            0x881111AA
#define celeste                0x00ffffff
#define marron                 0x8B4513FF
#define azulcito               0x002CFFFF
#define rojoverdoso            0xFF2000FF
#define GRIS                   0xAFAFAFAA
#define AZUL_OSCURO            0x0097B3FF
#define COLOR_INFO             0xAA000096
#define COLOR_ERROR            0xff0000ff
#define Blanco                 0xFFFFFFAA
#define COLOR_RED              0xFF0000AA
#define COLOR_INACTIVO         0xC0C0C096
#define decir1                 0x9D4513FF
#define cian1                  0x00FFFFFF
#define COLOR_AZUL             0x0000ffff
#define COLOR_NARANJA          0xff7d00ff
#define COLOR_AMARILLO         0xffe400ff
#define COLOR_VIOLETA          0xba00a8ff
#define COLOR_GRIS             0xC0C0C096
#define COLOR_NEGRO            0x000000ff
#define COLOR_BLANCO           0xffffffff
#define COLOR_ROSA             0xff538cff
#define COLOR_AZULCLARO        0x00a4dfff
#define COLOR_VERDE            0x00cb38ff
#define COLOR_VERDECLARO       0x33ff33ff
#define COLOR_CELESTE          0x00cbffff
#define COLOR_AGUA             0x1adc88ff
#define COLOR_INFO             0xAA000096
#define COLOR_MENSAJE          0x80FF8096
#define COLOR_INACTIVO         0xC0C0C096
#define COLOR_ERROR            0xff0000ff
#define ERROR_COLOR    	       0xFF0000FF
#define COLOR_DARKBLUE         0x000080AA
#define COLOR_DARKRED          0x881111AA
#define COLOR_WHITE            0xFFFFFFAA
#define GRIS                   0xAFAFAFAA
#define AZUL_OSCURO            0x0097B3FF
#define Verde                  0x00FF00FF
#define Amarillo               0xffff00ff
#define Rojo                   0xFF0000FF
#define Azul                   0x33CCFFAA
#define COLOR_PINK             0xFF66FFAA
#define COLOR_RED              0xFF0000AA
#define speedcolor             0x008080FF
#define red                    0xFF0000AA
#define blue                   0x375FFFFF
#define red                    0xFF0000AA
#define green                  0x33FF33AA
#define yellow                 0xFFFF00AA
#define grey                   0xC0C0C0AA
#define blue1                  0x2641FEAA
#define lightblue              0x33CCFFAA
#define orange                 0xFF9900AA
#define black                  0x2C2727AA
#define COLOR_GREEN            0x33AA33AA
#define COLOR_PINK             0xFF66FFAA
#define COLOR_BLUE             0x0000BBAA
#define COLOR_PURPLE           0x800080AA
#define COLOR_BLACK            0x000000AA
#define COLOR_WHITE            0xFFFFFFAA
#define COLOR_GREEN1           0x33AA33AA
#define COLOR_BROWN            0xA52A2AAA
#define COLOR_ORANGE           0xFF8040FF
#define COLOR_YELLOW           0xFFFF00AA
#define COLOR_yellow 		   0xFFFF00AA
#define COLOR_RED 	           0xFF0000AA
#define COLOR_WHITE            0xFFFFFFAA
#define LIGHTBLUE2             0x0BBF6AA
#define CYAN                   0x00FFFFFF
#define limegreen              0x7CFC00AA
#define Verde                  0x00FF00FF
#define Rojo                   0xFF0000FF
#define Azul                   0x33CCFFAA
#define Morado                 0xC2A2DAFF
#define Gris                   0xb0b0b0FF
#define Cafe 0x662F00FF
#define Negro 0x000000FF
#define AzulOscuro 0x00008CFF
#define Celeste 0x00A2FFFF
#define Rosado 0xFF01FFFF
#define Verde_Agua 0x00FFC5FF
//==============================================================================
//Colores Vip
//==============================================================================
#define AutosTuning            1123
#define AutosRC                1137
//==============================================================================
/*// Antideamx
AntiDeAMX()
	{
	new a[][] =
	{
	"Unarmed (Fist)",
	"Brass K"
	};
	#pragma unused a
	}*/
//==============================================================================
//Aqui va donde irá a spawnear
new Float:Spawn[17][17] =
{
	{-1628.9723, 743.6214, -4.8828}, //SF
	{-2025.9762, -96.3492, 35.2636}, //SF
	{-2307.0823, 207.3130, 35.6754}, //SF
	{836.8533, -2048.1541, 13.1818}, //LS
	{1134.9723, -2037.4042, 69.3184}, //LS
	{929.2572, -1221.7448, 17.2473}, //LS
	{2031.0828, 1007.3959, 11.1353}, //LV
	{2159.3855, 1674.0336, 11.0471}, //LV
    {2293.8289, 2425.9133, 11.1395}, //LV
   	{1612.9641,1170.5447,14.2188}, //LV
	{1544.5812,-1353.6082,329.4738}, //LS
	{1128.9519,-1489.5090,22.7690}, //LS
	{2218.5640,-1166.0731,25.7266}, //LS
	{-2029.1667,143.4377,28.8359}, //SF
	{-2099.1362,929.2661,74.7757}, //SF
	{-2630.6609,1417.6459,24.7656}, //SF
	{-1637.0754,1413.9608,7.1875} //SF
};


// Spawn /zonaww o /zonarw
static Float:SpawnZona[7][3] =
{
	{1403.4508,2.8612,1000.9101},
	{1412.2750,-32.9791,1000.9242},
	{1366.5927,-42.1512,1000.9207},
	{1363.8689,-17.9469,1000.9219},
	{1360.2347,5.3585,1008.1563},
	{1360.2279,-46.7437,1007.8854},
	{1418.0121,4.0818,1007.8876}
};
//=============================Configuracion Antibot============================
#define MAX_CONNECTIONS_FROM_IP 3
#define MAX_R_ATTEMPTS 2
#define STATUS_SECONDS 15
#define RESET_CHECK 7
#define antinick_spam
#define Guardar_Logs
new XDeaths[MAX_PLAYERS];
new LastDeath[MAX_PLAYERS];
enum IP_DATA
{
	IP_ADDRESS[16],
	bool:Ignore
};

new
	//IPDATA[MAX_PLAYERS][IP_DATA],
	JoinAttempts,
	JoinIP[16]
;
//==============================================================================
//Objetos de vida y chaleco al matar
new Float:VidaB[200];
new Float:ChalecoB[200];
new warnedS[MAX_PLAYERS];
forward VidaHold(playerid);
forward ChalecoHold(playerid);
//==============================================================================
//Antiflood
new AntiFlood[MAX_PLAYERS];
//==============================================================================
// Defines de cmds, diálogos, etc
#define INFO 267
#define CMD 345
#define STAFF 355
#define CDTS 978
#define CMNR 997
#define MJ 254
#define CSTEAM 255
#define VIPS 354
#define dialogos 2000
#define CMDSVIP 3000
//==============================================================================
//Minijuegos
new Minijuego[MAX_PLAYERS];
new Minigun[MAX_PLAYERS];
new Minigun2[MAX_PLAYERS];
new Minigun3[MAX_PLAYERS];
new Rocket[MAX_PLAYERS];
new Rocket2[MAX_PLAYERS];
new CS16[MAX_PLAYERS];
new Mario[MAX_PLAYERS];
new Desmadre[MAX_PLAYERS];

new Float:MINIGUNR[5][3] = {
{-1130.4258,1057.6685,1346.4141},
{-1069.2738,1088.8636,1346.4039},
{-1062.9995,1056.5170,1347.6224},
{-1027.4481,1025.8434,1342.7039},
{-974.6001,1061.0868,1345.6769}
};
new Float:MINIGUNR2[6][6] = {
{-2045.6907,-218.9260,35.3203},
{-2063.3232,-219.2064,35.3203},
{-2045.1317,-166.2378,35.3203},
{-2061.8447,-167.0021,35.3203},
{-2056.1340,-187.0882,35.3274},
{-2056.2097,-192.8362,35.3274}
};
new Float:MINIGUNR3[6][3] = {
{934.2223,2176.5996,1011.0234},
{933.4439,2149.3118,1011.0234},
{933.5018,2144.3103,1011.0234},
{950.4492,2144.4521,1011.0195},
{942.3889,2127.0247,1012.2277},
{955.9052,2144.3752,1011.0271}
};
new Float:ROCKETR[6][3] = {
{2204.0103,1141.9410,85.9375},
{2245.1040,1149.0033,79.5547},
{2284.4602,1172.0403,85.9375},
{2306.1338,1156.3116,85.9375},
{2321.9514,1083.7468,85.9312},
{2292.9592,1029.6702,85.9375}
};
new Float:ROCKETR2[9][3] = {
{-2604.3347,2339.0786,8.2172},
{-2474.2007,2292.4570,4.9844},
{-2337.8801,2296.1030,4.9844},
{-2344.5171,2466.7109,4.9781},
{-2236.3550,2363.0774,10.1875},
{-2506.6143,2352.3184,4.9858},
{-2474.3000,2467.3394,17.3481},
{-2445.9890,2488.8018,17.9982},
{-2481.2554,2298.8083,13.5227}
};

new Float:POLISPAWN[5][3] = {
{2525.24658,2750.48413,11.09510},
{2538.91602,2755.68994,11.09510},
{2507.69775,2769.93823,11.09510},
{2508.42676,2756.03735,11.09510},
{2539.81519,2775.70972,11.09510}
};

new Float:TERROSPAWN[5][3] = {
{2602.92407,2830.74121,10.83460},
{2578.21753,2839.34741,10.83460},
{2587.25586,2825.54053,10.83460},
{2580.10693,2815.59155,10.83460},
{2570.16260,2826.82422,10.83460}
};

new Float:MARIOS[4][3] = {
{3015.8865,2223.6865,7.1145},
{3102.7932,2193.6265,6.8743},
{3080.3333,2101.0498,6.8516},
{3038.6445,2156.9368,6.7510}
};

new Float:DESMADRER[4][3] = {
{1417.3047,-47.5880,1000.9293},
{1361.1254,-47.5822,1000.9243},
{1365.4998,5.8164,1000.9221},
{1400.1423,3.8439,1000.9064}
};
//==============================================================================
// Textdraw varios
new textos,textos2,textos3;
new Text:Textdraw0000000000;
new Text:Textdraw1111111111;
new Text:Textdraw2222222222;
forward EnviarComando(playerid,command[]);
forward OcultarComando(playerid);
forward OcultarComando2(playerid);
forward OcultarComando3(playerid);
new textosa;
new Text:Textdrawvvvvvvvvvv;
forward EnviarComando1(playerid,command[]);
forward OcultarComando1(playerid);
//==============================================================================
// Textdraw Ha ido
new ido,ido1,ido2;
new Text:Tele;
new Text:Tele1;
new Text:Tele2;
forward EnviarComandoTele(playerid,command[]);
forward OcultarComandoTele(playerid);
forward OcultarComandoTele1(playerid);
forward OcultarComandoTele2(playerid);
forward EnviarComandoDM(playerid,command[]);
forward OcultarComandoDM(playerid);
forward OcultarComandoDM1(playerid);
forward OcultarComandoDM2(playerid);
//==============================================================================
// Anti crash
    new legalmods[48][22] = {
        {400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
        {404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
        {415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
        {439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
        {477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
        {491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
        {492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
        {500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
        {517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
        {518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
        {527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
        {534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
        {535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
        {536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
        {540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
        {542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
        {547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
        {550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
        {551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
        {558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
        {559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
        {560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
        {561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
        {562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
        {565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
        {567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
        {575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
        {600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
    };
//==============================================================================
//Sistema de Concursos
#define TIEMPOCONCURSO 5
#define MINIMUM_VALUE 2000000
#define MAXIMUM_VALUE 8000000
#define PREMIO_CONCURSO 10000
new RespuestaConcurso = -1;
forward NuevoConcurso();
forward JugadorGanaConcurso(playerid);
new badSkins[22];
//==============================================================================
//Top Score
enum rankingEnum
{
player_Score,
player_ID
}
//==============================================================================
// Kill de matanza
new KillsG[MAX_PLAYERS];
//==============================================================================
//ANTY DRIVE BY
forward Float:GetDistanceBetweenPlayers(p1,p2);
new warnings[MAX_PLAYERS];
//==============================================================================
//PARKOUR
enum InfoL
{
	PAR,
};
new InformacionL[MAX_PLAYERS][InfoL];
//==============================================================================
//Sistema de rampa
new Pressedkey[MAX_PLAYERS] = {false, ...};
new jumped[MAX_PLAYERS] = {-1, ...};
new ramped[MAX_PLAYERS];
forward Keys();
forward BorrarRampa(playerid);
forward Float:GetRampDistance(playerid);
forward Float:GetPosInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance);
//==============================================================================
// Sistema de Propiedades
#define MAX_PROPERTIES 150
#define MAX_PROPERTIES_PER_PLAYER 2

#define ENABLE_LOGIN_SYSTEM 1
#define ENABLE_MAP_ICON_STREAMER 1

#define REGISTRAR_COMMAND "/REGISTRAR"
#define ENTRAR_COMMAND "/ENTRAR"

new PropertiesAmount;
new MP;
enum propinfo
{
	PropName[64],
	Float:PropX,
	Float:PropY,
	Float:PropZ,
	PropIsBought,
	PropOwner[MAX_PLAYER_NAME],
	PropValue,
	PropEarning,
	PickupNr,
}
new PropInfo[MAX_PROPERTIES][propinfo]; //CarInfo
new PlayerProps[MAX_PLAYERS];
new EarningsForPlayer[MAX_PLAYERS];
new Logged[MAX_PLAYERS];
//==============================================================================
// /velocidad defines/new´s, etc.
//==============================================================================
new bool:AceleracionBrutal[MAX_PLAYERS];
// gta v
new Float:tpp[MAX_PLAYERS][4],Float:ttp[MAX_PLAYERS][3]; // saves start and end coordinates
// regenerar
new UsoRegenerar[MAX_PLAYERS];
//ltune
new Usoltune[MAX_PLAYERS];
// infibalas
new UsoInfibalas[MAX_PLAYERS];
// Camara intro
new CamaraYaPaso[MAX_PLAYERS];
// Ranking Bound
new RankBound[MAX_PLAYERS];
// saltos auto
new SaltosAuto[MAX_PLAYERS];
// Block chat
new NoChat[MAX_PLAYERS];
// guerra
new UsoGuerra[MAX_PLAYERS];
// solicitud
new YaSolicito[MAX_PLAYERS];
#define DSOLIC   2522
#define DSOLIC1  2523
#define DSOLIC2  2524
#define DSOLIC3  2525
// Knockout vip
new vKnockOut[MAX_PLAYERS];
// desmadre timer
new TimerDesmadre[MAX_PLAYERS];
// rban rank
static RangeBanRank[MAX_PLAYERS];
// tienda
new YaUsoTienda[MAX_PLAYERS];
// vwarn variable
//new Usarvwarn;
// anunciovip
new UsoAnuncio[MAX_PLAYERS];
// colores
new ColUsado[MAX_PLAYERS];
// Timer Color (Vip Dios)
new RC[MAX_PLAYERS];
// Pick Evento
//new MPick;
// Pickup Paracaidismo1
new PickPara1;
// Pickup Paracaidismo2
new PickPara2;
// Preguntas
new YaPregunto[MAX_PLAYERS];
// chat colorido
new	ColorRojoChat[MAX_PLAYERS];
new	ColorAzulChat[MAX_PLAYERS];
new	ColorAmarilloChat[MAX_PLAYERS];
new ColorMoradoChat[MAX_PLAYERS];
new ColorCarlosChat[MAX_PLAYERS];
new ColorFranciscoChat[MAX_PLAYERS];
new ColorSamirChat[MAX_PLAYERS];
new ColorEventoChat[MAX_PLAYERS];
new ColorRenatoChat[MAX_PLAYERS];

stock GetOnLinePlayers()
{
	new OnLine;
	for(new i, g = GetMaxPlayers(); i < g; i++)
		if(IsPlayerConnected(i))
			OnLine++;
	return OnLine;
}
// spawn pickups
new SPW1;
new SPW2;
new SPW3;
new SPW4;
new SPW5;
new SPW6;
new SPW7;
new SPW8;
new SPW9;
new SPW;
// spawn arms
new ARMS1;
new ARMS2;
new ARMS3;
new ARMS4;
new ARMS5;
new ARMS6;
new ARMS7;
new ARMS8;
new ARMS9;
// hola adios
new Text:SaludoTexto;
new Text:DespedidaTexto;
new Text:Z1;
new Text:Z2;
new Text:Z3;
new Saludos[MAX_PLAYERS];
new nombre1[MAX_PLAYER_NAME];
// recompensa sys
new Cantidad[MAX_PLAYERS];
// Derby2
new DB_VehicleID = 415;
#define DB_DIALOG 1111

#define MAX_DERBY_SPAWN 1
new Float:DB_Spawns[MAX_DERBY_SPAWN][][] =
{
        {
                {2580.9543,-2922.2375,1003.8871},{2580.9353,-3040.3372,1003.8871},{2620.9497,-2980.4980,1003.8871},
                {2662.5625,-2922.4089,1003.8871},{2682.1228,-2959.8835,1003.8871},{2663.1399,-2999.8201,1003.8871},
                {2581.3845,-2962.0913,1003.8871},{2606.0146,-2995.0747,1003.8871},{2601.6973,-2941.1292,1003.8871},
                {2581.7783,-2959.8501,1003.8871}
        }
};

forward DB_OnPlayerKeyStateChange(playerid, newkeys, oldkeys);


new DBP_Stats[MAX_PLAYERS];
new DBP_Vehicle[MAX_PLAYERS];

forward DBP_Spawn(playerid);
forward DBP_Exit(playerid);

forward SetPlayerPosEx(playerid, Float:x, Float:y, Float:z, Float:ang, int, vw);
//==============================================================================
//Sistema de transf
//#define TRANSF 3397
//Sistema de autos
#define MAUTOS 3398
enum AutoPlayer
{
pCar
};
new AccInfo[MAX_PLAYERS][AutoPlayer];
forward CarSpawner1(playerid,model);
forward ResAuto(vehicleid);
forward BorrarAuto(vehicleid);
//==============================================================================
//lol, amo_a
new UsarCMDT[MAX_PLAYERS];
//==============================================================================
new floodcmd[MAX_PLAYERS];
//==============================================================================
//Desbug
new Float:FlatX[MAX_PLAYERS], Float:FlatY[MAX_PLAYERS], Float:FlatZ[MAX_PLAYERS];
new Float:PlayerHealthFLO[200];
forward PowrotFloat(playerid);
//* ============================================================================
//Congelamiento
forward Descongelar(playerid);
public Descongelar(playerid)
{
TogglePlayerControllable(playerid,true);
}
//==============================================================================
// String Universal
new string2[2000];
// textdraw de inicio
new Text:BARRAINICIO1;
new Text:BARRAINICIO2;
new Text:TEXTOINICIO1;
new Text:TEXTOINICIO3;
// Texto de Muerte
new Text:Death0[MAX_PLAYERS];
new Text:Death1;
// Logos al conectar
new Text:RevLogo;
new Text:RevLogo1;
// Skin text
new Text:SkinText;
// Texts random
new Text:TextDrawColoRamdon;
forward ChangeWebsite();
forward ChangeTextWebsite(text[]);
new TextWebsiteCount = 0;
#define websitecount 58

//-------------------------------------------------------
//Speedo
new VehicleName[212][] = {
"Landstalker", "Bravura", "Buffalo", "Linerunner", "Perrenial", "Sentinel", "Dumper", "Firetruck", "Trashmaster", "Stretch", "Manana",
"Infernus", "Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam", "Esperanto", "Taxi", "Washington", "Bobcat",
"Whoopee", "BF Injection", "Hunter", "Premier", "Enforcer", "Securicar", "Banshee", "Predator", "Bus", "Rhino", "Barracks", "Hotknife",
"Trailer 1", "Previon", "Coach", "Cabbie", "Stallion", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral", "Squalo",
"Seasparrow", "Pizzaboy", "Tram", "Trailer 2", "Turismo", "Speeder", "Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair",
"Berkley's RC Van", "Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale", "Oceanic", "Sanchez", "Sparrow",
"Patriot", "Quad", "Coastguard", "Dinghy", "Hermes", "Sabre", "Rustler", "ZR-350", "Walton", "Regina", "Comet", "BMX", "Burrito",
"Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper", "Rancher", "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring",
"Sandking", "Blista Compact", "Police Maverick", "Boxvillde", "Benson", "Mesa", "RC Goblin", "Hotring Racer A", "Hotring Racer B",
"Bloodring Banger", "Rancher", "Super GT", "Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster","Stunt",  "Tanker",
"Roadtrain", "Nebula", "Majestic", "Buccaneer", "Shamal", "Hydra", "FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck", "Fortune",
"Cadrona", "FBI Truck", "Willard", "Forklift", "Tractor", "Combine", "Feltzer", "Remington", "Slamvan", "Blade", "Freight", "Streak",
"Vortex", "Vincent", "Bullet", "Clover", "Sadler", "Firetruck LA", "Hustler", "Intruder", "Primo", "Cargobob", "Tampa", "Sunrise", "Merit",
"Utility", "Nevada", "Yosemite", "Windsor", "Monster A", "Monster B", "Uranus", "Jester", "Sultan", "Stratum", "Elegy", "Raindance",
"RC Tiger", "Flash", "Tahoma", "Savanna", "Bandito", "Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper", "Broadway",
"Tornado", "AT-400", "DFT-30", "Huntley", "Stafford", "BF-400", "News Van", "Tug", "Trailer 3", "Emperor", "Wayfarer", "Euros", "Hotdog",
"Club", "Freight Carriage", "Trailer 4", "Andromada", "Dodo", "RC Cam", "Launch", "Police Car (LSPD)", "Police Car (SFPD)",
"Police Car (LVPD)", "Police Ranger", "Picador", "S.W.A.T", "Alpha", "Phoenix", "Glendale", "Sadler", "Luggage Trailer A",
"Luggage Trailer B", "Stairs", "Boxville", "Tiller", "Utility Trailer" };

new PlayerText3D:speedo3Dtext;
new Speedoff;
//==============================================================================
//Sistema de Duelos
#define ARENAS 7
#define DUELOSMENU 400
#define DUELOSMENU2 450
#define COLOR_DUELO    0x5db8d7ff
#define verde_claro    0x33ff33ff
#define azul_claro     0x0080FFff
#define amarillo       0xffff00ff
#define ERROR_COLOR    0xFF0000FF
#define DUEL_COLOR     0xFF9FFFFF

enum DueloData
{
	DesaId,
	DesafiadoId,
	ArmasId,
	Libre,
};
new NODUEL[MAX_PLAYERS];
forward OcultarComandoDls(playerid);
new Duelos[ARENAS][DueloData];
new p1duelo1;
new p2duelo1;
new p1duelo2;
new p2duelo2;
new p1duelo3;
new p2duelo3;
new p1duelo4;
new p2duelo4;
new p1duelo5;
new p2duelo5;
new p1duelo6;
new p2duelo6;
new Studio;
new EnDuelo[MAX_PLAYERS];
new ViendoDuelo[MAX_PLAYERS];

new Float:DuelosSpec1[4][4] = {
{2629.1155,1204.8617,26.9233},
{2629.0410,1215.3130,26.9233},
{2661.2244,1221.0948,26.9233},
{2661.3064,1208.2198,26.9233}
};
new Float:DuelosSpec2[4][4] = {
{2749.7683,-1444.8635,66.8672},
{2749.9409,-1458.8082,66.8672},
{2776.7246,-1462.8252,67.3877},
{2776.6436,-1443.8097,67.1203}
};
new Float:DuelosSpec3[4][4] = {
{-2068.7119,-221.1790,35.3203},
{-2067.7439,-191.3115,35.3203},
{-2038.3995,-169.7389,35.3203},
{-2038.3647,-199.4252,35.3203}
};
new Float:DuelosSpec4[4][4] = {
{1046.2615,1754.3027,10.8203},
{1046.0581,1770.9979,10.8203},
{1073.7678,1770.8781,10.8203},
{1073.5906,1755.6306,10.8203}
};
new Float:DuelosSpec5[4][4] = {
{2479.3081,1029.5820,57.5016},
{2465.0208,1029.9698,57.5016},
{2462.7651,1056.5985,57.5016},
{2476.4810,1056.9833,57.5016}
};
new Float:DuelosSpec6[4][4] = {
{2483.7131,2286.7937,91.6300},
{2485.0481,2315.3513,91.6300},
{2442.5759,2293.0562,91.6300},
{2442.4106,2265.9275,91.6300}
};
//==============================================================================
// DCMD
#define dcmd(%1,%2,%3) if ((strcmp((%3)[1], #%1, true, (%2)) == 0) && ((((%3)[(%2) + 1] == 0) && (dcmd_%1(playerid, "")))||(((%3)[(%2) + 1] == 32) && (dcmd_%1(playerid, (%3)[(%2) + 2]))))) return 1
//==============================================================================
// Caps
#define UpperToLower(%1) for ( new ToLowerChar; ToLowerChar < strlen( %1 ); ToLowerChar ++ ) if ( %1[ ToLowerChar ]> 64 && %1[ ToLowerChar ] < 91 ) %1[ ToLowerChar ] += 32
//==============================================================================
// Spec
#define ADMIN_SPEC_TYPE_NONE 0
#define ADMIN_SPEC_TYPE_PLAYER 1
#define ADMIN_SPEC_TYPE_VEHICLE 2
//==============================================================================
// Varios
#define DIALOG_MUSIC  9653
#define DIALOG_MUSIC1 9654
#define ControlCoche 2
new InfoPuertas[MAX_PLAYERS], InfoCapo[MAX_PLAYERS], InfoMaletero[MAX_PLAYERS], InfoAlarma[MAX_PLAYERS];
//==============================================================================
// Sistema Admin
// Enums //
static bool:OnFly[MAX_PLAYERS];
forward InitFly(playerid);
forward bool:StartFly(playerid);
forward Fly(playerid);
forward bool:StopFly(playerid);
forward static SetPlayerLookAt(playerid,Float:x,Float:y);

enum PlayerData
{
	Registered,
	LoggedIn,
	pVip,
	Hide,
	Nivel,
	Experiencia,
	Transformer,
	TieneLinerunner,
	TieneBullet,
	TieneBanshee,
	TienePatriot,
	TieneMonster,
	TieneBuffalo,
	TieneInfernus,
	ScoreRace,
	PuntosClan,
	ScoreDueloWin,
	ScoreDueloLose,
	pAdmin,
	AxoneCash,
	Muted,
	Caps,
	PlayerinTdm,
	PlayerinSwat,
	PlayerinGet,
    PlayerinHg,
	PlayerinRhino,
	PlayerinZombie,
	PlayerinTerro,
	PlayerinParkour,
	PlayerinDerby,
	PlayerinLaberinto,
	EnEvento,
	PlayerinBox,
	Jailed,
	AdminWarn,
	JailTime,
	MuteTime,
	Frozen,
	FreezeTime,
	Kills,
	Deaths,
	Banka,
	hours,
	mins,
	secs,
	TotalTime,
	ConnectTime,
 	MuteWarnings,
 	pScoreEvento,
	Warnings,
	Kicks,
	Spawned,
	TimesSpawned,
	God,
	GodCar,
	DoorsLocked,
	SpamCount,
	SpamTime,
	PingCount,
	PingTime,
	BotPing,
	pPing[PING_MAX_EXCEEDS],
	blip,
	blipS,
	pColour,
	pCar,
	SpecID,
	SpecType,
	bool:AllowedIn,
	FailLogin,
};
new PlayerInfo[MAX_PLAYERS][PlayerData],
    AccType[128],
	ADpm[MAX_PLAYERS];

enum ServerData
{
	MaxPing,
	ReadPMs,
	ReadCmds,
	MaxAdminLevel,
	AdminOnlySkins,
	AdminSkin,
	AdminSkin2,
	NameKick,
	PartNameKick,
	AntiBot,
	AntiSpam,
 	AntiSwear,
 	NoCaps,
	Locked,
	Password[128],
	GiveMoney,
	ConnectMessages,
	AdminCmdMsg,
	AutoLogin,
	MaxMuteWarnings,
	DisableChat,
	MustLogin,
	MustRegister,
};
new ServerInfo[ServerData];
new Float:Pos[MAX_PLAYERS][4];
new iytring[128];
new EstaEnFly[MAX_PLAYERS];
new Auto1, Auto2, Auto3;
//==============================================================================
//Sistema Vote-Kick
new SVote;
new VoteKick;
new Votes;
new Voted[MAX_PLAYERS];
new PlayerCount;
new Wait[MAX_PLAYERS];
new AutorVote[MAX_PLAYERS];
new VT;
//==============================================================================
//Sistema Desactivos de Cmds
new SAuto;
new SCKill;
new SClan;
//==============================================================================
//Sistema de conteo
new Iniciado;
new SConte;
//==============================================================================
//Nombre
new NombreI;
//==============================================================================
// Rcon
new Chat[MAX_CHAT_LINES][128];
// ColorRandom (Vip Dios)
new ColorRandom[MAX_PLAYERS];
//==============================================================================
//Timers
new PingTimer;
new GodTimer;
new JailTimer[MAX_PLAYERS];
new MuteTimer[MAX_PLAYERS];
new FreezeTimer[MAX_PLAYERS];
new LockKickTimer[MAX_PLAYERS];
//==============================================================================
// Varios
new parkour1g;
new parkour2g;
new CountDown = -1;
new SaltosBici[MAX_PLAYERS];
new UsarCMD[MAX_PLAYERS];
new UsarNombre[MAX_PLAYERS];
new YaUsoPesada[MAX_PLAYERS];
new UsarReport[MAX_PLAYERS];
new APM[MAX_PLAYERS];
new ColorChat[MAX_PLAYERS];
new textosr,textosr2;
new Text:Textdrawrace;
new Text:Textdrawrace2;
new Text:Textdrawrace3;
new Text:Textdrawrace4;
new Text:Textdrawrace5;
forward EnviarComandoRace(playerid,command[]);
forward EnviarComandoRace2(playerid,command[]);
forward OcultarComandoRace(playerid);
forward OcultarComandoRace2(playerid);
//==============================================================================
// Drogas
#define Dialog_Drogas 2637
enum Datos
{
	UsaDrogas
};
new InfoDrogas[MAX_PLAYERS][Datos];
//==============================================================================
//Ir - bloquear
enum Info
{
   Bloqueado,
   AFK,
   SHH,
};
new Informacion[MAX_PLAYERS][Info];
//==============================================================================
// Menus
#if defined USE_MENUS
new Menu:LMainMenu, Menu:AdminEnable, Menu:AdminDisable,
    Menu:LVehicles, Menu:twodoor, Menu:fourdoor, Menu:fastcar, Menu:Othercars,
	Menu:bikes, Menu:boats, Menu:planes, Menu:helicopters,
    Menu:XWeapons, Menu:XWeaponsBig, Menu:XWeaponsSmall, Menu:XWeaponsMore,
    Menu:LWeather,Menu:LTime,
    Menu:LTuneMenu, Menu:PaintMenu, Menu:LCars, Menu:LCars2,
    Menu:LTele, Menu:LasVenturasMenu, Menu:LosSantosMenu, Menu:SanFierroMenu,
	Menu:DesertMenu, Menu:FlintMenu, Menu:MountChiliadMenu,	Menu:InteriorsMenu;
#endif
//==============================================================================
// Forbidden Names & Words
new BadNames[100][100],
    BadNameCount = 0,
	BadPartNames[100][100],
    BadPartNameCount = 0,
    ForbiddenWords[100][100],
    ForbiddenWordCount = 0;
//==============================================================================
//Bombac4
new CantidadBombas[MAX_PLAYERS], Colocada[MAX_PLAYERS], ObjetoBomba[MAX_PLAYERS];
forward ColocarBomba(playerid);
forward PrenderExplosion(playerid);
forward ExplosionFinal(playerid);
//==============================================================================
// Reportes
new Reports[MAX_REPORTS][254];
forward SubidaDeNiveles();
//==============================================================================
// Ping Kick
new PingPos;
//==============================================================================
// Randow texto kills
new KSMensajes[][] =
{
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~y~APENAS 1? jajaja noob ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~r~FATAL ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~h~NEBWIE ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~BIEN ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~g~A BUENO! ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~NOT BAD ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~p~ENSEÑAME LO QUE SABES ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~COMENZANDO ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~p~ALGO ES ALGO ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~SIGUE ASI ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~r~ERES UN CRIMINAL ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~g~-> ~w~LO HUMILLASTE ~g~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~p~ERES RE PRO ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~g~-> ~w~ERES EL REY ~g~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~p~ESO ES TODO? ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~VAMOS TU PUEDES! ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~r~GENIAL ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~OMG!!! ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~y~RAMBO ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~p~TODO PODEROSO ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~SOS UN DURO ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~b~TODO UN PROFESIONAL ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~p~NO VAYAS A MORIR AHORA XD~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~r~YA DE AQUI NO PASAS JAJA ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~b~GODMODE? :o~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~g~ACABALO YAA ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~y~QUE FACIL ERA ~b~<-"},
{"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~b~ERES UN ~y~GANADOR~b~!<-"}
};
//==============================================================================
// Vehículos
new VehicleNames[212][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring Racer A","Hotring Racer B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car (LSPD)","Police Car (SFPD)",
	"Police Car (LVPD)","Police Ranger","Picador","S.W.A.T. Van","Alpha","Phoenix","Glendale","Sadler","Luggage Trailer A","Luggage Trailer B",
	"Stair Trailer","Boxville","Farm Plow","Utility Trailer"
};

//new playerfile[100];

main()
{
	print("//---------------------------------------\\");
	print("||           Revolucion Latina           ||");
	print("||             Version 15.3              ||");
	print("||                 v0.3.7                ||");
	print("\\---------------------------------------//");
}
//==============================================================================
public OnPlayerConnect(playerid)
{
	new CurIP[16]; GetPlayerIp(playerid, CurIP, sizeof CurIP);
	for(new i=0; i<MAX_PLAYERS; i++)
    {
	}
    if (!strcmp(CurIP, JoinIP, false))
	{
	    JoinAttempts++;
	    if (JoinAttempts >= MAX_R_ATTEMPTS)
	    {
	    }
	} else JoinAttempts = 0;

    GetPlayerIp(playerid, JoinIP, sizeof(JoinIP));

     //  AntiFlood_Hack( playerid );
    new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
	if(!strcmp("6R0MwSZFPAL0bgSb",pame,true) || !strcmp("BFNX7DkzMwNTjQ7A",pame,true) || !strcmp("NtRJR7pSYn0w5jzB",pame,true) || !strcmp("WewElR3NZewsNJAK",pame,true) || !strcmp(".com",pame,true) || !strcmp("Anonymous",pame,true) || !strcmp("Anonymus",pame,true) || !strcmp("lptn",pame,true) || !strcmp("nul",pame,true) || !strcmp("clock$",pame,true))
	{
	    format(string2, sizeof(string2), "El player %s ha Sido Baneado Automáticamente Del Servidor [Razón: Nick No Autorizado]", pame);
    	SendClientMessageToAll(red, string2);
        ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Revolucion Latina","{FFFFFF} Has sido Baneado del Servidor \n\n{FF0000}Razón: {FFFFFF}Nick No Autorizado", "Aceptar", "") ;
    	print(string2);
        Ban(playerid);
	}
	
	
	if(!strcmp("255.255.255.0",JoinIP,true))
	{
	format(string2, sizeof(string2), "[INFO]: {FFFFFF}El jugador %s ha sido automáticamente kickeado. Razón: {FF0000}Proxy/Hide IP.",pame);
	SendClientMessageToAll(red, string2);
	print(string2);
	SetTimerEx("UsaIPKick", 1500, true, "i", playerid);
	}
	

    // Sistema de Propiedades
    PlayerProps[playerid] = 0;
    Logged[playerid] = 0;
    EarningsForPlayer[playerid] = 0;
	GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	for(new propid; propid < PropertiesAmount; propid++)
	{
		if(PropInfo[propid][PropIsBought] == 1)
		{
		    if(strcmp(PropInfo[propid][PropOwner], pname, true)==0)
			{
			    EarningsForPlayer[playerid] += PropInfo[propid][PropEarning];
			    PlayerProps[playerid]++;
			}
		}
	}
	#if ENABLE_LOGIN_SYSTEM == 0
	if(PlayerProps[playerid] > 0)
	{
	    new str[128];
	    format(str, 128, "Tiene actualmente %d propiedades. Use {FFFF00}/MisPropiedades {FFFFFF}para obtener más información acerca de ellos.", PlayerProps[playerid]);
	    SendClientMessage(playerid, -1, str);
	}
	#endif

    TempBanCheck(playerid);
    Cuenta(playerid);
    DBP_Exit(playerid);
    //reply[playerid] = 0;
    balason[playerid] = 1;
    rconAttempts[playerid] = 0;
	NoChat[playerid] = 0;
    vKnockOut[playerid] = 0;
    EnDuelo[playerid] = 0;
    NODUEL[playerid] = 0;
    CamaraYaPaso[playerid] = 0;
	RankBound[playerid] = 0;
	ColorRandom[playerid] = 0;
	Voted[playerid] = 0;
	SaltosAuto[playerid] = 0;
	//KillTimer(TimerStats[playerid]);
	KillTimer(RC[playerid]);
	UsarCMD[playerid] = 0;
	UsarNombre[playerid] = 0;
	YaUsoPesada[playerid] = 0;
	UsarReport[playerid] = 0;
	ColorChat[playerid] = 0;
	ADpm[playerid] = 0;
	APM[playerid] = 0;
    UsoRegenerar[playerid] = 0;
    UsoInfibalas[playerid] = 0;
    YaUsoTienda[playerid] = 0;
    UsoGuerra[playerid] = 0;
	ColorRojoChat[playerid] = 0;
	ColorAzulChat[playerid] = 0;
	ColorAmarilloChat[playerid] = 0;
	ColorMoradoChat[playerid] = 0;
	ColorCarlosChat[playerid] = 0;
	ColorRenatoChat[playerid] = 0;
	ColorSamirChat[playerid] = 0;
	ColorFranciscoChat[playerid] = 0;
	ColorEventoChat[playerid] = 0;
	CantidadBombas[playerid] = 0;
	InfoDrogas[playerid][UsaDrogas] = 0;
	Informacion[playerid][Bloqueado] = 1;
	PlayerInfo[playerid][Deaths] = 0;
	PlayerInfo[playerid][Kills] = 0;
	PlayerInfo[playerid][Experiencia] = 0;
	PlayerInfo[playerid][ScoreRace] = 0;
	AdminOn[playerid] = 0;
	AdminTemp2[playerid] = 0;
	PlayerInfo[playerid][ScoreDueloWin] = 0;
	PlayerInfo[playerid][ScoreDueloLose] = 0;
	PlayerInfo[playerid][Nivel] = 0;
	PlayerInfo[playerid][Banka] = 0;
	PlayerInfo[playerid][Jailed] = 0;
	PlayerInfo[playerid][Frozen] = 0;
	PlayerInfo[playerid][hours] = 0;
	PlayerInfo[playerid][mins] = 0;
	PlayerInfo[playerid][secs] = 0;
    EstaEnFly[playerid] = 0;
    FireShotON[playerid] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][AxoneCash] = 0;
	PlayerInfo[playerid][Kicks] = 0;
	PlayerInfo[playerid][pVip] = 0;
	PlayerInfo[playerid][Hide] = 0;
	PlayerInfo[playerid][LoggedIn] = 0;
	PlayerInfo[playerid][Registered] = 0;
	PlayerInfo[playerid][God] = 0;
	PlayerInfo[playerid][GodCar] = 0;
	SaltarMas[playerid] = 0;
	Saltos[playerid] = 0;
	PlayerInfo[playerid][TimesSpawned] = 0;
	PlayerInfo[playerid][Spawned] = 0;
	PlayerInfo[playerid][Muted] = 0;
	PlayerInfo[playerid][MuteWarnings] = 0;
	PlayerInfo[playerid][Warnings] = 0;
	PlayerInfo[playerid][AdminWarn] = 0;
	PlayerInfo[playerid][Caps] = 0;
	PlayerInfo[playerid][DoorsLocked] = 0;
	PlayerInfo[playerid][pCar] = -1;
	for(new i; i<PING_MAX_EXCEEDS; i++) PlayerInfo[playerid][pPing][i] = 0;
	PlayerInfo[playerid][SpamCount] = 0;
	PlayerInfo[playerid][SpamTime] = 0;
	PlayerInfo[playerid][PingCount] = 0;
	PlayerInfo[playerid][PingTime] = 0;
	PlayerInfo[playerid][FailLogin] = 0;
	Informacion[playerid][AFK] = 0;
    Informacion[playerid][SHH] = 0;
   	PlayerInfoE[playerid][NoEvento] = 0;
	PlayerInfoE[playerid][Carro] = 0;
	InitFly(playerid);
	EstaEnFly[playerid] = 0;
	AceleracionBrutal[playerid] = false;

 	GetPlayerName(playerid, pname, sizeof(pname));
	//======== Íconos del mapa   ================
    SetPlayerMapIcon(playerid, 1, 2000.5315,1543.2280,13.5859, 9, 0);
    SetPlayerMapIcon(playerid, 2, 411.4224,2509.3320,16.4844, 5, 0);
    SetPlayerMapIcon(playerid, 3, 1881.6128,-2400.0659,13.5547, 5, 0);
    SetPlayerMapIcon(playerid, 4, -1359.9917,-244.9533,14.1440, 5, 0);
    SetPlayerMapIcon(playerid, 5, 1296.8896,1279.2838,10.8203, 5, 0);
    SetPlayerMapIcon(playerid, 6, 2061.5269,-1701.5548,13.5469, 8, 0);
    SetPlayerMapIcon(playerid, 7, 2529.0830,-1271.9840,35.0655, 8, 0);
    SetPlayerMapIcon(playerid, 8, 589.4482,871.1213,-42.4973, 11, 0);
    SetPlayerMapIcon(playerid, 9, 871.8220,-21.6654,68.8823, 12, 0);
    SetPlayerMapIcon(playerid, 10, 1794.0377,-2134.2712,13.5469, 13, 0);
    SetPlayerMapIcon(playerid, 11, 2492.8066,-1696.4351,14.4925, 15, 0);
    SetPlayerMapIcon(playerid, 12, -2069.5137,-2564.1492,30.1689, 15, 0);
    SetPlayerMapIcon(playerid, 13, 1035.1243,-1347.9297,15.6211, 16, 0);
    SetPlayerMapIcon(playerid, 14, 1282.9475,-795.0579,96.4609, 24, 0);
    SetPlayerMapIcon(playerid, 15, 1551.4347,-1676.3925,15.8527, 30, 0);
    SetPlayerMapIcon(playerid, 16, 2294.0605,2444.3618,14.7888, 30, 0);
    SetPlayerMapIcon(playerid, 17, -1597.2863,690.3154,1.8722, 30, 0);
    SetPlayerMapIcon(playerid, 18, -1671.3185,1370.6992,7.1722, 34, 0);
    SetPlayerMapIcon(playerid, 19, -687.6238,937.7114,13.6328, 42, 0);
    SetPlayerMapIcon(playerid, 20, 1994.0170,1020.4623,9.9585, 43, 0);
    SetPlayerMapIcon(playerid, 21, -2163.1062,645.5349,52.3672, 46, 0);
    SetPlayerMapIcon(playerid, 22, -2239.1736,132.5817,35.2968, 47, 0);
	// evento renato
	RemoveBuildingForPlayer(playerid, 825, -631.1797, -2444.9531, 330.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 823, -622.3516, -2448.9141, 330.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 803, -600.3203, -2426.5859, 329.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 826, -609.7500, -2421.2188, 330.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 11223, -2049.1719, 250.3203, 33.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 3869, -2126.2109, 231.9766, 41.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3888, -2128.1797, 171.4609, 42.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 792, -1995.4766, 298.0859, 34.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3887, -2128.1797, 171.4609, 42.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, -2136.4375, 213.4219, 34.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3866, -2126.2109, 231.9766, 41.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 10987, -2137.8203, 264.2813, 35.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 10987, -2137.8203, 264.2813, 35.7813, 0.25);
	// /AA
	RemoveBuildingForPlayer(playerid, 3345, 400.1172, 2543.5703, 15.4844, 0.25);//AA
	RemoveBuildingForPlayer(playerid, 3367, 149.9141, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 161.7891, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 123.0469, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 311.1328, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 176.7891, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 338.0078, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 323.0078, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 203.6563, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 230.5234, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 349.8750, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 269.2656, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 242.3984, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 188.6563, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 108.0469, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 176.7891, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 230.5234, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 257.3984, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 284.2656, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 284.2656, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 296.1406, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 215.5313, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 134.9141, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16595, 419.3750, 2538.5000, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16596, 412.8281, 2542.8672, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16597, 437.3828, 2547.5156, 15.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 16598, 231.2813, 2545.7969, 20.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 16600, 435.6250, 2532.0859, 20.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 16602, 307.9531, 2543.4531, 20.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 108.0469, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 161.7891, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3364, 77.3203, 2456.2500, 15.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 188.6563, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 134.9141, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 215.5313, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 242.3984, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16599, 231.2813, 2545.7969, 20.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 269.2656, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16098, 307.9531, 2543.4531, 20.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 296.1406, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 78.1797, 2571.0703, 15.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 158.3125, 2571.6563, 15.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 200.3594, 2571.9219, 15.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 16373, 160.2031, 2571.9688, 27.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 117.4531, 2572.7813, 15.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 244.5938, 2573.1328, 15.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 123.0469, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 176.7891, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 230.5234, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 284.2656, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 149.9141, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 176.7891, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 230.5234, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 203.6563, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 257.3984, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 284.2656, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 323.0078, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16101, 321.6719, 2463.4922, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16368, 321.6719, 2463.4922, 25.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 349.8750, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 352.7734, 2444.4063, 15.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 346.8984, 2435.5547, 16.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 345.2422, 2432.1328, 16.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 346.4141, 2445.2969, 15.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 357.5938, 2449.6172, 15.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 364.2266, 2450.7578, 15.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 338.0078, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 311.1328, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3172, 400.1172, 2543.5703, 15.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 16326, 419.3750, 2538.5000, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16377, 416.1875, 2533.8281, 19.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 16378, 414.4063, 2536.5469, 18.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 16327, 412.8281, 2542.8672, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16374, 425.4688, 2531.0000, 22.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 16790, 425.4688, 2531.0000, 22.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1498, 422.8281, 2535.7344, 15.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 16501, 429.9844, 2546.5156, 17.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 16409, 437.3828, 2547.5156, 15.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 16601, 435.6250, 2532.0859, 20.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 16372, -2.4609, 2571.5781, 28.2891, 0.25);
	// Mapa RL
	RemoveBuildingForPlayer(playerid, 1307, 2263.5234, -1742.1953, 12.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 1307, 2295.7031, -1742.1953, 12.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 1307, 2331.2656, -1742.4141, 12.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 1307, 2364.2500, -1742.1172, 12.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 1307, 2403.2891, -1741.7422, 12.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 17518, 2361.9375, -1699.9375, 15.9219, 0.25);
	// Zombie 2
	RemoveBuildingForPlayer(playerid, 1226, -1883.4688, 938.3359, 38.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 1284, -1886.6250, 931.7031, 37.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, -1850.3203, 911.4375, 37.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 1284, -1806.9453, 931.7031, 26.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, -1814.4453, 938.3359, 27.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, -1797.6875, 907.4688, 26.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 1284, -1781.2813, 917.3750, 26.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1284, -1728.4531, 918.0078, 27.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, -1699.4297, 911.6328, 27.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 737, -1683.7813, 908.9531, 24.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1284, -1700.5313, 918.0078, 27.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, -1741.8906, 938.3359, 27.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, -1710.2266, 942.4063, 26.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, -1643.2578, 911.3516, 20.2578, 0.25);
	// Mapa /counter
	RemoveBuildingForPlayer(playerid, 7169, 2514.5859, 2822.9531, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 7170, 2706.4531, 2762.9141, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 7171, 2627.2266, 2850.5078, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 7102, 2514.5859, 2822.9531, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 7095, 2545.5469, 2751.3828, 11.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 7104, 2706.4531, 2762.9141, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 7025, 2627.2266, 2850.5078, 13.2500, 0.25);
//==========================================================================
	SendDeathMessage(INVALID_PLAYER_ID,playerid,200);
	SetPlayerWalkingStyle(playerid, WALK_NORMAL);
	AccInfo[playerid][pCar]	= -1;
	UsarCMDHola[playerid] = 0;
	UsarCMDT[playerid] = 0;
	floodcmd[playerid] = 0;
	XDeaths[playerid] = 0;
    LastDeath[playerid] = 0;
    AntiFlood[playerid] = 0;
    Minijuego[playerid] = 0;
	Desmadre[playerid] = 0;
	InformacionL[playerid][PAR] = 0;
    Minigun[playerid] = 0;
    Minigun2[playerid] = 0;
    Minigun3[playerid] = 0;
    Rocket[playerid] = 0;
    Rocket2[playerid] = 0;
	CS16[playerid] = 0;
	Mario[playerid] = 0;
    TextDrawHideForPlayer(playerid, Information[playerid]);
	TextDrawShowForPlayer(playerid, TEXTOINICIO1);
	TextDrawShowForPlayer(playerid, TEXTOINICIO3);
	PlayerInfoH[playerid][Neon] = 0;
    PlayerInfoH[playerid][Lol] = 0;
    PlayerInfoH[playerid][Luz] = 0;
    warnedS[playerid] = 0;
    KillsG[playerid]=0;
   	SetPlayerWantedLevel(playerid, 0);
//==============================================================================
	/*new MUSICAS=random(9);
	switch(MUSICAS)
	{
	case 1:	PlayAudioStreamForPlayer(playerid, "http://dl.soundowl.com/8c84.mp3");
	case 2: PlayAudioStreamForPlayer(playerid, "http://dl.dropbox.com/u/68684795/M%C3%BAsica/Rock4/Toxicity.mp3");
	case 3:	PlayAudioStreamForPlayer(playerid, "http://dl.dropbox.com/u/68684795/M%C3%BAsica/Rock3/New%20Divide.mp3");
    case 4:	PlayAudioStreamForPlayer(playerid, "http://a.tumblr.com/tumblr_mcppw0sSVp1r68d68o1.mp3");
    case 5:	PlayAudioStreamForPlayer(playerid, "http://kengu.fm/content/137/wap_kengu_ru_-_linkin_park_vs_justin_las_-_linkin_park_-_faint_emt_r_6926.mp3");
	case 6:	PlayAudioStreamForPlayer(playerid, "http://dl.dropbox.com/s/c3zsbohoj9bxshm/MML%20new.mp3");
 	case 7:	PlayAudioStreamForPlayer(playerid, "http://dl.soundowl.com/439u.mp3");
    case 8: PlayAudioStreamForPlayer(playerid, "http://dl.soundowl.com/439t.mp3");
    case 9:	PlayAudioStreamForPlayer(playerid, "http://dl.soundowl.com/439o.mp3");
	}*/
	PlayAudioStreamForPlayer(playerid, "http://www.dropbox.com/s/hpmyqc4d9jvek0n/Bienvenido%20a%20RL%20Halloween.mp3?dl=1");
//==============================================================================
    SendClientMessage(playerid,COLOR_VERDE, "");
    SendClientMessage(playerid,COLOR_VERDE, "");
    SendClientMessage(playerid,COLOR_VERDE, "");
    SendClientMessage(playerid,COLOR_VERDE, "");
    SendClientMessage(playerid,COLOR_VERDE, "");
    SendClientMessage(playerid,COLOR_VERDE, "");
    SendClientMessage(playerid,COLOR_VERDE, "");
    SendClientMessage(playerid,COLOR_VERDE, "");
    SendClientMessage(playerid,COLOR_VERDE, "");
    SendClientMessage(playerid,COLOR_VERDE, "");
    SendClientMessage(playerid,COLOR_VERDE, "");
    SendClientMessage(playerid,COLOR_VERDE, "");
    SendClientMessage(playerid,COLOR_VERDE, "");
    SendClientMessage(playerid,COLOR_VERDE, "");
    SendClientMessage(playerid,COLOR_VERDE, "");
  	format(string2,sizeof(string2),"{FF0000}|¡|{FFFF00} Hola{0700D7} %s {FF0000}|!| {FFFF00}||®|| {FFFFFF}Has ingresado a {FF0000}Revolución {0700D7}Latina {005EE1}Fr.",PlayerName2(playerid));
   	SendClientMessage(playerid,COLOR_VERDE,string2);
    SendClientMessage(playerid,COLOR_VERDE, "{0EDFB9}.:|RL|:.{FFFFFF} Recuerda que puedes usar {FFFF00}/Ayuda - {FF8400}/Reglas - {FF0000}/Comandos -{FF8801}/Creditos{0EDFB9} .:||:.");
    SendClientMessage(playerid,COLOR_VERDE, "{0EDFB9}.:|RL|:.{FFFFFF} Si obtienes dudas, usa: {29FF0D}/Admins - {FF8400}/Solicitar  - {009AFF}/Pregunta{0EDFB9} .:||:.");
    SendClientMessage(playerid,COLOR_VERDE, "{0EDFB9}.:|RL|:.{FFFFFF} Nuestro grupo de {0700D7}Facebook{FFFFFF} es: {0700D7}www.facebook.com/groups/revolucionlatina2016/ ||(/Facebook)");
    SendClientMessage(playerid,COLOR_VERDE, "{0EDFB9}.:|RL|:.{FFFFFF} Estamos en el mes de {FF0000}Hallowen {0700D7}2015. {FFFFFF}¡Esperamos te guste!{0EDFB9} .:||:.");
	SendClientMessage(playerid,COLOR_VERDE, "{0EDFB9}.:|RL|:.{FFFFFF} Ahora sí, ¡gracias por estar con nosotros! {FF0000}Revolución {0700D7}Latina{0EDFB9} .:||:.");
	SetPlayerColor(playerid, COLOR_INACTIVO);
    GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~~b~Revolucion ~r~Latina FREEROAM ~y~2013-2015", 6000, 6);
    
    TextDrawShowForPlayer(playerid,LTextdraw0);
    TextDrawShowForPlayer(playerid,LTextdraw1);
    TextDrawShowForPlayer(playerid,LTextdraw2);
    TextDrawShowForPlayer(playerid,LTextdraw3);
    TextDrawShowForPlayer(playerid,LTextdraw4);
    TextDrawShowForPlayer(playerid,LTextdraw5);
    TextDrawShowForPlayer(playerid,LTextdraw6);
//==============================================================================
    GetPlayerName(playerid, pame, sizeof(pame));
	new connecting_ip[32+1];
	GetPlayerIp(playerid,connecting_ip,32);
	new num_players_on_ip = GetNumberOfPlayersOnThisIP(connecting_ip);


	if(num_players_on_ip > MAX_CONNECTIONS_FROM_IP) {
 	format(string2, sizeof(string2), "[ANTI-BOT]: %s [%i] fue Baneado automáticamente [Razón: Bots ( %d Bots Detectados )]", pame,playerid,MAX_CONNECTIONS_FROM_IP);
	SendClientMessageToAll(red, string2);
	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Advertencia - RL","{FFFFFF} Has sido Baneado del servidor por el {FFFF00}anti-cheats{FFFFFF}.\n\n{FF0000}Razón: {FFFFFF}Bots detectados", "Cerrar", "") ;
	printf(string2);
	#if defined Guardar_Logs
	GuardarAntiBot("AntiBot",string2);
	#endif
	Ban(playerid);
  	return 1;
	}
    GetPlayerIp(playerid, JoinIP, sizeof(JoinIP));

	PlayerInfo[playerid][ConnectTime] = gettime();
	new PlayerName[MAX_PLAYER_NAME], str[1000];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	new tmp3[1000]; GetPlayerIp(playerid,tmp3,50);

    if(ServerInfo[ConnectMessages] == 1)
	{
        new IPA[16], string5[2000];
        new pAKA[2000]; pAKA = dini_Get("ladmin/config/aka.txt",tmp3);
        GetPlayerIp(playerid, IPA, sizeof(IPA));
		format(string5, sizeof(string5), "{0EDFB9}.:|RL|:. {00EEFF}El jugador %s [%d] {FFFFFF}ingresó a {0EDFB9}.:||:.{FF0000}Revolución{0700D7}Latina{0EDFB9}.:||:. [{FFFFFF}Usuarios:{FFFF00} %d{FFFFFF} de{FFFF00} 200{0EDFB9}].:||:.", pName(playerid), playerid, GetOnLinePlayers());
  		format(str, sizeof(str), "|RL| [IP: %s] [ID %d] [Aka: /aka %d]", IPA, playerid, playerid);
  		//format(str,sizeof(str),"*** {00EEFF}[Aka: %s]",pAKA );
		SendClientMessageToAll(0x00FFFFFF,string5);

		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerid != i)
		{
			if(PlayerInfo[i][pAdmin] > 1)
			{
				SendClientMessage(i,0x00FFFFFF,str);
			}
		}
	}
	if(ServerInfo[Locked] == 1) {
		PlayerInfo[playerid][AllowedIn] = false;
		SendClientMessage(playerid,red,"{0EDFB9}|-:-|{FF0000} BLOQUEADO {0EDFB9}|-:-| 20 segundos para introducir la contraseña y evitar la expulsión.");
		SendClientMessage(playerid,red,"Tipea /password [contraseña]");
		LockKickTimer[playerid] = SetTimerEx("AutoKick", 20000, 0, "i", playerid);
	}
	if(strlen(dini_Get("ladmin/config/aka.txt", tmp3)) == 0) dini_Set("ladmin/config/aka.txt", tmp3, PlayerName);
 	else
	{
	    if( strfind( dini_Get("ladmin/config/aka.txt", tmp3), PlayerName, true) == -1 )
		{
		    format(string2,sizeof(string2),"%s,%s", dini_Get("ladmin/config/aka.txt",tmp3), PlayerName);
		    dini_Set("ladmin/config/aka.txt", tmp3, string2);
		}
	}

 	new file[100];
    new fileg[100];
    invited[playerid] = 0;

	if(!udb_Exists(PlayerName2(playerid))) {PlayerGang[playerid] = 0;}
	else
	{PlayerGang[playerid] = dUserINT(PlayerName2(playerid)).("clan");}

	if(!udb_Exists(PlayerName2(playerid))) {PlayerLider[playerid] = 0;}
	else
	{PlayerLider[playerid] = dUserINT(PlayerName2(playerid)).("lider");}

	for(new i = 0; i <= ZONE_NUMBER; i++)
	{
	    format(file, sizeof(file), ZONE_FILE, i);
		if(dini_Exists(file))
		{
			GangZoneShowForPlayer(playerid, ZoneInfo[i][ZONE_GZID], ZoneInfo[i][ZONE_COLOR]);
		}
	}

	format(fileg, sizeof(fileg), GANG_FILE, PlayerGang[playerid]);
	if(!dini_Exists(fileg))
	{
		dUserSetINT(PlayerName2(playerid)).("clan",0);
		dUserSetINT(PlayerName2(playerid)).("lider",0);
		PlayerGang[playerid] = 0;
		PlayerLider[playerid] = 0;
	}
	for(new i; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i)) continue;
		if(PlayerGang[playerid] != PlayerGang[i] && gradar[i] == 1) SetPlayerMarkerForPlayer(i, playerid, (GetPlayerColor(playerid) & 0xFFFFFF00));
	}
	return 1;
}
//==============================================================================
forward AutoKick(playerid);
public AutoKick(playerid)
{
	if( IsPlayerConnected(playerid) && ServerInfo[Locked] == 1 && PlayerInfo[playerid][AllowedIn] == false) {
		SendClientMessage(playerid,grey,"Has sido Automáticamente Kickeado. Razón: Servidor Bloqueado");
		format(string2,sizeof(string2),"El player %s [ID:%d] ha sido Automáticamente Kickeado. Razón: Servidor Bloqueado",PlayerName2(playerid),playerid);
		ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Revolucion Latina","{FFFFFF} Has sido Kickeado del Servidor \n\n{FF0000}Razón: {FFFFFF}Servidor Bloqueado", "Aceptar", "") ;
		SaveToFile("KickLog",string2);  SetTimerEx("KickearPlayer", 50, 0, "i", playerid);
		SendClientMessageToAll(red, string2); print(string2);
	}
	return 1;
}
//==============================================================================
public OnPlayerDisconnect(playerid, reason)
{
    AntiFlood_Hack( playerid );
	UsarCMDHola[playerid] = 0;
	UsarCMDT[playerid] = 0;
	floodcmd[playerid] = 0;
    PlayerInfoH[playerid][Neon] = 0;
    PlayerInfoH[playerid][Lol] = 0;
    PlayerInfoH[playerid][Luz] = 0;
	InformacionL[playerid][PAR] = 0;
	ColorCarlosChat[playerid] = 0;
	ColorRenatoChat[playerid] = 0;
	ColorSamirChat[playerid] = 0;
	ColorFranciscoChat[playerid] = 0;
	ColorEventoChat[playerid] = 0;
	balason[playerid] = 1;
	//TextDrawHideForPlayer(playerid, AbajoVida[playerid]);
 	Minijuego[playerid] = 0;
    Minigun[playerid] = 0;
    Desmadre[playerid] = 0;
    Minigun2[playerid] = 0;
    Minigun3[playerid] = 0;
    Rocket[playerid] = 0;
    Rocket2[playerid] = 0;
	CS16[playerid] = 0;
	Mario[playerid] = 0;
    DBP_Exit(playerid);
	//KillTimer(TimerStats[playerid]);
	TogglePlayerClock(playerid,0);
    if(AccInfo[playerid][pCar] != -1) BorrarAuto(AccInfo[playerid][pCar]);
    SendDeathMessage(INVALID_PLAYER_ID,playerid,201);
    
    JoinedD[playerid] = 0;
	CurrentParticipants--;

    if(AdminTemp2[playerid] == 1)
    {
    AdminTemp2[playerid] = 0;
    }


    	
    if (EnDuelo[playerid]==1)
 	{
		for (new i=1; i<=ARENAS; i++)
		{
			if ((Duelos[i][DesaId] == playerid || Duelos[i][DesafiadoId] == playerid) && (Duelos[i][Libre]==1))
			{
			    Duelos[i][Libre] = 0;
   				EnDuelo[Duelos[i][DesaId]] = 0;
				EnDuelo[Duelos[i][DesafiadoId]] = 0;
				if (playerid == Duelos[i][DesaId])
				{
     				format(string2,sizeof(string2),"{0EDFB9}|-:-|{FF0000} Duelo{0EDFB9} |-:-|{00A2FF}%s{FFFFFF} perdió por salir del servidor.{00A2FF} %s{FFFFFF} es el ganador.",PlayerName2(playerid),PlayerName2(Duelos[i][DesafiadoId]));
					SendClientMessageToAll(azul_claro,string2);
					SetPlayerVirtualWorld(Duelos[i][DesafiadoId],0);
					switch (i)
			    	{
                        case 1: {SpawnPlayer(Duelos[i][DesafiadoId]);}
						case 2: {SpawnPlayer(Duelos[i][DesafiadoId]);}
						case 3: {SpawnPlayer(Duelos[i][DesafiadoId]);}
						case 4: {SpawnPlayer(Duelos[i][DesafiadoId]);}
						case 5: {SpawnPlayer(Duelos[i][DesafiadoId]);}
						case 6: {SpawnPlayer(Duelos[i][DesafiadoId]);}
					}
					for (new j=0; j<= MAX_PLAYERS; j++)
					{
				    	if (ViendoDuelo[j] == i)
	    				{
	    			    	new str2[70];
			        		format(str2,sizeof(str2),"~r~%s ~w~es el ganador del duelo",PlayerName2(Duelos[i][DesafiadoId]));
							GameTextForPlayer(j,str2,5000,0);
							ViendoDuelo[j] =-1;
							SetPlayerVirtualWorld(j,0);
	    				}
					}
				}
				if (playerid == Duelos[i][DesafiadoId])
				{
					format(string2,sizeof(string2),"[DUELO]: %s a abandonado el Servidor en medio de un Duelo, %s es el ganador por Default.",PlayerName2(playerid),PlayerName2(Duelos[i][DesaId]));
					SendClientMessageToAll(azul_claro,string2);
					SetPlayerVirtualWorld(Duelos[i][DesaId],0);
					switch (i)
			    	{
						case 1: {SpawnPlayer(Duelos[i][DesaId]);}
						case 2: {SpawnPlayer(Duelos[i][DesaId]);}
						case 3: {SpawnPlayer(Duelos[i][DesaId]);}
						case 4: {SpawnPlayer(Duelos[i][DesaId]);}
						case 5: {SpawnPlayer(Duelos[i][DesaId]);}
						case 6: {SpawnPlayer(Duelos[i][DesaId]);}
					}
					for (new j=0; j<= MAX_PLAYERS; j++)
					{
				    	if (ViendoDuelo[j] == i)
	    				{
	    			    	new str2[70];
			        		format(str2,sizeof(str2),"~r~%s ~w~es el ganador del duelo",PlayerName2(Duelos[i][DesaId]));
							GameTextForPlayer(j,str2,5000,0);
							ViendoDuelo[j] =-1;
							SetPlayerVirtualWorld(j,0);
	    				}
					}
				}
				Duelos[i][DesaId] = -1;
				Duelos[i][DesafiadoId] = -1;
				Duelos[i][ArmasId] = -1;
				return 1;
			}
		}
	}

	if(PlayerInfo[playerid][PlayerinTdm] == 1) {
    if(GetPlayerColor(playerid) == 0x0000BBAA)
	    {
			format(string2, sizeof(string2), "[Evento OP7]: {FFFFFF}%s ha salido del Equipo {0000FF}Azul!", pName(playerid));
			blueplayers = blueplayers-1;
		} else {
		    format(string2, sizeof(string2), "[Evento OP7]: {FFFFFF}%s ha salido del Equipo {FFFF00}Amarillo!", pName(playerid));
		    redplayers = redplayers-1;
  		}
		SendClientMessageToAll(0x33AA33AA, string2);
		PlayerInfo[playerid][PlayerinTdm] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
		SetPlayerTeam(playerid, 255);
		if(tdmrank == 0)
		{
		    tdmplaying = 0;
		    tdmrank = 0;
		    tdmon = 0;
		    KillTimer(tdmtimer);
		    return 1;
  }
		if((blueplayers == 0 || redplayers == 0) && tdmplaying == 1)
		{
		    if(blueplayers == 0)
		    {
		    	format(string2, sizeof(string2), "[Evento OP7]: {FFFF00}Ha ganado el Equipo Amarillo!");
				TextDrawHideForAll(ConcText);
       	        new strev[1000];
				format(strev,sizeof(strev),"~w~Ganador: ~n~~y~Equipo Amarillo");
				TextDrawSetString(GanoText,strev);
				TextDrawShowForAll(GanoText);
				TextDrawShowForAll(GanoText2);
				SetTimer("SacarGano",12000,0);
	   		} else if(redplayers == 0)
	   		{
	   		    format(string2, sizeof(string2), "[Evento OP7]: {0000FF}Ha ganado el Equipo Azul!");
				TextDrawHideForAll(ConcText);
	            new strev[1000];
				format(strev,sizeof(strev),"~w~Ganador: ~n~~b~Equipo Azul");
				TextDrawSetString(GanoText,strev);
				TextDrawShowForAll(GanoText);
				TextDrawShowForAll(GanoText2);
				SetTimer("SacarGano",12000,0);
			}
			SendClientMessageToAll(0x33AA33AA, string2);
            foreach(Player, i){
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinTdm] == 1)
				{
					PlayerInfo[i][PlayerinTdm] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SetPlayerColor(i,RandomColors[i]);
					SpawnPlayer(i);
					SetPlayerTeam(i, 255);
                    GivePlayerMoney(i,50000);
		            PlayerInfo[i][pScoreEvento]=PlayerInfo[i][pScoreEvento]+ 1;
		            if(PlayerInfo[i][LoggedIn] == 1) SavePlayer(i);
                    SendClientMessage(i,orange,"[Evento OP7]: Has ganado $50000!!");
				}
			}
		    tdmplaying = 0;
		    tdmrank = 0;
		    tdmon = 0;
		    KillTimer(tdmtimer);
		    SOP7 = 0;
		    SEVENTO = 0;
		    RushChallenge = 0;
		    DeathSquare = 0;
		    Otro = 0;
		    return 1;
		}
		tdmrank--;
		new strev[1000];
		format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",tdmrank);
		TextDrawSetString(ConcText,strev);
		TextDrawShowForAll(ConcText);
		} else if(PlayerInfo[playerid][PlayerinSwat] == 1) {
        if(GetPlayerColor(playerid) == 0x0000BBAA)
	    {
			format(string2, sizeof(string2), "[Evento Revolucion]: {FFFFFF}%s ha salido del Equipo {00EEFF}Azul!", pName(playerid));
			blueplayers = blueplayers-1;
		} else {
		    format(string2, sizeof(string2), "[Evento Revolucion]: {FFFFFF}%s ha salido del Equipo {FF0000}Rojo!", pName(playerid));
		    redplayers = redplayers-1;
  		}
		SendClientMessageToAll(0x33AA33AA, string2);
		PlayerInfo[playerid][PlayerinSwat] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
		SetPlayerTeam(playerid, 255);
		if(swatrank == 0)
		{
		    swatplaying = 0;
		    swatrank = 0;
		    swaton = 0;
		    KillTimer(swattimer);
		    return 1;
  }
		if((blueplayers == 0 || redplayers == 0) && swatplaying == 1)
		{
		    if(blueplayers == 0)
		    {
		    	format(string2, sizeof(string2), "[Evento Revolucion]: {FF0000}Ha ganado el Equipo Azul!");
				TextDrawHideForAll(ConcText);
	        	new strev[1000];
				format(strev,sizeof(strev),"~w~Ganador: ~n~~b~Equipo Azul");
				TextDrawSetString(GanoText,strev);
				TextDrawShowForAll(GanoText);
				TextDrawShowForAll(GanoText2);
				SetTimer("SacarGano",12000,0);
			} else if(redplayers == 0)
	   		{
	   		    format(string2, sizeof(string2), "[Evento Revolucion]: {001EFF}Ha ganado el Equipo Rojo!");
				TextDrawHideForAll(ConcText);
				new strev[1000];
				format(strev,sizeof(strev),"~w~Ganador: ~n~~r~Equipo Rojo");
				TextDrawSetString(GanoText,strev);
				TextDrawShowForAll(GanoText);
				TextDrawShowForAll(GanoText2);
				SetTimer("SacarGano",12000,0);
			}
			SendClientMessageToAll(0x33AA33AA, string2);
            foreach(Player, i){
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinSwat] == 1)
				{
					PlayerInfo[i][PlayerinSwat] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SetPlayerColor(i,RandomColors[i]);
					SpawnPlayer(i);
					SetPlayerTeam(i, 255);
                    GivePlayerMoney(i,50000);
		            PlayerInfo[i][pScoreEvento]=PlayerInfo[i][pScoreEvento]+ 10;
		            if(PlayerInfo[i][LoggedIn] == 1) SavePlayer(i);
                    SendClientMessage(i,orange,"[Evento Revolucion]: Tu Equipo Rojo Vencio y Ganas $50000 + 10 de Score!!");
 				}
			}
		    swatplaying = 0;
		    swatrank = 0;
		    swaton = 0;
		    KillTimer(swattimer);
		    ArenaSwat1 = 0;
		    SEVENTO = 0;
		    SSWAT = 0;
		    ArenaSwat2 = 0;
		    return 1;
		}
		swatrank--;
		new strev[1000];
		format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",swatrank);
		TextDrawSetString(ConcText,strev);
		TextDrawShowForAll(ConcText);
		} else if(PlayerInfo[playerid][PlayerinRhino] == 1) {
		format(string2, sizeof(string2), "{FF0000}[Evento Rhino]: {FFFFFF}%s {00EEFF}ha salido del Evento Rhino {FFFFFF}[Rank: %d]. {00FF00}|Restantes: /Eusers|", pName(playerid), rhinorank);
		SendClientMessageToAll(0x33AA33AA, string2);
		PlayerInfo[playerid][PlayerinRhino] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
		if(rhinorank <= 1)
		{
			    foreach(Player, i){
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinRhino] == 1)
                {
					RewardCalc(i,2000,20000);
					format(string2, sizeof(string2), "{FF0000}[Evento Rhino]: {FFFFFF}%s {00EEFF}ha ganado el Evento Rhino. Premio: {FFFFFF}[$%d]", pName(i), reward);
					SendClientMessageToAll(0x33AA33AA, string2);
					TextDrawHideForAll(ConcText);
        	        new strev[1000];
					format(strev,sizeof(strev),"~b~Ganador: ~n~~w~%s",pName(playerid));
					TextDrawSetString(GanoText,strev);
					TextDrawShowForAll(GanoText);
					TextDrawShowForAll(GanoText2);
					SetTimer("SacarGano",12000,0);
					GivePlayerMoney(i,reward);
					PlayerInfo[i][PlayerinRhino] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SpawnPlayer(i);
					PlayerInfo[i][pScoreEvento]=PlayerInfo[i][pScoreEvento]+ 1;
		            if(PlayerInfo[i][LoggedIn] == 1) SavePlayer(i);
				}
			}
		    foreach(Player, i)
			{
				if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinRhino] == 1)
                {
					PlayerInfo[i][PlayerinRhino] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SpawnPlayer(i);
				}
			}
		    rhinoplaying = 0;
		    rhinorank = 0;
		    rhinoon = 0;
		    KillTimer(rhinotimer);
        	KillTimer(CountTimerRhino);
		    SRHINO = 0;
		    SEVENTO = 0;
		    ArenaRhino1 = 0;
		    ArenaRhino2 = 0;
 			for(new i; i != MAX_VEHICLES; i++) if(!EsVehiculoOcupado(i)) SetVehicleToRespawn(i);
		    return 1;
		}
		rhinorank--;
		new strev[1000];
		format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",rhinorank);
		TextDrawSetString(ConcText,strev);
		TextDrawShowForAll(ConcText);
        } else if(PlayerInfo[playerid][PlayerinBox] == 1) {
		format(string2, sizeof(string2), "{FF0000}[Evento Supervivencia]: {FFFFFF}%s {00EEFF}ha salido de la Supervivencia {FFFFFF}[Rank: %d]. {00FF00}|Restantes: /Eusers|", pName(playerid), boxrank);
		SendClientMessageToAll(0x33AA33AA, string2);
		PlayerInfo[playerid][PlayerinBox] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
		if(boxrank <= 2)
		{
			    foreach(Player, i){
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinBox] == 1)
                {
					RewardCalc(i,2000,20000);
					format(string2, sizeof(string2), "{FF0000}[Evento Supervivencia]: {FFFFFF}%s {00EEFF}ha ganado la Supervivencia Premio: {FFFFFF}[$%d]", pName(i), reward);
					SendClientMessageToAll(0x33AA33AA, string2);
					TextDrawHideForAll(ConcText);
        	        new strev[1000];
					format(strev,sizeof(strev),"~b~Sobreviviente: ~n~~w~%s",pName(i));
					TextDrawSetString(GanoText,strev);
					TextDrawShowForAll(GanoText);
					TextDrawShowForAll(GanoText2);
					SetTimer("SacarGano",12000,0);
					GivePlayerMoney(i,reward);
					PlayerInfo[i][PlayerinBox] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SpawnPlayer(i);
					PlayerInfo[i][pScoreEvento]=PlayerInfo[i][pScoreEvento]+ 1;
		            if(PlayerInfo[i][LoggedIn] == 1) SavePlayer(i);
				}
			}
		    boxplaying = 0;
		    boxrank = 0;
		    boxon = 0;
		    arenabox1 = 0;
		    arenabox2 = 0;
		    KillTimer(boxtimer);
		    SBOX = 0;
		    SEVENTO = 0;
		    Pala = 0;
			Dildo = 0;
			Bate = 0;
			Golf = 0;
			Puno = 0;
			Nmm = 0;
			Desert = 0;
			Shotgun = 0;
			Spray = 0;
		    return 1;
		}
		boxrank--;
		new strev[1000];
		format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",boxrank);
		TextDrawSetString(ConcText,strev);
		TextDrawShowForAll(ConcText);
	    } else if(PlayerInfo[playerid][PlayerinHg] == 1) {
		format(string2, sizeof(string2), "{00EEFF}[Evento Hunger Games]: {FFFFFF}%s {FFFF00}ha salido de los Hunger Games {FFFFFF}[Posicion: %d°]", pName(playerid), hgrank);
		SendClientMessageToAll(0x33AA33AA, string2);
		PlayerInfo[playerid][PlayerinHg] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
		if(hgrank <= 2)
		{
			    foreach(Player, i){
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinHg] == 1)
                {
					RewardCalc(i,2000,20000);
					format(string2, sizeof(string2), "{00EEFF}[Evento Hunger]: {FFFFFF}%s {FFFF00}ha ganado los Hunger Games. Premio: {FFFFFF}[$%d]", pName(i), reward);
     				SendClientMessageToAll(0x33AA33AA, string2);
					TextDrawHideForAll(ConcText);
        	        new strev[1000];
					format(strev,sizeof(strev),"~b~Tanker: ~n~~w~%s",pName(i));
					TextDrawSetString(GanoText,strev);
					TextDrawShowForAll(GanoText);
					TextDrawShowForAll(GanoText2);
					SetTimer("SacarGano",12000,0);
					GivePlayerMoney(i,reward);
					SetPlayerScore(playerid, GetPlayerScore(playerid) +10);
					PlayerInfo[playerid][Kills]=PlayerInfo[playerid][Kills]+10;
					PlayerInfo[i][PlayerinHg] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SpawnPlayer(i);
					PlayerInfo[i][pScoreEvento]=PlayerInfo[i][pScoreEvento]+ 1;
		            if(PlayerInfo[i][LoggedIn] == 1) SavePlayer(i);
 				}
			}
		    hgplaying = 0;
		    hgrank = 0;
		    SHG = 0;
		    SEVENTO = 0;
		    hgon = 0;
		    ArenaHG1 = 0;
		    ArenaHG2 = 0;
		    KillTimer(hgtimer);
		    return 1;
		}
		hgrank--;
		new strev[1000];
		format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",hgrank);
		TextDrawSetString(ConcText,strev);
		TextDrawShowForAll(ConcText);
    	}
		else if(PlayerInfo[playerid][PlayerinParkour] == 1)
		{
		format(string2, sizeof(string2), "{FF0000}[Evento Parkour]: {FFFFFF}%s {00EEFF}ha salido del Evento Parkour{FFFFFF}!", pName(playerid));
		SendClientMessageToAll(0x33AA33AA, string2);
		PlayerInfo[playerid][PlayerinParkour] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
		}
		else if(PlayerInfo[playerid][PlayerinLaberinto] == 1)
		{
		format(string2, sizeof(string2), "{FF0000}[Evento Laberinto]: {FFFFFF}%s {00EEFF}ha salido del Evento Laberinto{FFFFFF}!", pName(playerid));
		SendClientMessageToAll(0x33AA33AA, string2);
		PlayerInfo[playerid][PlayerinLaberinto] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
		}
		else if(PlayerInfo[playerid][PlayerinZombie] == 1)
		{
        if(GetPlayerColor(playerid) == 0x0000BBAA)
		{
			format(string2, sizeof(string2), "[Evento Zombie]: {FFFFFF}%s ha salido del Equipo {00EEFF}Humano!", pName(playerid));
			humanplayers = humanplayers-1;
		}
		else
		{
		    format(string2, sizeof(string2), "[Evento Zombie]: {FFFFFF}%s ha salido del Equipo {FF0000}Zombie!", pName(playerid));
		    zombieplayers = zombieplayers-1;
  		}
		SendClientMessageToAll(0x33AA33AA, string2);
		PlayerInfo[playerid][PlayerinZombie] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
		SetPlayerTeam(playerid, 255);
		if(zombierank == 0)
		{
		    zombieplaying = 0;
		    zombierank = 0;
		    zombieon = 0;
		    KillTimer(zombietimer);
		    return 1;
 		}

		if((humanplayers == 0 || zombieplayers == 0) && zombieplaying == 1)
		{
		    if(humanplayers == 0)
		    {
		    	format(string2, sizeof(string2), "[Evento Zombie]: {FF0000}Han ganado los Zombies!");
				TextDrawHideForAll(ConcText);
       	        new strev[1000];
				format(strev,sizeof(strev),"~b~Ganador: ~n~~r~Equipo Zombie");
				TextDrawSetString(GanoText,strev);
				TextDrawShowForAll(GanoText);
				TextDrawShowForAll(GanoText2);
				SetTimer("SacarGano",12000,0);
			}
			else if(zombieplayers == 0)
	   		{
	   		    format(string2, sizeof(string2), "[Evento Zombie]: {00EEFF}Han ganado los Humanos!");
				TextDrawHideForAll(ConcText);
       	        new strev[1000];
				format(strev,sizeof(strev),"~b~Ganador: ~n~~g~Equipo Humano");
				TextDrawSetString(GanoText,strev);
				TextDrawShowForAll(GanoText);
				TextDrawShowForAll(GanoText2);
				SetTimer("SacarGano",12000,0);
			}
			SendClientMessageToAll(0x33AA33AA, string2);
            foreach(Player, i)
			{
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinZombie] == 1)
				{
					PlayerInfo[i][PlayerinZombie] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SetPlayerColor(i,RandomColors[i]);
					SpawnPlayer(i);
					SetPlayerTeam(i, 255);
                    GivePlayerMoney(i,50000);
		            PlayerInfo[i][pScoreEvento]=PlayerInfo[i][pScoreEvento]+ 10;
		            if(PlayerInfo[i][LoggedIn] == 1) SavePlayer(i);
                    SendClientMessage(i,orange,"[Evento Zombie]: Tu Equipo ha Ganado y Ganas $50000 + 10 de Score!!");
 				}
			}
		    zombieplaying = 0;
		    zombierank = 0;
		    zombieon = 0;
		    KillTimer(zombietimer);
		    ArenaZombie1 = 0;
		    ArenaZombie2 = 0;
		    SEVENTO = 0;
		    SZOMBIE = 0;
		    return 1;
		}
		zombierank--;
		new strev[1000];
		format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",zombierank);
		TextDrawSetString(ConcText,strev);
		TextDrawShowForAll(ConcText);
	} else if(PlayerInfo[playerid][PlayerinDerby] == 1)
	{
		format(string2, sizeof(string2), "{FF0000}[Evento Derby]: {FFFFFF}%s {00EEFF}ha salido del Derby {FFFFFF}[Rank: %d]", pName(playerid), derbyrank);
		SendClientMessageToAll(0x33AA33AA, string2);
		CarDeleter(PlayerInfo[playerid][pCar]);
		PlayerInfo[playerid][PlayerinDerby] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
		if(derbyrank <= 2)
		{
			    foreach(Player, i){
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinDerby] == 1)
                {
					RewardCalc(i,2000,20000);
					format(string2, sizeof(string2), "{FF0000}[Evento Derby]: {FFFFFF}%s {00EEFF}ha ganado el evento Derby Premio: {FFFFFF}[$%d] [+10 de Score]", pName(i), reward);
					SendClientMessageToAll(0x33AA33AA, string2);
					TextDrawHideForAll(ConcText);
        	        new strev[1000];
					format(strev,sizeof(strev),"~b~Ganador: ~n~~w~%s",pName(playerid));
					TextDrawSetString(GanoText,strev);
					TextDrawShowForAll(GanoText);
					TextDrawShowForAll(GanoText2);
					SetTimer("SacarGano",12000,0);
					GivePlayerMoney(i,reward);
					SetPlayerScore(playerid, GetPlayerScore(playerid) +10);
					PlayerInfo[playerid][Kills]=PlayerInfo[playerid][Kills]+10;
					PlayerInfo[i][PlayerinDerby] = 0;
					PlayerInfo[i][EnEvento] = 0;
					CarDeleter(PlayerInfo[i][pCar]);
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SpawnPlayer(i);
					PlayerInfo[i][pScoreEvento]=PlayerInfo[i][pScoreEvento]+ 1;
		            if(PlayerInfo[i][LoggedIn] == 1) SavePlayer(i);
				}
			}
			foreach(Player, i)
			{
				if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinDerby] == 1)
				{
					PlayerInfo[i][PlayerinDerby] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SetPlayerColor(i,RandomColors[i]);
					CarDeleter(PlayerInfo[i][pCar]);
					SpawnPlayer(i);
					SetPlayerTeam(i, 255);
				}
			}
			derbyplaying = 0;
			derbyrank = 0;
			derbyon = 0;
			KillTimer(derbytimer);
			KillTimer(CountTimerDerby);
			SDERBY = 0;
			SEVENTO = 0;
			ArenaDerby1 = 0;
			ArenaDerby2 = 0;
		 	for(new i; i != MAX_VEHICLES; i++) if(!EsVehiculoOcupado(i)) SetVehicleToRespawn(i);
		    return 1;
		}
		derbyrank--;
		new strev[1000];
		format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",derbyrank);
		TextDrawSetString(ConcText,strev);
		TextDrawShowForAll(ConcText);
  	}

	if(Minigamer_{playerid} == true)
	{
		if(inProgress > 1)
		{
   			format(string2, sizeof(string2),"{FFFF00}[Evento NoTeMojes]: {FFFFFF}%s {00EEFF}Ha Abandonado el No Te Mojes! {FFFF00}[Rank: %d]", pName(playerid), Iter_Count(_Minigamer));
			SendClientMessageToAll(azulcito, string2);
			Iter_Remove(_Minigamer,playerid);
			PlayerInfo[playerid][EnEvento] = 0;
			Minigamer_{playerid} = false;
			if( Iter_Count(_Minigamer) < 2)
			{
			    foreach(_Minigamer,i) MinigameWinner(i);
			}
		}
		else
		{
		    Iter_Remove(_Minigamer, playerid);
			Minigamer_{playerid} = false;
			PlayerInfo[playerid][EnEvento] = 0;
		}
	}

    if(Joined[playerid] == true)
    {
		JoinCount--;
		Joined[playerid] = false;
		DestroyVehicle(CreatedRaceVeh[playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		CPProgess[playerid] = 0;
		KillTimer(InfoTimer[playerid]);
		#if defined RACE_IN_OTHER_WORLD
		SetPlayerVirtualWorld(playerid, 0);
		DisableRemoteVehicleCollisions(playerid, 0);
		#endif
	}

	new PlayerName[MAX_PLAYER_NAME], str[128];
	GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
	if(ServerInfo[ConnectMessages] == 1)
	{
		switch (reason) {
			case 0:	format(str, sizeof(str), "{FFFF00}[INFO]: %s [%d] {FFFFFF}Dejo El Servidor {FF0000}[Error/Fuera De Linea]", PlayerName, playerid);
			case 1:	format(str, sizeof(str), "{FFFF00}[INFO]: %s [%d] {FFFFFF}Dejo El Servidor {FF0000}[Salió]", PlayerName, playerid);
			case 2:	format(str, sizeof(str), "{FFFF00}[INFO]: %s [%d] {FFFFFF}Dejo El Servidor {FF0000}[Expulsado/Baneado/Adios]", PlayerName, playerid);
		}
		SendClientMessageToAll(grey, str);
	}
	SendClientMessage(playerid,green,"[INFO]: Servidor Cargado con RLadmin v1.9");
 if(PlayerInfo[playerid][LoggedIn] == 1)	{ SavePlayer(playerid); dUserSetINT(PlayerName2(playerid)).("loggedin",0); }
	if(udb_Exists(PlayerName2(playerid))) dUserSetINT(PlayerName2(playerid)).("loggedin",0);
  	PlayerInfo[playerid][LoggedIn] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][AxoneCash] = 0;
	PlayerInfo[playerid][pVip] 	= 0;
	PlayerInfo[playerid][Hide] = 0;
	PlayerInfo[playerid][Jailed] = 0;
	PlayerInfo[playerid][Frozen] = 0;
	PlayerInfo[playerid][Spawned] = 0;
	PlayerInfo[playerid][Kicks] = 0;
	CantidadBombas[playerid] = 0;
	Voted[playerid] = 0;
	Informacion[playerid][AFK] = 0;
    Informacion[playerid][SHH] = 0;


	if(PlayerInfo[playerid][Jailed] == 1) KillTimer( JailTimer[playerid] );
	if(PlayerInfo[playerid][Frozen] == 1) KillTimer( FreezeTimer[playerid] );
	if(ServerInfo[Locked] == 1)	KillTimer( LockKickTimer[playerid] );

	if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
	ADpm[playerid] = 0;

	#if defined ENABLE_SPEC
	for(new x=0; x<MAX_PLAYERS; x++)
	    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid)
   		   	AdvanceSpectate(x);
	#endif
 	return 1;
}
//==============================================================================
forward DelayKillPlayer(playerid);
public DelayKillPlayer(playerid)
{
	SetPlayerHealth(playerid,0.0);
	ForceClassSelection(playerid);
	SetTimerEx("Relogin", 1000,0,"d",playerid);
}
forward Relogin(playerid);
public Relogin(playerid)
{
  SendClientMessage(playerid,yellow,"[INFO]: Logueate Primero!");
  return 1;
}
//========================
//Random posicion de granadadm
	public SetPlayerRandomPosition(playerid)//aca definimos la funcion que forwardeamos anteriormente
	{
	new rand = random(sizeof(PlayerRandomPos)); //este es el nombre del array!
	SetPlayerPos(playerid, PlayerRandomPos[rand][0], PlayerRandomPos[rand][1], PlayerRandomPos[rand][2]); //el 0 del rand quiere decir que lee del X, el primer parametro, el 1 quiere decir Y,osea el segundo parametro y el [2] significa el tercer parametro.. osea el eje Z, rand quiere decir random
	SetPlayerFacingAngle(playerid,PlayerRandomPos[rand][3]); //Si hay un cuarto parametro que es el angulo, Esta linea lo lee
	return 1;
	}
	
		public SetPlayerRandomPositionGR(playerid)//aca definimos la funcion que forwardeamos anteriormente
	{
	new rand = random(sizeof(PlayerRandomPos)); //este es el nombre del array!
	SetPlayerPos(playerid, PlayerRandomPosGR[rand][0], PlayerRandomPosGR[rand][1], PlayerRandomPosGR[rand][2]); //el 0 del rand quiere decir que lee del X, el primer parametro, el 1 quiere decir Y,osea el segundo parametro y el [2] significa el tercer parametro.. osea el eje Z, rand quiere decir random
	SetPlayerFacingAngle(playerid,PlayerRandomPosGR[rand][3]); //Si hay un cuarto parametro que es el angulo, Esta linea lo lee
	return 1;
	}
//==============================================================================
public OnPlayerSpawn(playerid)
{
    	if(PlayerInfo[playerid][Spawned] == 0 && PlayerInfo[playerid][pAdmin] >= 1)
	{
		new RandomS = random(2);
		if(RandomS==0) {SetPlayerPos(playerid, -3523.8030,-2152.0591,4.5256);SetPlayerVirtualWorld(playerid, 15);}
	    else if(RandomS==1) {SetPlayerPos(playerid, -3531.8999,-2167.2041,3.7756);SetPlayerVirtualWorld(playerid, 15);}
	    GameTextForPlayer(playerid,"~b~Bienvenido Admin ~n~~w~Cargando objetos, Espere...",4000,3);
	    SetPlayerFacingAngle(playerid, -185.2800);
		TogglePlayerControllable(playerid, false);
        SetTimerEx("Descongelar", 4000, false, "d", playerid);
        SetPlayerTime(playerid,24,0);
        SetPlayerAttachedObject(playerid,9,19528,2,0.170000,0.000000,0.000000);
	}
	else if(PlayerInfo[playerid][Spawned] == 1 && PlayerInfo[playerid][pAdmin] >= 1)
	{
		new pos = random(sizeof(Spawn));
		SetPlayerPos(playerid,Spawn[pos][0],Spawn[pos][1],Spawn[pos][2]);
		SetPlayerTime(playerid,24,0);
		SetPlayerAttachedObject(playerid,9,19528,2,0.170000,0.000000,0.000000);
		//AntiDeAMX();
	}
	PlayerInfo[playerid][Spawned] = 1;
	if(PlayerInfo[playerid][Spawned] == 1 && PlayerInfo[playerid][pAdmin] == 0)
	{
		new pos = random(sizeof(Spawn));
		SetPlayerPos(playerid,Spawn[pos][0],Spawn[pos][1],Spawn[pos][2]);
		SetPlayerTime(playerid,24,0);
		SetPlayerAttachedObject(playerid,9,19528,2,0.170000,0.000000,0.000000);
		//AntiDeAMX();
	}
	
    if(HoraFelizRL == 1)
	{
	GameTextForPlayer(playerid,"~w~Hora Feliz ~b~Activada", 7000, 3);
	new randomhf = random(3);
	if(randomhf == 0)
	{
		GivePlayerWeapon(playerid, 35, 500);
		SetPlayerTime(playerid,24,0);
		SetPlayerAttachedObject(playerid,9,19528,2);
	}
	else if(randomhf == 1)
	{
		GivePlayerWeapon(playerid, 36, 500);
		SetPlayerTime(playerid,24,0);
		SetPlayerAttachedObject(playerid,9,19528,2);
	}
	else if(randomhf == 2)
	{
		GivePlayerWeapon(playerid, 38, 500);
	}
    GivePlayerWeapon(playerid, 26, 500);
	GivePlayerWeapon(playerid, 16, 500);
	SetPlayerTime(playerid,24,0);
	SetPlayerAttachedObject(playerid,9,19528,2);
	}

	if(HoraFelizRL == 0 && AdminOn[playerid] == 0)
	{
    ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid,24,300);
	GivePlayerWeapon(playerid,26,300);
	GivePlayerWeapon(playerid,31,300);
	GivePlayerWeapon(playerid,32,300);
	GivePlayerWeapon(playerid,34,300);
	SetPlayerTime(playerid,24,0);
	SetPlayerAttachedObject(playerid,9,19528,2);
	}
	
	if(PlayerInfo[playerid][Registered] == 0)
	{
	if(GetPlayerScore(playerid)>=10)
    {
    new dialogstr[100000];
     new pame[MAX_PLAYER_NAME];
     GetPlayerName(playerid, pame, sizeof(pame));
	format(dialogstr,sizeof(dialogstr),"{011AFE}Hola %s \n\n{00FF00}Bienvenido a Revolucion Latina\n\nFelicidades, has conseguido el score requerido para registrarte!!\n ahora ingresa una Contraseña \nPara Guardar Tus Datos (Score, Nivel, Dinero, Experiencia)\n\n{01C8FF}Preparate Para Experimentar La Mayor Diversion", pame), ShowPlayerDialog(playerid,9049,DIALOG_STYLE_PASSWORD, "{FF0000}   || Registro || ~~ RL - Revolucion Latina", dialogstr, "Registrar", "");
	ShowPlayerDialog(playerid,9049,DIALOG_STYLE_PASSWORD, "{FF0000}|| Revolucion Latina FR ||", dialogstr, "Registrar", "");
      PlayerPlaySound(playerid,1058,0.0,0.0,0.0);
      SetPlayerTime(playerid,24,0);
      SetPlayerAttachedObject(playerid,9,19528,2);
      }
      }

    ActualizarInformacion(playerid);
    SetPlayerSkin(playerid,dUserINT(PlayerName2(playerid)).("FavSkin"));
    EstaEnFly[playerid] = 0;
   	SaltarMas[playerid] = 0;
	Saltos[playerid] = 0;
    SoloWW2[playerid]=0;
    balason[playerid] = 1;
    SetPlayerInterior(playerid, 0);
	SetPlayerTime(playerid,24,0);
	SetPlayerAttachedObject(playerid,9,19528,2);

	new strings[100];
    format(strings, 100, "~g~%d/200",GetOnLinePlayers());
    TextDrawSetString(ITextdraw3,strings);
    

    SetPlayerTime(playerid,24,0);

    SetPlayerHealth(playerid,100000);
    TimerDesmadre[playerid] = SetTimerEx("AntiSpawnKill", 5000, 0, "d", playerid);
    SendClientMessage(playerid,COLOR_NARANJA,"{FF0000}[INFO]: {FFFFFF}¡Estás protegido por {00EEFF}5 {FFFFFF}segundos de {00FF00}Anti-SpawnKill{FFFFFF}!");
	StopFly(playerid);
	EstaEnFly[playerid] = 0;
    PlayerInfo[playerid][EnEvento] = 0;
    SetPlayerTime(playerid,24,0);
    SetPlayerAttachedObject(playerid,9,19528,2);
    
	if(PlayerInfo[playerid][PlayerinRhino] == 1) {
	format(string2, sizeof(string2), "{FF0000}[Evento Rhino]: {FFFFFF}%s {00EEFF}ha sido eliminado del Evento Rhino {FFFFFF}[Rank: %d]", pName(playerid), rhinorank);
	SendClientMessageToAll(0x33AA33AA, string2);
	PlayerInfo[playerid][PlayerinRhino] = 0;
	PlayerInfo[playerid][EnEvento] = 0;
	SetPlayerTime(playerid,24,0);
	if(rhinorank <= 2)
	{
		foreach(Player, i)
		{
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinRhino] == 1)
		        {
					RewardCalc(i,2000,20000);
					format(string2, sizeof(string2), "{FF0000}[Evento Rhino]: {FFFFFF}%s {00EEFF}ha ganado el Evento Rhino. Premio: {FFFFFF}[$%d]", pName(i), reward);
					SendClientMessageToAll(0x33AA33AA, string2);
					GivePlayerMoney(i,reward);
					TextDrawHideForAll(ConcText);
        	        new strev[1000];
					format(strev,sizeof(strev),"~b~Ganador: ~n~~w~%s",pName(i));
					TextDrawSetString(GanoText,strev);
					TextDrawShowForAll(GanoText);
					TextDrawShowForAll(GanoText2);
					SetTimer("SacarGano",12000,0);
					PlayerInfo[i][PlayerinRhino] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SpawnPlayer(i);
					SetPlayerTime(i,24,0);
    				PlayerInfo[i][pScoreEvento]=PlayerInfo[i][pScoreEvento]+ 1;
		            if(PlayerInfo[i][LoggedIn] == 1) SavePlayer(i);
				}
		}
	    foreach(Player, i)
		{
			if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinRhino] == 1)
            {
				PlayerInfo[i][PlayerinRhino] = 0;
				PlayerInfo[i][EnEvento] = 0;
				SetPlayerVirtualWorld(i,0);
				SetPlayerInterior(i, 0);
				SpawnPlayer(i);
				SetPlayerTime(i,24,0);
   			}
		}
		rhinoplaying = 0;
		rhinorank = 0;
		rhinoon = 0;
		KillTimer(rhinotimer);
        KillTimer(CountTimerRhino);
		SRHINO = 0;
		SEVENTO = 0;
		ArenaRhino1 = 0;
		ArenaRhino2 = 0;
 		for(new i; i != MAX_VEHICLES; i++) if(!EsVehiculoOcupado(i)) SetVehicleToRespawn(i);
        SpawnPlayer(playerid);
		return 1;
	}
	rhinorank--;
	new strev[1000];
	format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",rhinorank);
	TextDrawSetString(ConcText,strev);
	TextDrawShowForAll(ConcText);
    }

	TextDrawHideForPlayer(playerid, BARRAINICIO1);
	TextDrawHideForPlayer(playerid, Information[playerid]);
	TextDrawHideForPlayer(playerid, BARRAINICIO2);
	TextDrawHideForPlayer(playerid, TEXTOINICIO1);
	TextDrawHideForPlayer(playerid, TEXTOINICIO3);
	TextDrawShowForPlayer(playerid, Textdraw1);
	TextDrawShowForPlayer(playerid, Textdraw2);
	TextDrawShowForPlayer(playerid, Textdraw3);
	TextDrawShowForPlayer(playerid, SkinText);
	TextDrawShowForPlayer(playerid, RevLogo);
	TextDrawShowForPlayer(playerid, RevLogo1);
	TextDrawShowForPlayer(playerid, InvisibleT);
	TextDrawShowForPlayer(playerid, TextDrawColoRamdon);
	
	TextDrawHideForPlayer(playerid,LTextdraw0);
    TextDrawHideForPlayer(playerid,LTextdraw1);
    TextDrawHideForPlayer(playerid,LTextdraw2);
    TextDrawHideForPlayer(playerid,LTextdraw3);
    TextDrawHideForPlayer(playerid,LTextdraw4);
    TextDrawHideForPlayer(playerid,LTextdraw5);
    TextDrawHideForPlayer(playerid,LTextdraw6);
    
    TextDrawShowForPlayer(playerid,ITextdraw0);
    TextDrawShowForPlayer(playerid,ITextdraw1);
    TextDrawShowForPlayer(playerid,ITextdraw2);
    TextDrawShowForPlayer(playerid,ITextdraw3);
    TextDrawShowForPlayer(playerid,ITextdraw4);
    
    SetPlayerTime(playerid,24,0);
    SetPlayerAttachedObject( playerid, 0, 19528, 2, 0.184000,0.000000,0.020000,-18.599983,83.199989,-46.700000,0.469000,0.675999,0.798999 );
    
	if(Minigun[playerid] == 1)
	{
        Minijuego[playerid] = 1;
	    new r = random(sizeof(MINIGUNR));
	    ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 38, 10000);
	    SetPlayerPos(playerid, MINIGUNR[r][0], MINIGUNR[r][1], MINIGUNR[r][2]);
	    SetPlayerFacingAngle(playerid,random(9000));
     	SetPlayerVirtualWorld(playerid, 1);
     	SetPlayerInterior(playerid, 10);
     	SetPlayerArmour(playerid, 100);
     	SetPlayerTime(playerid,24,0);
     	SetPlayerAttachedObject(playerid,9,19528,2);
       	SendClientMessage(playerid, azulcito, "[INFO]: Si ya no quieres estar en los Minijuegos usa /out");
	}
	if(Minigun2[playerid] == 1)
	{
        Minijuego[playerid] = 1;
	    new r = random(sizeof(MINIGUNR2));
	    ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 38, 10000);
	    SetPlayerPos(playerid, MINIGUNR2[r][0], MINIGUNR2[r][1], MINIGUNR2[r][2]);
	    SetPlayerFacingAngle(playerid,random(9000));
     	SetPlayerVirtualWorld(playerid, 1);
     	SetPlayerInterior(playerid, 0);
     	SetPlayerArmour(playerid, 100);
     	SetPlayerTime(playerid,24,0);
     	SetPlayerAttachedObject( playerid, 0, 19528, 2, 0.184000,0.000000,0.020000,-18.599983,83.199989,-46.700000,0.469000,0.675999,0.798999 );
     	SendClientMessage(playerid, azulcito, "[INFO]: Si ya no quieres estar en los Minijuegos usa /out");
	}
	if(Minigun3[playerid] == 1)
	{
        Minijuego[playerid] = 1;
	    new r = random(sizeof(MINIGUNR3));
	    ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 38, 10000);
	    SetPlayerPos(playerid, MINIGUNR3[r][0], MINIGUNR3[r][1], MINIGUNR3[r][2]);
	    SetPlayerFacingAngle(playerid,random(9000));
     	SetPlayerVirtualWorld(playerid, 1);
     	SetPlayerInterior(playerid, 1);
     	SetPlayerArmour(playerid, 100);
     	SetPlayerTime(playerid,24,0);
     	SetPlayerAttachedObject(playerid,9,19528,2);
     	SendClientMessage(playerid, azulcito, "[INFO]: Si ya no quieres estar en los Minijuegos usa /out");
	}
	if(Rocket[playerid] == 1)
	{
        Minijuego[playerid] = 1;
	    new r = random(sizeof(ROCKETR));
	    ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 35, 10000);
	    SetPlayerPos(playerid, ROCKETR[r][0], ROCKETR[r][1], ROCKETR[r][2]);
	    SetPlayerFacingAngle(playerid,random(9000));
     	SetPlayerVirtualWorld(playerid, 1);
     	SetPlayerInterior(playerid, 0);
     	SetPlayerArmour(playerid, 100);
     	SetPlayerTime(playerid,24,0);
     	SetPlayerAttachedObject(playerid,9,19528,2);
     	SendClientMessage(playerid, azulcito, "[INFO]: Si ya no quieres estar en los Minijuegos usa /out");
	}
	if(Rocket2[playerid] == 1)
	{
        Minijuego[playerid] = 1;
	    new r = random(sizeof(ROCKETR2));
		GivePlayerWeapon(playerid, 35, 10000);
	    SetPlayerPos(playerid, ROCKETR2[r][0], ROCKETR2[r][1], ROCKETR2[r][2]);
	    SetPlayerFacingAngle(playerid,random(9000));
     	SetPlayerVirtualWorld(playerid, 1);
     	SetPlayerInterior(playerid, 0);
     	SetPlayerArmour(playerid, 100);
     	SetPlayerTime(playerid,24,0);
    	SetPlayerAttachedObject(playerid,9,19528,2);
     	SendClientMessage(playerid, azulcito, "[INFO]: Si ya no quieres estar en los Minijuegos usa /out");
	}
	if(Mario[playerid] == 1)
	{
        Minijuego[playerid] = 1;
	    new r = random(sizeof(MARIOS));
		GivePlayerWeapon(playerid, 35, 10000);
	    SetPlayerPos(playerid, MARIOS[r][0], MARIOS[r][1], MARIOS[r][2]);
	    SetPlayerFacingAngle(playerid,random(9000));
     	SetPlayerVirtualWorld(playerid, 0);
     	SetPlayerInterior(playerid, 0);
        SetPlayerArmour(playerid, 100);
     	TogglePlayerControllable(playerid,false);
        SetTimerEx("Descongelar", 2000, false, "d", playerid);
        SetPlayerTime(playerid,24,0);
        SetPlayerAttachedObject(playerid,9,19528,2);
     	SendClientMessage(playerid, azulcito, "[INFO]: Si ya no quieres estar en los Minijuegos usa /out");
	}
 	if(Desmadre[playerid] == 1)
	{
        Minijuego[playerid] = 1;
        new r = random(sizeof(DESMADRER));
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 24, 9999);
		GivePlayerWeapon(playerid, 25, 9999);
		GivePlayerWeapon(playerid, 34, 9999);
	    SetPlayerPos(playerid, DESMADRER[r][0], DESMADRER[r][1], DESMADRER[r][2]);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerInterior(playerid, 1);
     	SetPlayerArmour(playerid, 0);
     	SetPlayerTime(playerid,24,0);
     	SetPlayerAttachedObject(playerid,9,19528,2);
     	SendClientMessage(playerid, azulcito, "[INFO]: Si ya no quieres estar en los Minijuegos usa ||>> /out <<||");
	}

    if(PlayerGang[playerid] != 0) SetPlayerColor(playerid, GangInfo[PlayerGang[playerid]][GANG_COLOR]);
    invited[playerid] = 0;

	if(!udb_Exists(PlayerName2(playerid))) {PlayerGang[playerid] = 0;}
	else
	{PlayerGang[playerid] = dUserINT(PlayerName2(playerid)).("clan");}

	if(!udb_Exists(PlayerName2(playerid))) {PlayerLider[playerid] = 0;}
	else
	{PlayerLider[playerid] = dUserINT(PlayerName2(playerid)).("lider");}

	for(new i; i < MAX_PLAYERS; i++)
	{if(!IsPlayerConnected(i)) continue;
	if(PlayerGang[playerid] != PlayerGang[i] && gradar[i] == 1) SetPlayerMarkerForPlayer(i, playerid, (GetPlayerColor(playerid) & 0xFFFFFF00));}

    new playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    SetPlayerScore(playerid, dUserINT(playername).("Kills"));

    if(ServerInfo[Locked] == 1 && PlayerInfo[playerid][AllowedIn] == false && PlayerInfo[playerid][pAdmin] > 9)
	{
		GameTextForPlayer(playerid,"~r~Servidor Bloqueado~n~Debes ingresar la contraseña antes de jugar",4000,3);
		LockKickTimer[playerid] = SetTimerEx("AutoKick", 20000, 0, "i", playerid);
		ShowPlayerDialog(playerid, 9050,DIALOG_STYLE_INPUT, "{FF0000}Server Block", "{FFFFFF}Ingrese la contraseña del Servidor:", "Aceptar", "");

		return 1;
	}

	if(ServerInfo[MustLogin] == 1 && PlayerInfo[playerid][Registered] == 1 && PlayerInfo[playerid][LoggedIn] == 0)
	{
		GameTextForPlayer(playerid,"~r~Debes loguearte antes de jugar!",4000,3);
		SetTimerEx("DelayKillPlayer", 2500,0,"d",playerid);
		SetPlayerTime(playerid,24,0);
		return 1;
	}

		if(ServerInfo[MustRegister] == 1 && PlayerInfo[playerid][Registered] == 0)
	{
		GameTextForPlayer(playerid,"~r~Debes registrarte antes de jugar!",4000,3);
		SetTimerEx("DelayKillPlayer", 2500,0,"d",playerid);
 		SetPlayerTime(playerid,24,0);
		return 1;
	}

	if(PlayerInfo[playerid][Frozen] == 1) {
		TogglePlayerControllable(playerid,false); return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes evitar tu castigo");
	}

	if(PlayerInfo[playerid][Jailed] == 1) {
	    SetTimerEx("JailPlayer",3000,0,"d",playerid); return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes evitar tu castigo");
	}

	if((dUserINT(PlayerName2(playerid)).("UseSkin")) == 1)
		if((PlayerInfo[playerid][pVip] >= 1) && (PlayerInfo[playerid][LoggedIn] == 1))
    		SetPlayerSkin(playerid,(dUserINT(PlayerName2(playerid)).("FavSkin")) );


	if(CS16[playerid] == 1)
	{
		if(GetPlayerTeam(playerid) == 10) // Policia
		{
	        Minijuego[playerid] = 1;
	        CS16[playerid] = 1;
			ResetPlayerWeapons(playerid);
			new r = random(sizeof(POLISPAWN));
	    	RemovePlayerFromVehicle(playerid);
		    SetPlayerPos(playerid, POLISPAWN[r][0], POLISPAWN[r][1], POLISPAWN[r][2]);
			GivePlayerWeapon(playerid, 16, 2);
			GivePlayerWeapon(playerid, 24, 1000);
			GivePlayerWeapon(playerid, 25, 1000);
			GivePlayerWeapon(playerid, 29, 1000);
			GivePlayerWeapon(playerid, 31, 1000);
			vKnockOut[playerid] = 0;
		    SetPlayerFacingAngle(playerid,random(9000));
		    SetPlayerSkin(playerid, 285); // Skin Policia
	     	SetPlayerVirtualWorld(playerid, 5);
	     	SetPlayerInterior(playerid, 0);
	     	SetPlayerHealth(playerid, 100);
	     	SetPlayerArmour(playerid, 100);
	     	SetPlayerColor(playerid,0x0000FFFF); //Policia Azul
	     	GameTextForPlayer(playerid, "~g~Counter Strike~n~~b~Policia", 5000,6);
	     	SendClientMessage(playerid, COLOR_VERDE, "[INFO]: Si ya no quieres estar en los Minijuegos usa /out");
	     	SetPlayerAttachedObject(playerid,9,19528,2);
		}
		else if(GetPlayerTeam(playerid) == 11) // Terrorista
		{
	        Minijuego[playerid] = 1;
	        CS16[playerid] = 1;
			ResetPlayerWeapons(playerid);
		    new r = random(sizeof(TERROSPAWN));
		    RemovePlayerFromVehicle(playerid);
		    SetPlayerPos(playerid, TERROSPAWN[r][0], TERROSPAWN[r][1], TERROSPAWN[r][2]);
  			GivePlayerWeapon(playerid, 16, 2);
			GivePlayerWeapon(playerid, 22, 1000);
			GivePlayerWeapon(playerid, 27, 1000);
			GivePlayerWeapon(playerid, 29, 1000);
			GivePlayerWeapon(playerid, 30, 1000);
			vKnockOut[playerid] = 0;
		    SetPlayerFacingAngle(playerid,random(9000));
		    SetPlayerSkin(playerid, 179); // Skin Terrorista
	     	SetPlayerVirtualWorld(playerid, 5);
	     	SetPlayerInterior(playerid, 0);
	     	SetPlayerHealth(playerid, 100);
	     	SetPlayerArmour(playerid, 100);
	     	SetPlayerColor(playerid,0xFF0000FF); //Terrorista Rojo
	     	GameTextForPlayer(playerid, "~g~Counter Strike~n~~r~Terrorista", 5000,6);
	     	SendClientMessage(playerid, COLOR_VERDE, "[INFO]: Si ya no quieres estar en los Minijuegos usa /out");
	     	SetPlayerAttachedObject(playerid,9,19528,2);
	     	SetPlayerTime(playerid,24,0);
		}
	}
	return 1;
}
//==============================================================================
public OnPlayerRequestClass(playerid, classid)
{
if(GetPVarInt(playerid, "camara") == 0)
	{
	InterpolateCameraPos(playerid, -1393.2162, -1884.1860, 33.7151, -1480.0331, -2125.5796, 6.5057, 9500);
	InterpolateCameraLookAt(playerid, -1393.2216, -1885.1862, 33.6100, -1480.3873, -2126.5144, 6.2856, 9500);
	SetPVarInt(playerid, "camara", 1);
	}
    SetPlayerInterior(playerid, 0);
   	SetPlayerTime(playerid,24,0);
    SetPlayerPos(playerid,-1483.4696, -2133.8362, 5.2409); //Posición del spawn
	SetPlayerFacingAngle(playerid,0.0000); //Angulo hacia donde mira el jugador
	SetPlayerAttachedObject(playerid,9,19528,2,0.170000,0.000000,0.000000);
	TextDrawHideForPlayer(playerid, BARRAINICIO1);
	TextDrawHideForPlayer(playerid, BARRAINICIO2);
	TextDrawShowForPlayer(playerid, TEXTOINICIO1);
	TextDrawHideForPlayer(playerid, TEXTOINICIO3);
	TextDrawHideForPlayer(playerid, SkinText);
	TextDrawHideForPlayer(playerid, RevLogo);
	TextDrawHideForPlayer(playerid, RevLogo1);
	TextDrawShowForPlayer(playerid, InvisibleT);
    TextDrawHideForPlayer(playerid, TextDrawColoRamdon);
	new Animaciones=random(11);
	if (Animaciones==0) {ApplyAnimation(playerid,"DANCING","bd_clap", 2.0, 1, 1, 0, 0, 0);} 
	else if (Animaciones==1) {ApplyAnimation(playerid,"DANCING","bd_clap1", 2.0, 1, 1, 0, 0, 0);} 
	else if (Animaciones==2) {ApplyAnimation(playerid,"DANCING","dance_loop", 2.0, 1, 1, 0, 0, 0);} 
	else if (Animaciones==3) {ApplyAnimation(playerid,"DANCING","DAN_Down_A", 2.0, 1, 1, 0, 0, 0);} 
	else if (Animaciones==4) {ApplyAnimation(playerid,"DANCING","DAN_Left_A",2.0,1,1,1,1,1);} 
	else if (Animaciones==5) {ApplyAnimation(playerid,"DANCING","DAN_Loop_A",2.0,1,1,1,1,1);}
	else if (Animaciones==6) {ApplyAnimation(playerid,"DANCING", "DAN_Right_A", 2.0, 1, 0, 0, 0, 0);} 
	else if (Animaciones==7) {ApplyAnimation(playerid,"DANCING", "DAN_Right_A", 2.0, 1, 0, 0, 0,0);}
	else if (Animaciones==8) {ApplyAnimation(playerid,"DANCING", "dnce_M_b", 2.0, 1, 1, 0, 1,500);}
	else if (Animaciones==9) {ApplyAnimation(playerid,"DANCING", "dnce_M_c", 2.0, 1, 1, 1, 0, 4000);} 
	else if (Animaciones==10){ApplyAnimation(playerid,"DANCING", "dnce_M_e", 2.0, 1, 1, 0, 0, 0);} 
	return 1;
}
//==============================================================================
public OnPlayerDeath(playerid, killerid, reason)
{
    //AntiFlood_Hack( playerid );
    SendDeathMessage(killerid,playerid,reason);
    //PlayAudioStreamForPlayer(playerid, "http://kicauan.files.wordpress.com/2011/01/mario_bross_dies.mp3");
	TextDrawHideForPlayer(playerid, BARRAINICIO1);
	TextDrawHideForPlayer(playerid, BARRAINICIO2);
	TextDrawHideForPlayer(playerid, TEXTOINICIO1);
	TextDrawHideForPlayer(playerid, TEXTOINICIO3);
	//KillTimer(TimerStats[playerid]);
	TextDrawHideForPlayer(playerid, SkinText);
    SetPlayerAttachedObject( playerid, 1, 2896, 1, -0.495770, 0.037304, 0.000000, 69.382827, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
    SetPlayerChatBubble(playerid,"|RL|Eliminado|RIP|",COLOR_ROJO,50,5000);
   	InformacionL[playerid][PAR] = 0;
   	SetPlayerInterior(playerid, 0);
   	SetPlayerVirtualWorld(playerid, 0);
   	KillsG[playerid] = 0;
   	Minijuego[playerid] = 0;
   	Desmadre[playerid] = 0;
   	SetPlayerWantedLevel(playerid, 0);
	KillsG[killerid] ++;
    DBP_Exit(playerid);
    ColUsado[playerid] = 0;
    
    if(PlayerGang[killerid] >= 1)
    {
    new gangid=PlayerGang[killerid];
    GangInfo[gangid][GANG_SCORE] = GangInfo[gangid][GANG_SCORE]+ 1;
	return 1;
    }
    

	
	if(Desmadre[killerid] == 1)
    {
    SetPlayerHealth(killerid,100);
	SendClientMessage(killerid,COLOR_VERDE,"[DESMADRE]: {FFFFFF}Has matado en Desmadre, ¡se ha regeneró tu {FF0000}Vida{FFFFFF}!");
	GameTextForPlayer(killerid,"_~n~_~n~~r~VIDA REGENERADA!",5000,6);
	Minijuego[playerid] = 1;
   	Desmadre[playerid] = 1;
	}

    if(PlayerInfo[playerid][PlayerinTdm] == 1) {
    if(GetPlayerColor(playerid) == 0x0000BBAA)
	    {
	    format(string2, sizeof(string2), "[Evento OP7]: {FFFFFF}%s ha sido eliminado, era del Equipo {001EFF}Azul!", pName(playerid));
	    blueplayers = blueplayers-1;
		} else {
        format(string2, sizeof(string2), "[Evento OP7]: {FFFFFF}%s ha sido eliminado, era del Equipo {FDFF37}Amarillo!", pName(playerid));
        redplayers = redplayers-1;
  		}
		SendClientMessageToAll(0x33AA33AA, string2);
		PlayerInfo[playerid][PlayerinTdm] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
		SetPlayerTeam(playerid, 255);
		if(tdmrank == 0)
		{
		    tdmplaying = 0;
		    tdmrank = 0;
		    tdmon = 0;
		    KillTimer(tdmtimer);
		    return 1;
		}
		if((blueplayers == 0 || redplayers == 0) && tdmplaying == 1)
		{
		    if(blueplayers == 0)
		    {
		    	format(string2, sizeof(string2), "[Evento OP7]: {FDFF37}Ha ganado el Equipo Amarillo!");
				TextDrawHideForAll(ConcText);
                new strev[1000];
				format(strev,sizeof(strev),"~w~Ganador: ~n~~r~Equipo Amarillo");
				TextDrawSetString(GanoText,strev);
				TextDrawShowForAll(GanoText);
				TextDrawShowForAll(GanoText2);
				SetTimer("SacarGano",12000,0);
			}
			else if(redplayers == 0)
	   		{
	   		    format(string2, sizeof(string2), "[Evento OP7]: {001EFF}Ha ganado el Equipo Azul!");
				TextDrawHideForAll(ConcText);
                new strev[1000];
				format(strev,sizeof(strev),"~w~Ganador: ~n~~b~Equipo Azul");
				TextDrawSetString(GanoText,strev);
				TextDrawShowForAll(GanoText);
				TextDrawShowForAll(GanoText2);
				SetTimer("SacarGano",12000,0);
	   		}
			SendClientMessageToAll(0x33AA33AA, string2);
             foreach(Player, i){
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinTdm] == 1)
				{
					PlayerInfo[i][PlayerinTdm] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i,0);
					SetPlayerColor(i,RandomColors[i]);
					SpawnPlayer(i);
					SetPlayerTeam(i, 255);
					PlayerInfo[i][pScoreEvento]=PlayerInfo[i][pScoreEvento]+ 1;
		            if(PlayerInfo[i][LoggedIn] == 1) SavePlayer(i);
					GivePlayerMoney(i,50000);
					SendClientMessage(i,orange,"[Evento OP7]: Has ganado $50000!!");
				}
			}
		    tdmplaying = 0;
		    tdmrank = 0;
		    tdmon = 0;
		    KillTimer(tdmtimer);
		    SOP7 = 0;
		    SEVENTO = 0;
		    RushChallenge = 0;
		    DeathSquare = 0;
		    Otro = 0;
		    return 1;
		    }
		    tdmrank--;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",tdmrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
        } else if(PlayerInfo[playerid][PlayerinSwat] == 1) {
        if(GetPlayerColor(playerid) == 0x0000BBAA)
	    {
	    format(string2, sizeof(string2), "[Evento Revolucion]: {FFFFFF}%s ha sido eliminado del Equipo {00EEFF}Azul", pName(playerid));
	    blueplayers = blueplayers-1;
		} else {
        format(string2, sizeof(string2), "[Evento Revolucion]: {FFFFFF}%s ha sido eliminado del Equipo {FF0000}Rojo!", pName(playerid));
        redplayers = redplayers-1;
  		}
		SendClientMessageToAll(0x33AA33AA, string2);
		PlayerInfo[playerid][PlayerinSwat] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
		SetPlayerTeam(playerid, 255);
		if(swatrank == 0)
		{
		    swatplaying = 0;
		    swatrank = 0;
		    swaton = 0;
		    KillTimer(swattimer);
		    return 1;
		}
		if((blueplayers == 0 || redplayers == 0) && swatplaying == 1)
		{
		    if(blueplayers == 0)
		    {
		    	format(string2, sizeof(string2), "[Evento Revolucion]: {FF0000}Ha ganado el Equipo Rojo!");
				TextDrawHideForAll(ConcText);
                new strev[1000];
				format(strev,sizeof(strev),"~w~Ganador: ~n~~r~Equipo Rojo");
				TextDrawSetString(GanoText,strev);
				TextDrawShowForAll(GanoText);
				TextDrawShowForAll(GanoText2);
				SetTimer("SacarGano",12000,0);
			}
			else if(redplayers == 0)
	   		{
	   		    format(string2, sizeof(string2), "[Evento Revolucion]: {001EFF}Ha ganado el Equipo Azul!");
				TextDrawHideForAll(ConcText);
                new strev[1000];
				format(strev,sizeof(strev),"~w~Ganador: ~n~~b~Equipo Azul");
				TextDrawSetString(GanoText,strev);
				TextDrawShowForAll(GanoText);
				TextDrawShowForAll(GanoText2);
				SetTimer("SacarGano",12000,0);
			}
			SendClientMessageToAll(0x33AA33AA, string2);
             foreach(Player, i){
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinSwat] == 1)
				{
					PlayerInfo[i][PlayerinSwat] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i,0);
					SetPlayerColor(i,RandomColors[i]);
					SpawnPlayer(i);
					SetPlayerTeam(i, 255);
					PlayerInfo[i][pScoreEvento]=PlayerInfo[i][pScoreEvento]+ 10;
		            if(PlayerInfo[i][LoggedIn] == 1) SavePlayer(i);
					GivePlayerMoney(i,50000);
					SendClientMessage(i,orange,"[Evento Revolucion]: Tu Equipo ha Ganado y Ganas $50000 + 10 de Score!!");
				}
			}
		    swatplaying = 0;
		    swatrank = 0;
		    swaton = 0;
		    KillTimer(swattimer);
		    ArenaSwat1 = 0;
		    ArenaSwat2 = 0;
		    SEVENTO = 0;
		    SSWAT = 0;
		    return 1;
		    }
		    swatrank--;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",swatrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
		    } else if(PlayerInfo[playerid][PlayerinRhino] == 1) {
			format(string2, sizeof(string2), "{FF0000}[Evento Rhino]: {FFFFFF}%s {00EEFF}ha sido eliminado del Evento Rhino {FFFFFF}[Rank: %d]", pName(playerid), rhinorank);
			SendClientMessageToAll(0x33AA33AA, string2);
			PlayerInfo[playerid][PlayerinRhino] = 0;
			PlayerInfo[playerid][EnEvento] = 0;
			if(rhinorank <= 2)
			{
				    foreach(Player, i){
					if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinRhino] == 1)
	                {
						RewardCalc(i,2000,20000);
						format(string2, sizeof(string2), "{FF0000}[Evento Rhino]: {FFFFFF}%s {00EEFF}ha ganado el Evento Rhino. Premio: {FFFFFF}[$%d]", pName(i), reward);
						SendClientMessageToAll(0x33AA33AA, string2);
						TextDrawHideForAll(ConcText);
	        	        new strev[1000];
						format(strev,sizeof(strev),"~b~Ganador: ~n~~w~%s",pName(i));
						TextDrawSetString(GanoText,strev);
						TextDrawShowForAll(GanoText);
						TextDrawShowForAll(GanoText2);
						SetTimer("SacarGano",12000,0);
						GivePlayerMoney(i,reward);
						PlayerInfo[i][PlayerinRhino] = 0;
						PlayerInfo[i][EnEvento] = 0;
						SetPlayerVirtualWorld(i,0);
						SetPlayerInterior(i, 0);
						SpawnPlayer(i);
						PlayerInfo[i][pScoreEvento]=PlayerInfo[i][pScoreEvento]+ 1;
			            if(PlayerInfo[i][LoggedIn] == 1) SavePlayer(i);
					}
				}
			    foreach(Player, i)
				{
					if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinRhino] == 1)
		            {
						PlayerInfo[i][PlayerinRhino] = 0;
						PlayerInfo[i][EnEvento] = 0;
						SetPlayerVirtualWorld(i,0);
						SetPlayerInterior(i, 0);
						SpawnPlayer(i);
					}
				}
				rhinoplaying = 0;
				rhinorank = 0;
				rhinoon = 0;
				KillTimer(rhinotimer);
		        KillTimer(CountTimerRhino);
				SRHINO = 0;
				SEVENTO = 0;
				ArenaRhino1 = 0;
				ArenaRhino2 = 0;
		 		for(new i; i != MAX_VEHICLES; i++) if(!EsVehiculoOcupado(i)) SetVehicleToRespawn(i);
			    return 1;
			}
			rhinorank--;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Sobrevivientes: ~w~%d",rhinorank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
            } else if(PlayerInfo[playerid][PlayerinBox] == 1) {
		    format(string2, sizeof(string2), "{FF0000}[Evento Supervivencia]: {FFFFFF}%s {00EEFF}ha sido eliminado de la Supervivencia {FFFFFF}[Rank: %d]", pName(playerid), boxrank);
		    SendClientMessageToAll(0x33AA33AA, string2);
		    PlayerInfo[playerid][PlayerinBox] = 0;
		    PlayerInfo[playerid][EnEvento] = 0;
		    if(boxrank <= 2)
		    {
			    foreach(Player, i){
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinBox] == 1)
				{
					RewardCalc(i,2000,20000);
					format(string2, sizeof(string2), "{FF0000}[Evento Supervivencia]: {FFFFFF}%s {00EEFF}ha ganado la Supervivencia. Premio: {FFFFFF}[$%d]", pName(i), reward);
					SendClientMessageToAll(0x33AA33AA, string2);
					TextDrawHideForAll(ConcText);
        	        new strev[1000];
					format(strev,sizeof(strev),"~r~Superviviente: ~n~~w~%s",pName(i));
					TextDrawSetString(GanoText,strev);
					TextDrawShowForAll(GanoText);
					TextDrawShowForAll(GanoText2);
					SetTimer("SacarGano",12000,0);
					GivePlayerMoney(i,reward);
					PlayerInfo[i][PlayerinBox] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SpawnPlayer(i);
					PlayerInfo[i][pScoreEvento]=PlayerInfo[i][pScoreEvento]+ 1;
		            if(PlayerInfo[i][LoggedIn] == 1) SavePlayer(i);
				}
			}
		    boxplaying = 0;
		    boxrank = 0;
		    boxon = 0;
            arenabox1 = 0;
            arenabox2 = 0;
		    KillTimer(boxtimer);
		    SBOX = 0;
		    SEVENTO = 0;
		    Pala = 0;
			Dildo = 0;
			Bate = 0;
			Golf = 0;
			Puno = 0;
			Nmm = 0;
			Desert = 0;
			Shotgun = 0;
			Spray = 0;
		    return 1;
		}
		boxrank--;
		new strev[1000];
		format(strev,sizeof(strev),"~b~Sobrevivientes: ~w~%d",boxrank);
		TextDrawSetString(ConcText,strev);
		TextDrawShowForAll(ConcText);
	    } else if(PlayerInfo[playerid][PlayerinHg] == 1) {
		format(string2, sizeof(string2), "{00EEFF}[Evento Hunger Games]: {FFFFFF}%s {FFFF00}ha sido eliminado de los Hunger Games {FFFFFF}[Posicion: %d°]", pName(playerid), hgrank);
		SendClientMessageToAll(0x33AA33AA, string2);
		PlayerInfo[playerid][PlayerinHg] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
		if(hgrank <= 2)
		{
			    foreach(Player, i){
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinHg] == 1)
                {
					RewardCalc(i,2000,20000);
					format(string2, sizeof(string2), "{00EEFF}[Evento Hunger]: {FFFF00}%s ha ganado los Hunger Games. Premio: {FFFFFF}[$%d]", pName(killerid), reward);
                    SendClientMessageToAll(0x33AA33AA, string2);
					TextDrawHideForAll(ConcText);
        	        new strev[1000];
					format(strev,sizeof(strev),"~r~Ganador: ~n~~w~%s",pName(killerid));
					TextDrawSetString(GanoText,strev);
					TextDrawShowForAll(GanoText);
					TextDrawShowForAll(GanoText2);
					SetTimer("SacarGano",12000,0);
					GivePlayerMoney(i,reward);
					SetPlayerScore(playerid, GetPlayerScore(playerid) +10);
					PlayerInfo[playerid][Kills]=PlayerInfo[playerid][Kills]+10;
					PlayerInfo[i][PlayerinHg] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SpawnPlayer(i);
					PlayerInfo[i][pScoreEvento]=PlayerInfo[i][pScoreEvento]+ 1;
		            if(PlayerInfo[i][LoggedIn] == 1) SavePlayer(i);
				}
			}
		    hgplaying = 0;
		    hgrank = 0;
		    hgon = 0;
		    SEVENTO = 0;
		    SHG = 0;
		    ArenaHG1 = 0;
		    ArenaHG2 = 0;
		    KillTimer(hgtimer);
		    return 1;
		}
		hgrank--;
		new strev[1000];
		format(strev,sizeof(strev),"~b~Sobrevivientes: ~w~%d",hgrank);
		TextDrawSetString(ConcText,strev);
		TextDrawShowForAll(ConcText);
        } else if(PlayerInfo[playerid][PlayerinParkour] == 1) {
		format(string2, sizeof(string2), "{FF0000}[Evento Parkour]: {FFFFFF}%s {00EEFF}ha sido eliminado del Evento Parkour{FFFFFF}!", pName(playerid));
		SendClientMessageToAll(0x33AA33AA, string2);
		PlayerInfo[playerid][PlayerinParkour] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
	    } else if(PlayerInfo[playerid][PlayerinLaberinto] == 1) {
		format(string2, sizeof(string2), "{FF0000}[Evento Laberinto]: {FFFFFF}%s {00EEFF}ha sido eliminado del Evento Laberinto{FFFFFF}!", pName(playerid));
		SendClientMessageToAll(0x33AA33AA, string2);
		PlayerInfo[playerid][PlayerinLaberinto] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
	    } else if(PlayerInfo[playerid][PlayerinZombie] == 1) {
        if(GetPlayerColor(playerid) == 0x0000BBAA)
	    {
		    format(string2, sizeof(string2), "[Evento Zombie]: {FFFFFF}%s ha sido eliminado del Equipo {00EEFF}Humano", pName(playerid));
		    humanplayers = humanplayers-1;
		}
		else
		{
	        format(string2, sizeof(string2), "[Evento Zombie]: {FFFFFF}%s ha sido eliminado del Equipo {FF0000}Zombie!", pName(playerid));
	        zombieplayers = zombieplayers-1;
  		}
		SendClientMessageToAll(0x33AA33AA, string2);
		PlayerInfo[playerid][PlayerinZombie] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
		SetPlayerTeam(playerid, 255);
		if(zombierank == 0)
		{
		    zombieplaying = 0;
		    zombierank = 0;
		    zombieon = 0;
		    KillTimer(zombietimer);
		    return 1;
		}
		if((humanplayers == 0 || zombieplayers == 0) && zombieplaying == 1)
		{
		    if(humanplayers == 0)
		    {
		    	format(string2, sizeof(string2), "[Evento Zombie]: {FF0000}Han ganado los Zombies!");
				TextDrawHideForAll(ConcText);
	   	        new strev[1000];
				format(strev,sizeof(strev),"~b~Ganador: ~n~~w~Equipo Zombie");
				TextDrawSetString(GanoText,strev);
				TextDrawShowForAll(GanoText);
				TextDrawShowForAll(GanoText2);
				SetTimer("SacarGano",12000,0);
	   		}
   			else if(zombieplayers == 0)
	   		{
	   		    format(string2, sizeof(string2), "[Evento Zombie]: {00EEFF}Han ganado los Humanos!");
				TextDrawHideForAll(ConcText);
	            new strev[1000];
				format(strev,sizeof(strev),"~b~Ganador: ~n~~w~Equipo Humano");
				TextDrawSetString(GanoText,strev);
				TextDrawShowForAll(GanoText);
				TextDrawShowForAll(GanoText2);
				SetTimer("SacarGano",12000,0);
	   		}
			SendClientMessageToAll(0x33AA33AA, string2);
			foreach(Player, i)
			{
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinZombie] == 1)
				{
					PlayerInfo[i][PlayerinZombie] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i,0);
					SetPlayerColor(i,RandomColors[i]);
					SpawnPlayer(i);
					SetPlayerTeam(i, 255);
					PlayerInfo[i][pScoreEvento]=PlayerInfo[i][pScoreEvento]+ 10;
		            if(PlayerInfo[i][LoggedIn] == 1) SavePlayer(i);
					GivePlayerMoney(i,50000);
					SendClientMessage(i,orange,"[Evento Zombie]: Tu Equipo ha Ganado y Ganas $50000 + 10 de Score!!");
				}
			}
		    zombieplaying = 0;
		    zombierank = 0;
		    zombieon = 0;
		    SEVENTO = 0;
			SZOMBIE = 0;
		    KillTimer(zombietimer);
		    ArenaZombie1 = 0;
		    ArenaZombie2 = 0;
		    return 1;
   		}
	    zombierank--;
		new strev[1000];
		format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",zombierank);
		TextDrawSetString(ConcText,strev);
		TextDrawShowForAll(ConcText);
   	} else if(PlayerInfo[playerid][PlayerinDerby] == 1)
	{
		format(string2, sizeof(string2), "{FF0000}[Evento Derby]: {FFFFFF}%s {00EEFF}ha sido Eliminado del Derby {FFFFFF}[Rank: %d]", pName(playerid), derbyrank);
		SendClientMessageToAll(0x33AA33AA, string2);
		CarDeleter(PlayerInfo[playerid][pCar]);
		PlayerInfo[playerid][PlayerinDerby] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
		if(derbyrank <= 2)
		{
		    foreach(Player, i)
			{
				if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinDerby] == 1)
				{
					RewardCalc(i,2000,20000);
					format(string2, sizeof(string2), "{FF0000}[Evento Derby]: {FFFFFF}%s {00EEFF}ha ganado el evento Derby Premio: {FFFFFF}[$%d] [+10 de Score]", pName(i), reward);
					SendClientMessageToAll(0x33AA33AA, string2);
					TextDrawHideForAll(ConcText);
	                new strev[1000];
					format(strev,sizeof(strev),"~b~Ganador: ~n~~w~%s",pName(i));
					TextDrawSetString(GanoText,strev);
					TextDrawShowForAll(GanoText);
					TextDrawShowForAll(GanoText2);
					SetTimer("SacarGano",12000,0);
					GivePlayerMoney(i,reward);
					SetPlayerScore(i, GetPlayerScore(i) +10);
					PlayerInfo[i][Kills]=PlayerInfo[i][Kills]+10;
					PlayerInfo[i][PlayerinDerby] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					CarDeleter(PlayerInfo[i][pCar]);
					SpawnPlayer(i);
					PlayerInfo[i][pScoreEvento]=PlayerInfo[i][pScoreEvento]+ 1;
		            if(PlayerInfo[i][LoggedIn] == 1) SavePlayer(i);
				}
			}
			foreach(Player, i)
			{
				if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinDerby] == 1)
				{
					PlayerInfo[i][PlayerinDerby] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SetPlayerColor(i,RandomColors[i]);
					CarDeleter(PlayerInfo[i][pCar]);
					SpawnPlayer(i);
					SetPlayerTeam(i, 255);
				}
			}
			derbyplaying = 0;
			derbyrank = 0;
			derbyon = 0;
			KillTimer(derbytimer);
			KillTimer(CountTimerDerby);
			SDERBY = 0;
			SEVENTO = 0;
			ArenaDerby1 = 0;
			ArenaDerby2 = 0;
		 	for(new i; i != MAX_VEHICLES; i++) if(!EsVehiculoOcupado(i)) SetVehicleToRespawn(i);
			return 1;
		}
		derbyrank--;
		new strev[1000];
		format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",derbyrank);
		TextDrawSetString(ConcText,strev);
		TextDrawShowForAll(ConcText);
   	}


    if(Minigamer_{playerid} == true)
	{
		if(inProgress > 1)
		{
   			format(string2, sizeof(string2), "{FFFF00}[Evento NoTeMojes]: {FFFFFF}%s {00EEFF}ha muerto en el No Te Mojes! {FFFF00}[Rank %d]",pName(playerid),Iter_Count(_Minigamer));
			SendClientMessageToAll(azulcito,string2);
			Iter_Remove(_Minigamer,playerid);
			Minigamer_{playerid} = false;
			PlayerInfo[playerid][EnEvento] = 0;
			if( Iter_Count(_Minigamer ) < 2)
			{
			    foreach(_Minigamer,i) MinigameWinner(i);
			}
		}
		else
		{
			SendClientMessage(playerid, red, "[INFO]: Has muerto en el No Te Mojes!");
			Iter_Remove(_Minigamer,playerid);
			Minigamer_{playerid} = false;
			PlayerInfo[playerid][EnEvento] = 0;
		}
	}

if(killerid != INVALID_PLAYER_ID)
{
new name[MAX_PLAYERS];
new WeaponName[35],NombreMuerto[MAX_PLAYER_NAME],NombreKiller[MAX_PLAYER_NAME],string20[500],string21[500];
GetPlayerName(killerid, name, sizeof(name));
format(string2, sizeof(string2),"%s", name);
TextDrawSetString(Death0[playerid],string2);
TextDrawShowForPlayer(playerid, Death0[playerid]);
TextDrawShowForPlayer(playerid, Death1);
SetTimerEx("HideMessageDeath", 4000, 0, "i", playerid);
GetWeaponName(reason,WeaponName,sizeof(WeaponName));
GetPlayerName(playerid,NombreMuerto,sizeof(NombreMuerto));
GetPlayerName(killerid,NombreKiller,sizeof(NombreKiller));
format(string20,sizeof(string20),"[INFO]: {0000FF}Has matado a %s con una %s",NombreMuerto,WeaponName);
format(string21,sizeof(string21),"[INFO]: {FF0000}Te ha matado %s con una %s",NombreKiller,WeaponName);
SendClientMessage(killerid,-1,string20);
SendClientMessage(playerid,-1,string21);

if(Cantidad[playerid] > 0 && killerid != playerid)
{
        new string[1000];
        format(string, sizeof(string), "[RECOMPENSA]: {FFFFFF}%s ha Recibido la recompensa de $%i por Matar a {FF0000}%s", pNombre(killerid), Cantidad[playerid], pNombre(playerid));
        SendClientMessageToAll(orange, string);
        GivePlayerMoney(killerid, Cantidad[playerid]);
        Cantidad[playerid] = 0;
}

switch(KillsG[killerid])
{
case 1:
{
GameTextForPlayer(killerid,KSMensajes[random(sizeof(KSMensajes))], 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 2:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~r~-> ~w~Segundo asesinato ~r~<- ~n~~g~Racha: x2", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 3:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Es aceptable ~b~<- ~n~~g~Racha: x3", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 4:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Nada mal... ~b~<- ~n~~g~Racha: x4", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 5:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Muy bien ~b~<- ~n~~g~Racha: x5", 4000, 6);
new str5[1500];
GetPlayerName(killerid, pname, sizeof(pname));
format(str5, sizeof(str5), "{0EDFB9}|-:-| {F5970C}Asesino suelto {0EDFB9}|-:-| {00FF00}%s {FFFFFF}hizo ¡5 Asesinatos! {0EDFB9}[{EE1257}Obtuvo: $10000 más 5 Score{0EDFB9}]{FFFFFF}.", pname);
SendClientMessageToAll(red, str5);
SetPlayerScore(killerid, GetPlayerScore(killerid)+5);
PlayerInfo[killerid][Kills]=PlayerInfo[killerid][Kills]+5;
SavePlayer(killerid);
GivePlayerMoney(killerid,10000);
}
case 6:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Excelente ~b~<-  ~n~~g~Racha: x6", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 7:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Semi Profesional ~b~<- ~n~~g~Racha: x7", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 8:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Aun no llegas a profesional ~b~<- ~n~~g~Racha: x8", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 9:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Maravilloso ~b~<- ~n~~g~Racha: x9", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 10:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Profesional principante ~b~<- ~n~~g~Racha: x10", 4000, 6);
new str5[1500];
GetPlayerName(killerid, pname, sizeof(pname));
format(str5, sizeof(str5), "{0EDFB9}|-:-| {F5970C}Asesino suelto {0EDFB9}|-:-| {00FF00}%s {FFFFFF}hizo ¡10 Asesinatos! {0EDFB9}[{EE1257}$15000 + 10 Score{0EDFB9}]{FFFFFF}.", pname);
SendClientMessageToAll(red, str5);
SetPlayerScore(killerid, GetPlayerScore(killerid)+10);
PlayerInfo[killerid][Kills]=PlayerInfo[killerid][Kills]+10;
SavePlayer(killerid);
GivePlayerMoney(killerid,15000);
}
case 11:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Sigue asi... ~b~<- ~n~~g~Racha: x11", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 12:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Todavia no mueres? ~b~<- ~n~~g~Racha: x12", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 13:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Aun te falta para ser Dios~b~<- ~n~~g~Racha: x13", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 14:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Vamos, que ya llegas ~b~<- ~n~~g~Racha: x14", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 15:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Profesional capacitado! ~b~<- ~n~~g~Racha: x15", 4000, 6);
new str5[1500];
GetPlayerName(killerid, pname, sizeof(pname));
format(str5, sizeof(str5), "{0EDFB9}|-:-| {F5970C}Asesino suelto {0EDFB9}|-:-| {00FF00}%s {FFFFFF}hizo ¡10 Asesinatos! {0EDFB9}[{EE1257}$20000 + 15 Score{0EDFB9}]{FFFFFF}.", pname);
SendClientMessageToAll(red, str5);
SetPlayerScore(killerid, GetPlayerScore(killerid)+15);
PlayerInfo[killerid][Kills]=PlayerInfo[killerid][Kills]+15;
SavePlayer(killerid);
GivePlayerMoney(killerid,20000);
}
case 16:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~OWNED novato~b~<- ~n~~g~Racha: x16", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 17:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~OWNED capacitado ~b~<- ~n~~g~Racha: x17", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 18:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Excelente, llegaste a Dios ~b~<- ~n~~g~Racha: x18", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 19:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Jefe del servidor ~b~<- ~n~~g~Racha: x19", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 20:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Eres Inmortal ~b~<- ~n~~g~Racha: x20", 4000, 6);
new str5[1500];
GetPlayerName(killerid, pname, sizeof(pname));
format(str5, sizeof(str5), "{0EDFB9}|-:-| {F5970C}Asesino suelto {0EDFB9}|-:-| {00FF00}%s {FFFFFF}hizo ¡20 Asesinatos! {0EDFB9}[{EE1257}$25000 + 20 Score{0EDFB9}]{FFFFFF}.", pname);
SendClientMessageToAll(red, str5);
SetPlayerScore(killerid, GetPlayerScore(killerid)+20);
PlayerInfo[killerid][Kills]=PlayerInfo[killerid][Kills]+20;
SavePlayer(killerid);
GivePlayerMoney(killerid,25000);
}
case 21:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~No puedes morir ya ~b~<- ~n~~g~Racha: x21", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 22:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Desactiva el God ~b~<- ~n~~g~Racha: x22", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 23:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Que tipo de armas usas? ~b~<- ~n~~g~Racha: x23", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 24:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~CTM PARA! ~b~<- ~n~~g~Racha: x24", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 25:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Ojala te baneen ~b~<- ~n~~g~Racha: x25", 4000, 6);
new str5[1500];
GetPlayerName(killerid, pname, sizeof(pname));
format(str5, sizeof(str5), "{0EDFB9}|-:-| {F5970C}Asesino suelto {0EDFB9}|-:-| {00FF00}%s {FFFFFF}hizo ¡25 Asesinatos! {0EDFB9}[{EE1257}$30000 + 25 Score{0EDFB9}]{FFFFFF}.", pname);
SendClientMessageToAll(red, str5);
SetPlayerScore(killerid, GetPlayerScore(killerid)+25);
PlayerInfo[killerid][Kills]=PlayerInfo[killerid][Kills]+25;
SavePlayer(killerid);
GivePlayerMoney(killerid,30000);
}
case 26:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Experto en la zona ~b~<- ~n~~g~Racha: x26", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 27:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Wow!, ya casi a los 30 ~b~<- ~n~~g~Racha: x27", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 28:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Pasa jak por inbox ~b~<- ~n~~g~Racha: x28", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 29:
{
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~A los 30, F8! ~b~<- ~n~~g~Racha: x29", 4000, 6);
GivePlayerMoney(killerid,1000);
}
case 30:
{
new str5[1500];
GetPlayerName(killerid, pname, sizeof(pname));
format(str5, sizeof(str5), "{0EDFB9}|-:-| {F5970C}Asesino suelto {0EDFB9}|-:-| {00FF00}%s {FFFFFF}hizo ¡30 Asesinatos! {0EDFB9}[{EE1257}$1000000 + 30 Score{0EDFB9}]{FFFFFF}.", pname);
SendClientMessageToAll(red, str5);
GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~b~-> ~w~Dios del servidor! ~b~<- ~n~~g~x30", 4000, 6);
SendClientMessage(killerid, red, "{0EDFB9}|-:-| Revolución Latina {0EDFB9}|-:-| {FFFFFF} Un profesional nunca se rinde. ");
SendClientMessage(killerid, red, "||Atención||: Llegaste al tope de rachas, ganaste 1.000.000 de dólares más 30 de score");
SendClientMessage(killerid, red, "||Atención||: {FFFFFF}Es la hora de empezar desde 0. Logra 30 asesinatos para ganar otro premio.");
SendClientMessage(killerid, red, "{0EDFB9}|-:-| Revolución Latina {0EDFB9}|-:-|{FFFFFF} ¡Repetir las 30 rachas es de profesionales!. ");
SetPlayerScore(killerid, GetPlayerScore(killerid)+30);
PlayerInfo[killerid][Kills]=PlayerInfo[killerid][Kills]+30;
GivePlayerMoney(killerid, 100000);
SavePlayer(killerid);
KillsG[killerid] = 0;
}
}
}

if(PlayerInfoE[playerid][NoEvento] >= 1)
	{
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		PlayerInfoE[playerid][NoEvento] = 0;
		if(PlayerInfoE[playerid][Carro] >= 1)
		{
			DestroyVehicle(PlayerInfoE[playerid][Carro]);
			PlayerInfoE[playerid][Carro] = 0;
		}
	}

if (EnDuelo[playerid] == 1 && EnDuelo[killerid] == 1)
 	{
		for (new i=1; i<= ARENAS; i++)
		{
			if ((Duelos[i][DesaId] == playerid || Duelos[i][DesaId] == killerid) && (Duelos[i][DesafiadoId] == playerid) || (Duelos[i][DesafiadoId] == killerid))
			{
			    new str[2000];
			    new Float:healthkiller, Float:armourkiller;
	            GetPlayerHealth(killerid,healthkiller);
                GetPlayerArmour(killerid,armourkiller);

                if(healthkiller > 90.0 && armourkiller > 90.0)
	  	        {
	    	    format(str, sizeof(str),"{00EEFF}[DUELOSRL]: {FFFFFF}%s {00FF00}Obtiene {FF0000}OWNED {00FF00}contra %s [Vida %0.0f Armadura %0.0f]",PlayerName2(killerid),PlayerName2(playerid),healthkiller,armourkiller);
	      	    SendClientMessageToAll(azul_claro, str);
	      	    format(str,sizeof(str),"{FF0000}[DUELOSRL]: {00EEFF}Has perdido el Duelo contra {FFFFFF}%s, {FF0000}Suerte en la próxima...",PlayerName2(killerid));
			    SendClientMessage(playerid,COLOR_DUELO,str);
			    format(str,sizeof(str),"{FF0000}[DUELOSRL]: {00EEFF}Has ganado el Duelo contra {FFFFFF}%s, {00FF00}Felicidades!!",PlayerName2(playerid));
		   	    SendClientMessage(killerid,COLOR_DUELO,str);
                EnDuelo[playerid] = 0;
				EnDuelo[killerid] = 0;
				Duelos[i][DesafiadoId] = -1;
   				Duelos[i][DesaId] = -1;
    			Duelos[i][ArmasId] = -1;
				Duelos[i][Libre] = 0;
				PlayerInfo[killerid][ScoreDueloWin]=PlayerInfo[killerid][ScoreDueloWin]+ 1;
				ActualizarInformacion(killerid);
		        PlayerInfo[playerid][ScoreDueloLose]=PlayerInfo[playerid][ScoreDueloLose]+ 1;
		        ActualizarInformacion(playerid);
		        SetPlayerVirtualWorld(killerid,0);
		        SetPlayerVirtualWorld(playerid,0);
			    return 1;
	   	        }
	   	        else
				{

                format(str,sizeof(str),"{00EEFF}[DUELOSRL]: {FFFFFF}%s {FF0000}ha Ganado el Duelo contra {FFFFFF}%s [Vida: %0.0f Chaleco: %0.0f]",PlayerName2(killerid),PlayerName2(playerid), healthkiller, armourkiller);
			    SendClientMessageToAll(azul_claro,str);
			    format(str,sizeof(str),"{00FF00}[DUELOSRL]: {00EEFF}Has perdido el Duelo contra {FFFFFF}%s, {FF0000}Suerte en la próxima...",PlayerName2(killerid));
			    SendClientMessage(playerid,COLOR_DUELO,str);
			    format(str,sizeof(str),"{FF0000}[DUELOSRL]: {00EEFF}Has ganado el Duelo contra {FFFFFF}%s, {00FF00}Felicidades!!",PlayerName2(playerid));
		   	    SendClientMessage(killerid,COLOR_DUELO,str);
			 	EnDuelo[playerid] = 0;
				EnDuelo[killerid] = 0;
				Duelos[i][DesafiadoId] = -1;
   				Duelos[i][DesaId] = -1;
    			Duelos[i][ArmasId] = -1;
				Duelos[i][Libre] = 0;
				PlayerInfo[killerid][ScoreDueloWin]=PlayerInfo[killerid][ScoreDueloWin]+ 1;
				ActualizarInformacion(killerid);
		        PlayerInfo[playerid][ScoreDueloLose]=PlayerInfo[playerid][ScoreDueloLose]+ 1;
		        ActualizarInformacion(playerid);
		        SetPlayerVirtualWorld(killerid,0);
		        SetPlayerVirtualWorld(playerid,0);
			    switch (i)
			    {
					case 1: {SpawnPlayer(killerid);}
					case 2: {SpawnPlayer(killerid);}
					case 3: {SpawnPlayer(killerid);}
					case 4: {SpawnPlayer(killerid);}
					case 5: {SpawnPlayer(killerid);}
					case 6: {SpawnPlayer(killerid);}
				}
				for (new j=0; j<= MAX_PLAYERS; j++)
				{
				    if (ViendoDuelo[j] == i)
	    			{
	    			    new str2[70];
		        		format(str2,sizeof(str2),"~r~%s ~w~es el ganador del duelo",PlayerName2(killerid));
						GameTextForPlayer(j,str2,5000,0);
						ViendoDuelo[j] =-1;
						SetPlayerVirtualWorld(j,0);
	    			}
				}

				return 1;
			}
		}
	}
	}
	if (EnDuelo[playerid] == 1 && EnDuelo[killerid] == 0)
	{
	}

	if(PlayerGang[killerid] == PlayerGang[playerid])
	{
	GivePlayerMoney(killerid, -1000);
	GameTextForPlayer(killerid, "~r~No seas tan puto, mates a los tuyos XD!", 3000, 3);
	}

    	new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
	if(XDeaths[playerid] == 0)
        {
           LastDeath[playerid] = gettime();
        }
        XDeaths[playerid]++;
        if(XDeaths[playerid] == 5)
        {
                if((gettime() - LastDeath[playerid]) <= 5)
                {
        format(string2, sizeof(string2), "[ANTI-CHEAT]: %s [%i] a fue baneado automáticamente [Razón: FakeDeath Noob]", pame,playerid);
	    SendClientMessageToAll(red, string2);
	    ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Revolucion Latina","{FFFFFF} Has sido Baneado del Servidor \n\n{FF0000}Razón: {FFFFFF}FakeDeath Noob", "Aceptar", "") ;
	    printf(string2);
	    #if defined Guardar_Logs
	    GuardarAntiBot("FakeDeath",string2);
	    #endif
	    SetTimerEx("BanearPlayer", 50, 0, "i", playerid);
                }else
                if((gettime() - LastDeath[playerid]) > 5)
                {
                        XDeaths[playerid]=0;
                }
        }
        
    if(Joined[playerid] == true)
    {
		JoinCount--;
		Joined[playerid] = false;
        PlayerInfo[playerid][GodCar] = 0;
 	    ramped[playerid] = 0;
		DestroyVehicle(CreatedRaceVeh[playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		CPProgess[playerid] = 0;
		KillTimer(InfoTimer[playerid]);
		#if defined RACE_IN_OTHER_WORLD
		SetPlayerVirtualWorld(playerid, 0);
		DisableRemoteVehicleCollisions(playerid, 0);
		SpawnPlayer(playerid);
		SendClientMessage(playerid,red,"[INFO]: Has salido del vehículo por lo tanto has sido sacado de la Carrera");
		#endif
	}

	if(PlayerInfo[playerid][LoggedIn] == 1)
	SavePlayer(playerid);
	#if defined USE_STATS
    SetPlayerScore(playerid,GetPlayerScore(playerid)-1);
    PlayerInfo[playerid][Kills] = GetPlayerScore(playerid);
    PlayerInfo[playerid][Deaths]++;
    PlayerInfo[playerid][Experiencia]--;
    #endif
    ActualizarInformacion(playerid);

	if(IsPlayerConnected(killerid) && killerid != INVALID_PLAYER_ID)
	{
		#if defined USE_STATS
		PlayerInfo[killerid][Kills]++;
		SetPlayerScore(killerid,GetPlayerScore(killerid)+1);
    	PlayerInfo[killerid][Kills] = GetPlayerScore(killerid);
		PlayerInfo[killerid][Experiencia]++;
		#endif
		ActualizarInformacion(playerid);

	}
	#if defined ENABLE_SPEC
	for(new x=0; x<MAX_PLAYERS; x++)
	    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid)
	       AdvanceSpectate(x);
	#endif
		
  if(reason == 50 || reason == 49)
 {
    new name[24], str[1000];
    GetPlayerName(killerid, name, 24);
    format(str, 128, "*** %s [%d] ha Sido Suicidado [Razón]: {FF0000}Matar en Helicóptero o Hacer CarKill", name, killerid);
    SendClientMessageToAll(COLOR_YELLOW, str);
    SetPlayerHealth(killerid,0);
	}

     if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(killerid) == PLAYER_STATE_DRIVER && (reason == WEAPON_TEC9 || reason == WEAPON_UZI || reason == WEAPON_MP5) && GetDistanceBetweenPlayers(playerid,killerid) < 100)
	{
	switch(warnings[killerid])
	{
	    case 0:
	    {
	        SendClientMessage(killerid, COLOR_AMARILLO, "[Advertencia]: No mates con Drive By 1/3 Sanción: Muerte");
	        SetPlayerHealth(killerid, 0);
	        warnings[killerid]++;
			SetPlayerScore(killerid,GetPlayerScore(killerid)-1);
			PlayerInfo[killerid][Kills]=PlayerInfo[killerid][Kills]-1;
	    }
	    case 1:
	    {
	        SendClientMessage(killerid, COLOR_AMARILLO, "[Advertencia]: No mates con Drive By 2/3. Sanción: Muerte, Próximo Kick");
	        SetPlayerHealth(killerid, 0);
	        warnings[killerid]++;
			SetPlayerScore(killerid,GetPlayerScore(killerid)-1);
			PlayerInfo[killerid][Kills]=PlayerInfo[killerid][Kills]-1;
	    }
	    case 2:
	    {
			SetPlayerScore(killerid,GetPlayerScore(killerid)-1);
			PlayerInfo[killerid][Kills]=PlayerInfo[killerid][Kills]-1;
	        SendClientMessage(killerid, COLOR_AMARILLO, "[Advertencia]: No mates con Drive By 3/3. Sanción: Kick");
 			new PlayerName[MAX_PLAYER_NAME], str[100];
		    GetPlayerName(killerid, PlayerName, sizeof(PlayerName));
		    format(str, sizeof(str), "[INFO]: {FFFFFF}%s [%d] ha sido Kickeado del Servidor. [Razón: Abuso de Drive By][Adv.: 3/3]",PlayerName,killerid);
		    SendClientMessageToAll(ERROR_COLOR, str);
		    ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Revolucion Latina","{FFFFFF} Has sido Kickeado del Servidor \n\n{FF0000}Razón: {FFFFFF}Abuso de Drive By", "Aceptar", "") ;
		    SetTimerEx("KickearPlayer", 50, 0, "i", killerid);
	    }
	}
    }
	return 1;
}
//==============================================================================
public SubidaDeNiveles()
{
    for(new i; i < MAX_PLAYERS; i ++)
	{
	    if(IsPlayerConnected(i))
     	{
			if(PlayerInfo[i][LoggedIn] == 1 && Informacion[i][AFK] == 0)
	    	{
                    #if defined USE_STATS
					PlayerInfo[i][Nivel]++;
					#endif
					ActualizarInformacion(i);
					GivePlayerMoney(i, 5000);
					SetPlayerHealth(i,100);
					SendClientMessage(i, COLOR_GREEN, "[INFO]: ¡Has subido de nivel! |->Vida y $5000 Obtenido<-|");
     				PlayerPlaySound(i,1057,0.0,0.0,0.0);
			}
		}
 	}
 	return 1;
}

forward AntiCrash();
public AntiCrash()
{
    for(new playerid; playerid < MAX_PLAYERS; playerid ++)
	{
	    if(IsPlayerConnected(playerid))
     	{
			if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				new Float:vec[3];
				GetPlayerCameraFrontVector(playerid, vec[0], vec[1], vec[2]);
				new bool:possible_crasher = false;
				for (new i = 0; !possible_crasher && i < sizeof(vec); i++)
					if (floatabs(vec[i]) > 10.0)
						possible_crasher = true;

				if (possible_crasher)
					return 0;
			}
		}
	}
	return 1;
}
//==============================================================================
public OnPlayerText(playerid, text[])
{
    Antiflood(playerid);

	if(NoChat[playerid] == 1)
	{
		SendClientMessage(playerid, red, "[INFO]: {FFFFFF}¡Estás muteado por intentar trollear!");
		return 0;
	}
	
	if(strfind(text, "/q", true) != -1 || strfind(text, " /q", true) != -1 || strfind(text, "/q ", true) != -1)
	{
		SendClientMessage(playerid, red, "[INFO]: {FFFFFF}¡No intentes trollear con ese comando! [Sanción: 5 minutos de muteo]");
		SetTimerEx("FinCastigo", 300000, 0, "i", playerid);
		NoChat[playerid] = 1;
		return 0;
	}
	
	if(strval(text) == RespuestaConcurso && RespuestaConcurso != -1)
	{
	if(PlayerInfo[playerid][pAdmin] >= 1){SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Sólo los usuarios pueden responder al Test!");return 0;}
	JugadorGanaConcurso(playerid);
    }

    static LastText[MAX_PLAYERS][500];
	if(strfind(LastText[playerid], text, false) != -1) return SendClientMessage(playerid, COLOR_WHITE, "[ANTI-FLOOD]: ¡No puedes repetir el mismo texto!"), 0;
	strmid(LastText[playerid], text, 0, strlen(text), sizeof(LastText[]));

    if(DetectarSpam(text) && PlayerInfo[playerid][pAdmin] < 7) {
        new string[506]; GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
        SendClientMessage(playerid,0xFFFFFFFF,"[Revolucion Latina]: No puedes pasar IP/Web o escribir 8 o más dígitos de números en este Servidor.");
        format(string, sizeof(string), "[ALERTA]: El player %s [%d] escribió más de 7 dígitos numerales [Texto: %s]",pname,playerid,text); MessageToAdmins(red,string);
        return 0;
    }

    if(Informacion[playerid][SHH] == 1)
	{
		SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}¡Estás en modo AFK, no puedes realizar acciones. [Usa /salirafk]");
        return 0;
	}

	if(PlayerInfo[playerid][Registered] == 1 && PlayerInfo[playerid][LoggedIn] == 0)
	{
		SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Debes loguearte para usar el chat. Usa /login");
		return 0;
	}

	if(ServerInfo[AntiSwear] == 1 && PlayerInfo[playerid][pAdmin] < 7)
	for(new s = 0; s < ForbiddenWordCount; s++)
    {
		new pos;
		while((pos = strfind(text,ForbiddenWords[s],true)) != -1) for(new i = pos, j = pos + strlen(ForbiddenWords[s]); i < j; i++) text[i] = '*';
	}

	if(ServerInfo[DisableChat] == 1)
	{
	 	SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El chat fue desactivado por un administrador.");
	  	return 0;
	}

	if(text[0] == '7' && PlayerInfo[playerid][pAdmin] >= 1)
	{
		SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}¡Posible comando admin mal escrito!");
	    return 0;
	}
	
	if(text[0] == '3' && PlayerInfo[playerid][pAdmin] >= 1)
	{
		SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}¡Posible comando admin mal escrito!");
	    return 0;
	}
	
	if(text[0] == '·' && PlayerInfo[playerid][pAdmin] >= 1)
	{
		SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}¡Posible comando admin mal escrito!");
	    return 0;
	}
	
	if(text[0] == '(' && PlayerInfo[playerid][pAdmin] >= 1)
	{
		SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}¡Posible comando admin mal escrito!");
	    return 0;
	}
//==============================================================================
// Chats Especiales
//==============================================================================
	if(text[0] == '#' && PlayerInfo[playerid][pAdmin] == 1) {
     GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FF0000}|»|CHAT ADMIN|«| {0700D7}Operador[A] {FFFFFF}%s [%i]: {00FF00}%s",string2,playerid,text[1]); MessageToAdmins(green,string2); SaveToFile("AdminChatLog",string2);
	    return 0;
	}
	
		if(text[0] == '#' && PlayerInfo[playerid][pAdmin] == 2) {
     GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FF0000}|»|CHAT ADMIN|«| {0700D7}Operador[I] {FFFFFF}%s [%i]: {00FF00}%s",string2,playerid,text[1]); MessageToAdmins(green,string2); SaveToFile("AdminChatLog",string2);
	    return 0;
	}

	if(text[0] == '#' && PlayerInfo[playerid][pAdmin] == 3) {
     GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FF0000}|»|CHAT ADMIN|«| {0700D7}Operador[M] {FFFFFF}%s [%i]: {00FF00}%s",string2,playerid,text[1]); MessageToAdmins(green,string2); SaveToFile("AdminChatLog",string2);
	    return 0;
	}

	if(text[0] == '#' && PlayerInfo[playerid][pAdmin] == 4) {
     GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FF0000}|»|CHAT ADMIN|«| {0700D7}Operador[P] {FFFFFF}%s [%i]: {00FF00}%s",string2,playerid,text[1]); MessageToAdmins(green,string2); SaveToFile("AdminChatLog",string2);
	    return 0;
	}

	if(text[0] == '#' && PlayerInfo[playerid][pAdmin] == 5) {
     GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FF0000}|»|CHAT ADMIN|«| {29FF0D}Game-Master[A] {FFFFFF}%s [%i]: {00FF00}%s",string2,playerid,text[1]); MessageToAdmins(green,string2); SaveToFile("AdminChatLog",string2);
	    return 0;
	}

	if(text[0] == '#' && PlayerInfo[playerid][pAdmin] == 6) {
     GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FF0000}|»|CHAT ADMIN|«| {29FF0D}Game-Master[I] {FFFFFF}%s [%i]: {00FF00}%s",string2,playerid,text[1]); MessageToAdmins(green,string2); SaveToFile("AdminChatLog",string2);
	    return 0;
	}

	if(text[0] == '#' && PlayerInfo[playerid][pAdmin] == 7) {
     GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FF0000}|»|CHAT ADMIN|«| {29FF0D}Game-Master[G] {FFFFFF}%s [%i]: {00FF00}%s",string2,playerid,text[1]); MessageToAdmins(green,string2); SaveToFile("AdminChatLog",string2);
	    return 0;
	}

	if(text[0] == '#' && PlayerInfo[playerid][pAdmin] == 8) {
     GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FF0000}|»|CHAT ADMIN|«| {29FF0D}Game-Master[P] {FFFFFF}%s [%i]: {00FF00}%s",string2,playerid,text[1]); MessageToAdmins(green,string2); SaveToFile("AdminChatLog",string2);
	    return 0;
	}

	if(text[0] == '#' && PlayerInfo[playerid][pAdmin] == 9) {
     GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FF0000}|»|CHAT ADMIN|«| {FF0000}Co-Manager {FFFFFF}%s [%i]: {00FF00}%s",string2,playerid,text[1]); MessageToAdmins(green,string2); SaveToFile("AdminChatLog",string2);
	    return 0;
	}

	if(text[0] == '#' && PlayerInfo[playerid][pAdmin] == 10) {
     GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FF0000}|»|CHAT ADMIN|«| {FF0000}OwnerRL {FFFFFF}%s [%i]: {00FF00}%s",string2,playerid,text[1]); MessageToAdmins(green,string2); SaveToFile("AdminChatLog",string2);
	    return 0;
	}


	if(PlayerInfo[playerid][Muted] == 1)
	{
 		PlayerInfo[playerid][MuteWarnings]++;
		if(PlayerInfo[playerid][MuteWarnings] < ServerInfo[MaxMuteWarnings]) {
			format(string2, sizeof(string2),"[INFO]: {FFFFFF}¡Estás muteado!, si sigues intentando hablar serás kickeado [Adv:%d/%d]", PlayerInfo[playerid][MuteWarnings], ServerInfo[MaxMuteWarnings] );
			SendClientMessage(playerid,red,string2);
		} else {
			SendClientMessage(playerid,red,"[INFO]: {FFFFFF}¡Fuiste advertido! Ahora has sido kickeado.");
			format(string2, sizeof(string2),"[INFO]: {FFFFFF}%s [%d] ha sido Kickeado del Servidor automáticamente. [Razón: Intento exedido de hablar muteado]", PlayerName2(playerid), playerid);
			SendClientMessageToAll(red,string2);
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Revolucion Latina","{FFFFFF} Fuiste kickeado/expulsado del servidor automáticamente.\n\n{FF0000}Razón: {FFFFFF}Intento exedido de hablar muteado", "Aceptar", "") ;
			SaveToFile("KickLog",string2); SetTimerEx("KickearPlayer", 50, 0, "i", playerid);
		} return 0;
	}



	if(text[0] == '$' && PlayerInfo[playerid][pVip] == 1)
	{
		if(PlayerInfo[playerid][Muted] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes hablar porque estas Muteado!");
	    GetPlayerName(playerid,string2,sizeof(string2));
	    format(string2,sizeof(string2),"{00EEFF}|»|CHAT V.I.P|«| {3C3214}[Silver] {FFFFFF}%s [%d]: {FF0000}%s",string2, playerid, text[1]); MessageToVips(0xDC686BAA,string2); SaveToFile("VipChatLog",string2);
	    return 0;
	}
	
		if(text[0] == '$' && PlayerInfo[playerid][pVip] == 2)
	{
		if(PlayerInfo[playerid][Muted] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes hablar porque estas Muteado!");
	    GetPlayerName(playerid,string2,sizeof(string2));
	    format(string2,sizeof(string2),"{00EEFF}|»|CHAT V.I.P|«|{C3D5DF} [Gold] {FFFFFF}%s [%d]: {FF0000}%s",string2, playerid, text[1]); MessageToVips(0xDC686BAA,string2); SaveToFile("VipChatLog",string2);
	    return 0;
	}
	
		if(text[0] == '$' && PlayerInfo[playerid][pVip] == 3)
	{
		if(PlayerInfo[playerid][Muted] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes hablar porque estas Muteado!");
	    GetPlayerName(playerid,string2,sizeof(string2));
	    format(string2,sizeof(string2),"{00EEFF}|»|CHAT V.I.P|«| {DFC418}[Premium] {FFFFFF}%s [%d]: {FF0000}%s",string2, playerid, text[1]); MessageToVips(0xDC686BAA,string2); SaveToFile("VipChatLog",string2);
	    return 0;
	}
		if(text[0] == '$' && PlayerInfo[playerid][pVip] == 4)
	{
		if(PlayerInfo[playerid][Muted] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes hablar porque estas Muteado!");
	    GetPlayerName(playerid,string2,sizeof(string2));
	    format(string2,sizeof(string2),"{00EEFF}|»|CHAT V.I.P|«| {209193}[Platinum] {FFFFFF}%s [%d]: {FF0000}%s",string2, playerid, text[1]); MessageToVips(0xDC686BAA,string2); SaveToFile("VipChatLog",string2);
	    return 0;
	}
		if(text[0] == '$' && PlayerInfo[playerid][pVip] == 5)
	{
		if(PlayerInfo[playerid][Muted] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes hablar porque estas Muteado!");
	    GetPlayerName(playerid,string2,sizeof(string2));
	    format(string2,sizeof(string2),"{00EEFF}|»|CHAT V.I.P|«| {FF0000}[Esmeralda] {FFFFFF}%s [%d]: {FF0000}%s",string2, playerid, text[1]); MessageToVips(0xDC686BAA,string2); SaveToFile("VipChatLog",string2);
	    return 0;
	}
		if(text[0] == '$' && PlayerInfo[playerid][pVip] == 6)
	{
		if(PlayerInfo[playerid][Muted] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes hablar porque estas Muteado!");
	    GetPlayerName(playerid,string2,sizeof(string2));
	    format(string2,sizeof(string2),"{00EEFF}|»|CHAT V.I.P|«| {0C242E}[Diamond] {FFFFFF}%s [%d]: {FF0000}%s",string2, playerid, text[1]); MessageToVips(0xDC686BAA,string2); SaveToFile("VipChatLog",string2);
	    return 0;
	}
		if(text[0] == '$' && PlayerInfo[playerid][pVip] == 7)
	{
		if(PlayerInfo[playerid][Muted] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes hablar porque estas Muteado!");
	    GetPlayerName(playerid,string2,sizeof(string2));
	    format(string2,sizeof(string2),"{00EEFF}|»|CHAT V.I.P|«| {FF0000}[Extremo] {FFFFFF}%s [%d]: {FF0000}%s",string2, playerid, text[1]); MessageToVips(0xDC686BAA,string2); SaveToFile("VipChatLog",string2);
	    return 0;
	}
	
		if(text[0] == '$' && PlayerInfo[playerid][pVip] == 8)
	{		if(PlayerInfo[playerid][Muted] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes hablar porque estas Muteado!");
	    GetPlayerName(playerid,string2,sizeof(string2));
	    format(string2,sizeof(string2),"{00EEFF}|»|CHAT V.I.P|«| {00FF00}[Legendario] {FFFFFF}%s [%d]: {FF0000}%s",string2, playerid, text[1]); MessageToVips(0xDC686BAA,string2); SaveToFile("VipChatLog",string2);
	    return 0;
	}
	
			if(text[0] == '$' && PlayerInfo[playerid][pVip] == 9)
	{		if(PlayerInfo[playerid][Muted] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes hablar porque estas Muteado!");
	    GetPlayerName(playerid,string2,sizeof(string2));
	    format(string2,sizeof(string2),"{00EEFF}|»|CHAT V.I.P|«| {FFFF00}[Dios] {FFFFFF}%s [%d]: {FF0000}%s",string2, playerid, text[1]); MessageToVips(0xDC686BAA,string2); SaveToFile("VipChatLog",string2);
	    return 0;
	}



	if (text[0] == '!' && PlayerGang[playerid] > 0 )
 	{
		if(PlayerInfo[playerid][Muted] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes hablar porque estas Muteado!");
		new nombre[MAX_PLAYER_NAME],gangid=PlayerGang[playerid];
		GetPlayerName(playerid, nombre, MAX_PLAYER_NAME);
		format(string2, 1528, "|»|Clan %s|«| %s [%d]: %s",GangInfo[gangid][GANG_NAME], nombre,playerid,text[1]);
		Message2Gang(PlayerGang[playerid], string2);
		return 0;
     }

	new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
 if(text[0] == '&' && PlayerInfo[playerid][pAdmin] >= 8) {
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FF0000}|»|CHAT ADMIN LVL ALTO|«| {FFFFFF}%s [%i]: {00EEFF}%s",string2,playerid,text[1]); MessageToHighAdmins(yellow,string2); SaveToFile("HighAdminChatLog",string2);
	    return 0;
	}
	

    GetPlayerName(playerid, pame, sizeof(pame));
	if(text[0] == '"' && PlayerInfo[playerid][pAdmin] == 10) {
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{B90303}|»|CHAT DUEÑOS DE RL|«| {037FB9}%s {B90303}[%i]: {E48705}%s",string2,playerid,text[1]); MessageToDuenos(yellow,string2); SaveToFile("HighAdminChatLog",string2);
	    return 0;
	}
	
if(ColorChat[playerid] == 1)
	{
	if(PlayerInfo[playerid][pAdmin] == 1) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Operador[A]prendiz «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 2) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Operador[I]ntermedio «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 3) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Operador[M]aster «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 4) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Operador[P]rofesional «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
    if(PlayerInfo[playerid][pAdmin] == 5) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Game-Master[A]prendiz «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 6 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Game-Master[I]ntermedio «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 7 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Game-Master[G]lobal «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 8 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Game-Master[P]rofesional «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 9 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
        format(string2, sizeof(string2), "|» Co-Manager «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(red,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 10 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
        format(string2, sizeof(string2), "|» OwnerRL «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(red,string2);
	}
		return 0;
	}


if(ColorEventoChat[playerid] == 1)
	{
	if(PlayerInfo[playerid][pAdmin] == 1) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Operador[A]prendiz «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 2) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Operador[I]ntermedio «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 3) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Operador[M]aster «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 4) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Operador[P]rofesional «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
    if(PlayerInfo[playerid][pAdmin] == 5) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Game-Master[A]prendiz «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 6) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Game-Master[I]ntermedio «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 7) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Game-Master[G]lobal «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 8) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "|» Game-Master[P]rofesional «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 9) {
 		GetPlayerName(playerid,string2,sizeof(string2));
        format(string2, sizeof(string2), "|» Co-Manager «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(red,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 10) {
 		GetPlayerName(playerid,string2,sizeof(string2));
        format(string2, sizeof(string2), "|» OwnerRL «| %s [%d]: {DEFB01}%s",string2,playerid,text);
		SendClientMessageToAll(red,string2);
	}
		return 0;
	}
	if(ColorRojoChat[playerid] == 1)
	{
	if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pVip] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{00FFD5}®|N| {%06x}%s {3FFE00}[%d]: {FF0000}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pVip] >= 1 && PlayerInfo[playerid][pAdmin] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|Vip| {%06x}%s {3FFE00}[%d]: {FF0000}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 1) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|1|Operador|1| {%06x}%s {3FFE00}[%d]: {FF0000}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 2) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|2|Operador|2| {%06x}%s {3FFE00}[%d]: {FF0000}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 3) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|3|Operador|3| {%06x}%s {3FFE00}[%d]: {FF0000}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 4) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|4|Operador|4| {%06x}%s {3FFE00}[%d]: {FF0000}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
    if(PlayerInfo[playerid][pAdmin] == 5) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|5|Game Master|5| {%06x}%s {3FFE00}[%d]: {FF0000}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 6 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|6|Game Master|6| {%06x}%s {3FFE00}[%d]: {FF0000}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 7 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|7|Game Master|7| {%06x}%s {3FFE00}[%d]: {FF0000}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 8 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|8|Game Master|8| {%06x}%s {3FFE00}[%d]: {FF0000}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 9 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
        format(string2, sizeof(string2), "{3FFE00}®|9|Co-Manager|9| {%06x}%s {3FFE00}[%d]: {FF0000}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(red,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 10 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
        format(string2, sizeof(string2), "{3FFE00}®|OwnerRL| {%06x}%s {3FFE00}[%d]: {FF0000}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(red,string2);
 	}
	return 0;
	}

    // -= Chat Holanda =- //
    if(ColorMoradoChat[playerid] == 1 && PlayerInfo[playerid][Hide] == 0)
	{
	if(PlayerInfo[playerid][pAdmin] == 9) {
	GetPlayerName(playerid,string2,sizeof(string2));
	format(string2, sizeof(string2), "{FF00FF}®|Co-LandLady| {%06x}%s {FF80C0}[%d]: {FF00FF}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
	SendClientMessageToAll(0x8000FFC8,string2);
    }
	return 0;
	}


    // -= Chat Carlosxp =- //
 	if(ColorCarlosChat[playerid] == 1 && PlayerInfo[playerid][Hide] == 0)
	{
	if(PlayerInfo[playerid][pAdmin] == 10) {
	GetPlayerName(playerid,string2,sizeof(string2));
	format(string2, sizeof(string2), "{FF0000}||(->>®ScripterRL/Dueño®<<-)|| {%06x}%s {FF0000}[%d]: {0700D7}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
	SendClientMessageToAll(0xFF0000AA,string2);
    }
	return 0;
	}

  // -= Chat Fran =- //
	if(ColorFranciscoChat[playerid] == 1 && PlayerInfo[playerid][Hide] == 0)
	{
	if(PlayerInfo[playerid][pAdmin] == 10) {
	GetPlayerName(playerid,string2,sizeof(string2));
	format(string2, sizeof(string2), "{FF0000}>>||®Dueño - Creador®||<<{%06x}%s {FF0000}[%d]: {29FF0D}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
	SendClientMessageToAll(0xFF0000AA,string2);
    }
	return 0;
	}

	// -= Chat Samir =- //
	if(ColorSamirChat[playerid] == 1 && PlayerInfo[playerid][Hide] == 0)
	{
	if(PlayerInfo[playerid][pAdmin] == 10) {
	GetPlayerName(playerid,string2,sizeof(string2));
	format(string2, sizeof(string2), "{FF0000}>>||®Dueño - Creador®||<<{%06x}%s {FF0000}[%d]: {29FF0D}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
	SendClientMessageToAll(0xFF0000AA,string2);
    }
	return 0;
	}

	// -= Chat Renato =- //
	if(ColorRenatoChat[playerid] == 1 && PlayerInfo[playerid][Hide] == 0)
	{
	if(PlayerInfo[playerid][pAdmin] == 10) {
	GetPlayerName(playerid,string2,sizeof(string2));
	format(string2, sizeof(string2), "{FF0000}>>||®Dueño - Creador®||<<{%06x}%s {FF0000}[%d]: {29FF0D}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
	SendClientMessageToAll(0xFF0000AA,string2);
    }
	return 0;
	}

	if(ColorAzulChat[playerid] == 1)
	{
	if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pVip] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{00FFD5}®|N| {%06x}%s {3FFE00}[%d]: {0700D7}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pVip] >= 1 && PlayerInfo[playerid][pAdmin] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|Vip| {%06x}%s {3FFE00}[%d]: {0700D7}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 1) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|1|Operador|1| {%06x}%s {3FFE00}[%d]: {0700D7}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 2) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|2|Operador|2| {%06x}%s {3FFE00}[%d]: {0700D7}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 3) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|3|Operador|3| {%06x}%s {3FFE00}[%d]: {0700D7}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 4) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|4|Operador|4| {%06x}%s {3FFE00}[%d]: {0700D7}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(azulcito,string2);
	}
    if(PlayerInfo[playerid][pAdmin] == 5) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|5|Game Master|5| {%06x}%s {3FFE00}[%d]: {0700D7}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 6 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|6|Game Master|6| {%06x}%s {3FFE00}[%d]: {0700D7}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 7 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|7|Game Master|7| {%06x}%s {3FFE00}[%d]: {0700D7}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 8 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|8|Game Master|8| {%06x}%s {3FFE00}[%d]: {0700D7}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 9 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
        format(string2, sizeof(string2), "{3FFE00}®|9|Co-Manager|9| {%06x}%s {3FFE00}[%d]: {0700D7}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(red,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 10 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
        format(string2, sizeof(string2), "{3FFE00}®|OwnerRL| {%06x}%s {3FFE00}[%d]: {0700D7}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(red,string2);
 	}
	return 0;
	}

	if(ColorAmarilloChat[playerid] == 1)
	{
	if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pVip] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{00FFD5}®|N| {%06x}%s {3FFE00}[%d]: {DEFB01}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(yellow,string2);
	}
	if(PlayerInfo[playerid][pVip] >= 1 && PlayerInfo[playerid][pAdmin] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|Vip| {%06x}%s {3FFE00}[%d]: {DEFB01}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(yellow,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 1) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|1|Operador|1| {%06x}%s {3FFE00}[%d]: {DEFB01}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(yellow,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 2) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|2|Operador|2| {%06x}%s {3FFE00}[%d]: {DEFB01}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(yellow,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 3) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|3|Operador|3| {%06x}%s {3FFE00}[%d]: {DEFB01}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(yellow,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 4) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|4|Operador|4| {%06x}%s {3FFE00}[%d]: {DEFB01}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(yellow,string2);
	}
    if(PlayerInfo[playerid][pAdmin] == 5) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|5|Game Master|5| {%06x}%s {3FFE00}[%d]: {DEFB01}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(yellow,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 6 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|6|Game Master|6| {%06x}%s {3FFE00}[%d]: {DEFB01}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(yellow,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 7 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|7|Game Master|7| {%06x}%s {3FFE00}[%d]: {DEFB01}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(yellow,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 8 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}®|8|Game Master|8| {%06x}%s {3FFE00}[%d]: {DEFB01}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(yellow,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 9 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
        format(string2, sizeof(string2), "{3FFE00}®|9|Co-Manager|9| {%06x}%s {3FFE00}[%d]: {DEFB01}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(yellow,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 10 && PlayerInfo[playerid][Hide] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
        format(string2, sizeof(string2), "{3FFE00}®|OwnerRL| {%06x}%s {3FFE00}[%d]: {DEFB01}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(yellow,string2);
 	}
	return 0;
	}

    if(PlayerInfo[playerid][Hide] == 1)
    {
	if(PlayerInfo[playerid][pVip] >= 1 && PlayerInfo[playerid][pAdmin] >= 1) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{3FFE00}|Vip| {%06x}%s {3FFE00}[%d]: {FFFFFF}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(cian1,string2);
	}

		if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pVip] == 0) {
 		GetPlayerName(playerid,string2,sizeof(string2));
		format(string2, sizeof(string2), "{00FFD5}|N| {%06x}%s {3FFE00}[%d]: {ABB9FF}%s",GetPlayerColor(playerid) >>> 8,string2,playerid,text);
		SendClientMessageToAll(cian1,string2);
	}

	return 0;
	}

	if(ServerInfo[AntiSpam] == 1 && (PlayerInfo[playerid][pAdmin] == 0 && !IsPlayerAdmin(playerid)) )
	{
		if(PlayerInfo[playerid][SpamCount] == 0) PlayerInfo[playerid][SpamTime] = TimeStamp();

	    PlayerInfo[playerid][SpamCount]++;
		if(TimeStamp() - PlayerInfo[playerid][SpamTime] > SPAM_TIMELIMIT) {
			PlayerInfo[playerid][SpamCount] = 0;
			PlayerInfo[playerid][SpamTime] = TimeStamp();
		}
		else if(PlayerInfo[playerid][SpamCount] == SPAM_MAX_MSGS) {
			format(string2,sizeof(string2),"{0ED59C}|-:-|{C50404}INFO{0ED59C}|-:-|{098BEE}: {FFFFFF}%s{098BEE} quedó expulsado del servidor. {0ED59C}[{C50404}Motivo: Flood/Spam Proteción{0ED59C}]", PlayerName2(playerid));
			SendClientMessageToAll(red,string2); print(string2);
			SaveToFile("KickLog",string2);
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, " {FFFFFF}Revolucion{C50404} Latina","{FFFFFF} Fuiste expulsado del servidor \n\n{FF0000}*Motivo: {FFFFFF}Flood o Spam", "Entendido", "") ;
			SetTimerEx("KickearPlayer", 50, 0, "i", playerid);
		}
		else if(PlayerInfo[playerid][SpamCount] == SPAM_MAX_MSGS-1) {
			SendClientMessage(playerid,red,"{0ED59C}|-:-|{C50404}INFO{0ED59C}|-:-|{098BEE}: Está prohibido el spam, a la próxima kick.");
			return 0;
		}
	}

	if(PlayerInfo[playerid][Caps] == 1) UpperToLower(text);
	if(ServerInfo[NoCaps] == 1) UpperToLower(text);

	for(new i = 1; i < MAX_CHAT_LINES-1; i++) Chat[i] = Chat[i+1];
 	new ChatSTR[5000]; GetPlayerName(playerid,ChatSTR,sizeof(ChatSTR)); format(ChatSTR,5000,"[LChat]%s: %s",ChatSTR, text[0] );

	if(PlayerInfo[playerid][pAdmin] == 10) {
    static mensaje[5000], nombre[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nombre, sizeof(nombre));
    format(mensaje, sizeof(mensaje), "{FF0000}|10|Owner {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, nombre, playerid, text);
    SendClientMessageToAll(-1, mensaje);
    SetPlayerChatBubble(playerid, text, red, 100.0, 10000);
    return 0;
	}
	if(PlayerInfo[playerid][pAdmin] == 9) {
    static mensaje[5000], nombre[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nombre, sizeof(nombre));
    format(mensaje, sizeof(mensaje), "{FF0000}|9|Co-Manager {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, nombre, playerid, text);
    SendClientMessageToAll(-1, mensaje);
    SetPlayerChatBubble(playerid, text, red, 100.0, 10000);
    return 0;
	}
	if(PlayerInfo[playerid][pAdmin] == 8) {
    static mensaje[5000], nombre[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nombre, sizeof(nombre));
    format(mensaje, sizeof(mensaje), "{00FF00}|8|Game Master[P] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, nombre, playerid, text);
    SendClientMessageToAll(-1, mensaje);
    SetPlayerChatBubble(playerid, text, red, 100.0, 10000);
    return 0;
	}
		if(PlayerInfo[playerid][pAdmin] == 7) {
    static mensaje[5000], nombre[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nombre, sizeof(nombre));
    format(mensaje, sizeof(mensaje), "{00FF00}|7|Game Master[G] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, nombre, playerid, text);
    SendClientMessageToAll(-1, mensaje);
    SetPlayerChatBubble(playerid, text, red, 100.0, 10000);
    return 0;
	}
		if(PlayerInfo[playerid][pAdmin] == 6) {
    static mensaje[5000], nombre[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nombre, sizeof(nombre));
    format(mensaje, sizeof(mensaje), "{00FF00}|6|Game Master[I] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, nombre, playerid, text);
    SendClientMessageToAll(-1, mensaje);
    SetPlayerChatBubble(playerid, text, red, 100.0, 10000);
    return 0;
	}
	if(PlayerInfo[playerid][pAdmin] == 5) {
    static mensaje[5000], nombre[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nombre, sizeof(nombre));
    format(mensaje, sizeof(mensaje), "{00FF00}|5|Game Master[A] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, nombre, playerid, text);
    SendClientMessageToAll(-1, mensaje);
    SetPlayerChatBubble(playerid, text, red, 100.0, 10000);
    return 0;
	}
		if(PlayerInfo[playerid][pAdmin] == 4) {
    static mensaje[5000], nombre[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nombre, sizeof(nombre));
    format(mensaje, sizeof(mensaje), "{0D00FF}|4|Operador[P] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, nombre, playerid, text);
    SendClientMessageToAll(-1, mensaje);
    SetPlayerChatBubble(playerid, text, red, 100.0, 10000);
    return 0;
	}
		if(PlayerInfo[playerid][pAdmin] == 3) {
    static mensaje[5000], nombre[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nombre, sizeof(nombre));
    format(mensaje, sizeof(mensaje), "{0D00FF}|3|Operador[M] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, nombre, playerid, text);
    SendClientMessageToAll(-1, mensaje);
    SetPlayerChatBubble(playerid, text, red, 100.0, 10000);
    return 0;
	}
	
		if(PlayerInfo[playerid][pAdmin] == 2) {
    static mensaje[5000], nombre[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nombre, sizeof(nombre));
    format(mensaje, sizeof(mensaje), "{0D00FF}|2|Operador[I] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, nombre, playerid, text);
    SendClientMessageToAll(-1, mensaje);
    SetPlayerChatBubble(playerid, text, red, 100.0, 10000);
    return 0;
	}
	
	if(PlayerInfo[playerid][pAdmin] == 1) {
    static mensaje[5000], nombre[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nombre, sizeof(nombre));
    format(mensaje, sizeof(mensaje), "{0D00FF}|1|Operador[A] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, nombre, playerid, text);
    SendClientMessageToAll(-1, mensaje);
    SetPlayerChatBubble(playerid, text, red, 100.0, 10000);
    return 0;
	}

	if(PlayerInfo[playerid][pVip] >= 1) {
    static mensaje[5000], nombre[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nombre, sizeof(nombre));
    format(mensaje, sizeof(mensaje), "{3FFE00}|Vip| {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, nombre, playerid, text);
    SendClientMessageToAll(-1, mensaje);
    SetPlayerChatBubble(playerid, text, verde_claro, 100.0, 10000);
    return 0;
	}


    static mensaje[5000], nombre[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nombre, sizeof(nombre));
    format(mensaje, sizeof(mensaje), "{00FFD5}|N| {%06x}%s {3FFE00}[%d]: {ABB9FF}%s", GetPlayerColor(playerid) >>> 8, nombre, playerid, text);
    SendClientMessageToAll(-1, mensaje);
    SetPlayerChatBubble(playerid, text, cian1, 100.0, 10000);
	/*=====================================*/
	new strtext[5000];
	format(strtext,sizeof(strtext),"[Chat] %s [%d]: %s",nombre,playerid,text);
	print(strtext);
	/*=====================================*/
	return 0;
}
//==============================================================================
forward HighLight(playerid);
public HighLight(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(PlayerInfo[playerid][blipS] == 0) { SetPlayerColor(playerid, 0xFF0000AA); PlayerInfo[playerid][blipS] = 1; }
	else { SetPlayerColor(playerid, 0x33FF33AA); PlayerInfo[playerid][blipS] = 0; }
	return 0;
}
//==============================================================================
public OnGameModeInit()
{
parkour2g=CreatePickup(1239,1,2099.94, 2592.38, 361.70, 5);
parkour1g=CreatePickup(1239,1,-1765.9098, 678.2913, 369.3688, 5);

	CurrentParticipants = 0;
	PartyStarted = 0;
	PartyPrepared = 0;

if(DetectarSpam("190.218.8.452:7777")) print("Sistema Anti-Spam");

	if(!fexist("ladmin/"))
	{
	    print("\n\n > WARNING: Archivo no encontrado en ScriptFiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin");
		return 1;
	}
	if(!fexist("ladmin/logs/"))
	{
	    print("\n\n > WARNING: Archivo no encontrado en ScriptFiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin/logs");
		return 1;
	}
	if(!fexist("ladmin/config/"))
	{
	    print("\n\n > WARNING: Archivo no encontrado en ScriptFiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin/config");
		return 1;
	}
	if(!fexist("ladmin/users/"))
	{
	    print("\n\n > WARNING: Archivo no encontrado en ScriptFiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin/users");
		return 1;
	}
	
	UpdateConfig();

    if(!dini_Exists("ladmin/config/TempBans.txt")) {dini_Create("ladmin/config/TempBans.txt");}
	#if defined DISPLAY_CONFIG
	ConfigInConsole();
	#endif
//==============================================================================
	// Sistema de Propiedades
    LoadProperties();
    MP = GetMaxPlayers();
	for(new i; i<MP; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			GetPlayerName(i, pname, MAX_PLAYER_NAME);
			for(new propid; propid < PropertiesAmount; propid++)
			{
				if(PropInfo[propid][PropIsBought] == 1)
				{
				    if(strcmp(PropInfo[propid][PropOwner], pname, true)==0)
					{
					    EarningsForPlayer[i] += PropInfo[propid][PropEarning];
					    PlayerProps[i]++;
					}
				}
			}
		}
	}
	#if ENABLE_MAP_ICON_STREAMER == 1
	SetTimer("MapIconStreamer", 500, 1);
	#endif
	SetTimer("PropertyPayout", 60000, 1);

    // Otros
    UsePlayerPedAnims();
	Speedoff = SetTimer("Speed", 500, 1);
	GodTimer = SetTimer("GodUpdate",2000,1);
	PingTimer = SetTimer("PingKick",7000,1);
    SetTimer("NuevoConcurso",(2000*60*TIEMPOCONCURSO),1);
    SetTimer("SubidaDeNiveles",320000,true);
	SetTimer("GlobalAnnouncement",40000,true);
    SetTimer("TimerMR",4000,true);
	SetTimer("TimerRDTX",4000,true);
	SetTimer("noche",10000,true);


	

	//SetTimer("Timerbum",20000,1);
	//OnWeaponDropInit();
    SendRconCommand("hostname -|(»Revolucion Latina Freeroam[Español]«)|-");
    //SetGameModeText("|» FR|DM|TDM v13.7 «|");
	SetGameModeText("|Español FR|DM v15.4|");
    SendRconCommand("weburl www.facebook.com/groups/GameZoneFree/");
    for(new playerid; playerid < MAX_PLAYERS; playerid++)
	{
	    Cantidad[playerid] = 0;
	}

    AddPlayerClass(299,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	for(new i = 0; i < 299; i++)
	{
	AddPlayerClass(i,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1);
	}

    	//=====================//
	Actor0 = CreateActor(152,0,0,-3001.3281,109.0582);
	Actor1 = CreateActor(87,1215.3042,-7.7642,1001.3281,109.0582);
	Actor2 = CreateActor(246,1214.6329,-4.9617,1001.3281,43.5709);
	Actor3 = CreateActor(87,1221.6866,-6.6460,1001.3281,92.7647);
	Actor4 = CreateActor(63,1214.8767,-15.2605,1000.9219,348.7604);
	Actor5 = CreateActor(90,1208.2853,-5.2339,1001.3281,359.0771);
	Actor6 = CreateActor(140,1208.2043,-7.8658,1001.3281,176.7387);
	Actor7 = CreateActor(152,1221.4921,8.5117,1001.3356,127.8582);
	Actor8 = CreateActor(246,727.3285,1437.0677,1102.2734,181.7040);
	Actor9 = CreateActor(87,725.5401,1436.3701,1102.2809,266.8752);
	//=====================//
	ApplyActorAnimation(Actor0, "STRIP", "strip_B", 4.1, 1, 1, 1, 0, 0);
	ApplyActorAnimation(Actor1, "STRIP", "strip_B", 4.1, 1, 1, 1, 0, 0);
	ApplyActorAnimation(Actor2, "STRIP", "strip_A", 4.1, 1, 1, 1, 0, 0);
	ApplyActorAnimation(Actor3, "STRIP", "strip_C", 4.1, 1, 1, 1, 0, 0);
	ApplyActorAnimation(Actor4, "BAR", "Barcustom_get", 4.1, 1, 1, 1, 0, 0);
	ApplyActorAnimation(Actor5, "STRIP", "strip_E", 4.1, 1, 1, 1, 0, 0);
	ApplyActorAnimation(Actor6, "STRIP", "strip_F", 4.1, 1, 1, 1, 0, 0);
	ApplyActorAnimation(Actor7, "STRIP", "strip_G", 4.1, 1, 1, 1, 0, 0);
	ApplyActorAnimation(Actor8, "STRIP", "strip_F", 4.1, 1, 1, 1, 0, 0);
	ApplyActorAnimation(Actor9, "STRIP", "strip_E", 4.1, 1, 1, 1, 0, 0);
	//=====================//
	// Actores sin saber donde coño estan
    AAMesero = CreateActor(171, -3528.1155, -2169.0369, 4.0552, -98.0000);
    AAMesera = CreateActor(172, -3528.5581, -2162.8879, 4.0552, -98.0000);
	AAMilitar1 = CreateActor(287, -3477.0935, -2164.2610, 4.0692, -37.50000);
	AAMilitar2 = CreateActor(287, -3477.7378, -2166.3462, 4.0692, 40.32001);
	AAMilitar3 = CreateActor(287, -3475.2090, -2145.7856, 4.069, -89.28001);
	AAMilitar4 = CreateActor(287, -3475.0234, -2142.8977, 4.0692, -129.90002);
	AAMilitar5 = CreateActor(287, -3528.5811, -2147.1545, 4.0692, 135.42000);
	AAMilitar6 = CreateActor(287, -3528.8413, -2152.9016, 4.0692, -225.29990);
	
	SetActorFacingAngle(AAMesero, 90);
	SetActorFacingAngle(AAMesera, 90);
	SetActorFacingAngle(AAMilitar1, 90);
	SetActorFacingAngle(AAMilitar2, 90);
	SetActorFacingAngle(AAMilitar3, 90);
	SetActorFacingAngle(AAMilitar4, 90);
	SetActorFacingAngle(AAMilitar5, 90);
	SetActorFacingAngle(AAMilitar6, 90);
	
	SetActorVirtualWorld(AAMesero, 15);
	SetActorVirtualWorld(AAMesera, 15);
	SetActorVirtualWorld(AAMilitar1, 15);
	SetActorVirtualWorld(AAMilitar2, 15);
	SetActorVirtualWorld(AAMilitar3, 15);
	SetActorVirtualWorld(AAMilitar4, 15);
	SetActorVirtualWorld(AAMilitar5, 15);
	SetActorVirtualWorld(AAMilitar6, 15);
	
	SetActorInvulnerable(AAMesero, true);
	SetActorInvulnerable(AAMesera, true);
	SetActorInvulnerable(AAMilitar1, true);
	SetActorInvulnerable(AAMilitar2, true);
	SetActorInvulnerable(AAMilitar3, true);
	SetActorInvulnerable(AAMilitar4, true);
	SetActorInvulnerable(AAMilitar5, true);
	SetActorInvulnerable(AAMilitar6, true);
	
	//------------Bases de CLANES-----------------//
    Create3DTextLabel("Base del clan: {00FF00}Ninguno\n{FFFFFF}Lider:{FF0000} N/A", 0xFFFFFFFF, -423.7271, -633.2173, 11.9305, 40.0, 0, 0);
    Create3DTextLabel("{FF0000}Base de clan en construcción.", 0xFFFFFFFF, 306.5229, 1416.2477, 1.2247, 40.0, 0, 0);


    
    
    //-----------Spawn's-------------------------//
    Create3DTextLabel("Spawn {00FF00}San Fierro\n{FF0000}No hacer SK(Spawn Kill|/reglas)", 0xFFFFFFFF, -1628.9723, 743.6214, -4.8828, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}San Fierro\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, -2025.9762, -96.3492, 35.2636, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}San Fierro\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, -2307.0823, 207.3130, 35.6754, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}Los Santos\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, 836.8533, -2048.1541, 13.1818, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}Los Santos\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, 1134.9723, -2037.4042, 69.3184, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}Los Santos\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, 929.2572, -1221.7448, 17.2473, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}Las Venturas\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, 2031.0828, 1007.3959, 11.1353, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}Las Venturas\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, 2159.3855, 1674.0336, 11.0471, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}Las Venturas\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, 2293.8289, 2425.9133, 11.1395, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}Las Venturas\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, 1612.9641,1170.5447,14.2188, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}Los Santos\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, 1544.5812,-1353.6082,329.4738, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}Los Santos\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, 1128.9519,-1489.5090,22.7690, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}Los Santos\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, 2218.5640,-1166.0731,25.7266, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}San Fierro\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, -2029.1667,143.4377,28.8359, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}San Fierro\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, -2099.1362,929.2661,74.7787, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}San Fierro\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, -2630.6609,1417.6459,24.7656, 40.0, 0, 0);
    Create3DTextLabel("Spawn {00FF00}San Fierro\n{FF0000}No hacer SK (Spawn Kill|/reglas)", 0xFFFFFFFF, -1637.0754,1413.9608,7.1875, 40.0, 0, 0);
    
	//-----------------------ESTUDIO--------------------//
	Create3DTextLabel("{FFFFFF}Bienvenido al estudio de {FF0000} 24 Horas", 0xff001bff, 756.7198, -1375.8524, 12.7473, 40.0, 0, 0); //Coordenadas donde se ubica el texto 3D y el texto.

   //---------------------No están configurados-------------------//
	SPW1 = CreatePickup(1239, 2, -1490.80103, 753.23602, 7.37722, 0);
	SPW2 = CreatePickup(1239, 2, 2409.54077, -1729.22900, 13.33903, 0);
	SPW3 = CreatePickup(1239, 2, 2118.76099, 1403.02588, 10.75431, 0);
	SPW4 = CreatePickup(1239, 2, 371.95102, -2014.05042, 7.89237, 0);
	SPW5 = CreatePickup(1239, 2, 345.5847, 2522.5576, 17.3250, 0);
	SPW6 = CreatePickup(1239, 2, -2264.77930, 120.16393, 35.49250, 0);
	SPW7 = CreatePickup(1239, 2, 2598.44653, 2403.90723, 17.54992, 0);
	SPW8 = CreatePickup(1239, 2, -2674.50806, -271.50436, 7.30217, 0);
	SPW9 = CreatePickup(1239, 2, 1645.40894, -1153.29724, 24.60782, 0);
	SPW = CreatePickup(1239, 2, 757.3729,-1375.5508,14.2329, 0);

	Studio = CreateObject(986, 284.37650, 1724.41846, -7.42440,   180.00000, 0.00000, 90.00000);

	Create3DTextLabel("Teles", 0x00FF00FF, -1490.80103, 753.23602, 7.37722, 40.0, 0, 0);
	Create3DTextLabel("Teles", 0x00FF00FF, 2409.54077, -1729.22900, 13.33903, 40.0, 0, 0);
	Create3DTextLabel("Teles", 0x00FF00FF, 2118.76099, 1403.02588, 10.75431, 40.0, 0, 0);
	Create3DTextLabel("Teles", 0x00FF00FF, 371.95102, -2014.05042, 7.89237, 40.0, 0, 0);
	Create3DTextLabel("Teles", 0x00FF00FF, 345.5847, 2522.5576, 17.3250, 40.0, 0, 0);
	Create3DTextLabel("Teles", 0x00FF00FF, -2264.77930, 120.16393, 35.49250, 40.0, 0, 0);
	Create3DTextLabel("Teles", 0x00FF00FF, 2598.44653, 2403.90723, 17.54992, 40.0, 0, 0);
	Create3DTextLabel("Teles", 0x00FF00FF, -2674.50806, -271.50436, 7.30217, 40.0, 0, 0);
	Create3DTextLabel("Teles", 0x00FF00FF, 1645.40894, -1153.29724, 24.60782, 40.0, 0, 0);

	ARMS1 = CreatePickup(351, 2, -1495.7716, 752.3557, 7.5359, 0);
	ARMS2 = CreatePickup(351, 2, 2401.43066, -1731.45422, 13.59892, 0);
	ARMS3 = CreatePickup(351, 2, 2127.13330, 1401.11707, 11.26602, 0);
	ARMS4 = CreatePickup(351, 2, 376.96860, -2022.25171, 7.97289, 0);
	ARMS5 = CreatePickup(351, 2, 337.34897, 2528.61450, 17.04180, 0);
	ARMS6 = CreatePickup(351, 2, -2274.20435, 119.52230, 35.24660, 0);
	ARMS7 = CreatePickup(351, 2, 2581.17822, 2400.12451, 17.94244, 0);
	ARMS8 = CreatePickup(351, 2, -2682.92627, -266.40546, 6.94428, 0);
	ARMS9 = CreatePickup(351, 2, 1631.16528, -1152.49011, 24.41660, 0);

	Create3DTextLabel("Armas", 0xFF0000FF, -1495.7716, 752.3557, 7.5359, 40.0, 0, 0);
	Create3DTextLabel("Armas", 0xFF0000FF, 2401.43066, -1731.45422, 13.59892, 40.0, 0, 0);
	Create3DTextLabel("Armas", 0xFF0000FF, 2127.13330, 1401.11707, 11.26602, 40.0, 0, 0);
	Create3DTextLabel("Armas", 0xFF0000FF, 376.96860, -2022.25171, 7.97289, 40.0, 0, 0);
	Create3DTextLabel("Armas", 0xFF0000FF, 337.34897, 2528.61450, 17.04180, 40.0, 0, 0);
	Create3DTextLabel("Armas", 0xFF0000FF, -2274.20435, 119.52230, 35.24660, 40.0, 0, 0);
	Create3DTextLabel("Armas", 0xFF0000FF, 2581.17822, 2400.12451, 17.94244, 40.0, 0, 0);
	Create3DTextLabel("Armas", 0xFF0000FF, -2682.92627, -266.40546, 6.94428, 40.0, 0, 0);
	Create3DTextLabel("Armas", 0xFF0000FF, 1631.16528, -1152.49011, 24.41660, 40.0, 0, 0);

	PickPara1 = CreatePickup(1277, 2, 82.0914, 759.5524, 1597.5754, 1);
	PickPara2 = CreatePickup(1277, 2, 82.0914, 759.5524, 1597.5754, 1);
    ParkourPremio = CreatePickup(19342, 2, -1105.5436,1527.5442,623.0923, 1);
    ParkourLose = CreatePickup(1318, 2, -1105.5436,1527.5442,623.0923, 0);
//==============================================================================
//OTRO

CreateObject(19377, 115.94, 22.80, 988.00, 0.00, 90.00, 0.00); //floor 1 hall
CreateDynamicObject(19358, 119.54, 18.21, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 116.35, 18.21, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 113.17, 18.21, 989.81, 0.00, 0.00, 90.00);
CreateObject(19377, 105.50, 22.88, 988.00, 0.00, 90.00, 0.00); //floor 1 hall
CreateObject(19377, 95.11, 22.92, 988.00, 0.00, 90.00, 0.00); //floor 1 hall
CreateDynamicObject(19358, 110.03, 18.21, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 106.88, 18.21, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 103.76, 18.21, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 100.60, 18.21, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 97.41, 18.21, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 94.29, 18.21, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 91.40, 18.21, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 89.86, 22.95, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(19358, 89.86, 26.14, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(19358, 89.86, 29.30, 989.81, 0.00, 0.00, 0.00);
CreateObject(19377, 95.04, 32.44, 988.00, 0.00, 90.00, 0.00); //floor 1 hall
CreateObject(19377, 105.47, 32.44, 988.00, 0.00, 90.00, 0.00); //floor 1 hall
CreateObject(19377, 115.98, 32.38, 988.00, 0.00, 90.00, 0.00); //floor 1 hall
CreateDynamicObject(19358, 89.86, 32.47, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(19358, 89.86, 35.63, 989.81, 0.00, 0.00, 0.00);
CreateObject(19377, 126.45, 22.80, 988.00, 0.00, 90.00, 0.00); //floor 1 hall
CreateObject(19377, 126.47, 32.43, 988.00, 0.00, 90.00, 0.00); //floor 1 hall
CreateDynamicObject(19358, 122.74, 18.21, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 125.90, 18.21, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 129.01, 18.21, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 130.52, 19.49, 989.81, 0.00, 0.00, 144.59);
CreateDynamicObject(19358, 131.38, 22.15, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(19358, 131.38, 25.28, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(19358, 131.38, 28.48, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(19358, 131.38, 31.63, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(19358, 131.38, 34.75, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(19358, 130.59, 36.00, 989.81, 0.00, 0.00, 36.09);
CreateDynamicObject(19358, 128.44, 37.02, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 90.86, 19.32, 989.81, 0.00, 0.00, 46.93);
CreateDynamicObject(19358, 89.86, 19.92, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(19358, 90.81, 36.21, 989.81, 0.00, 0.00, 320.00);
CreateDynamicObject(19358, 125.28, 37.02, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 122.18, 37.02, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 119.07, 37.02, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 115.93, 37.02, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 112.83, 37.02, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 109.77, 37.02, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 106.81, 37.02, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 103.68, 37.02, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 100.59, 37.02, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 97.51, 37.02, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 94.39, 37.02, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19358, 91.55, 37.02, 989.81, 0.00, 0.00, 90.00);
CreateDynamicObject(19404, 123.19, 32.74, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(19404, 123.19, 27.34, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(19358, 123.19, 30.01, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(19358, 123.19, 35.73, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(19358, 123.19, 24.25, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(19358, 123.19, 18.13, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(19388, 123.19, 21.28, 989.81, 0.00, 0.00, 0.00);
CreateDynamicObject(1566, 112.40, 18.28, 989.50, 0.00, 0.00, 0.00);
CreateDynamicObject(1649, 123.19, 27.53, 989.81, 0.00, 0.00, 270.00);
CreateDynamicObject(1649, 123.19, 32.78, 989.81, 0.00, 0.00, 270.00);
CreateDynamicObject(1566, 115.54, 18.28, 989.50, 0.00, 0.00, 180.00);
CreateDynamicObject(1569, 123.19, 20.55, 988.10, 0.00, 0.00, 90.00);
CreateDynamicObject(1557, 112.22, 36.97, 988.00, 0.00, 0.00, 0.00);
CreateDynamicObject(1557, 115.23, 36.97, 988.00, 0.00, 0.00, 180.00);
CreateDynamicObject(1726, 102.20, 36.29, 988.00, 0.00, 0.00, 0.00);
CreateDynamicObject(1726, 105.00, 36.29, 988.00, 0.00, 0.00, 0.00);
CreateDynamicObject(1726, 107.80, 36.29, 988.00, 0.00, 0.00, 0.00);
CreateDynamicObject(1726, 96.60, 36.29, 988.00, 0.00, 0.00, 0.00);
CreateDynamicObject(1726, 99.40, 36.29, 988.00, 0.00, 0.00, 0.00);
CreateDynamicObject(2607, 123.73, 32.76, 988.48, 0.00, 0.00, 270.00);
CreateDynamicObject(2607, 123.73, 27.35, 988.48, 0.00, 0.00, 270.00);
CreateDynamicObject(2164, 123.29, 29.00, 988.08, 0.00, 0.00, 90.00);
CreateDynamicObject(2167, 123.29, 30.91, 988.08, 0.00, 0.00, 90.00);
CreateDynamicObject(16151, 91.06, 29.09, 988.50, 0.00, 0.00, 180.00);
CreateDynamicObject(2452, 95.44, 18.67, 988.00, 0.00, 0.00, 180.00);
CreateDynamicObject(1671, 124.79, 27.40, 988.50, 0.00, 0.00, 270.00);
CreateDynamicObject(1671, 124.79, 32.74, 988.50, 0.00, 0.00, 270.00);
CreateDynamicObject(19377, 126.20, 32.71, 991.48, 0.00, 90.00, 0.00);
CreateDynamicObject(19377, 126.12, 23.10, 991.48, 0.00, 90.00, 0.00);
CreateDynamicObject(19377, 115.74, 32.71, 991.48, 0.00, 90.00, 0.00);
CreateDynamicObject(19377, 115.67, 23.10, 991.48, 0.00, 90.00, 0.00);
CreateDynamicObject(19377, 105.23, 23.10, 991.48, 0.00, 90.00, 0.00);
CreateDynamicObject(19377, 105.33, 32.71, 991.48, 0.00, 90.00, 0.00);
CreateDynamicObject(19377, 94.82, 32.71, 991.48, 0.00, 90.00, 0.00);
CreateDynamicObject(19377, 94.82, 23.10, 991.48, 0.00, 90.00, 0.00);
CreateDynamicObject(1726, 128.14, 35.73, 988.00, 0.00, 0.00, 342.13);
CreateDynamicObject(2315, 127.88, 34.21, 988.00, 0.00, 0.00, 342.13);
CreateDynamicObject(2816, 129.03, 33.83, 988.49, 0.00, 0.00, 0.00);
CreateDynamicObject(1726, 129.14, 32.27, 988.00, 0.00, 0.00, 161.66);
CreateDynamicObject(19172, 131.30, 27.56, 990.00, 0.00, 0.00, 270.00);
CreateDynamicObject(646, 130.44, 30.00, 989.44, 0.00, 0.00, 0.00);
CreateDynamicObject(646, 130.44, 25.13, 989.44, 0.00, 0.00, 0.00);
CreateDynamicObject(2331, 127.41, 35.97, 988.33, 0.00, 0.00, 342.13);
CreateDynamicObject(2331, 130.78, 34.87, 988.33, 0.00, 0.00, 342.13);
CreateDynamicObject(2106, 130.78, 34.87, 988.75, 0.00, 0.00, 0.00);
CreateDynamicObject(2106, 127.41, 35.97, 988.75, 0.00, 0.00, 0.00);
CreateDynamicObject(1734, 127.10, 32.50, 991.40, 0.00, 0.00, 0.00);
CreateDynamicObject(1734, 127.10, 23.13, 991.40, 0.00, 0.00, 0.00);
CreateDynamicObject(1734, 119.00, 23.68, 991.40, 0.00, 0.00, 0.00);
CreateDynamicObject(1734, 119.00, 32.81, 991.40, 0.00, 0.00, 0.00);
CreateDynamicObject(1734, 104.95, 32.81, 991.40, 0.00, 0.00, 0.00);
CreateDynamicObject(1734, 95.71, 32.81, 991.40, 0.00, 0.00, 0.00);
CreateDynamicObject(1734, 95.71, 23.68, 991.40, 0.00, 0.00, 0.00);
CreateDynamicObject(1734, 104.95, 23.68, 991.40, 0.00, 0.00, 0.00);
CreateDynamicObject(19379, 116.22, 43.16, 988.00, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 105.78, 43.16, 988.00, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 95.47, 43.16, 988.00, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 84.97, 43.16, 988.00, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 126.72, 52.79, 988.00, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 116.22, 52.79, 988.00, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 105.86, 52.79, 988.00, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 95.47, 52.79, 988.00, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 84.97, 52.79, 988.00, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 127.41, 62.65, 986.64, 0.00, 75.00, 270.00);
CreateDynamicObject(19379, 117.78, 62.64, 986.64, 0.00, 75.00, 270.00);
CreateDynamicObject(19379, 108.14, 62.64, 986.64, 0.00, 75.00, 270.00);
CreateDynamicObject(19379, 98.51, 62.64, 986.64, 0.00, 75.00, 270.00);
CreateDynamicObject(19379, 88.88, 62.64, 986.64, 0.00, 75.00, 270.00);
CreateDynamicObject(19379, 117.78, 72.04, 984.11, 0.00, 75.00, 270.00);
CreateDynamicObject(19379, 108.14, 72.04, 984.11, 0.00, 75.00, 270.00);
CreateDynamicObject(19379, 98.51, 72.04, 984.11, 0.00, 75.00, 270.00);
CreateDynamicObject(19379, 88.88, 72.04, 984.11, 0.00, 75.00, 270.00);
CreateDynamicObject(1723, 113.00, 59.41, 987.57, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 121.60, 59.41, 987.57, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 109.30, 59.41, 987.57, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 105.60, 59.41, 987.57, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 93.30, 59.41, 987.57, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 97.00, 59.41, 987.57, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 89.57, 59.41, 987.57, 3.00, 0.00, 180.00);
CreateDynamicObject(19379, 79.25, 62.64, 986.64, 0.00, 75.00, 270.00);
CreateDynamicObject(19379, 79.25, 72.04, 984.11, 0.00, 75.00, 270.00);
CreateDynamicObject(1723, 129.00, 59.41, 987.57, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 125.30, 59.41, 987.57, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 129.00, 62.71, 986.70, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 129.00, 66.01, 985.80, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 129.00, 69.31, 984.90, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 129.00, 72.61, 984.00, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 129.00, 75.91, 983.10, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 125.30, 75.91, 983.10, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 121.60, 75.91, 983.10, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 113.00, 75.91, 983.10, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 109.30, 75.91, 983.10, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 105.60, 75.91, 983.10, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 97.00, 75.91, 983.10, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 93.30, 75.91, 983.10, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 89.57, 75.91, 983.10, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 105.60, 72.61, 984.00, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 109.30, 69.31, 984.90, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 105.60, 62.71, 986.70, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 105.60, 66.01, 985.80, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 109.30, 62.71, 986.70, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 113.00, 66.01, 985.80, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 105.60, 69.31, 984.90, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 109.30, 72.61, 984.00, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 113.00, 72.58, 984.00, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 113.00, 69.31, 984.90, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 109.30, 66.01, 985.80, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 113.00, 62.71, 986.70, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 125.30, 62.71, 986.70, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 121.60, 66.01, 985.80, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 125.30, 69.31, 984.90, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 121.60, 72.61, 984.00, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 125.30, 72.61, 984.00, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 121.58, 69.33, 984.90, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 125.30, 66.01, 985.80, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 121.60, 62.71, 986.70, 3.00, 0.00, 180.00);
CreateDynamicObject(19379, 108.14, 81.12, 982.80, 0.00, 90.00, 270.00);
CreateDynamicObject(19379, 98.51, 81.00, 982.80, 0.00, 90.00, 270.00);
CreateDynamicObject(19379, 88.88, 81.00, 982.80, 0.00, 90.00, 270.00);
CreateDynamicObject(19379, 79.25, 81.00, 982.80, 0.00, 90.00, 270.00);
CreateDynamicObject(1723, 97.00, 66.01, 985.80, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 93.30, 69.31, 984.90, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 97.00, 72.61, 984.00, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 97.00, 62.71, 986.70, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 89.60, 66.01, 985.80, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 97.00, 69.31, 984.90, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 93.30, 62.71, 986.70, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 89.60, 62.71, 986.70, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 93.30, 72.61, 984.00, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 89.60, 72.61, 984.00, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 89.60, 69.31, 984.90, 3.00, 0.00, 180.00);
CreateDynamicObject(1723, 93.30, 66.01, 985.80, 3.00, 0.00, 180.00);
CreateDynamicObject(19379, 127.41, 72.04, 984.11, 0.00, 75.00, 270.00);
CreateDynamicObject(19379, 117.78, 81.21, 982.80, 0.00, 90.00, 270.00);
CreateDynamicObject(19379, 127.41, 81.00, 982.80, 0.00, 90.00, 270.00);
CreateDynamicObject(19379, 127.41, 85.23, 979.16, 0.00, 180.00, 270.00);
CreateDynamicObject(19379, 117.78, 85.23, 979.16, 0.00, 180.00, 270.00);
CreateDynamicObject(19379, 108.14, 85.23, 979.16, 0.00, 180.00, 270.00);
CreateDynamicObject(19379, 98.51, 85.23, 979.16, 0.00, 180.00, 270.00);
CreateDynamicObject(19379, 88.88, 85.23, 979.16, 0.00, 180.00, 270.00);
CreateDynamicObject(19379, 79.25, 85.24, 979.16, 0.00, 180.00, 270.00);
CreateDynamicObject(19378, 127.95, 90.08, 984.32, 0.00, 90.00, 0.00);
CreateDynamicObject(19378, 117.45, 90.08, 984.32, 0.00, 90.00, 0.00);
CreateDynamicObject(19378, 106.95, 90.08, 984.32, 0.00, 90.00, 0.00);
CreateDynamicObject(19378, 96.45, 90.08, 984.32, 0.00, 90.00, 0.00);
CreateDynamicObject(19378, 85.95, 90.08, 984.32, 0.00, 90.00, 0.00);
CreateDynamicObject(19378, 75.94, 90.08, 984.00, 0.00, 90.00, 0.00);
CreateDynamicObject(19378, 76.10, 99.34, 984.00, 0.00, 90.00, 0.00);
CreateDynamicObject(19378, 85.95, 99.71, 984.32, 0.00, 90.00, 0.00);
CreateDynamicObject(19378, 96.45, 99.71, 984.32, 0.00, 90.00, 0.00);
CreateDynamicObject(19378, 106.95, 99.71, 984.32, 0.00, 90.00, 0.00);
CreateDynamicObject(19378, 117.45, 99.71, 984.32, 0.00, 90.00, 0.00);
CreateDynamicObject(19378, 127.95, 99.71, 984.32, 0.00, 90.00, 0.00);
CreateDynamicObject(19381, 131.76, 89.25, 987.65, 0.00, 0.00, 0.00);
CreateDynamicObject(19381, 131.76, 98.88, 987.65, 0.00, 0.00, 0.00);
CreateDynamicObject(19381, 127.18, 103.47, 998.15, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 117.54, 103.47, 987.65, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 107.91, 103.47, 987.65, 0.00, 0.00, 90.00);
CreateDynamicObject(0, 78.79, 103.47, 987.65, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 88.67, 103.48, 987.65, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 82.24, 104.17, 992.65, 0.00, 0.00, 180.00);
CreateDynamicObject(19381, 82.24, 75.27, 992.65, 0.00, 0.00, 180.00);
CreateDynamicObject(19381, 82.24, 65.64, 992.65, 0.00, 0.00, 180.00);
CreateDynamicObject(19381, 82.24, 46.38, 992.65, 0.00, 0.00, 180.00);
CreateDynamicObject(19381, 82.24, 56.01, 992.65, 0.00, 0.00, 180.00);
CreateDynamicObject(19381, 82.24, 84.91, 992.65, 0.00, 0.00, 180.00);
CreateDynamicObject(19381, 82.24, 94.54, 992.65, 0.00, 0.00, 180.00);
CreateDynamicObject(19381, 88.67, 103.48, 998.15, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 98.29, 103.47, 998.15, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 107.91, 103.47, 998.15, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 117.54, 103.47, 998.15, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 79.44, 42.00, 992.65, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 98.70, 42.00, 992.65, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 89.07, 42.00, 992.65, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 108.33, 42.00, 992.65, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 117.95, 42.00, 992.65, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 127.58, 42.00, 992.65, 0.00, 0.00, 90.00);
CreateDynamicObject(19379, 129.19, 60.30, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 129.19, 41.03, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 118.69, 41.03, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 97.69, 41.03, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 108.19, 41.03, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 87.19, 41.03, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 108.19, 50.67, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 129.19, 50.67, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 108.19, 69.93, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 129.19, 69.93, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 108.19, 79.56, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 108.19, 60.30, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 97.69, 50.67, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 97.69, 89.20, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 87.19, 50.67, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 129.19, 89.20, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 129.19, 108.47, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 108.19, 89.20, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 118.69, 108.47, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 97.69, 108.47, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 97.69, 98.83, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 87.19, 108.47, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 87.19, 98.83, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 87.19, 89.20, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 97.69, 79.56, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 129.19, 79.56, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 118.69, 98.83, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 108.19, 108.47, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 129.19, 98.83, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 97.69, 60.30, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 97.69, 69.93, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 87.19, 69.93, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 87.19, 79.56, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 87.19, 60.30, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 108.19, 98.83, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(1726, 98.00, 42.69, 988.08, 0.00, 0.00, 180.00);
CreateDynamicObject(1726, 101.00, 42.69, 988.08, 0.00, 0.00, 180.00);
CreateDynamicObject(1726, 104.00, 42.69, 988.08, 0.00, 0.00, 180.00);
CreateDynamicObject(1726, 107.00, 42.69, 988.08, 0.00, 0.00, 180.00);
CreateDynamicObject(1557, 122.20, 42.07, 988.07, 0.00, 0.00, 0.00);
CreateDynamicObject(1557, 125.22, 42.07, 988.07, 0.00, 0.00, 180.00);
CreateDynamicObject(646, 121.11, 42.98, 989.46, 0.00, 0.00, 320.00);
CreateDynamicObject(646, 126.28, 42.98, 989.46, 0.00, 0.00, 320.00);
CreateDynamicObject(646, 126.28, 46.00, 989.46, 0.00, 0.00, 320.00);
CreateDynamicObject(646, 121.11, 46.00, 989.46, 0.00, 0.00, 320.00);
CreateDynamicObject(3084, 88.55, 85.62, 996.32, -30.00, 0.00, 180.00);
CreateDynamicObject(3084, 100.97, 85.62, 996.32, -30.00, 0.00, 180.00);
CreateDynamicObject(3084, 113.25, 85.62, 996.32, -30.00, 0.00, 180.00);
CreateDynamicObject(3084, 125.64, 85.62, 996.32, -30.00, 0.00, 180.00);
CreateDynamicObject(2232, 130.63, 87.41, 984.99, 0.00, 0.00, 309.86);
CreateDynamicObject(2232, 130.17, 87.96, 986.19, 0.00, 0.00, 309.86);
CreateDynamicObject(2232, 83.83, 87.42, 984.99, 0.00, 0.00, 43.21);
CreateDynamicObject(19145, 82.46, 73.39, 996.00, 0.00, 0.00, 232.29);
CreateDynamicObject(19145, 82.46, 68.90, 996.00, 0.00, 0.00, 232.29);
CreateDynamicObject(19145, 84.00, 85.37, 997.00, -10.00, 0.00, 180.00);
CreateDynamicObject(19145, 88.00, 85.37, 997.00, -10.00, 0.00, 180.00);
CreateDynamicObject(19145, 92.00, 85.37, 997.00, -10.00, 0.00, 180.00);
CreateDynamicObject(19145, 96.00, 85.37, 997.00, -10.00, 0.00, 180.00);
CreateDynamicObject(19145, 100.00, 85.37, 997.00, -10.00, 0.00, 180.00);
CreateDynamicObject(19145, 104.00, 85.37, 997.00, -10.00, 0.00, 180.00);
CreateDynamicObject(19145, 108.00, 85.37, 997.00, -10.00, 0.00, 180.00);
CreateDynamicObject(19145, 112.00, 85.37, 997.00, -10.00, 0.00, 180.00);
CreateDynamicObject(19145, 116.00, 85.37, 997.00, -10.00, 0.00, 180.00);
CreateDynamicObject(19145, 120.00, 85.37, 997.00, -10.00, 0.00, 180.00);
CreateDynamicObject(19145, 124.00, 85.37, 997.00, -10.00, 0.00, 180.00);
CreateDynamicObject(19145, 128.00, 85.37, 997.00, -10.00, 0.00, 180.00);
CreateDynamicObject(16000, 108.44, 103.30, 996.03, 0.00, 180.00, 180.00);
CreateDynamicObject(19381, 131.76, 50.74, 987.65, 0.00, 0.00, 0.00);
CreateDynamicObject(19381, 131.76, 41.11, 987.65, 0.00, 0.00, 0.00);
CreateDynamicObject(19381, 131.76, 60.37, 987.65, 0.00, 0.00, 0.00);
CreateDynamicObject(19381, 131.76, 69.99, 987.65, 0.00, 0.00, 0.00);
CreateDynamicObject(19381, 131.76, 79.62, 987.65, 0.00, 0.00, 0.00);
Palo = CreateObject(3437, 82.35, 87.96, 990.31, 0.00, 0.00, 90.00);
Palo2 = CreateObject(3437, 82.35, 90.20, 990.31, 0.00, 0.00, 90.00);
Palo3 = CreateObject(3437, 82.35, 92.32, 990.31, 0.00, 0.00, 90.00);
Palo4 = CreateObject(3437, 82.35, 94.54, 990.31, 0.00, 0.00, 90.00);
Palo5 = CreateObject(3437, 82.45, 96.77, 990.31, 0.00, 0.00, 90.00);
Palo6 = CreateObject(3437, 82.34, 98.90, 990.31, 0.00, 0.00, 90.00);
Palo7 = CreateObject(3437, 82.36, 100.99, 990.31, 0.00, 0.00, 90.00);
Palo8 = CreateObject(3437, 82.36, 102.76, 990.31, 0.00, 0.00, 90.00);
CreateDynamicObject(2232, 84.35, 87.91, 984.99, 0.00, 0.00, 43.21);
CreateDynamicObject(2232, 83.83, 87.42, 986.19, 0.00, 0.00, 43.21);
CreateDynamicObject(2232, 83.83, 87.42, 987.39, 0.00, 0.00, 43.21);
CreateDynamicObject(2232, 84.35, 87.91, 987.39, 0.00, 0.00, 43.21);
CreateDynamicObject(2232, 84.35, 87.91, 986.19, 0.00, 0.00, 43.21);
CreateDynamicObject(2232, 84.35, 87.91, 988.59, 0.00, 0.00, 43.21);
CreateDynamicObject(2232, 83.83, 87.42, 988.59, 0.00, 0.00, 43.21);
CreateDynamicObject(2232, 83.83, 87.42, 989.79, 0.00, 0.00, 43.21);
CreateDynamicObject(2232, 84.35, 87.91, 989.79, 0.00, 0.00, 43.21);
CreateDynamicObject(2232, 84.35, 87.91, 990.99, 0.00, 0.00, 43.21);
CreateDynamicObject(2232, 83.83, 87.42, 990.99, 0.00, 0.00, 43.21);
CreateDynamicObject(2232, 130.63, 87.41, 986.19, 0.00, 0.00, 309.86);
CreateDynamicObject(2232, 130.17, 87.96, 984.99, 0.00, 0.00, 309.86);
CreateDynamicObject(2232, 130.63, 87.41, 987.39, 0.00, 0.00, 309.86);
CreateDynamicObject(2232, 130.17, 87.96, 987.39, 0.00, 0.00, 309.86);
CreateDynamicObject(2232, 130.63, 87.41, 989.79, 0.00, 0.00, 309.86);
CreateDynamicObject(2232, 130.17, 87.96, 989.79, 0.00, 0.00, 309.86);
CreateDynamicObject(2232, 130.63, 87.41, 988.59, 0.00, 0.00, 309.86);
CreateDynamicObject(2232, 130.17, 87.96, 988.59, 0.00, 0.00, 309.86);
CreateDynamicObject(2232, 130.63, 87.41, 990.99, 0.00, 0.00, 309.86);
CreateDynamicObject(2232, 130.17, 87.96, 990.99, 0.00, 0.00, 309.86);
CreateDynamicObject(19145, 131.58, 73.39, 996.00, 0.00, 0.00, 140.32);
CreateDynamicObject(19145, 131.58, 68.90, 996.00, 0.00, 0.00, 140.32);
CreateDynamicObject(2773, 121.06, 44.30, 988.59, 0.00, 0.00, 0.00);
CreateDynamicObject(2773, 126.28, 44.30, 988.59, 0.00, 0.00, 0.00);
CreateDynamicObject(2773, 126.28, 47.30, 988.59, 0.00, 0.00, 0.00);
CreateDynamicObject(646, 126.28, 49.00, 989.46, 0.00, 0.00, 320.00);
CreateDynamicObject(2773, 121.06, 47.30, 988.59, 0.00, 0.00, 0.00);
CreateDynamicObject(646, 121.11, 49.00, 989.46, 0.00, 0.00, 320.00);
CreateDynamicObject(8614, 86.50, 84.31, 983.17, 0.00, 0.00, 0.00);
CreateDynamicObject(14629, 123.73, 62.83, 998.00, 0.00, 0.00, 0.00);
CreateDynamicObject(14629, 100.84, 62.83, 998.00, 0.00, 0.00, 0.00);
CreateDynamicObject(19379, 118.69, 89.20, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 118.69, 79.56, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 118.69, 69.93, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 118.69, 60.30, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(19379, 118.69, 50.67, 997.70, 0.00, 90.00, 0.00);
CreateDynamicObject(646, 111.26, 36.28, 989.47, 0.00, 0.00, 0.00);
CreateDynamicObject(646, 115.85, 36.28, 989.47, 0.00, 0.00, 0.00);
CreateDynamicObject(2773, 115.85, 34.35, 988.58, 0.00, 0.00, 0.00);
CreateDynamicObject(2773, 111.26, 34.35, 988.58, 0.00, 0.00, 0.00);
CreateDynamicObject(646, 111.26, 32.70, 989.47, 0.00, 0.00, 0.00);
CreateDynamicObject(646, 115.85, 32.70, 989.47, 0.00, 0.00, 0.00);
CreateDynamicObject(1726, 105.60, 78.70, 983.00, 0.00, 0.00, 180.00);
CreateDynamicObject(1726, 109.30, 78.70, 983.00, 0.00, 0.00, 180.00);
CreateDynamicObject(1726, 113.00, 78.70, 983.00, 0.00, 0.00, 180.00);
CreateDynamicObject(19381, 131.76, 41.11, 998.15, 0.00, 0.00, 0.00);
CreateDynamicObject(19381, 131.76, 50.74, 998.15, 0.00, 0.00, 0.00);
CreateDynamicObject(19381, 131.76, 60.37, 998.15, 0.00, 0.00, 0.00);
CreateDynamicObject(19381, 131.76, 69.99, 998.15, 0.00, 0.00, 0.00);
CreateDynamicObject(19381, 131.76, 79.62, 998.15, 0.00, 0.00, 0.00);
CreateDynamicObject(19381, 131.76, 89.25, 998.15, 0.00, 0.00, 0.00);
CreateDynamicObject(19381, 131.75, 98.88, 998.15, 0.00, 0.00, 0.00);
CreateDynamicObject(19381, 127.18, 103.47, 987.65, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 98.29, 103.47, 987.65, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 79.04, 103.48, 987.65, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 79.04, 103.48, 998.15, 0.00, 0.00, 90.00);
CreateDynamicObject(19381, 82.24, 84.91, 982.15, 0.00, 0.00, 180.00);
CreateDynamicObject(19381, 82.24, 75.28, 982.15, 0.00, 0.00, 180.00);
CreateDynamicObject(19381, 82.24, 65.65, 982.15, 0.00, 0.00, 180.00);
CreateDynamicObject(19381, 82.24, 56.06, 982.15, 0.00, 0.00, 180.00);
CreateDynamicObject(1825, 105.33, 24.50, 988.02, 0.00, 0.00, 0.00);
CreateDynamicObject(1825, 100.67, 28.74, 988.02, 0.00, 0.00, 0.00);
CreateDynamicObject(1825, 100.67, 24.50, 988.02, 0.00, 0.00, 0.00);
CreateDynamicObject(1825, 105.33, 28.74, 988.02, 0.00, 0.00, 0.00);
CreateDynamicObject(19379, 126.72, 43.16, 988.00, 0.00, 90.00, 0.00);
Maquina = CreateObject(2780, 93.68628, 86.04525, 984.40668,   0.00000, 0.00000, 0.00000);
Maquina1 = CreateObject(2780, 96.46304, 86.18611, 984.40668,   0.00000, 0.00000, 0.00000);
Maquina2 = CreateObject(2780, 98.88654, 86.13411, 984.40668,   0.00000, 0.00000, 0.00000);
Maquina3 = CreateObject(2780, 102.98772, 86.10148, 984.40668,   0.00000, 0.00000, 0.00000);
Maquina4 = CreateObject(2780, 106.65063, 86.14000, 984.40668,   0.00000, 0.00000, 0.00000);
Maquina5 = CreateObject(2780, 93.68628, 86.04525, 984.40668,   0.00000, 0.00000, 0.00000);
Maquina6 = CreateObject(2780, 109.65825, 86.28993, 984.40668,   0.00000, 0.00000, 0.00000);
Maquina7 = CreateObject(2780, 106.70016, 86.31421, 984.40668,   0.00000, 0.00000, 0.00000);
Maquina8 = CreateObject(2780, 114.51192, 86.54688, 984.40668,   0.00000, 0.00000, 0.00000);
Maquina9 = CreateObject(2780, 119.73837, 86.37307, 984.40668,   0.00000, 0.00000, 0.00000);
Maquina10 = CreateObject(2780, 126.44357, 86.26119, 984.40668,   0.00000, 0.00000, 0.00000);
//==============================================================================
	UpdateConfig();
	#if defined DISPLAY_CONFIG
	ConfigInConsole();
	#endif
	KillTimer(rCounter);
	KillTimer(CountTimer);
	Loop(i, MAX_PLAYERS)
	{
		DisablePlayerRaceCheckpoint(i);
		DestroyVehicle(CreatedRaceVeh[i]);
		Joined[i] = false;
		DisableRemoteVehicleCollisions(i, 0);
        PlayerInfo[i][GodCar] = 0;
		KillTimer(InfoTimer[i]);
	}
	JoinCount = 0;
	FinishCount = 0;
	TimeProgress = 0;
	AutomaticRace = false;
	//Usarvwarn = 1;
	//Evento
	EventInfo[Xq] = 0;
	EventInfo[Yq] = 0;
	EventInfo[Zq] = 0;
	EventInfo[Aq] = 0;
	EventInfo[VirtualWorld] = 0;
	EventInfo[Interior] = 0;
	EventInfo[Criado] = 0;
	EventInfo[Cerrado] = 0;
	EventInfo[Aberto] = 0;
	EventInfo[Premio1] = 0;
	EventInfo[Premio2] = 0;
	EventInfo[Premio3] = 0;
	EventInfo[PremioS] = 0;
	EventInfo[PremioN] = 0;
	EventInfo[Carro] = 0;
	EventInfo[Cor1] = 0;
	EventInfo[Cor2] = 0;
	EventInfo[Arma] = 0;
	EventInfo[Vida] = 0;
		SetTimer("TIMER_DCallbacks", UpdateConfig1, 1);
    if(!dini_Exists(CFG))
    {
    	dini_Create(CFG);
	    dini_IntSet(CFG,"GANG_NUMBER",0);
	    dini_IntSet(CFG,"ZONE_NUMBER",0);
	}

	GANG_NUMBER = dini_Int(CFG,"GANG_NUMBER");
	ZONE_NUMBER = dini_Int(CFG,"ZONE_NUMBER");

	for(new i = 0; i <= GANG_NUMBER; i++)
	{
		new file[100];
		format(file, sizeof(file), GANG_FILE, i);
		if(dini_Exists(file)) {
			GangInfo[i][GANG_ID] = i;
			strcat(GangInfo[i][GANG_NAME], dini_Get(file, "GANG_NAME"),strlen(dini_Get(file, "GANG_NAME"))+1);
			GangInfo[i][GANG_MEMBERS] = dini_Int(file, "GANG_MEMBERS");
			//GangInfo[i][GANG_COLOR] = RandomColors[i];
			GangInfo[i][GANG_COLOR] = dini_Int(file, "COLOR");
			for(new l; l < ZONE_NUMBER; l++)
			{
			    format(file, sizeof(file), ZONE_FILE, l);
			    if(dini_Exists(file) && GangInfo[i][GANG_ID] == dini_Int(file,"ZONE_GANGID")) GangInfo[i][GANG_NZONE]++;
			}
		}
	}

	for(new i = 0; i <= ZONE_NUMBER; i++)
	{
	    new file[100];
	    format(file, sizeof(file), ZONE_FILE, i);
		if(dini_Exists(file))
		{
		    ZoneInfo[i][ZONE_GANGID] = dini_Int(file,"ZONE_GANGID");
			ZoneInfo[i][ZONE_ID] = i;
			ZoneInfo[i][ZONE_COLOR] = RandomColors[ZoneInfo[i][ZONE_GANGID]];
			ZoneInfo[i][ZONE_X1] = dini_Float(file,"ZONE_X1");
			ZoneInfo[i][ZONE_Y1] = dini_Float(file,"ZONE_Y1");
			ZoneInfo[i][ZONE_X2] = dini_Float(file,"ZONE_X2");
			ZoneInfo[i][ZONE_Y2] = dini_Float(file,"ZONE_Y2");
			ZoneInfo[i][ZONE_GZID] = GangZoneCreate(ZoneInfo[i][ZONE_X1], ZoneInfo[i][ZONE_Y1], ZoneInfo[i][ZONE_X2], ZoneInfo[i][ZONE_Y2]);
			GangZoneShowForAll(ZoneInfo[i][ZONE_GZID], ZoneInfo[i][ZONE_COLOR]);
  			AddAreaCheck(ZoneInfo[i][ZONE_X1], ZoneInfo[i][ZONE_X2], ZoneInfo[i][ZONE_Y1], ZoneInfo[i][ZONE_Y2]);

			Invaders[i][i] = 0;
		} else if(!dini_Exists(file) && i != 0)	AddAreaCheck(1, 2, 1, 2);
	}
	//===================== [ The Menus ]===========================//
	#if defined USE_MENUS

	LMainMenu = CreateMenu("Menu Principal", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LMainMenu, 0, "Escoje una opcion");
	AddMenuItem(LMainMenu, 0, "Activar");
	AddMenuItem(LMainMenu, 0, "Desactivar");
    AddMenuItem(LMainMenu, 0, "Clima");
    AddMenuItem(LMainMenu, 0, "Tiempo");
 	AddMenuItem(LMainMenu, 0, "Vehiculo");
	AddMenuItem(LMainMenu, 0, "Vehiculo Admin");
	AddMenuItem(LMainMenu, 0, "Menu tuning");
	AddMenuItem(LMainMenu, 0, "Armas");
	AddMenuItem(LMainMenu, 0, "Teleports");
	AddMenuItem(LMainMenu, 0, "Salir");//

	AdminEnable = CreateMenu("~b~Configuracion ~g~ Menu",2, 55.0, 200.0, 150.0, 80.0);
	SetMenuColumnHeader(AdminEnable, 0, "Activar");
	AddMenuItem(AdminEnable, 0, "Anti Swear");
	AddMenuItem(AdminEnable, 0, "Bad Name Kick");
	AddMenuItem(AdminEnable, 0, "Anti Spam");
	AddMenuItem(AdminEnable, 0, "Ping Kick");
	AddMenuItem(AdminEnable, 0, "Read Cmds");
	AddMenuItem(AdminEnable, 0, "Read PMs");
	AddMenuItem(AdminEnable, 0, "Capital Letters");
	AddMenuItem(AdminEnable, 0, "ConnectMessages");
	AddMenuItem(AdminEnable, 0, "AdminCmdMessages");
	AddMenuItem(AdminEnable, 0, "Auto Login");
	AddMenuItem(AdminEnable, 0, "Volver");

	AdminDisable = CreateMenu("~b~Configuracion ~g~ Menu",2, 55.0, 200.0, 150.0, 80.0);
	SetMenuColumnHeader(AdminDisable, 0, "Desactivar");
	AddMenuItem(AdminDisable, 0, "Anti Swear");
	AddMenuItem(AdminDisable, 0, "Bad Name Kick");
	AddMenuItem(AdminDisable, 0, "Anti Spam");
	AddMenuItem(AdminDisable, 0, "Ping Kick");
	AddMenuItem(AdminDisable, 0, "Read Cmds");
	AddMenuItem(AdminDisable, 0, "Read PMs");
	AddMenuItem(AdminDisable, 0, "Capital Letters");
	AddMenuItem(AdminDisable, 0, "ConnectMessages");
	AddMenuItem(AdminDisable, 0, "AdminCmdMessages");
	AddMenuItem(AdminDisable, 0, "Auto Login");
	AddMenuItem(AdminDisable, 0, "Return");

	LWeather = CreateMenu("~b~Clima ~g~ Menu",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LWeather, 0, "Set Clima");
	AddMenuItem(LWeather, 0, "Cielo Azul");
	AddMenuItem(LWeather, 0, "Tormenta De Arena");
	AddMenuItem(LWeather, 0, "Tormenta Electrica");
	AddMenuItem(LWeather, 0, "Nebuloso");
	AddMenuItem(LWeather, 0, "Nublado");
	AddMenuItem(LWeather, 0, "Marea Alta");
	AddMenuItem(LWeather, 0, "Cielo Violeta");
	AddMenuItem(LWeather, 0, "Negro/Cielo Blanco");
	AddMenuItem(LWeather, 0, "Oscuro, Cielo Verde");
	AddMenuItem(LWeather, 0, "Ola de calor");
	AddMenuItem(LWeather,0,"Return");

	LTime = CreateMenu("~b~Tiempo ~g~ Menu", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LTime, 0, "Set Time");
	AddMenuItem(LTime, 0, "Manana");
	AddMenuItem(LTime, 0, "Medio Dia");
	AddMenuItem(LTime, 0, "Tarde");
	AddMenuItem(LTime, 0, "Anocheciendo");
	AddMenuItem(LTime, 0, "Noche");
    AddMenuItem(LTime, 0, "Return");

	LCars = CreateMenu("~b~LethaL ~g~Cars", 2,  55.0, 150.0, 100.0, 80.0);
	SetMenuColumnHeader(LCars, 0, "Choose a car");
	AddMenuItem(LCars, 0, "Turismo");
	AddMenuItem(LCars, 0, "Bandito");
	AddMenuItem(LCars, 0, "Vortex");
	AddMenuItem(LCars, 0, "NRG");
	AddMenuItem(LCars, 0, "S.W.A.T");
    AddMenuItem(LCars, 0, "Hunter");
    AddMenuItem(LCars, 0, "Jetmax (boat)");
    AddMenuItem(LCars, 0, "Rhino");
    AddMenuItem(LCars, 0, "Monster Truck");
    AddMenuItem(LCars, 0, "Sea Sparrow");
    AddMenuItem(LCars, 0, "More");
	AddMenuItem(LCars, 0, "Return");

	LCars2 = CreateMenu("~b~LethaL ~g~Cars", 2,  55.0, 150.0, 100.0, 80.0);
	SetMenuColumnHeader(LCars2, 0, "Choose a car");
	AddMenuItem(LCars2, 0, "Dumper");
    AddMenuItem(LCars2, 0, "RC Tank");
    AddMenuItem(LCars2, 0, "RC Bandit");
    AddMenuItem(LCars2, 0, "RC Baron");
    AddMenuItem(LCars2, 0, "RC Goblin");
    AddMenuItem(LCars2, 0, "RC Raider");
    AddMenuItem(LCars2, 0, "RC Cam");
    AddMenuItem(LCars2, 0, "Tram");
	AddMenuItem(LCars2, 0, "Return");

	LTuneMenu = CreateMenu("~b~Tuning ~g~ Menu",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LTuneMenu, 0, "Add to car");
	AddMenuItem(LTuneMenu,0,"NOS");
	AddMenuItem(LTuneMenu,0,"Hydraulics");
	AddMenuItem(LTuneMenu,0,"Wire Wheels");
	AddMenuItem(LTuneMenu,0,"Twist Wheels");
	AddMenuItem(LTuneMenu,0,"Access Wheels");
	AddMenuItem(LTuneMenu,0,"Mega Wheels");
	AddMenuItem(LTuneMenu,0,"Import Wheels");
	AddMenuItem(LTuneMenu,0,"Atomic Wheels");
	AddMenuItem(LTuneMenu,0,"Offroad Wheels");
	AddMenuItem(LTuneMenu,0,"Classic Wheels");
	AddMenuItem(LTuneMenu,0,"Paint Jobs");
	AddMenuItem(LTuneMenu,0,"Return");

	PaintMenu = CreateMenu("~b~Paint Job ~g~ Menu",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(PaintMenu, 0, "Choose paint");
	AddMenuItem(PaintMenu,0,"Paint Job 1");
	AddMenuItem(PaintMenu,0,"Paint Job 2");
	AddMenuItem(PaintMenu,0,"Paint Job 3");
	AddMenuItem(PaintMenu,0,"Paint Job 4");
	AddMenuItem(PaintMenu,0,"Paint Job 5");
	AddMenuItem(PaintMenu,0,"Black");
	AddMenuItem(PaintMenu,0,"White");
	AddMenuItem(PaintMenu,0,"Blue");
	AddMenuItem(PaintMenu,0,"Pink");
	AddMenuItem(PaintMenu,0,"Return");

	LVehicles = CreateMenu("~b~Vehicles ~g~ Menu",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LVehicles, 0, "Choose a car");
	AddMenuItem(LVehicles,0,"2-door Cars");
	AddMenuItem(LVehicles,0,"4-door Cars");
	AddMenuItem(LVehicles,0,"Fast Cars");
	AddMenuItem(LVehicles,0,"Other Vehicles");
	AddMenuItem(LVehicles,0,"Bikes");
	AddMenuItem(LVehicles,0,"Boats");
	AddMenuItem(LVehicles,0,"Planes");
	AddMenuItem(LVehicles,0,"Helicopters");
	AddMenuItem(LVehicles,0,"Return");

 	twodoor = CreateMenu("~b~2-door Cars",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(twodoor, 0, "Choose a car");
	AddMenuItem(twodoor,0,"Feltzer");//533
	AddMenuItem(twodoor,0,"Stallion");//139
	AddMenuItem(twodoor,0,"Windsor");//555
	AddMenuItem(twodoor,0,"Bobcat");//422
	AddMenuItem(twodoor,0,"Yosemite");//554
	AddMenuItem(twodoor,0,"Broadway");//575
	AddMenuItem(twodoor,0,"Blade");//536
	AddMenuItem(twodoor,0,"Slamvan");//535
	AddMenuItem(twodoor,0,"Tornado");//576
	AddMenuItem(twodoor,0,"Bravura");//401
	AddMenuItem(twodoor,0,"Fortune");//526
	AddMenuItem(twodoor,0,"Return");

 	fourdoor = CreateMenu("~b~4-door Cars",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(fourdoor, 0, "Choose a car");
	AddMenuItem(fourdoor,0,"Perenniel");//404
	AddMenuItem(fourdoor,0,"Tahoma");//566
	AddMenuItem(fourdoor,0,"Voodoo");//412
	AddMenuItem(fourdoor,0,"Admiral");//445
	AddMenuItem(fourdoor,0,"Elegant");//507
	AddMenuItem(fourdoor,0,"Glendale");//466
	AddMenuItem(fourdoor,0,"Intruder");//546
	AddMenuItem(fourdoor,0,"Merit");//551
	AddMenuItem(fourdoor,0,"Oceanic");//467
	AddMenuItem(fourdoor,0,"Premier");//426
	AddMenuItem(fourdoor,0,"Sentinel");//405
	AddMenuItem(fourdoor,0,"Return");

 	fastcar = CreateMenu("~b~Fast Cars",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(fastcar, 0, "Choose a car");
	AddMenuItem(fastcar,0,"Comet");//480
	AddMenuItem(fastcar,0,"Buffalo");//402
	AddMenuItem(fastcar,0,"Cheetah");//415
	AddMenuItem(fastcar,0,"Euros");//587
	AddMenuItem(fastcar,0,"Hotring Racer");//494
	AddMenuItem(fastcar,0,"Infernus");//411
	AddMenuItem(fastcar,0,"Phoenix");//603
	AddMenuItem(fastcar,0,"Super GT");//506
	AddMenuItem(fastcar,0,"Turismo");//451
	AddMenuItem(fastcar,0,"ZR-350");//477
	AddMenuItem(fastcar,0,"Bullet");//541
	AddMenuItem(fastcar,0,"Return");

 	Othercars = CreateMenu("~b~Other Vehicles",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(Othercars, 0, "Choose a car?");
	AddMenuItem(Othercars,0,"Monster Truck");//556
	AddMenuItem(Othercars,0,"Trashmaster");//408
	AddMenuItem(Othercars,0,"Bus");//431
	AddMenuItem(Othercars,0,"Coach");//437
	AddMenuItem(Othercars,0,"Enforcer");//427
	AddMenuItem(Othercars,0,"Rhino (Tank)");//432
	AddMenuItem(Othercars,0,"S.W.A.T.Truck");//601
	AddMenuItem(Othercars,0,"Cement Truck");//524
	AddMenuItem(Othercars,0,"Flatbed");//455
	AddMenuItem(Othercars,0,"BF Injection");//424
	AddMenuItem(Othercars,0,"Dune");//573
	AddMenuItem(Othercars,0,"Return");

 	bikes = CreateMenu("~b~Bikes",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(bikes, 0, "Choose a bike");
	AddMenuItem(bikes,0,"BF-400");
	AddMenuItem(bikes,0,"BMX");
	AddMenuItem(bikes,0,"Faggio");
	AddMenuItem(bikes,0,"FCR-900");
	AddMenuItem(bikes,0,"Freeway");
	AddMenuItem(bikes,0,"NRG-500");
	AddMenuItem(bikes,0,"PCJ-600");
	AddMenuItem(bikes,0,"Pizzaboy");
	AddMenuItem(bikes,0,"Quad");
	AddMenuItem(bikes,0,"Sanchez");
	AddMenuItem(bikes,0,"Wayfarer");
	AddMenuItem(bikes,0,"Return");

 	boats = CreateMenu("~b~Boats",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(boats, 0, "Choose a boat");
	AddMenuItem(boats,0,"Coastguard");//472
	AddMenuItem(boats,0,"Dingy");//473
	AddMenuItem(boats,0,"Jetmax");//493
	AddMenuItem(boats,0,"Launch");//595
	AddMenuItem(boats,0,"Marquis");//484
	AddMenuItem(boats,0,"Predator");//430
	AddMenuItem(boats,0,"Reefer");//453
	AddMenuItem(boats,0,"Speeder");//452
	AddMenuItem(boats,0,"Squallo");//446
	AddMenuItem(boats,0,"Tropic");//454
	AddMenuItem(boats,0,"Return");

 	planes = CreateMenu("~b~Planes",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(planes, 0, "Choose a plane");
	AddMenuItem(planes,0,"Andromada");//592
	AddMenuItem(planes,0,"AT400");//577
	AddMenuItem(planes,0,"Beagle");//511
	AddMenuItem(planes,0,"Cropduster");//512
	AddMenuItem(planes,0,"Dodo");//593
	AddMenuItem(planes,0,"Hydra");//520
	AddMenuItem(planes,0,"Nevada");//553
	AddMenuItem(planes,0,"Rustler");//476
	AddMenuItem(planes,0,"Shamal");//519
	AddMenuItem(planes,0,"Skimmer");//460
	AddMenuItem(planes,0,"Stuntplane");//513
	AddMenuItem(planes,0,"Return");

	helicopters = CreateMenu("~b~Helicopters",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(helicopters, 0, "Choose a helicopter");
	AddMenuItem(helicopters,0,"Cargobob");//
	AddMenuItem(helicopters,0,"Hunter");//
	AddMenuItem(helicopters,0,"Leviathan");//
	AddMenuItem(helicopters,0,"Maverick");//
	AddMenuItem(helicopters,0,"News Chopper");//
	AddMenuItem(helicopters,0,"Police Maverick");//
	AddMenuItem(helicopters,0,"Raindance");//
	AddMenuItem(helicopters,0,"Seasparrow");//
	AddMenuItem(helicopters,0,"Sparrow");//
	AddMenuItem(helicopters,0,"Return");

 	XWeapons = CreateMenu("~b~Weapons ~g~Main Menu",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(XWeapons, 0, "Choose a weapon");
	AddMenuItem(XWeapons,0,"Desert Eagle");//0
	AddMenuItem(XWeapons,0,"M4");
	AddMenuItem(XWeapons,0,"Sawnoff Shotgun");
	AddMenuItem(XWeapons,0,"Combat Shotgun");
	AddMenuItem(XWeapons,0,"UZI");
	AddMenuItem(XWeapons,0,"Rocket Launcher");
	AddMenuItem(XWeapons,0,"Minigun");//6
	AddMenuItem(XWeapons,0,"Sniper Rifle");
	AddMenuItem(XWeapons,0,"Big Weapons");
	AddMenuItem(XWeapons,0,"Small Weapons");//9
	AddMenuItem(XWeapons,0,"More");
	AddMenuItem(XWeapons,0,"Return");//11

 	XWeaponsBig = CreateMenu("~b~Weapons ~g~Big Weapons",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(XWeaponsBig, 0, "Choose a weapon");
	AddMenuItem(XWeaponsBig,0,"Shotgun");
	AddMenuItem(XWeaponsBig,0,"AK-47");
	AddMenuItem(XWeaponsBig,0,"Country Rifle");
	AddMenuItem(XWeaponsBig,0,"HS Rocket Launcher");
	AddMenuItem(XWeaponsBig,0,"Flamethrower");
	AddMenuItem(XWeaponsBig,0,"SMG");
	AddMenuItem(XWeaponsBig,0,"TEC9");
	AddMenuItem(XWeaponsBig,0,"Return");

 	XWeaponsSmall = CreateMenu("~b~Weapons ~g~Small Weapons",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(XWeaponsBig, 0, "Choose a weapon");
	AddMenuItem(XWeaponsSmall,0,"9mm");
	AddMenuItem(XWeaponsSmall,0,"Silenced 9mm");
	AddMenuItem(XWeaponsSmall,0,"Molotov Cocktail");
	AddMenuItem(XWeaponsSmall,0,"Fire Extinguisher");
	AddMenuItem(XWeaponsSmall,0,"Spraycan");
	AddMenuItem(XWeaponsSmall,0,"Frag Grenades");
	AddMenuItem(XWeaponsSmall,0,"Katana");
	AddMenuItem(XWeaponsSmall,0,"Chainsaw");
	AddMenuItem(XWeaponsSmall,0,"Return");

 	XWeaponsMore = CreateMenu("~b~Weapons ~g~More Weapons",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(XWeaponsBig, 0, "Choose a weapon");
	AddMenuItem(XWeaponsMore,0,"Jetpack");
	AddMenuItem(XWeaponsMore,0,"Knife");
	AddMenuItem(XWeaponsMore,0,"Flowers");
	AddMenuItem(XWeaponsMore,0,"Camera");
	AddMenuItem(XWeaponsMore,0,"Pool Cue");
	AddMenuItem(XWeaponsMore,0,"Baseball Bat");
	AddMenuItem(XWeaponsMore,0,"Golf Club");
	AddMenuItem(XWeaponsMore,0,"MAX AMMO");
	AddMenuItem(XWeaponsMore,0,"Return");

	LTele = CreateMenu("Teleports", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LTele, 0, "Teleport to where?");
	AddMenuItem(LTele, 0, "Las Venturas");//0
	AddMenuItem(LTele, 0, "Los Santos");//1
	AddMenuItem(LTele, 0, "San Fierro");//2
	AddMenuItem(LTele, 0, "The Desert");//3
	AddMenuItem(LTele, 0, "Flint Country");//4
	AddMenuItem(LTele, 0, "Mount Chiliad");//5
	AddMenuItem(LTele, 0, "Interiors");//6
	AddMenuItem(LTele, 0, "Return");//8

	LasVenturasMenu = CreateMenu("Las Venturas", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LasVenturasMenu, 0, "Teleport to where?");
	AddMenuItem(LasVenturasMenu, 0, "The Strip");//0
	AddMenuItem(LasVenturasMenu, 0, "Come-A-Lot");//1
	AddMenuItem(LasVenturasMenu, 0, "LV Airport");//2
	AddMenuItem(LasVenturasMenu, 0, "KACC Military Fuels");//3
	AddMenuItem(LasVenturasMenu, 0, "yellow Bell Golf Club");//4
	AddMenuItem(LasVenturasMenu, 0, "Baseball Pitch");//5
	AddMenuItem(LasVenturasMenu, 0, "Return");//6

	LosSantosMenu = CreateMenu("Los Santos", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LosSantosMenu, 0, "Teleport to where?");
	AddMenuItem(LosSantosMenu, 0, "Ganton");//0
	AddMenuItem(LosSantosMenu, 0, "LS Airport");//1
	AddMenuItem(LosSantosMenu, 0, "Ocean Docks");//2
	AddMenuItem(LosSantosMenu, 0, "Pershing Square");//3
	AddMenuItem(LosSantosMenu, 0, "Verdant Bluffs");//4
	AddMenuItem(LosSantosMenu, 0, "Santa Maria Beach");//5
	AddMenuItem(LosSantosMenu, 0, "Mulholland");//6
	AddMenuItem(LosSantosMenu, 0, "Richman");//7
	AddMenuItem(LosSantosMenu, 0, "Return");//8

	SanFierroMenu = CreateMenu("San Fierro", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(SanFierroMenu, 0, "Teleport to where?");
	AddMenuItem(SanFierroMenu, 0, "SF Station");//0
	AddMenuItem(SanFierroMenu, 0, "SF Airport");//1
	AddMenuItem(SanFierroMenu, 0, "Ocean Flats");//2
	AddMenuItem(SanFierroMenu, 0, "Avispa Country Club");//3
	AddMenuItem(SanFierroMenu, 0, "Easter Basin (docks)");//4
	AddMenuItem(SanFierroMenu, 0, "Esplanade North");//5
	AddMenuItem(SanFierroMenu, 0, "Battery Point");//6
	AddMenuItem(SanFierroMenu, 0, "Return");//7

	DesertMenu = CreateMenu("The Desert", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(DesertMenu, 0, "Teleport to where?");
	AddMenuItem(DesertMenu, 0, "Aircraft Graveyard");//0
	AddMenuItem(DesertMenu, 0, "Area 51");//1
	AddMenuItem(DesertMenu, 0, "The Big Ear");//2
	AddMenuItem(DesertMenu, 0, "The Sherman Dam");//3
	AddMenuItem(DesertMenu, 0, "Las Barrancas");//4
	AddMenuItem(DesertMenu, 0, "El Quebrados");//5
	AddMenuItem(DesertMenu, 0, "Octane Springs");//6
	AddMenuItem(DesertMenu, 0, "Return");//7

	FlintMenu = CreateMenu("Flint Country", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(FlintMenu, 0, "Teleport to where?");
	AddMenuItem(FlintMenu, 0, "The Lake");//0
	AddMenuItem(FlintMenu, 0, "Leafy Hollow");//1
	AddMenuItem(FlintMenu, 0, "The Farm");//2
	AddMenuItem(FlintMenu, 0, "Shady Cabin");//3
	AddMenuItem(FlintMenu, 0, "Flint Range");//4
	AddMenuItem(FlintMenu, 0, "Becon Hill");//5
	AddMenuItem(FlintMenu, 0, "Fallen Tree");//6
	AddMenuItem(FlintMenu, 0, "Return");//7

	MountChiliadMenu = CreateMenu("Mount Chiliad", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(MountChiliadMenu, 0, "Teleport to where?");
	AddMenuItem(MountChiliadMenu, 0, "Chiliad Jump");//0
	AddMenuItem(MountChiliadMenu, 0, "Bottom Of Chiliad");//1
	AddMenuItem(MountChiliadMenu, 0, "Highest Point");//2
	AddMenuItem(MountChiliadMenu, 0, "Chiliad Path");//3
	AddMenuItem(MountChiliadMenu, 0, "Return");//7

	InteriorsMenu = CreateMenu("Interiors", 2,  55.0, 200.0, 130.0, 80.0);
	SetMenuColumnHeader(InteriorsMenu, 0, "Teleport to where?");
	AddMenuItem(InteriorsMenu, 0, "Planning Department");//0
	AddMenuItem(InteriorsMenu, 0, "LV PD");//1
	AddMenuItem(InteriorsMenu, 0, "Pizza Stack");//2
	AddMenuItem(InteriorsMenu, 0, "RC Battlefield");//3
	AddMenuItem(InteriorsMenu, 0, "Caligula's Casino");//4
	AddMenuItem(InteriorsMenu, 0, "Big Smoke's Crack Palace");//5
	AddMenuItem(InteriorsMenu, 0, "Madd Dogg's Mansion");//6
	AddMenuItem(InteriorsMenu, 0, "Dirtbike Stadium");//7
	AddMenuItem(InteriorsMenu, 0, "Vice Stadium (duel)");//8
	AddMenuItem(InteriorsMenu, 0, "Ammu-nation");//9
	AddMenuItem(InteriorsMenu, 0, "Atrium");//7
	AddMenuItem(InteriorsMenu, 0, "Return");//8
	#endif
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) OnPlayerConnect(i);
	new year,month,day;	getdate(year, month, day);
	new hour,minute,second; gettime(hour,minute,second);
	//==========================================================================
		new
		randomip[16];
	for(new i = 0; i < 10; i++)
	{
		format(randomip, sizeof randomip, "%d.%d.%d.%d", random(255) + 1, random(255) + 1, random(255) + 1, random(255) + 1);
		new
			starttime = GetTickCount();
		printf("Prueba de Tiempo | ip: %s | PAÍS: %s", randomip, IpToCountry_db(randomip));
		printf("Tiempo: %dms", GetTickCount() - starttime);
	}
//================ Arena 1 ============================
p1duelo1 = CreateObject(988, 2646.205811, 1230.074219, 26.962353, 0.0000, 0.0000, 0.0000); //
p2duelo1 = CreateObject(988, 2646.165771, 1191.811157, 26.957216, 0.0000, 0.0000, 180.0001); //
//================ Arena 2 ============================
p1duelo2 = CreateObject(988,2763.49682600,-1463.63659600,66.96044900,0.00000000,0.00000000,0.00000000); //
p2duelo2 = CreateObject(988,2763.64697200,-1440.12060500,66.89225000,0.00000000,0.00000000,0.00000000); //
//================ Arena 3 ============================
p1duelo3 = CreateObject(988,-2053.42382800,-219.36978100,35.57739200,0.00000000,0.00000000,0.00000000); //
p2duelo3 = CreateObject(988,-2053.72045800,-166.42074500,35.57031200,0.00000000,0.00000000,0.00000000); //
//================ Arena 4 ============================
p1duelo4 = CreateObject(988,1060.63281200,1776.76892000,10.87031100,0.00000000,0.00000000,0.00000000); //
p2duelo4 = CreateObject(988,1059.23596100,1752.42065400,10.82031200,0.00000000,0.00000000,0.00000000); //
//================ Arena 5 ============================
p1duelo5 = CreateObject(988,2452.48120100,1043.03442300,57.50162500,0.00000000,0.00000000,90.00000000); //
p2duelo5 = CreateObject(988,2488.49853500,1043.49841300,57.52662600,0.00000000,0.00000000,90.00000000); //
//================ Arena 6 ============================
p1duelo6 = CreateObject(988,2463.60009700,2266.80004800,91.59999800,0.00000000,0.00000000,180.00000000); //
p2duelo6 = CreateObject(988,2463.80004800,2317.00000000,91.59999800,0.00000000,0.00000000,359.99450600); //
//==============================================================================

    ITextdraw0 = TextDrawCreate(22.000000, 130.000000, "Revolucion");
	TextDrawBackgroundColor(ITextdraw0, 65535);
	TextDrawFont(ITextdraw0, 1);
	TextDrawLetterSize(ITextdraw0, 0.549999, 1.600000);
	TextDrawColor(ITextdraw0, -16776961);
	TextDrawSetOutline(ITextdraw0, 1);
	TextDrawSetProportional(ITextdraw0, 1);
	TextDrawSetSelectable(ITextdraw0, 0);

	ITextdraw1 = TextDrawCreate(42.000000, 148.000000, "Latina");
	TextDrawBackgroundColor(ITextdraw1, -16776961);
	TextDrawFont(ITextdraw1, 1);
	TextDrawLetterSize(ITextdraw1, 0.480000, 1.700000);
	TextDrawColor(ITextdraw1, 65535);
	TextDrawSetOutline(ITextdraw1, 1);
	TextDrawSetProportional(ITextdraw1, 1);
	TextDrawSetSelectable(ITextdraw1, 0);

	ITextdraw2 = TextDrawCreate(481.000000, 383.000000, "Online:");
	TextDrawBackgroundColor(ITextdraw2, 255);
	TextDrawFont(ITextdraw2, 1);
	TextDrawLetterSize(ITextdraw2, 0.450000, 1.500000);
	TextDrawColor(ITextdraw2, -16776961);
	TextDrawSetOutline(ITextdraw2, 1);
	TextDrawSetProportional(ITextdraw2, 1);
	TextDrawUseBox(ITextdraw2, 1);
	TextDrawBoxColor(ITextdraw2, 65535);
	TextDrawTextSize(ITextdraw2, 533.000000, 0.000000);
	TextDrawSetSelectable(ITextdraw2, 0);

	ITextdraw3 = TextDrawCreate(537.000000, 383.000000, "_");
	TextDrawBackgroundColor(ITextdraw3, 255);
	TextDrawFont(ITextdraw3, 1);
	TextDrawLetterSize(ITextdraw3, 0.519999, 1.500000);
	TextDrawColor(ITextdraw3, 51375103);
	TextDrawSetOutline(ITextdraw3, 0);
	TextDrawSetProportional(ITextdraw3, 1);
	TextDrawSetShadow(ITextdraw3, 1);
	TextDrawUseBox(ITextdraw3, 1);
	TextDrawBoxColor(ITextdraw3, 1007629050);
	TextDrawTextSize(ITextdraw3, 636.000000, 12.000000);
	TextDrawSetSelectable(ITextdraw3, 0);
	
	
	ITextdraw4 = TextDrawCreate(14.000000, 165.000000, "Halloween");
	TextDrawBackgroundColor(ITextdraw4, 255);
	TextDrawFont(ITextdraw4, 1);
	TextDrawLetterSize(ITextdraw4, 0.579999, 1.700000);
	TextDrawColor(ITextdraw4, -781120769);
	TextDrawSetOutline(ITextdraw4, 1);
	TextDrawSetProportional(ITextdraw4, 1);
	TextDrawSetSelectable(ITextdraw4, 0);

	
    LTextdraw0 = TextDrawCreate(22.000000, 118.000000, "Revolucion");
	TextDrawBackgroundColor(LTextdraw0, 255);
	TextDrawFont(LTextdraw0, 1);
	TextDrawLetterSize(LTextdraw0, 0.509999, 1.600000);
	TextDrawColor(LTextdraw0, -16776961);
	TextDrawSetOutline(LTextdraw0, 1);
	TextDrawSetProportional(LTextdraw0, 1);
	TextDrawSetSelectable(LTextdraw0, 0);

	LTextdraw1 = TextDrawCreate(126.000000, 118.000000, "Latina");
	TextDrawBackgroundColor(LTextdraw1, 255);
	TextDrawFont(LTextdraw1, 1);
	TextDrawLetterSize(LTextdraw1, 0.519999, 1.700000);
	TextDrawColor(LTextdraw1, 65535);
	TextDrawSetOutline(LTextdraw1, 1);
	TextDrawSetProportional(LTextdraw1, 1);
	TextDrawSetSelectable(LTextdraw1, 0);

	LTextdraw2 = TextDrawCreate(72.000000, 106.000000, "Bienvenido");
	TextDrawBackgroundColor(LTextdraw2, 255);
	TextDrawFont(LTextdraw2, 1);
	TextDrawLetterSize(LTextdraw2, 0.500000, 1.000000);
	TextDrawColor(LTextdraw2, 16711935);
	TextDrawSetOutline(LTextdraw2, 1);
	TextDrawSetProportional(LTextdraw2, 1);
	TextDrawSetSelectable(LTextdraw2, 0);

	LTextdraw3 = TextDrawCreate(2.000000, 149.000000, "Los mejores stunt's, juegos & mas");
	TextDrawBackgroundColor(LTextdraw3, 255);
	TextDrawFont(LTextdraw3, 1);
	TextDrawLetterSize(LTextdraw3, 0.360000, 1.300000);
	TextDrawColor(LTextdraw3, -65281);
	TextDrawSetOutline(LTextdraw3, 1);
	TextDrawSetProportional(LTextdraw3, 1);
	TextDrawSetSelectable(LTextdraw3, 0);

	LTextdraw4 = TextDrawCreate(1.000000, 163.000000, "Administracion atenta y amigable");
	TextDrawBackgroundColor(LTextdraw4, 255);
	TextDrawFont(LTextdraw4, 1);
	TextDrawLetterSize(LTextdraw4, 0.370000, 1.500000);
	TextDrawColor(LTextdraw4, -16711681);
	TextDrawSetOutline(LTextdraw4, 1);
	TextDrawSetProportional(LTextdraw4, 1);
	TextDrawSetSelectable(LTextdraw4, 0);

	LTextdraw5 = TextDrawCreate(1.000000, 179.000000, "Servidor en desarrollo para mejorar por y para vos");
	TextDrawBackgroundColor(LTextdraw5, 255);
	TextDrawFont(LTextdraw5, 1);
	TextDrawLetterSize(LTextdraw5, 0.240000, 1.800000);
	TextDrawColor(LTextdraw5, 65535);
	TextDrawSetOutline(LTextdraw5, 1);
	TextDrawSetProportional(LTextdraw5, 1);
	TextDrawSetSelectable(LTextdraw5, 0);

	LTextdraw6 = TextDrawCreate(44.000000, 201.000000, "¡A divertirse!");
	TextDrawBackgroundColor(LTextdraw6, 65535);
	TextDrawFont(LTextdraw6, 1);
	TextDrawLetterSize(LTextdraw6, 0.490000, 1.600000);
	TextDrawColor(LTextdraw6, 16711935);
	TextDrawSetOutline(LTextdraw6, 1);
	TextDrawSetProportional(LTextdraw6, 1);
	TextDrawSetSelectable(LTextdraw6, 0);



    Textdraw1 = TextDrawCreate(4.000000, 433.000000, "_TIP");
    TextDrawBackgroundColor(Textdraw1, 255);
    TextDrawFont(Textdraw1, 2);
    TextDrawLetterSize(Textdraw1, 0.500000, 1.200000);
    TextDrawColor(Textdraw1, -1);
    TextDrawUseBox(Textdraw1, 1);
	TextDrawBoxColor(Textdraw1, 1007629050);
    TextDrawSetOutline(Textdraw1, 1);
    TextDrawSetProportional(Textdraw1, 1);
    
    Textdraw2 = TextDrawCreate(522.000000, 401.000000, "_");
	TextDrawBackgroundColor(Textdraw2, 255);
	TextDrawFont(Textdraw2, 1);
	TextDrawLetterSize(Textdraw2, 0.500000, 1.000000);
	TextDrawColor(Textdraw2, 16711935);
	TextDrawSetOutline(Textdraw2, 0);
	TextDrawSetProportional(Textdraw2, 1);
	TextDrawSetShadow(Textdraw2, 1);
	TextDrawUseBox(Textdraw2, 1);
	TextDrawBoxColor(Textdraw2, 255);
	TextDrawTextSize(Textdraw2, 636.000000, 0.000000);
	TextDrawSetSelectable(Textdraw2, 0);
	

	Textdraw3 = TextDrawCreate(481.000000, 401.000000, "Usa:");
	TextDrawBackgroundColor(Textdraw3, 255);
	TextDrawFont(Textdraw3, 1);
	TextDrawLetterSize(Textdraw3, 0.500000, 1.100000);
	TextDrawColor(Textdraw3, 65535);
	TextDrawSetOutline(Textdraw3, 0);
	TextDrawSetProportional(Textdraw3, 0);
	TextDrawSetShadow(Textdraw3, 1);
	TextDrawUseBox(Textdraw3, 1);
	TextDrawBoxColor(Textdraw3, -16776961);
	TextDrawTextSize(Textdraw3, 518.000000, 0.000000);
	TextDrawSetSelectable(Textdraw3, 0);



	// Users Eventos
	ConcText = TextDrawCreate(32.000000, 308.000000, "~r~Concursantes: ~w~100");
 	TextDrawBackgroundColor(ConcText, 255);
 	TextDrawFont(ConcText, 3);
 	TextDrawLetterSize(ConcText, 0.359999, 1.700000);
 	TextDrawColor(ConcText, 65535);
 	TextDrawSetOutline(ConcText, 0);
 	TextDrawSetProportional(ConcText, 1);
 	TextDrawSetShadow(ConcText, 2);
 	TextDrawUseBox(ConcText, 1);
 	TextDrawBoxColor(ConcText, -16777186);
 	TextDrawTextSize(ConcText, 635.000000, 0.000000);
 	TextDrawSetSelectable(ConcText, 0);

	GanoText = TextDrawCreate(250.000000, 288.000000, "~b~Ganador: ~n~~w~");
	TextDrawAlignment(GanoText, 2);
	TextDrawBackgroundColor(GanoText, 255);
	TextDrawFont(GanoText, 3);
	TextDrawLetterSize(GanoText, 0.380000, 2.000000);
	TextDrawColor(GanoText, -1);
	TextDrawSetOutline(GanoText, 0);
	TextDrawSetProportional(GanoText, 1);
	TextDrawSetShadow(GanoText, 1);
	TextDrawSetSelectable(GanoText, 0);

	GanoText2 = TextDrawCreate(249.000000, 361.000000, "_");
	TextDrawBackgroundColor(GanoText2, 255);
	TextDrawFont(GanoText2, 1);
	TextDrawLetterSize(GanoText2, 0.500000, 4.699999);
	TextDrawColor(GanoText2, -1);
	TextDrawSetOutline(GanoText2, 0);
	TextDrawSetProportional(GanoText2, 1);
	TextDrawSetShadow(GanoText2, 1);
	TextDrawUseBox(GanoText2, 1);
	TextDrawBoxColor(GanoText2, 68);
	TextDrawTextSize(GanoText2, 389.000000, 31.000000);
	TextDrawSetSelectable(GanoText2, 0);

    // teles
	Tele = TextDrawCreate(29.000000, 277.000000, "");
	TextDrawBackgroundColor(Tele, 255);
	TextDrawFont(Tele, 1);
	TextDrawLetterSize(Tele, 0.230000, 1.300000);
	TextDrawColor(Tele, -1);
    TextDrawSetOutline(Tele, 1);
    TextDrawSetProportional(Tele, 1);
    TextDrawUseBox(Tele, 1);
    TextDrawBoxColor(Tele, 50);
    TextDrawTextSize(Tele, 217.000000, 0.000000);
    TextDrawSetSelectable(Tele, 0);

    Tele1 = TextDrawCreate(29.000000, 243.000000, "");
    TextDrawBackgroundColor(Tele1, 255);
    TextDrawFont(Tele1, 1);
    TextDrawLetterSize(Tele1, 0.230000, 1.300000);
    TextDrawColor(Tele1, -1);
    TextDrawSetOutline(Tele1, 1);
    TextDrawSetProportional(Tele1, 1);
    TextDrawUseBox(Tele1, 1);
    TextDrawBoxColor(Tele1, 50);
    TextDrawTextSize(Tele1, 217.000000, 0.000000);
    TextDrawSetSelectable(Tele1, 0);

	Tele2 = TextDrawCreate(29.000000, 208.000000, "");
    TextDrawBackgroundColor(Tele2, 255);
    TextDrawFont(Tele2, 1);
    TextDrawLetterSize(Tele2, 0.230000, 1.300000);
    TextDrawColor(Tele2, -1);
    TextDrawSetOutline(Tele2, 1);
    TextDrawSetProportional(Tele2, 1);
    TextDrawUseBox(Tele2, 1);
    TextDrawBoxColor(Tele2, 50);
    TextDrawTextSize(Tele2, 217.000000, 0.000000);
    TextDrawSetSelectable(Tele2, 0);

    // Eventos
	Textdrawrace = TextDrawCreate(321.000000, 347.000000, "");
    TextDrawAlignment(Textdrawrace, 2);
    TextDrawBackgroundColor(Textdrawrace, 65535);
	TextDrawFont(Textdrawrace, 3);
	TextDrawLetterSize(Textdrawrace, 0.329998, 1.799999);
	TextDrawColor(Textdrawrace, -1);
	TextDrawSetOutline(Textdrawrace, 0);
	TextDrawSetProportional(Textdrawrace, 1);
	TextDrawSetShadow(Textdrawrace, 2);
	TextDrawSetSelectable(Textdrawrace, 0);

	Textdrawrace2 = TextDrawCreate(29.000000, 128.000000, "");
    TextDrawBackgroundColor(Textdrawrace2, 255);
    TextDrawFont(Textdrawrace2, 3);
    TextDrawLetterSize(Textdrawrace2, 0.659999, 2.799998);
    TextDrawColor(Textdrawrace2, 16711935);
    TextDrawSetOutline(Textdrawrace2, 0);
    TextDrawSetProportional(Textdrawrace2, 1);
    TextDrawSetShadow(Textdrawrace2, 3);
    TextDrawUseBox(Textdrawrace2, 1);
    TextDrawBoxColor(Textdrawrace2, -16777186);
    TextDrawTextSize(Textdrawrace2, 170.000000, 1.000000);
    TextDrawSetSelectable(Textdrawrace2, 0);

    Textdrawrace3 = TextDrawCreate(488.000000, 347.000000, "_");
    //Textdrawrace3 = TextDrawCreate(465.000000, 347.000000, "_");
    TextDrawBackgroundColor(Textdrawrace3, 255);
    TextDrawFont(Textdrawrace3, 1);
    TextDrawLetterSize(Textdrawrace3, 0.120000, 5.900001);
    TextDrawColor(Textdrawrace3, -1);
    TextDrawSetOutline(Textdrawrace3, 0);
    TextDrawSetProportional(Textdrawrace3, 1);
    TextDrawSetShadow(Textdrawrace3, 3);
    TextDrawUseBox(Textdrawrace3, 1);
    TextDrawBoxColor(Textdrawrace3, 50);
    TextDrawTextSize(Textdrawrace3, 152.000000, 10.000000);
    //TextDrawTextSize(Textdrawrace3, 184.000000, 10.000000);
    TextDrawSetSelectable(Textdrawrace3, 0);

    Textdrawrace4 = TextDrawCreate(366.000000, 347.000000, "hud:radar_enemyattack");
    TextDrawBackgroundColor(Textdrawrace4, 255);
    TextDrawFont(Textdrawrace4, 4);
    TextDrawLetterSize(Textdrawrace4, 0.500000, 1.000000);
    TextDrawColor(Textdrawrace4, -1);
    TextDrawSetOutline(Textdrawrace4, 0);
    TextDrawSetProportional(Textdrawrace4, 1);
    TextDrawSetShadow(Textdrawrace4, 1);
    TextDrawUseBox(Textdrawrace4, 1);
    TextDrawBoxColor(Textdrawrace4, 255);
    TextDrawTextSize(Textdrawrace4, 21.000000, 17.000000);
    TextDrawSetSelectable(Textdrawrace4, 0);

	Textdrawrace5 = TextDrawCreate(260.000000, 346.000000, "hud:radar_race");
    TextDrawBackgroundColor(Textdrawrace5, 255);
    TextDrawFont(Textdrawrace5, 4);
    TextDrawLetterSize(Textdrawrace5, 0.500000, 1.000000);
    TextDrawColor(Textdrawrace5, -1);
    TextDrawSetOutline(Textdrawrace5, 0);
    TextDrawSetProportional(Textdrawrace5, 1);
    TextDrawSetShadow(Textdrawrace5, 1);
    TextDrawUseBox(Textdrawrace5, 1);
    TextDrawBoxColor(Textdrawrace5, 255);
    TextDrawTextSize(Textdrawrace5, 20.000000, 17.000000);
    TextDrawSetSelectable(Textdrawrace5, 0);


    // Saludos textos hola y adios
    SaludoTexto = TextDrawCreate(328.000000, 343.000000, " ");
    TextDrawAlignment(SaludoTexto, 2);
    TextDrawBackgroundColor(SaludoTexto, 68);
    TextDrawFont(SaludoTexto, 1);
    TextDrawLetterSize(SaludoTexto, 0.269999, 1.299999);
    TextDrawColor(SaludoTexto, -65281);
    TextDrawSetOutline(SaludoTexto, 1);
    TextDrawSetProportional(SaludoTexto, 1);
    TextDrawUseBox(SaludoTexto, 1);
    TextDrawBoxColor(SaludoTexto, 0x0000FF15);
    TextDrawTextSize(SaludoTexto, 0.000000, 175.000000);
    TextDrawSetSelectable(SaludoTexto, 0);

    DespedidaTexto = TextDrawCreate(328.000000, 373.000000, " ");
    TextDrawAlignment(DespedidaTexto, 2);
    TextDrawBackgroundColor(DespedidaTexto, 68);
    TextDrawFont(DespedidaTexto, 1);
    TextDrawLetterSize(DespedidaTexto, 0.259999, 1.199999);
    TextDrawColor(DespedidaTexto, -16776961);
    TextDrawSetOutline(DespedidaTexto, 1);
    TextDrawSetProportional(DespedidaTexto, 1);
    TextDrawUseBox(DespedidaTexto, 1);
    TextDrawBoxColor(DespedidaTexto, 68);
    TextDrawTextSize(DespedidaTexto, 0.000000, 175.000000);
    TextDrawSetSelectable(DespedidaTexto, 0);

    Z1 = TextDrawCreate(395.000000, 343.000000, "LD_CHAT:goodcha");
    TextDrawBackgroundColor(Z1, 255);
    TextDrawFont(Z1, 4);
    TextDrawLetterSize(Z1, 0.500000, 1.000000);
    TextDrawColor(Z1, -1);
    TextDrawSetOutline(Z1, 0);
    TextDrawSetProportional(Z1, 1);
    TextDrawSetShadow(Z1, 1);
    TextDrawUseBox(Z1, 1);
    TextDrawBoxColor(Z1, 255);
    TextDrawTextSize(Z1, 21.000000, 21.000000);
    TextDrawSetSelectable(Z1, 0);

    Z2 = TextDrawCreate(395.000000, 314.000000, "LD_CHAT:badchat");
    TextDrawBackgroundColor(Z2, 255);
    TextDrawFont(Z2, 4);
    TextDrawLetterSize(Z2, 0.500000, 1.000000);
    TextDrawColor(Z2, -1);
    TextDrawSetOutline(Z2, 0);
    TextDrawSetProportional(Z2, 1);
    TextDrawSetShadow(Z2, 1);
    TextDrawUseBox(Z2, 1);
    TextDrawBoxColor(Z2, 255);
    TextDrawTextSize(Z2, 21.000000, 21.000000);
    TextDrawSetSelectable(Z2, 0);

    Z3 = TextDrawCreate(395.000000, 372.000000, "LD_CHAT:thumbdn");
    TextDrawBackgroundColor(Z3, 255);
    TextDrawFont(Z3, 4);
    TextDrawLetterSize(Z3, 0.500000, 1.000000);
    TextDrawColor(Z3, -1);
    TextDrawSetOutline(Z3, 0);
    TextDrawSetProportional(Z3, 1);
    TextDrawSetShadow(Z3, 1);
    TextDrawUseBox(Z3, 1);
    TextDrawBoxColor(Z3, 255);
    TextDrawTextSize(Z3, 21.000000, 21.000000);
    TextDrawSetSelectable(Z3, 0);

/*    // logos
    RevLogo = TextDrawCreate(28.000000, 297.000000, "Revolucion");
    TextDrawBackgroundColor(RevLogo, 255);
    TextDrawFont(RevLogo, 3);
    TextDrawLetterSize(RevLogo, 0.509998, 2.400000);
    TextDrawColor(RevLogo, -1);
    TextDrawSetOutline(RevLogo, 0);
    TextDrawSetProportional(RevLogo, 1);
    TextDrawSetShadow(RevLogo, 3);
    TextDrawSetSelectable(RevLogo, 0);

    RevLogo1 = TextDrawCreate(72.000000, 318.000000, "Latina Fr");
    TextDrawBackgroundColor(RevLogo1, 255);
    TextDrawFont(RevLogo1, 3);
    TextDrawLetterSize(RevLogo1, 0.529999, 2.299998);
    TextDrawColor(RevLogo1, -16776961);
    TextDrawSetOutline(RevLogo1, 0);
    TextDrawSetProportional(RevLogo1, 1);
    TextDrawSetShadow(RevLogo1, 3);
    TextDrawSetSelectable(RevLogo1, 0);*/

	BARRAINICIO1 = TextDrawCreate(3.000000, 2.000000, "_");
	TextDrawBackgroundColor(BARRAINICIO1, 255);
	TextDrawFont(BARRAINICIO1, 1);
	TextDrawLetterSize(BARRAINICIO1, 0.500000, 11.799991);
	TextDrawColor(BARRAINICIO1, -1);
	TextDrawSetOutline(BARRAINICIO1, 0);
	TextDrawSetProportional(BARRAINICIO1, 1);
	TextDrawSetShadow(BARRAINICIO1, 1);
	TextDrawUseBox(BARRAINICIO1, 1);
	TextDrawBoxColor(BARRAINICIO1, 50);
	TextDrawTextSize(BARRAINICIO1, 637.000000, 0.000000);

	BARRAINICIO2 = TextDrawCreate(3.000000, 340.000000, "_");
	TextDrawBackgroundColor(BARRAINICIO2, 255);
	TextDrawFont(BARRAINICIO2, 1);
	TextDrawLetterSize(BARRAINICIO2, 0.500000, 11.799991);
	TextDrawColor(BARRAINICIO2, -1);
	TextDrawSetOutline(BARRAINICIO2, 0);
	TextDrawSetProportional(BARRAINICIO2, 1);
	TextDrawSetShadow(BARRAINICIO2, 1);
	TextDrawUseBox(BARRAINICIO2, 1);
	TextDrawBoxColor(BARRAINICIO2, 50);
	TextDrawTextSize(BARRAINICIO2, 637.000000, 0.000000);

	TEXTOINICIO1 = TextDrawCreate(154.000000, 21.000000, "~w~Revolucion~n~_______~r~Latina~w~");
    TextDrawBackgroundColor(TEXTOINICIO1, 255);
    TextDrawFont(TEXTOINICIO1, 3);
    TextDrawLetterSize(TEXTOINICIO1, 1.520000, 3.800000);
    TextDrawColor(TEXTOINICIO1, -1);
    TextDrawSetOutline(TEXTOINICIO1, 0);
    TextDrawSetProportional(TEXTOINICIO1, 1);
    TextDrawSetShadow(TEXTOINICIO1, 2);
    TextDrawSetSelectable(TEXTOINICIO1, 0);

	TEXTOINICIO3 = TextDrawCreate(255.000000, 69.000000, "-");
	TextDrawBackgroundColor(TEXTOINICIO3, 255);
	TextDrawFont(TEXTOINICIO3, 1);
	TextDrawLetterSize(TEXTOINICIO3, 0.559999, 1.100000);
	TextDrawColor(TEXTOINICIO3, -1);
	TextDrawSetOutline(TEXTOINICIO3, 1);
	TextDrawSetProportional(TEXTOINICIO3, 1);
//=============================================================================//
ByNickAnn= TextDrawCreate(325.000000, 123.000000, "~r~Administrador ~n~~w~Carlosxp");
TextDrawAlignment(ByNickAnn, 2);
TextDrawBackgroundColor(ByNickAnn, 255);
TextDrawFont(ByNickAnn, 3);
TextDrawLetterSize(ByNickAnn, 0.370000, 1.400000);
TextDrawColor(ByNickAnn, -1);
TextDrawSetOutline(ByNickAnn, 0);
TextDrawSetProportional(ByNickAnn, 1);
TextDrawSetShadow(ByNickAnn, 1);
TextDrawSetSelectable(ByNickAnn, 0);

ByNickAnn1 = TextDrawCreate(253.000000, 122.000000, "_");
TextDrawBackgroundColor(ByNickAnn1, 255);
TextDrawFont(ByNickAnn1, 1);
TextDrawLetterSize(ByNickAnn1, 0.500000, 3.199999);
TextDrawColor(ByNickAnn1, -1);
TextDrawSetOutline(ByNickAnn1, 0);
TextDrawSetProportional(ByNickAnn1, 1);
TextDrawSetShadow(ByNickAnn1, 1);
TextDrawUseBox(ByNickAnn1, 1);
TextDrawBoxColor(ByNickAnn1, -16777186);
TextDrawTextSize(ByNickAnn1, 390.000000, 0.000000);
TextDrawSetSelectable(ByNickAnn1, 0);

//=============================================================================
InvisibleT = TextDrawCreate(169.000000, 7.000000, "Revolucion~n~_____Latina Fr");
TextDrawBackgroundColor(InvisibleT, 10);
TextDrawFont(InvisibleT, 3);
TextDrawLetterSize(InvisibleT, 1.470000, 3.500000);
TextDrawColor(InvisibleT, 0xFFFFFF0A);
TextDrawSetOutline(InvisibleT, 0);
TextDrawSetProportional(InvisibleT, 1);
TextDrawSetShadow(InvisibleT, 1);
//===========================================================================//
    //Random Del Letras Arriba Del Dinero
    TextDrawColoRamdon = TextDrawCreate(481.000000, 3.000000, "~b~F~b~r~b~e~b~e~b~r~b~o~b~a~b~m ~w~E~w~s~w~p~w~a~w~n~w~o~w~l");
    TextDrawBackgroundColor(TextDrawColoRamdon, 255);
    TextDrawFont(TextDrawColoRamdon, 3);
    TextDrawLetterSize(TextDrawColoRamdon, 0.509999, 1.899999);
    TextDrawColor(TextDrawColoRamdon, -1);
    TextDrawSetOutline(TextDrawColoRamdon, 0);
    TextDrawSetProportional(TextDrawColoRamdon, 1);
    TextDrawSetShadow(TextDrawColoRamdon, 1);
    TextDrawSetSelectable(TextDrawColoRamdon, 0);
    //SetTimer("ChangeWebsite",900,true);

	// Textos de Muerte
    for(new playerid; playerid < MAX_PLAYERS; playerid++) {
    Death0[playerid] = TextDrawCreate(228.000000, 198.000000, "");
    TextDrawBackgroundColor(Death0[playerid], 16777215);
    TextDrawFont(Death0[playerid], 3);
    TextDrawLetterSize(Death0[playerid], 0.480000, 1.700000);
    TextDrawColor(Death0[playerid], 65535);
    TextDrawSetOutline(Death0[playerid], 1);
    TextDrawSetProportional(Death0[playerid], 1);
    TextDrawUseBox(Death0[playerid], 1);
    TextDrawBoxColor(Death0[playerid], -16777186);
    TextDrawTextSize(Death0[playerid], 420.000000, 0.000000);
    TextDrawSetSelectable(Death0[playerid], 0);}

    Death1 = TextDrawCreate(228.000000, 173.000000, "Te asesino");
    TextDrawBackgroundColor(Death1, -16776961);
    TextDrawFont(Death1, 3);
    TextDrawLetterSize(Death1, 0.680000, 2.200000);
    TextDrawColor(Death1, -1);
    TextDrawSetOutline(Death1, 1);
    TextDrawSetProportional(Death1, 1);
    TextDrawUseBox(Death1, 1);
    TextDrawBoxColor(Death1, -16777186);
    TextDrawTextSize(Death1, 420.000000, 1.000000);
    TextDrawSetSelectable(Death1, 0);
    
	MapeoEvento();
	return 1;
}
//==============================================================================
public OnGameModeExit()
{
    for(new i=0; i<MAX_PLAYERS; i++){
    SavePlayer(i);}

    SaveProperties();
	print("Properties Saved!!");

    	//=====================//
	ClearActorAnimations(Actor0);
	ClearActorAnimations(Actor1);
	ClearActorAnimations(Actor2);
	ClearActorAnimations(Actor3);
	ClearActorAnimations(Actor4);
	ClearActorAnimations(Actor5);
	ClearActorAnimations(Actor6);
	ClearActorAnimations(Actor7);
	//=====================//
	DestroyActor(Actor0);
	DestroyActor(Actor1);
	DestroyActor(Actor2);
	DestroyActor(Actor3);
	DestroyActor(Actor4);
	DestroyActor(Actor5);
	DestroyActor(Actor6);
	DestroyActor(Actor7);
	//=====================//

	

    for(new i=0; i<MAX_PLAYERS; i++)
	{
		if (jumped[i] != -1) DestroyObject(jumped[i]);
	}

	for(new i = 0; i <= ZONE_NUMBER; i++)
	{
  		GangZoneDestroy(ZoneInfo[i][ZONE_GZID]);
	}
	KillTimer(PingTimer);
	KillTimer(GodTimer);
	KillTimer(Speedoff); for(new p = 0; p < GetMaxPlayers(); p++) DeletePlayer3DTextLabel(p, speedo3Dtext);

	#if defined USE_MENUS
	DestroyAllMenus();
	#endif
	return 1;
}
//===================== [ DCMD Commands ]=======================================
dcmd_racenames(playerid, params[])
{
	#pragma unused params
	{
	new string[2000];
	strcat(string, "{FF0000}* {FF8801}Alpha, ArenaDune, Banshee, BiciRace, BMX, BomberMania.\n");
	strcat(string, "{FF0000}* {FF8801}AeroStyle, aerolv, BondiDrag, Buffalo, Bullet, City Ls.\n");
	strcat(string, "{FF0000}* {FF8801}Comet, Country SF, Desert, Desert 2.0, DobleDrag.\n");
	strcat(string, "{FF0000}* {FF8801}Drift, Euros, FastRace, Hotring, Hydra.\n");
	strcat(string, "{FF0000}* {FF8801}Industrial, Infernus, Infinity, Jester, LS Hills, LS Style.\n");
	strcat(string, "{FF0000}* {FF8801}LS to LV, Lv Freeway, LV North, LvRace, Mini Streets.\n");
	strcat(string, "{FF0000}* {FF8801}Mini Streets 2.0, Monte, Monte 2.0, Picada, Playa, QuadRace.\n");
	strcat(string, "{FF0000}* {FF8801}WTF, Rally 2.0, SF City, SF South, Shamal.\n");
	strcat(string, "{FF0000}* {FF8801}Suburbana, Sultan, TheRcRace, TheTruck, TramRace, TurismoLs.\n");
	strcat(string, "{FF0000}* {FF8801}VortexRace, Country SF 2.0, LS-LVAutopista, SF City 2.0.\n");
	strcat(string, "{FF0000}* {FF8801}RailRace, Country LS, LS Beach, LvRace 2.0, RailRace 2.0.\n\n");
	strcat(string, "{FF0000}* {00FF00}NUEVAS: FastRace 2.0[BUG]");
	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{ffb800}|| Lista de Carreras ||", string, "OK", "");
	}
	return 1;
}


dcmd_neones(playerid,params[]) {
#pragma unused params
	{
    new neones[1500];
    strcat(neones, "{0000FF}Comandos Neones.\n\n");
    strcat(neones, "{FF0000} - /noche {33CCFF}= Para poner el juego de noche y ver los neones.\n");
    strcat(neones, "{FF0000} - /neonazul {33CCFF}= Tubos de neon color azul.\n");
    strcat(neones, "{FF0000} - /neonverde {33CCFF}= Tubos de neon color verde.\n");
    strcat(neones, "{FF0000} - /neonrosa {33CCFF}= Tubos de neon color rosa.\n");
    strcat(neones, "{FF0000} - /neonblanco {33CCFF}= Tubos de neon color blanco.\n");
    strcat(neones, "{FF0000} - /neonamarillo {33CCFF}= Tubos de neon color amarillo.\n");
    strcat(neones, "{FF0000} - /neonrojo {33CCFF}= Tubos de neon color rojo.\n");
    strcat(neones, "{FF0000} - /quitarneon {00FF00}= Quita el neon actual....O simplemente salte del auto.\n");
	strcat(neones, "{FF0000} - Usa {00FF00}/luces {33CCFF}Para agregar luces de color a tu auto");
    ShowPlayerDialog(playerid, 39, DIALOG_STYLE_MSGBOX, "|| Neones ||", neones, "Ok", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
}

dcmd_luces(playerid,params[]) {
#pragma unused params
	{
    new luces[1500];
    strcat(luces, "{0000FF}Comandos para las luces de tu auto.\n\n");
    strcat(luces, "{FF0000} - /luzazul {33CCFF}= Luces de color azul.\n");
    strcat(luces, "{FF0000} - /luzverde {33CCFF}= Luces de color verde.\n");
    strcat(luces, "{FF0000} - /luzblanca {33CCFF}= Luces de color blanco.\n");
    strcat(luces, "{FF0000} - /luzroja {33CCFF}= Luces de color rojo.\n");
	strcat(luces, "{FF0000} - Usa {00FF00}/quitarluz {33CCFF}Quita la luz actual....O simplemente salte del auto");
    ShowPlayerDialog(playerid, 39, DIALOG_STYLE_MSGBOX, "|| Luces del auto ||", luces, "Ok", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
}

dcmd_startrace(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid,red, "¡Error!: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
	if(PlayerInfo[playerid][SpecType] != ADMIN_SPEC_TYPE_NONE) return SendClientMessage(playerid,red, "¡Error!: {FFFFFF}No puedes usar este comando cuando estás Spectando!");
    if(AutomaticRace == true) return SendClientMessage(playerid,red, "¡Error!: {FFFFFF}No puedes usar este comando ahora. La Carrera automática está activada!");
    if(RaceBusy == 0x01 || RaceStarted == 1) return SendClientMessage(playerid,red, "¡Error!: {FFFFFF}Ya hay una Carrera activa. Espera primero a que termine!");
    if(strval(params)) return SendClientMessage(playerid,red, "USO: /startrace [Nombre de la Carrera]") &&
	SendClientMessage(playerid, orange, "[Función]: Inicias una Carrera. /racenames == Nombres de todas las carreras");
    LoadRace(playerid, params);
    CMDMessageToAdmins(playerid,"STARTRACE");
    return 1;
}
dcmd_stoprace(playerid, params[])
{
	#pragma unused params
   	if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid,red, "¡Error!: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
    CMDMessageToAdmins(playerid,"STOPRACE");
    GetPlayerName(playerid, pname, sizeof(pname));
	format(string2, sizeof(string2), "[CARRERA]: {FFFFFF}¡El Administrador %s ha cancelado la Carrera!", pname); SendClientMessageToAll(red, string2);
	return StopRace();
}
dcmd_unirme(playerid, params[])
{
	#pragma unused params
	if(RaceStarted == 1) return SendClientMessage(playerid,red, "¡Error!: {FFFFFF}Ya ha empezado la Carrera! Espera a que termine y empieze otro!");
	if(RaceBusy == 0x00) return SendClientMessage(playerid,red, "¡Error!: {FFFFFF}No hay ninguna Carrera actualmente!");
	if(Joined[playerid] == true) return SendClientMessage(playerid,red, "¡Error!: {FFFFFF}Ya entraste a la Carrera!");
	if(AceleracionBrutal[playerid] == true) return SendClientMessage(playerid,red, "¡Error!: {FFFFFF}Sacate la /velocidad para entrar a la Carrera!");
	if(IsPlayerInAnyVehicle(playerid)) return SetTimerEx("SetupRaceForPlayer", 2500, 0, "e", playerid), RemovePlayerFromVehicle(playerid), Joined[playerid] = true;
	SetupRaceForPlayer(playerid);
	Joined[playerid] = true;
	DisableRemoteVehicleCollisions(playerid, 1);
	ResetPlayerWeapons(playerid);
	new StringR[1000];
    format(StringR, sizeof(StringR), "{FF0000}[Evento Carrera]: {FFFFFF}%s {00EEFF}ha entrado a la {0000FF}Carrera %s!", pName(playerid), RaceName);
	SendClientMessageToAll(0x33AA33AA, StringR);
	SendClientMessage(playerid,red, "¡Info!: Para salir de la Carrera use {2C01FF}/salir !");
	GameTextForPlayer(playerid,"~b~Si no te puedes mover despues ~n~de q comenzo la carrera usa ~n~~g~/GO",5000,3);
	return 1;
}

dcmd_salir(playerid, params[])
{
	#pragma unused params
    if(Joined[playerid] == true)
    {
		JoinCount--;
		Joined[playerid] = false;
        PlayerInfo[playerid][GodCar] = 0;
 	    ramped[playerid] = 0;
		DestroyVehicle(CreatedRaceVeh[playerid]);
	    DisablePlayerRaceCheckpoint(playerid);
		CPProgess[playerid] = 0;
		KillTimer(InfoTimer[playerid]);
		TogglePlayerControllable(playerid, true);
		SendClientMessage(playerid,red, "[INFO]: Has salido de la Carrera");
		GameTextForPlayer(playerid,"~r~Has salido de la Carrera",4000,3);
		SetCameraBehindPlayer(playerid);
		#if defined RACE_IN_OTHER_WORLD
		SetPlayerVirtualWorld(playerid, 0);
		DisableRemoteVehicleCollisions(playerid, 0);
		#endif
	} else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Tu no estás en la Carrera!");
	return 1;
}

dcmd_recompensa(playerid,params[]) {
	new tmp[256], tmp2[256], playermoney, Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /recompensa [playerid] [recompensa]") &&
	SendClientMessage(playerid, orange, "[Función]: Ponle precio a la cabeza de Especificado Jugador!");
    new id = strval(tmp), Recompensa = strval(tmp2);
        if(IsPlayerConnected(id) && id != INVALID_PLAYER_ID) {
        if(Cantidad[id] > 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Este player ya tiene una recompensa!");
	    playermoney = GetPlayerMoney(playerid);
        if(Recompensa > 0 && playermoney >= Recompensa && Recompensa < 9000001) {
        new string[1000];
        Cantidad[id] += Recompensa;
        GivePlayerMoney(playerid, -Recompensa);
        format(string,sizeof(string),"[RECOMPENSA]: {FFFFFF}%s ha Puesto $%i de Recompensa por la Cabeza de {FF0000}%s. {FFFF00}[Total: $%i]", pNombre(playerid), Recompensa, pNombre(id), Cantidad[id]);
        return SendClientMessageToAll(orange, string);
        } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Solo puedes poner dinero entre 0 y 9.000.000!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El player no está conectado");
}

dcmd_recompensas(playerid,params[])
{
	#pragma unused params
	new conteo, recom[2000],texto[128];
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	{
		if(Cantidad[i] > 0)
		{
			conteo++;
		}
	}
	if(conteo == 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{ffb800}|| Recompensas ||", "No hay Recompensas Actualmente!", "Salir", "");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(Cantidad[i] > 0)
		{
			format(texto,128,"{FFFFFF}%s [ID: %d] [Recompensa: $%i{FFFFFF}]\n",PlayerName2(i),i,Cantidad[i]);
			strcat(recom,texto);
		}
	}
	ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,"{ffb800}|| Recompensas ||",recom,"Salir","");
	return 1;
}

dcmd_eusers(playerid,params[])
{
	#pragma unused params
	new conteo, surviva[2000],texto[2000];
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	{
		if(PlayerInfo[i][EnEvento] == 1 || PlayerInfoE[i][NoEvento] == 1)
		{
			conteo++;
		}
	}
	if(conteo == 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{ffb800}|| Users en Evento ||", "No hay Usuarios En el Evento Actualmente!", "Salir", "");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(PlayerInfo[i][EnEvento] == 1 || PlayerInfoE[i][NoEvento] == 1)
		{
			format(texto,128,"{%06x}%s [ID: %d]\n",GetPlayerColor(i) >>> 8,PlayerName2(i),i);
			strcat(surviva,texto);
		}
	}
	ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,"{ffb800}|| Users en Evento ||",surviva,"Salir","");
	return 1;
}

dcmd_usersurvival(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
	new conteo, surviva[2000],texto[128];
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	{
		if(PlayerInfo[i][PlayerinBox] == 1)
		{
			conteo++;
		}
	}
	if(conteo == 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{ffb800}|| Users Survival ||", "No hay Usuarios En Sv Actualmente!", "Salir", "");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(PlayerInfo[i][PlayerinBox] == 1)
		{
			format(texto,128,"{FFFFFF}%s [ID: %d]\n",PlayerName2(i),i);
			strcat(surviva,texto);
		}
	}
	ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,"{ffb800}|| Users Survival ||",surviva,"Salir","");
    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
	return 1;
}

dcmd_userop7(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
	new conteo, opp7[2000],texto[128];
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	{
		if(PlayerInfo[i][PlayerinTdm] == 1)
		{
			conteo++;
		}
	}
	if(conteo == 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{ffb800}|| Users OP7 ||", "No hay Usuarios En Sv Actualmente!", "Salir", "");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(PlayerInfo[i][PlayerinTdm] == 1)
		{
			format(texto,128,"{FFFFFF}%s [ID: %d]\n",PlayerName2(i),i);
			strcat(opp7,texto);
		}
	}
	ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,"{ffb800}|| Users OP7 ||",opp7,"Salir","");
    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
	return 1;
}

dcmd_userswat(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
	new conteo, swwat[2000],texto[128];
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	{
		if(PlayerInfo[i][PlayerinSwat] == 1)
		{
			conteo++;
		}
	}
	if(conteo == 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{ffb800}|| Users Revolucion ||", "No hay Usuarios En Sv Actualmente!", "Salir", "");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(PlayerInfo[i][PlayerinSwat] == 1)
		{
			format(texto,128,"{FFFFFF}%s [ID: %d]\n",PlayerName2(i),i);
			strcat(swwat,texto);
		}
	}
	ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,"{ffb800}|| Users Revolucion ||",swwat,"Salir","");
    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
	return 1;
}

dcmd_usernotemojes(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
	new conteo, getwet[2000],texto[128];
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	{
		if(PlayerInfo[i][PlayerinGet] == 1)
		{
			conteo++;
		}
	}
	if(conteo == 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{ffb800}|| Users NOTEMOJES ||", "No hay Usuarios En Sv Actualmente!", "Salir", "");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(PlayerInfo[i][PlayerinGet] == 1)
		{
			format(texto,128,"{FFFFFF}%s [ID: %d]\n",PlayerName2(i),i);
			strcat(getwet,texto);
		}
	}
	ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,"{ffb800}|| Users NOTEMOJES ||",getwet,"Salir","");
    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
	return 1;
}

dcmd_userhg(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
	new conteo, hge[2000],texto[128];
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	{
		if(PlayerInfo[i][PlayerinHg] == 1)
		{
			conteo++;
		}
	}
	if(conteo == 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{ffb800}|| Users HG ||", "No hay Usuarios En Sv Actualmente!", "Salir", "");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(PlayerInfo[i][PlayerinHg] == 1)
		{
			format(texto,128,"{FFFFFF}%s [ID: %d]\n",PlayerName2(i),i);
			strcat(hge,texto);
		}
	}
	ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,"{ffb800}|| Users HG ||",hge,"Salir","");
    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
	return 1;
}

dcmd_afks(playerid,params[])
{
	#pragma unused params
	new conteo, afkas[2000],texto[128];
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	{
		if(Informacion[i][AFK] == 1 && Informacion[i][SHH] == 1)
		{
			conteo++;
		}
	}
	if(conteo == 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{ffb800}|| Players AFK ||", "No hay Players en AFK!", "Salir", "");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(Informacion[i][AFK] == 1 && Informacion[i][SHH] == 1)
		{
			format(texto,128,"{FFFFFF}%s [ID: %d] {00FF00}[AFK ON]\n",PlayerName2(i),i);
			strcat(afkas,texto);
		}
	}
	ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,"{ffb800}|| Players AFK ||",afkas,"Salir","");
	return 1;
}

dcmd_eventos(playerid,params[])
{
	#pragma unused params
	new stringev[1000], strjug[1000];
	if(SBOX == 1 && boxplaying == 1)
	{
	format(strjug, sizeof(strjug), "{33AA33}Evento Supervivencia {FFFFFF}[Estado: Empezado] [Users: %d]", boxrank);
	strcat(stringev,strjug);
	}
	else if(SBOX == 1 && boxplaying == 0){strcat(stringev,"{33AA33}Evento Supervivencia {FFFFFF}[Estado: En Espera (/survival)]");}
	/*======================================================================*/
	else if(SOP7 == 1 && tdmplaying == 1)
	{
	format(strjug, sizeof(strjug), "{0000FF}Evento Operation 7 {FFFFFF}[Estado: Empezado] [Users: %d]", tdmrank);
	strcat(stringev,strjug);
	}
	else if(SOP7 == 1 && tdmplaying == 0){strcat(stringev,"{0000FF}Evento Operation 7 {FFFFFF}[Estado: En Espera (/op7)]");}
	/*======================================================================*/
	else if(GT == 1 && inProgress > 1){strcat(stringev,"{0000FF}Evento NoTeMojes {FFFFFF}[Estado: Empezado]");}
	else if(GT == 1 && inProgress < 1){strcat(stringev,"{0000FF}Evento NoTeMojes {FFFFFF}[Estado: En Espera (/notemojes)]");}
	/*======================================================================*/
	else if(SHG == 1 && hgplaying == 1)
	{
	format(strjug, sizeof(strjug), "{33AA33}Evento Hunger Games {FFFFFF}[Estado: Empezado] [Users: %d]", hgrank);
	strcat(stringev,strjug);
	}
	else if(SHG == 1 && hgplaying == 0){strcat(stringev,"{33AA33}Evento Hunger Games {FFFFFF}[Estado: En Espera (/hg)]");}
	/*======================================================================*/
	else if(SSWAT == 1 && swatplaying == 1)
	{
	format(strjug, sizeof(strjug), "{0000FF}Evento Revolucion {FFFFFF}[Estado: Empezado] [Users: %d]", swatrank);
	strcat(stringev,strjug);
	}
	else if(SSWAT == 1 && swatplaying == 0){strcat(stringev,"{0000FF}Evento Revolucion {FFFFFF}[Estado: En Espera (/revolucion)]");}
	/*======================================================================*/
	else if(SRHINO == 1 && rhinoplaying == 1)
	{
	format(strjug, sizeof(strjug), "{33AA33}Evento Rhino {FFFFFF}[Estado: Empezado] [Users: %d]", rhinorank);
	strcat(stringev,strjug);
	}
	else if(SRHINO == 1 && rhinoplaying == 0){strcat(stringev,"{33AA33}Evento Rhino {FFFFFF}[Estado: En Espera (/rhino)]");}
	/*======================================================================*/
	else if(SDERBY == 1 && derbyplaying == 1)
	{
	format(strjug, sizeof(strjug), "{FF0000}Evento Derby {FFFFFF}[Estado: Empezado] [Users: %d]", derbyrank);
	strcat(stringev,strjug);
	}
	else if(SDERBY == 1 && derbyplaying == 0){strcat(stringev,"{FF0000}Evento Derby {FFFFFF}[Estado: En Espera (/derby)]");}
	/*======================================================================*/
	else if(SZOMBIE == 1 && zombieplaying == 1)
	{
	format(strjug, sizeof(strjug), "{FF0000}Evento Zombie {FFFFFF}[Estado: Empezado] [Users: %d]", zombierank);
	strcat(stringev,strjug);
	}
	else if(SZOMBIE == 1 && zombieplaying == 0){strcat(stringev,"{FF0000}Evento Zombie {FFFFFF}[Estado: En Espera (/zombie)]");}
	/*======================================================================*/
	else if(SLAB == 1 && labplaying == 1)
	{
	format(strjug, sizeof(strjug), "{00FF00}Evento Laberinto {FFFFFF}[Estado: Empezado] [Users: %d]", labrank);
	strcat(stringev,strjug);
	}
	else if(SLAB == 1 && labplaying == 0){strcat(stringev,"{00FF00}Evento Laberinto {FFFFFF}[Estado: En Espera (/laberinto)]");}
	/*======================================================================*/
	else if(EventInfo[Criado] == 1 && EventInfo[Cerrado] == 1){strcat(stringev,"{00FF00}Evento Propio {FFFFFF}[Estado: Empezado]");}
	else if(EventInfo[Criado] == 1 && EventInfo[Cerrado] == 0){strcat(stringev,"{00FF00}Evento Propio {FFFFFF}[Estado: En Espera (/irevento)]");}
	/*======================================================================*/
	else if(RaceBusy == 0x01 && RaceStarted == 1){strcat(stringev,"{00FF00}Evento Carrera [Estado: Empezado]");}
	else if(RaceBusy == 0x01 && RaceStarted == 0){strcat(stringev,"{00FF00}Evento Carrera [Estado: En Espera (/unirme)]");}
	/*======================================================================*/
	else
	{
		strcat(stringev,"{FF0000}No Hay Eventos!");
		ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"{ffb800}|| Eventos: Ninguno ||",stringev,"Salir","");
		return 1;
	}
	ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"{ffb800}|| Eventos: 1 ||",stringev,"Salir","");
	return 1;
}

dcmd_pregunta(playerid,params[]){
	if(IsPlayerConnected(playerid) && PlayerInfo[playerid][LoggedIn] == 1){
        new tmp[256], Index;		tmp = strtok(params,Index);
	    if(!strlen(tmp)) return SendClientMessage(playerid, red, "[USA]: /pregunta [Tu Pregunta]") &&
		SendClientMessage(playerid, orange, "[Función]: Haces una Pregunta a la Administracion (Sin signos de Pregunta)! [NO ABUSAR]");
    	new str[1000], str2[1000];
		if(YaPregunto[playerid] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Tienes que esperar 5 minutos para volver a preguntar!");
		GetPlayerName(playerid,pname,sizeof(pname));
		format(str,sizeof(str),"[PREGUNTA]: {5882FA}El Player %s [%d] Pregunto: {FFFFFF}'¿%s?'",pname,playerid,EStexto(params));
        GameTextForPlayer(playerid,"_~n~_~n~_~n~_~n~_~n~_~n~~g~Pregunta Enviada",5000,6);
        MessageToAdmins(COLOR_AMARILLO,str);
		format(str2,sizeof(str2),"[RESPONDER]: {FFFFFF}Algun Admin respondale con {00FF00}/responder [ID]");
        MessageToAdmins(COLOR_ROJO,str2);
        YaPregunto[playerid] = 1;
        return GivePlayerMoney(playerid,0);
  	} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está logeado.");
}

dcmd_responder(playerid,params[]) {
	if(IsPlayerConnected(playerid) && PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][pAdmin] >= 1) {
        new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "[USA]: /responder [playerid] [Respuesta]") &&
		SendClientMessage(playerid, orange, "[Función]: Le respondes la Pregunta a Especificado Jugador!");
	    if(!strlen(tmp2)) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Debes dar una razón para responderle a este player!");
    	new player = strval(tmp), str[1000], str2[1000], str3[1000];
	 	if(IsPlayerConnected(player) && player != INVALID_PLAYER_ID) {
	    	if(player != playerid) {
			SendClientMessage(player,-1,"|--------------------------------------|");
			format(str,sizeof(str),"{C50404}|-:-|Atencion|-:-|{5882FA} Te hemos respondido: {098BEE}%s",params[1+strlen(tmp)]); SendClientMessage(player,COLOR_AMARILLO,str);
			SendClientMessage(player,-1,"|--------------------------------------|");
			GameTextForPlayer(player,"~y~Hemos ~r~contestado~n~~y~tu duda.",6000,3);
			SendClientMessage(playerid,-1,"|--------------------------------------|");
			format(str2,sizeof(str2),"{C50404}|-:-|Respondiste|-:-|{098BEE}: %s",params[1+strlen(tmp)]); SendClientMessage(playerid,COLOR_AZUL,str2);
			SendClientMessage(playerid,-1,"|--------------------------------------|");
			GameTextForPlayer(playerid,"~y~Tu respuesta fue enviada con exito",6000,3);
			format(str3,sizeof(str3),"{C50404}|-:-|Dudas|-:-|{5882FA}: {FFFFFF}%s respondio a %s: %s",pName(playerid), pName(player), params[1+strlen(tmp)]);
			MessageToAdmins(red,str3);
            return GivePlayerMoney(playerid,0);
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes Responderte a ti mismo!");
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está conectado!");
    	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
  	} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está logeado!");
}

dcmd_reportar(playerid,params[])
{
return dcmd_report(playerid,params);
}
dcmd_re(playerid,params[])
{
return dcmd_report(playerid,params);
}

dcmd_report(playerid,params[]) {
    new reported, tmp[256], tp3[256], Index;		tmp = strtok(params,Index), tp3 = strtok(params,Index);
    if(!strlen(params)) return SendClientMessage(playerid, red, "USA: /report [playerid] [razón]");
	reported = strval(tmp);

 	if(IsPlayerConnected(reported) && reported != INVALID_PLAYER_ID) {

	if(IsPlayerFlooding(playerid)) return SendClientMessage(playerid,red,"* En 3 segundos puedes reportar nuevamente.");
	iPlayerChatTime[playerid] = GetTickCount();

		if(PlayerInfo[reported][pAdmin] == ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"* No puedes reportar a un Administrador.");
		if(playerid == reported) return SendClientMessage(playerid,red,"* No puedes reportarte a vos mismo.");
		if(strlen(params) > 7) {
			new reportedname[MAX_PLAYER_NAME], reporter[MAX_PLAYER_NAME], str2[128], hour,minute,second; gettime(hour,minute,second);
			GetPlayerName(reported, reportedname, sizeof(reportedname));	GetPlayerName(playerid, reporter, sizeof(reporter));
			format(str2, sizeof(str2), "* ||¡¡Nuevo Reporte!!||  %s[%d] Reportó a %s[%d] Razón: [%s] |@%d:%d:%d|", reporter,playerid, reportedname, reported, params[strlen(tmp)+1], hour,minute,second);
			MessageToAdmins(red,str2);
			MessageToAdmins(red,"[REPORTES]: {FFFFFF}¡Vean todos los Reportes con {29FF0D}/Reportes{FFFFFF}!");
			format(str2, sizeof(str2), "~n~~n~~n~~n~~n~~n~~n~~b~! Nuevo Reporte !");
			SaveToFile("ReportLog",str2);
			format(str2, sizeof(str2), "|||Reporte|||(%d:%d:%d): El usuario %s(%d) Reportó a %s(%d) Razón: [%s]", hour,minute,second, reporter,playerid, reportedname, reported, params[strlen(tmp)+1]);
			for(new i = 1; i < MAX_REPORTS-1; i++) Reports[i] = Reports[i+1];
			Reports[MAX_REPORTS-1] = str2;
			return ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX," {29FF0D}||REPORTE ENVIADO ÉXITOSAMENTE||", "{FF0000}[INFO]: {FFFFFF}Tu reporte fue enviado {29FF0D}éxitosamente{FFFFFF} a nuestro equipo administrativo.", "Entendido.", "");
		} else return ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX,"{FF0000}||ERROR DE REPORTE||", "{FF0000}[INFO]: {FFFFFF}La razón ingresada no es válida. Por favor especifique nuevamente la razón del reporte.", "Entendido", "");
	} else return ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX,"{FF0000}||ERROR DE REPORTE||", "{FF0000}[INFO]:{FFFFFF} La {FF0000}ID{FFFFFF} ingresada es {FF0000}inválida{FFFFFF}, el jugador se desconectó o la colocaste incorrectamente.", "Entendido", "");
}


dcmd_solicitar(playerid, params[])
{
	#pragma unused params
	if(IsPlayerConnected(playerid))
	{
	    if(YaSolicito[playerid] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Tienes que esperar menos de 5 minutos para volver a Solicitar!");
		SendClientMessage(playerid, orange, "[Función]: Solicitar un Co-Manager, Administrador o Operador!");
		ShowPlayerDialog(playerid, DSOLIC, DIALOG_STYLE_LIST, "|| Solicitar Admin ||",
		"{FF0000}Co-Manager [Algo grave]\n\
		{00FF00}Game-Master [Algo serio]\n\
		{0000FF}Operador [Un problema]", "Solicitar", "Cancelar");
    }
	else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No estas Conectado!");
	return 1;
}


dcmd_asignardj(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] <= 9) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar este comando.");
	new ID, time;
	 new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "[USA]: /asignardj [playerid] [horas]") &&
		SendClientMessage(playerid, orange, "[Función]: Asignas un DJ de RL.");
	    if(!strlen(tmp2)) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Debes dar un tiempo. (máx 5 horas)");
		if(ID != INVALID_PLAYER_ID)
		    {
		        if(time < 6 || time > 0)
		        {
		            new string[145];
		            format(string, sizeof(string), "{38A6E6}.:|ATENCIÓN|:.{FFFFFF} El Admin{E3E639} %s{FFFFFF} asignó a{E3E639} %s {F81414}DJ de RL.", N(playerid), N(ID));
				    SendClientMessageToAll(azulcito, string);
     			    for(new i = 0; i < MAX_PLAYERS; i++)
				    if(IsADJ[i] == 0)
				    {
      		        IsADJ[ID] = 1;
			        SetTimer("DJTimer", 3600000, 0);
				    }
				    else return SendClientMessage(playerid, red, "{38A6E6}.:|ERROR|:. {FFFFFF}Ya hay un DJ online.");
				}
				else return SendClientMessage(playerid, red, "{38A6E6}.:|ERROR|:. {FFFFFF}Las horas de rango DJ no pueden superar de 5 horas.");
			}
			else return SendClientMessage(playerid, red, "{38A6E6}.:|ERROR|:. {FFFFFF}El ID introducido no se encuentra online por el momento.");
	return 1;
}

dcmd_darcash(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 5) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /darcash [playerid] [monto]") &&
		SendClientMessage(playerid, orange, "[Función]: Darás dinero a Especificado Jugador!");
		new player1 = strval(tmp), cash = strval(tmp2), string[128];
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"DARCASH");
    		format(string, sizeof(string), "{FFFFFF}Has dado ha {29FF0D}\"%s\"{FFFFFF} el monto de {29FF0D}'$%d", pName(player1), cash); SendClientMessage(playerid,ColorAdmin,string);
			if(player1 != playerid) { format(string,sizeof(string),"[INFO]: {FFFFFF}El Administrador \"%s\" te dió la cantidad de dinero:{29FF0D}'$%d'", pName(playerid), cash); SendClientMessage(player1,red,string); }
   			return GivePlayerMoney(player1, cash);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El player no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 5] para Usar este Comando!");
}



dcmd_dararma(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 3) {
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "[USA]: /dararma [jugador] [ID del arma/nombre del arma] [municiones]") &&
		SendClientMessage(playerid, orange, "[Función]: Da un Arma a Especificado Jugador");
		new player1 = strval(tmp), weap, ammo, WeapName[32];
		if(!strlen(tmp3) || !IsNumeric(tmp3) || strval(tmp3) <= 0 || strval(tmp3) > 99999) ammo = 500; else ammo = strval(tmp3);
		if(!IsNumeric(tmp2)) weap = GetWeaponIDFromName(tmp2); else weap = strval(tmp2);
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
        	if(!IsValidWeapon(weap)) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}ID de arma inválida");
        	new arma;
        	if(!IsNumeric(tmp2)) arma = GetWeaponIDFromName(tmp2); else arma = strval(tmp2);
		    if(arma == 16 || arma == 18 || arma == 36 || arma == 37 || arma == 39 || arma == 44 || arma == 45) return  SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No Puedes dar esta Arma a un Player");
			CMDMessageToAdmins(playerid,"DARARMA");
			GetWeaponName(weap,WeapName,32);
			format(string2, sizeof(string2), "{FFFFFF}Le has dado a \"%s\" una {29FF0D}%s [%d]{FFFFFF} con {29FF0D}%d {FFFFFF}municiones", PlayerName2(player1), WeapName, weap, ammo); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" te ha dado una {29FF0D}%s [%d]{FFFFFF} con {29FF0D}%d {FFFFFF}municiones", PlayerName2(playerid), WeapName, weap, ammo); SendClientMessage(player1,red,string2); }
   			return GivePlayerWeapon(player1, weap, ammo);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

dcmd_setvida(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 4) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /setvida [jugador] [cantidad]") &&
		SendClientMessage(playerid, orange, "[Función]: Da Vida a Especificado Jugador!");
		if(strval(tmp2) < 0 || strval(tmp2) > 100 && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Cantidad de vida inválida");
		new player1 = strval(tmp), health = strval(tmp2);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETVIDA");
			format(string2, sizeof(string2), "{FFFFFF}Has puesto la vida de \"%s's\" en {FF0000}'%d", pName(player1), health); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" ha puesto tu vida en {FF0000}'%d'", pName(playerid), health); SendClientMessage(player1,red,string2); }
   			return SetPlayerHealth(player1, health);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 4] para Usar este Comando!");
}

dcmd_setchaleco(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 4) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /setchaleco [jugador] [cantidad]") &&
		SendClientMessage(playerid, orange, "[Función]: Da Chaleco a Especificado Jugador!");
		if(strval(tmp2) < 0 || strval(tmp2) > 100 && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Cantidad de blindaje inválido");
		new player1 = strval(tmp), armour = strval(tmp2);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETCHALECO");
			format(string2, sizeof(string2), "{FFFFFF}Has puesto el blindaje de \"%s\" en {FF0000}'%d", pName(player1), armour); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2), "[INFO]: {FFFFFF}El Administrador \"%s\" ha puesto tu blindaje en {FF0000}'%d'", pName(playerid), armour); SendClientMessage(player1,ColorAdmin,string2); }
   			return SetPlayerArmour(player1, armour);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 4] para Usar este Comando!");
}

dcmd_setcash(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 5) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /setcash [jugador] [monto]") &&
		SendClientMessage(playerid, orange, "[Función]: Fijará dinero a Especificado Jugador!");
		new player1 = strval(tmp), cash = strval(tmp2);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETCASH");
			format(string2, sizeof(string2), "Has puesto el dinero de \"%s\" en '$%d", pName(player1), cash); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" ha puesto tu dinero en '$%d'", pName(playerid), cash); SendClientMessage(player1,ColorAdmin,string2); }
			ResetPlayerMoney(player1);
   			return GivePlayerMoney(player1, cash);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 5] para Usar este Comando!");
}


dcmd_darax(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pAdmin] == 10) {
    GetPlayerName(playerid, pame, sizeof(pame));
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /darax [jugador] [Cantidad]") &&
			SendClientMessage(playerid, orange, "[Función]: Agregarás AxoneCash a un determinado jugador.");
		new player1 = strval(tmp), Axc = strval(tmp2);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin.");
		if(PlayerInfo[player1][LoggedIn] == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Este player no se ha logueado");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"DARAX");
			format(string2, sizeof(string2), "[INFO]: {FFFFFF}Le diste AxoneCash a \"%s\" la cantidad de {0700D7}'%d' ", pName(player1), Axc); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" te ha asignado {0700D7}'%d' AxoneCash.", pName(playerid), Axc); SendClientMessage(player1,ColorAdmin,string2); }
		 	SavePlayer(player1);
		 	#if defined USE_STATS
			PlayerInfo[player1][AxoneCash] = PlayerInfo[player1][AxoneCash]+ Axc;
	    	#endif
	    	SavePlayer(playerid);
		 	return 1;
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Dueño [Lvl 10] para Usar este Comando!");
}


dcmd_darscore(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 5) {
	new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /darscore [jugador] [puntaje]") &&
		SendClientMessage(playerid, orange, "[Función]: Agregará Puntuación a Especificado Jugador!");
		new player1 = strval(tmp), score = strval(tmp2), experiencia = strval(tmp2);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}No puedes usar este comando sobre un admin");
		//if(PlayerInfo[player1][LoggedIn] == 0) return SendClientMessage(playerid,red,"Este player no se ha logueado");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"DarAx");
			format(string2, sizeof(string2), "Has añadido el puntaje de \"%s\" con '%d' ", pName(player1), score); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"{0000FF}¡Info!: {008080}El Administrador \"%s\" te ha añadido tu puntaje con '%d'", pName(playerid), score); SendClientMessage(player1,red,string2); }
			SetPlayerScore(player1, GetPlayerScore(player1)+ score);
	 		if(PlayerInfo[player1][LoggedIn] == 1) SavePlayer(player1);
		 	#if defined USE_STATS
		 	PlayerInfo[player1][Kills] = PlayerInfo[player1][Kills]+ score;
			PlayerInfo[player1][Experiencia] = PlayerInfo[player1][Experiencia]+ experiencia;
	    	#endif
      SetPlayerVip(player1);
	    	ActualizarInformacion(playerid);
		 	return 1;
	    } else return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}Necesitas ser Game-Master [Lvl 5] para Usar este Comando!");
}

dcmd_setscore(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 8) {
	new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /setscore [jugador] [puntaje]") &&
		SendClientMessage(playerid, orange, "[Función]: Establece Puntuación a Especificado Jugador!");
		new player1 = strval(tmp), score = strval(tmp2);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}No puedes usar este comando sobre un admin");
		if(PlayerInfo[player1][LoggedIn] == 0) return SendClientMessage(playerid,red,"Este player no se ha logueado");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETSCORE");
			format(string2, sizeof(string2), "{FFFFFF}Has puesto el puntaje de \"%s\" en {29FF0D}'%d' ", pName(player1), score); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),".:Info:. {FFFFFF}El Administrador \"%s\" ha puesto tu puntaje en {29FF0D}'%d'", pName(playerid), score); SendClientMessage(player1,red,string2); }
			SetPlayerScore(player1, score);
		 	#if defined USE_STATS
			PlayerInfo[player1][Kills] = score;
	    	#endif
	    	SetPlayerVip(player1);
	    	ActualizarInformacion(playerid);
	 		if(PlayerInfo[player1][LoggedIn] == 1) SavePlayer(player1);
		 	return 1;
	    } else return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}Necesitas ser Game-Master [Lvl 8] para Usar este Comando!");
}

dcmd_setex(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 9) {
	new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /setex [jugador] [experiencia]") &&
		SendClientMessage(playerid, orange, "[Función]: Establece Experiencia a Especificado Jugador!");
		new player1 = strval(tmp), experiencia = strval(tmp2);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
		if(PlayerInfo[player1][LoggedIn] == 0) return SendClientMessage(playerid,red,"Este player no se ha logueado");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETEX");
			format(string2, sizeof(string2), "{FFFFFF}Has puesto la experiencia de \"%s\" en {29FF0D}'%d' ", pName(player1), experiencia); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" ha puesto tu Experiencia en {29FF0D}'%d'", pName(playerid), experiencia); SendClientMessage(player1,red,string2); }
		 	SavePlayer(player1);
		 	#if defined USE_STATS
			PlayerInfo[player1][Experiencia] = experiencia;
	    	#endif
	    	ActualizarInformacion(playerid);
		 	return 1;
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}

dcmd_setnivel(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pAdmin] >= 9) {
    GetPlayerName(playerid, pame, sizeof(pame));
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /setnivel [jugador] [Nivel]") &&
			SendClientMessage(playerid, orange, "[Función]: Establece un Nivel a Especificado Jugador");
		new player1 = strval(tmp), nivel = strval(tmp2);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
		if(PlayerInfo[player1][LoggedIn] == 0) return SendClientMessage(playerid,red,"Este player no se ha logueado");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETNIVEL (Nivel x Vip)");
			format(string2, sizeof(string2), "{FFFFFF}Has puesto el Nivel de \"%s\" en {0700D7}'%d' ", pName(player1), nivel); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"{0000FF}[INFO]: {FFFFFF}El Administrador \"%s\" ha puesto tu Nivel en {0700D7}'%d'", pName(playerid), nivel); SendClientMessage(player1,ColorAdmin,string2); }
		 	SavePlayer(player1);
		 	#if defined USE_STATS
            PlayerInfo[player1][Nivel] = nivel;
	    	#endif
	    	ActualizarInformacion(playerid);
		 	return 1;
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}

dcmd_darnivel(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pAdmin] >= 7) {
    GetPlayerName(playerid, pame, sizeof(pame));
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /darnivel [jugador] [Nivel]") &&
			SendClientMessage(playerid, orange, "[Función]: Agregará Nivel a Especificado Jugador");
		new player1 = strval(tmp), nivel = strval(tmp2);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
		if(PlayerInfo[player1][LoggedIn] == 0) return SendClientMessage(playerid,red,"Este player no se ha logueado");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"DARNIVEL");
			format(string2, sizeof(string2), "{FFFFFF}Has añadido el Nivel de \"%s\" en {0700D7}'%d' ", pName(player1), nivel); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" te ha añadido tu Nivel con {0700D7}'%d'", pName(playerid), nivel); SendClientMessage(player1,ColorAdmin,string2); }
		 	SavePlayer(player1);
		 	#if defined USE_STATS
			PlayerInfo[player1][Nivel] = PlayerInfo[player1][Nivel]+ nivel;
	    	#endif
	    	ActualizarInformacion(playerid);
		 	return 1;
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

dcmd_setmuerte(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 8) {
	new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /setmuerte [jugador] [muerte]") &&
		SendClientMessage(playerid, orange, "[Función]: Establece las Muertes a Especificado Jugador!");
		new player1 = strval(tmp), deaths = strval(tmp2);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
		if(PlayerInfo[player1][LoggedIn] == 0) return SendClientMessage(playerid,red,"Este player no se ha logueado");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETMUERTE");
			format(string2, sizeof(string2), "Has puesto las Muertes de \"%s\" en '%d' ", pName(player1), deaths); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" ha puesto tus Muertes en '%d'", pName(playerid), deaths); SendClientMessage(player1,ColorAdmin,string2); }
		 	SavePlayer(player1);
		 	#if defined USE_STATS
			PlayerInfo[player1][Deaths] = deaths;
	    	#endif
	    	ActualizarInformacion(playerid);
		 	return 1;
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 8] para Usar este Comando!");
}

dcmd_darmuerte(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 8) {
	new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /darmuerte [jugador] [muerte]") &&
		SendClientMessage(playerid, orange, "[Función]: Agregarás las Muertes a Especificado Jugador!");
		new player1 = strval(tmp), deaths = strval(tmp2), experiencia = strval(tmp2);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
		if(PlayerInfo[player1][LoggedIn] == 0) return SendClientMessage(playerid,red,"Este player no se ha logueado");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"DARMUERTE");
			format(string2, sizeof(string2), "Has añadido Muertes a \"%s\" con '%d' ", pName(player1), deaths); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" te ha añadido Muertes con '%d'", pName(playerid), deaths); SendClientMessage(player1,ColorAdmin,string2); }
		 	SavePlayer(player1);
		 	#if defined USE_STATS
			PlayerInfo[player1][Deaths] = PlayerInfo[player1][Deaths]+ deaths;
			PlayerInfo[player1][Experiencia] = PlayerInfo[player1][Experiencia]- experiencia;
	    	#endif
	    	ActualizarInformacion(playerid);
		 	return 1;
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 8] para Usar este Comando!");
}

dcmd_setskin(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /setskin [jugador] [ID del skin]") &&
		SendClientMessage(playerid, orange, "[Función]: Establece un Determinado Skin a Especificado Jugador!");
		new player1 = strval(tmp), skin = strval(tmp2);
		if(!IsValidSkin(skin)) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}ID de skin inválida");
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETSKIN");
			format(string2, sizeof(string2), "{FFFFFF}Le has puesto a \"%s\" el skin {0700D7}'%d", pName(player1), skin); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" te ha puesto el skin {0700D7}'%d'", pName(playerid), skin); SendClientMessage(player1,red,string2); }
   			return SetPlayerSkin(player1, skin);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
}

dcmd_setbusqueda(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 1) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /setbusqueda [jugador] [nivel]") &&
		SendClientMessage(playerid, orange, "[Función]: Establece un Nivel de Búsqueda a Especificado Jugador!");
		new player1 = strval(tmp), wanted = strval(tmp2);
		if(wanted > 6) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Nivel de búsqueda inválido");
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETBUSQUEDA");
			format(string2, sizeof(string2), "{FFFFFF}Has puesto el nivel de búsqueda de \"%s\" en {0700D7}'%d", pName(player1), wanted); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" ha puesto tu nivel de búsqueda en '%d'", pName(playerid), wanted); SendClientMessage(player1,ColorAdmin,string2); }
   			return SetPlayerWantedLevel(player1, wanted);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conetado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
}

dcmd_setname(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 9 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "[USA]: /setname [jugador] [nuevo nombre]") &&
		SendClientMessage(playerid, orange, "[Función]: Establece un Nick/Nombre a Especificado Jugador!");
		new player1 = strval(tmp), length = strlen(tmp2);
		new nombre[MAX_PLAYER_NAME]; GetPlayerName(player1, nombre, sizeof(nombre));
		if(length < 3 || length > MAX_PLAYER_NAME) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El nuevo nombre debe ser entre 3 y 20 carácteres");
		if(udb_Exists(tmp2)) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}El nick ingresado ya existe en la base de datos de Players.");
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETNAME");
			format(string2, sizeof(string2), "Has cambiado el nombre de \"%s\" a \"%s\" ", pName(player1), tmp2); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" cambió tu nombre a \"%s\" ", pName(playerid), tmp2); SendClientMessage(player1,ColorAdmin,string2); }
            udb_RenameUser(nombre, tmp2);
			SetPlayerName(player1, tmp2);
			SaveToFile("SetName",string2);
   			return OnPlayerConnect(player1);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}

dcmd_setcolor(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 3) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) {
			SendClientMessage(playerid, red, "[USA]: /setcolor [jugador] [color]");
			return SendClientMessage(playerid, red, "Colores: 0=negro 1=blanco 2=rojo 3=naranja 4=amarillo 5=verde 6=azul 7=purpura 8=marron 9=rosa") &&
		    SendClientMessage(playerid, orange, "[Función]: Establece un Color al Nick/Nombre de un Jugador!");
		}
		new player1 = strval(tmp), Colour = strval(tmp2), colour[24];
		if(Colour > 9) return SendClientMessage(playerid, red, "Colores: 0=negro 1=blanco 2=rojo 3=naranja 4=amarillo 5=verde 6=azul 7=purpura 8=marron 9=rosa");
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
	        CMDMessageToAdmins(playerid,"SETCOLOR");
			switch (Colour)
			{
			    case 0: { SetPlayerColor(player1,black); colour = "Black"; }
			    case 1: { SetPlayerColor(player1,COLOR_WHITE); colour = "White"; }
			    case 2: { SetPlayerColor(player1,red); colour = "Red"; }
			    case 3: { SetPlayerColor(player1,orange); colour = "Orange"; }
				case 4: { SetPlayerColor(player1,orange); colour = "Yellow"; }
				case 5: { SetPlayerColor(player1,COLOR_GREEN1); colour = "Green"; }
				case 6: { SetPlayerColor(player1,COLOR_BLUE); colour = "Blue"; }
				case 7: { SetPlayerColor(player1,COLOR_PURPLE); colour = "Purple"; }
				case 8: { SetPlayerColor(player1,COLOR_BROWN); colour = "Brown"; }
				case 9: { SetPlayerColor(player1,COLOR_PINK); colour = "Pink"; }
			}
			if(player1 != playerid) { format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" ha puesto tu color en '%s' ", pName(playerid), colour); SendClientMessage(player1,ColorAdmin,string2); }
			format(string2, sizeof(string2), "Has puesto el color de \"%s\" en '%s' ", pName(player1), colour);
   			return SendClientMessage(playerid,ColorAdmin,string2);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

dcmd_setmundo(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 3) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /setmundo [jugador] [mundo virtual]") &&
		SendClientMessage(playerid, orange, "[Función]: Establece un Mundo Virtual a Especificado Jugador!");
		new player1 = strval(tmp), time = strval(tmp2);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETMUNDO");
			format(string2, sizeof(string2), "{FFFFFF}Has puesto el mundo virtual de \"%s\" en {0700D7}'%d'", pName(player1), time); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" ha puesto tu mundo virtual en {0700D7}'%d' ", pName(playerid), time); SendClientMessage(player1,red,string2); }
			PlayerPlaySound(player1,1057,0.0,0.0,0.0);
   			return SetPlayerVirtualWorld(player1, time);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

dcmd_setinterior(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 4) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /setinterior [jugador] [interior]") &&
		SendClientMessage(playerid, orange, "[Función]: Establece un Interior a Especificado Jugador!");
		new player1 = strval(tmp), time = strval(tmp2);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETINTERIOR");
			format(string2, sizeof(string2), "{FFFFFF}Has puesto el interior de \"%s\" en {0700D7}'%d' ", pName(player1), time); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" ha puesto tu interior en {0700D7}'%d' ", pName(playerid), time); SendClientMessage(player1,red,string2); }
			PlayerPlaySound(player1,1057,0.0,0.0,0.0);
   			return SetPlayerInterior(player1, time);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 4] para Usar este Comando!");
}

dcmd_force(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /force [jugador]") &&
		SendClientMessage(playerid, orange, "[Función]: Respawnea en Selección de Skin a Especificado Jugador!");
		new player1 = strval(params);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"FORCE");
			if(player1 != playerid) { format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {29FF0D}\"%s\"{FFFFFF} te ha forzado a elegir otro skin", pName(playerid) ); SendClientMessage(player1,red,string2); }
			format(string2,sizeof(string2),"{FFFFFF}Has forzado a \"%s\" a cambiar de skin", pName(player1)); SendClientMessage(playerid,ColorAdmin,string2);
			ForceClassSelection(player1);
			return SetPlayerHealth(player1,0.0);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
}

dcmd_sacar(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /sacar [jugador]") &&
		SendClientMessage(playerid, orange, "[Función]: Expulsa a Especificado Jugador del Vehículo");
		new player1 = strval(params), Float:x, Float:y, Float:z;
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			if(IsPlayerInAnyVehicle(player1)) {
		       	CMDMessageToAdmins(playerid,"SACAR");
				if(player1 != playerid) { format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" te ha sacado de tu vehículo", pName(playerid) ); SendClientMessage(player1,ColorAdmin,string2); }
				format(string2,sizeof(string2),"Has sacado a \"%s\" de su vehículo", pName(player1)); SendClientMessage(playerid,ColorAdmin,string2);
    		   	GetPlayerPos(player1,x,y,z);
				return SetPlayerPos(player1,x,y,z+3);
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está en un vehículo");
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
}

dcmd_lockcar(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 1) {
	    if(IsPlayerInAnyVehicle(playerid)) {
		 	for(new i = 0; i < MAX_PLAYERS; i++) SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i,false,true);
			CMDMessageToAdmins(playerid,"LOCKCAR");
			PlayerInfo[playerid][DoorsLocked] = 1;
			format(string2,sizeof(string2),"[INFO]:{FFFFFF} El Administrador {29FF0D}\"%s\"{FFFFFF} ha bloqueado su vehículo", pName(playerid));
			return SendClientMessageToAll(blue,string2);
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas estar en un vehículo para bloquear/desbloquear las puertas");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
}

dcmd_unlockcar(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 1) {
	    if(IsPlayerInAnyVehicle(playerid)) {
		 	for(new i = 0; i < MAX_PLAYERS; i++) SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i,false,false);
			CMDMessageToAdmins(playerid,"UNLOCKCAR");
			PlayerInfo[playerid][DoorsLocked] = 0;
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {29FF0D}\"%s\"{FFFFFF} ha desbloqueado su vehículo", pName(playerid));
			return SendClientMessageToAll(blue,string2);
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas estar en un vehículo para bloquear/desbloquear las puertas");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
}

dcmd_burn(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /burn [jugador]") &&
		SendClientMessage(playerid, orange, "[Función]: ¡Quemas a un especificado Jugador! (Con explosión)");
		new player1 = strval(params), Float:x, Float:y, Float:z;
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"BURN");
			format(string2, sizeof(string2), "{FFFFFF}Has quemado a {29FF0D}\"%s\" ", pName(player1)); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" te ha quemado", pName(playerid)); SendClientMessage(player1,ColorAdmin,string2); }
			GetPlayerPos(player1, x, y, z);
			return CreateExplosion(x, y , z + 3, 1, 10);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
}

dcmd_spawnplayer(playerid,params[])
{
	return dcmd_spawn(playerid,params);
}

dcmd_spawn(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 1) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /spawn [jugador]") &&
		SendClientMessage(playerid, orange, "[Función]: Spawnea a Especificado Jugador!");
		new player1 = strval(params);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SPAWN");
			format(string2, sizeof(string2), "{FFFFFF}Has reiniciado a {FF0000}\"%s\" ", pName(player1)); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {FF0000}\"%s\"{FFFFFF} te ha reiniciado", pName(playerid)); SendClientMessage(player1,red,string2); }
			SetPlayerPos(player1, 0.0, 0.0, 0.0);
			return SpawnPlayer(player1);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
}

dcmd_desarmar(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /desarmar [jugador]") &&
		SendClientMessage(playerid, orange, "[Función]: Desarma a Especificado Jugador!");
		new player1 = strval(params);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"DESARMAR");  PlayerPlaySound(player1,1057,0.0,0.0,0.0);
			format(string2, sizeof(string2), "{FFFFFF}Has desarmado a {0700D7}\"%s\" ", pName(player1)); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" te ha desarmado", pName(playerid)); SendClientMessage(player1,ColorAdmin,string2); }
			ResetPlayerWeapons(player1);
			GivePlayerWeapon(playerid,1,1);
			return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
}

dcmd_crash(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 9) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /crash [jugador]");
        new player1 = strval(params);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
            crashear(player1);
			format(string2, sizeof(string2), "Has crasheado a \"%s\" ", pName(player1) );
			return SendClientMessage(playerid,ColorAdmin, string2);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Administrador nivel 9 para usar este comando");
}

dcmd_ip(playerid,params[]) {
	if(PlayerInfo[playerid][pVip] >= 4 || PlayerInfo[playerid][pAdmin] >= 1) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /ip [jugador]") &&
		SendClientMessage(playerid, orange, "[Función]: Observar la IP a Especificado Jugador!");
		new player1 = strval(params);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToVips(playerid,"IP");
			new tmp3[50]; GetPlayerIp(player1,tmp3,50);
			format(string2,sizeof(string2),"{FFFFFF}La IP de {FF0000}\"%s\"{FFFFFF} es {29FF0D}'%s'", pName(player1), tmp3);
			return SendClientMessage(playerid,ColorAdmin,string2);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
}

dcmd_redinero(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 4) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /redinero [jugador]") &&
		SendClientMessage(playerid, orange, "[Función]: ¡Reseteas el dinero a un especificado jugador!");
		new player1 = strval(params);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"REDINERO");
			format(string2, sizeof(string2), "{FFFFFF}Has reseteado el dinero de {0700D7}\"%s\" ", pName(player1)); SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {FF0000}\"%s\"{FFFFFF} ha reseteado tu dinero'", pName(playerid)); SendClientMessage(player1,red,string2); }
   			return ResetPlayerMoney(player1);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 4] para Usar este Comando!");
}

dcmd_sredinero(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 8) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /sredinero [jugador]") &&
		SendClientMessage(playerid, orange, "[Función]: Resetea el Dinero Silenciosamente a Especificado Jugador!");
		new player1 = strval(params);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SREDINERO");
			format(string2, sizeof(string2), "{FFFFFF}Has reseteado el dinero de \"%s\" secretamente", pName(player1)); SendClientMessage(playerid,ColorAdmin,string2);
   			return ResetPlayerMoney(player1);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 8] para Usar este Comando!");
}

dcmd_conteo(playerid,params[]) {
	#pragma unused params
	if(SConte == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}El comando fue desactivado por un Administrador");
	if(Iniciado == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Ya hay un conteo en progreso");
	new sendername[MAX_PLAYER_NAME];
    Iniciado = 1;
    SetTimerEx("Nr5", 500, 0, "d", playerid);
    GetPlayerName(playerid, sendername, sizeof(sendername));
    format(string2, sizeof(string2), "[CONTEO]: El Player %s [%d] inició un Conteo!", sendername, playerid); SendClientMessageToAll(COLOR_PINK, string2);
	return 1;
}

dcmd_votekick(playerid,params[]){
	new id, reason[128];
	if(SVote == 1) return SendClientMessage(playerid,red, "{E23400}VOTEKICK: {FFFFFF}El comando fue desactivado por un Administrador");
    for (new i = 0; i < GetMaxPlayers(); i++){if(IsPlayerConnected(i)){PlayerCount++;}}
    if(PlayerCount <= 3)return SendClientMessage(playerid,red, "{E23400}[ERROR]: {FFFFFF}Debe haber más de tres Jugadores en Línea para iniciar un VoteKick");
    if(PlayerInfo[playerid][pVip] < 8) return SendClientMessage(playerid,COLOR_red,"{E23400}[ERROR]: {FFFFFF}Necesitas ser LEGENDARIO para usar este comando.");
	if(Wait[playerid] == 1) return SendClientMessage(playerid,red, "VOTEKICK: Por favor, espere 60 segundos antes de votar de nuevo");
	if(VoteKick == 1) return SendClientMessage(playerid,red, "{E23400}[ERROR]: {FFFFFF}Hay una votación en curso, por favor espere");
	if(sscanf(params,"ds",id,reason)) return SendClientMessage(playerid,orange, "{E23400}USO: {FFFFFF}/votekick [id] [razón]") && SendClientMessage(playerid,orange, "{E23400}[Función]: {FFFFFF}Se inicia un temporizador, que cualquiera puede votar a Kickear el Jugador (30 segundos)");
	if(strlen(reason) <= 5 || strlen(reason) >= 30) return SendClientMessage(playerid, orange, "{E23400}[ERROR]: {FFFFFF}La Razón debe ser mayor de 5 y menor de 30 letras");
	if(IsPlayerConnected(id) && id != INVALID_PLAYER_ID ){
		if(id != playerid){
			if(!IsPlayerAdmin(id) || PlayerInfo[id][pAdmin] >= 1){
			format(string2, sizeof(string2), "[VK]: El usuario %s comenzó un VoteKick para %s. [Razón: %s] - Quedan %d segundos para votar.", Name(playerid), Name(id), reason, VOTETIME / 1000); print(string2); SendClientMessageToAll(yellow, string2);
			SendClientMessageToAll(orange, "Si desea que este jugador sea kickeado. Use /vote de lo contrario no lo use.");
			SendClientMessage(playerid,yellow, "[INFO]: {FFFFFF}puedes detener el votekick con /cvotekick");
			Votes = 1;
			VT = SetTimerEx("VoteTimer", VOTETIME, 0, "i", id);
			VoteKick = 1;
			Wait[playerid] = 1;
			AutorVote[playerid] = 1;
			return SetTimerEx("WaitT", WAIT_TIME, 0, "d", playerid);
			} else return SendClientMessage(playerid,red, "{E23400}[ERROR]: {FFFFFF}No se puede expulsar a un Admin!");
		} else return SendClientMessage(playerid, red, "{E23400}[ERROR]: {FFFFFF}No Puedes Iniciar Una Votación Hacia Ti Mismo");
	} else return format(string2, sizeof(string2), "{E23400}[ERROR]: {FFFFFF}El player [ID: %d] no está conectado.",id) && SendClientMessage(playerid, red, string2);
}

dcmd_vote(playerid,params[]){
	#pragma unused params
	if(VoteKick == 0) return SendClientMessage(playerid,red, "{E23400}[ERROR]: {FFFFFF}No hay votaciones activas.");
	if(AutorVote[playerid] == 1) return SendClientMessage(playerid,red, "{E23400}[ERROR]: {FFFFFF}No puedes votar en tu propio votekick.");
	if(Voted[playerid] == 1){ SendClientMessage(playerid, red, "{E23400}[ERROR]: {FFFFFF}No puedes votar más de una vez.");
	}else{
 	Voted[playerid] = 1; Votes++;
	format(string2, sizeof(string2), "{E23400}[VoteKick]: {FFFFFF}El usuario %s ha votado [%d/%d]", Name(playerid), Votes, (PlayerCount /= 2)+1);
	SendClientMessageToAll(yellow, string2);
	}
	return 1;
}

dcmd_cvotekick(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 5 || AutorVote[playerid] == 1){
	if(VoteKick == 1){
	KillTimer(VT);
	Votes = 0;
	VoteKick = 0;
	Wait[playerid] = 0;
	AutorVote[playerid] = 0;
	SendClientMessageToAll(yellow, "[VK]: El VOTEKICK ha sido cancelado.");
	}else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Ninguna Votacion En Curso");
	}else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 5] para Usar este Comando!");
	return 1;
}

dcmd_svotekick(playerid,params[]) {
  #pragma unused params
  if(PlayerInfo[playerid][pAdmin] >= 6) {
  CMDMessageToAdmins(playerid,"SVOTEKICK");
   new name[MAX_PLAYERS];
		if(SVote == 0) {
			SVote = 1;
			GetPlayerName(playerid, name, sizeof(name));
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}\"%s\"{FFFFFF} ha desactivado el Votekick.",name);
		} else {
			SVote = 0;
			GetPlayerName(playerid, name, sizeof(name));
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}\"%s\"{FFFFFF} ha activado el Votekick",name);
		} return SendClientMessageToAll(red,string2);
 	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 6] para Usar este Comando!");
}

/*dcmd_svwarn(playerid,params[]) {
  #pragma unused params
  if(PlayerInfo[playerid][pAdmin] >= 6) {
  CMDMessageToAdmins(playerid,"SVWARN");
   new name[MAX_PLAYERS];
  if(Usarvwarn == 1) {
			Usarvwarn = 0;
			GetPlayerName(playerid, name, sizeof(name));
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" Ha desactivado el vwarn",name);
		} else {
			Usarvwarn = 1;
			GetPlayerName(playerid, name, sizeof(name));
			format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" Ha activado el vwarn",name);
		} return SendClientMessageToAll(green,string2);
 	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 6] para Usar este Comando!");
}*/

dcmd_sconteo(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 6) {
		CMDMessageToAdmins(playerid,"SCONTEO");
		if(SConte == 0) {
			SConte = 1;
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}\"%s\"{FFFFFF} ha desactivado el Conteo.", pName(playerid) );
		} else {
			SConte = 0;
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}\"%s\"{FFFFFF} ha activado el Conteo.", pName(playerid) );
		} return SendClientMessageToAll(red,string2);
 	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 6] para Usar este Comando!");
}

dcmd_sck(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 3) {
		CMDMessageToAdmins(playerid,"SCK");
		if(SCKill == 0) {
			SCKill = 1;
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}\"%s\"{FFFFFF} ha desactivado el CK.", pName(playerid) );
		} else {
			SCKill = 0;
			format(string2,sizeof(string2),"[INFO]:{FFFFFF} El Administrador {0700D7}\"%s\"{FFFFFF} ha activado el CK.", pName(playerid) );
		} return SendClientMessageToAll(red,string2);
 	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

dcmd_sclan(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 8) {
		CMDMessageToAdmins(playerid,"SCLAN");
		if(SClan == 0) {
			SClan = 1;
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}\"%s\"{FFFFFF} ha activado la creación de nuevos clanes.", pName(playerid));
		} else {
			SClan = 0;
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}\"%s\"{FFFFFF} ha desactivado la creación de nuevos clanes.", pName(playerid));
		} return SendClientMessageToAll(green,string2);
 	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Level [Lvl 8] para Usar este Comando!");
}

dcmd_ubound(playerid,params[]) {
 	if(PlayerInfo[playerid][pAdmin] >= 3) {
		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /ubound [jugador]") &&
		SendClientMessage(playerid, orange, "[Función]: Remueve el World Boundaries a Especificado Jugador!");
	    new player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"UBOUND");
			SetPlayerWorldBounds(player1, 9999.9, -9999.9, 9999.9, -9999.9 );
			format(string2, sizeof(string2), "{0000FF}[INFO]: {FF4000}El Administrador %s ha eliminado los límites de tu mundo", PlayerName2(playerid)); if(player1 != playerid) SendClientMessage(player1,ColorAdmin,string2);
			format(string2,sizeof(string2),"Tú has removido a %s los límites de su mundo", PlayerName2(player1));
			return SendClientMessage(playerid,ColorAdmin,string2);
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}


dcmd_level1(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
    new Level1[1500];
    strcat(Level1, "{0000FF}Comandos {FFFFFF}Level 1 - {0D00FF}OPERADOR PRINCIPIANTE.\n\n");
    strcat(Level1, "{FF0000} - {F77810}Spawn, Getinfo, Ltune, Cevento, Bauto, Ltc, Lauto.\n");
    strcat(Level1, "{FF0000} - {F77810}Lmoto, Lheli, Lbote, lavion, Flip.\n");
    strcat(Level1, "{FF0000} - {F77810}Encarcelados, Congelados, Muteados.\n");
    strcat(Level1, "{FF0000} - {F77810}Weaps, Adminarea, Reportes, Ricos.\n");
    strcat(Level1, "{FF0000} - {F77810}Miniguns, Rockets, Spec, Specoff, G, S, Adminon, Adminoff.\n");
    strcat(Level1, "{FF0000} - {F77810}Lockcar, Unlockcar, Ip, Setbusqueda.\n\n");
	strcat(Level1, "{FF0000} - {F77810}Para Hablar en el Chat Admin usa {FFFF00}#Texto");
    ShowPlayerDialog(playerid, 39, DIALOG_STYLE_MSGBOX, "|| Comandos Admin ||", Level1, "Ok", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
}
dcmd_level2(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
	new Level2[1000];
	strcat(Level2, "{0000FF}Comandos {FFFFFF}Level 2 - {0D00FF}OPERADOR INTERMEDIO.\n\n");
	strcat(Level2, "{FF0000} - {00aeff}Todos los comandos anteriores.\n\n");
	strcat(Level2, "{FF0000} - {F77810}Slap, Jail, Unjail Sacar, Desarmar, Warn.\n");
	strcat(Level2, "{FF0000} - {F77810}Quitarwarn, Jetpack, Goto, Congelar, Laston.\n");
	strcat(Level2, "{FF0000} - {F77810}Descongelar, Mute, Force, Unmute, Screen.\n");
	strcat(Level2, "{FF0000} - {F77810}Mievento, Burn, Explotar, Get, Setskin.\n\n");
	strcat(Level2, "{FF0000} - {F77810}CMDS PARA EVENTOS DM:\n");
	strcat(Level2, "{FF0000} - {F77810}/HoraFelizRL: Enciendes la Hora Feliz!\n");
	strcat(Level2, "{FF0000} - {F77810}/OffHF: Apagas la Hora Feliz!\n\n");
	strcat(Level2, "{FF0000} - {FFFFFF}Recuerda moderar respetando las /reglas!");
    ShowPlayerDialog(playerid, 39, DIALOG_STYLE_MSGBOX, "|| Comandos Admin ||", Level2, "Ok", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
}
dcmd_level3(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
	new Level3[1000];
	strcat(Level3, "{0000FF}Comandos {FFFFFF}Level 3 - {0D00FF}OPERADOR MASTER.\n\n");
	strcat(Level3, "{FF0000} - {00aeff}Todos los comandos anteriores.\n\n");
	strcat(Level3, "{FF0000} - {F77810}Lgoto, Rvida, Car, RChaleco, BorrarChat, Bc, Btc.\n");
	strcat(Level3, "{FF0000} - {F77810}Setcolor, Sck, Lammo, Kick, Jail, Unjail.\n");
	strcat(Level3, "{FF0000} - {F77810}Aka, LConteo, Ubound, teleplayer, DarArma.\n");
	strcat(Level3, "{FF0000} - {F77810}BotCheck, Setmundo, BorrarTodoChat.\n\n");
	strcat(Level3, "{FF0000} - {F77810}CMDS PARA EVENTOS DM:\n");
	strcat(Level3, "{FF0000} - {F77810}/Rleventos: Muestra la lista de eventos a elegir.\n");
	strcat(Level3, "{FF0000} - {F77810}/Fineventosrl: Finaliza los eventos.\n\n");
	strcat(Level3, "{FF0000} - {FFFFFF}Recuerda moderar siempre respetando las /reglas ya establecidas en {FF00FF} /AdminReglas\n\n");
    ShowPlayerDialog(playerid, 39, DIALOG_STYLE_MSGBOX, "|| Comandos Admin ||", Level3, "Ok", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
}
dcmd_level4(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
	new Level4[1000];
	strcat(Level4, "{0000FF}Comandos {FFFFFF}Level 4 - {0D00FF}OPERADOR PROFESIONAL.\n\n");
	strcat(Level4, "{FF0000} - {00aeff}Todos los comandos anteriores.\n\n");
	strcat(Level4, "{FF0000} - {F77810}Setvida, Announce, SetAllBusqueda, SetChaleco.\n");
	strcat(Level4, "{FF0000} - {F77810}Mover, Setinterior, CarVida, ReDinero, CarColor.\n\n");
	strcat(Level4, "{FF0000} - {FFFFFF}Recuerda moderar siempre respetando las /reglas ya establecidas en {FF00FF} /AdminReglas\n\n");
	ShowPlayerDialog(playerid, 39, DIALOG_STYLE_MSGBOX, "|| Comandos Admin ||", Level4, "Ok", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
}
dcmd_level5(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
    new Level5[1000];
    strcat(Level5, "{0000FF}Comandos {FFFFFF}Level 5 - {00FF00}GAME MASTER PRINCIPIANTE.\n\n");
	strcat(Level5, "{FF0000} - {00aeff}Todos los comandos anteriores.\n\n");
    strcat(Level5, "{FF0000} - {F77810}DarScore, Announce2, Akill, Write.\n");
    strcat(Level5, "{FF0000} - {F77810}FakeDeath, SetCash, DarCash, DesarmarAll, SacarAll.\n");
	strcat(Level5, "{FF0000} - {F77810}CVoteKick, RespawnCars, MoverPlayer, GetAll.\n\n");
    ShowPlayerDialog(playerid, 39, DIALOG_STYLE_MSGBOX, "|| Comandos Admin ||", Level5, "Ok", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
}
dcmd_level6(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
    new Level6[1200];
    strcat(Level6, "{0000FF}Comandos {FFFFFF}Level 6 - {00FF00}GAME MASTER INTERMEDIO.\n\n");
	strcat(Level6, "{FF0000} - {00aeff}Todos los comandos anteriores.\n\n");
    strcat(Level6, "{FF0000} - {F77810}VidaAll, ChalecoAll, Setallskin, Ban, Nunban, Unban, BanIP, UnbanIP.\n");
    strcat(Level6, "{FF0000} - {F77810}Esposar, QuitarEsposas, SetAllMundo, DarAllCash, Hide, Unhide.\n");
	strcat(Level6, "{FF0000} - {F77810}SChat, Sconteo, SReloj, DarAllArmas SlapAll, ExplotarAll, Svwarn, SVoteKick.\n\n");
    ShowPlayerDialog(playerid, 39, DIALOG_STYLE_MSGBOX, "|| Comandos Admin ||", Level6, "Ok", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
}
dcmd_level7(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 7)
	{
    new Level7[1000];
    strcat(Level7, "{0000FF}Comandos {FFFFFF}Level 7 - {00FF00}GAME MASTER MASTER.\n\n");
	strcat(Level7, "{FF0000} - {00aeff}Todos los comandos anteriores.\n\n");
    strcat(Level7, "{FF0000} - {F77810}Die, BanTemp [Nuevo], NBan, GodCar, RBan, DarNivel.\n");
    strcat(Level7, "{FF0000} - {F77810}SetPing, Anuncio, Reloj, KillAll, FakeCmd, Sgod.\n");
    strcat(Level7, "{FF0000} - {F77810}Forbidname, FakeChat, SpawnAll, MuteAll.\n");
    strcat(Level7, "{FF0000} - {F77810}UnmuteAll, CongelarAll, UConfig, SNombre, SlapAll.\n");
    strcat(Level7, "{FF0000} - {F77810}DescongelarAll.\n\n");
    ShowPlayerDialog(playerid, 39, DIALOG_STYLE_MSGBOX, "|| Comandos Admin ||", Level7, "Ok", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
}
dcmd_level8(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 8)
	{
	new Level8[1400];
	strcat(Level8, "{0000FF}Comandos {FFFFFF}Level 8 - {00FF00}GAME MASTER PROFESIONAL.\n\n");
	strcat(Level8, "{FF0000} - {00aeff}Todos los comandos anteriores.\n\n");
	strcat(Level8, "{FF0000} - {F77810}Say (hablar anonimamente), SetScore, God.\n");
	strcat(Level8, "{FF0000} - {F77810}Players, Reloj, SReloj, SetVip, SetTiempo, DarMuerte, DarLevelTemp.\n");
	strcat(Level8, "{FF0000} - {F77810}ForbidWord, ReloadBans, ExplotarAll, SetMuerte, SReDinero, SClan.\n\n");
	strcat(Level8, "{FF0000} - {F77810}Para Hablar por el Chat De Levels Altos (8-10) Usa {FFFF00}&Texto");
	ShowPlayerDialog(playerid, 39, DIALOG_STYLE_MSGBOX, "|| Comandos Admin ||", Level8, "Ok", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
}
dcmd_level9(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 9)
	{
	new Level9[1000];
	strcat(Level9, "{0000FF}Comandos {FFFFFF}Level 9 - {FF0000}Co-Manager.\n\n");
	strcat(Level9, "{FF0000} - {00aeff}Todos los comandos anteriores.\n\n");
	strcat(Level9, "{FF0000} - {F77810}SetEx, LMenu, DarAllScore, Fu, SetNivel.\n");
	strcat(Level9, "{FF0000} - {F77810}SetGravity, Crash, DarLevel, Cadmin.\n");
	strcat(Level9, "{FF0000} - {F77810}SetName, SetAllCash, SetAllScore, Insertar.\n");
	strcat(Level9, "{FF0000} - {F77810}Spam, Enable, Disable, AdminWarn, QuitarAdminWarn.\n");
	strcat(Level9, "{FF0000} - {F77810}Vasay (Para encargadas/mujeres), DarAllNivel, SetAllNivel.\n\n");
	strcat(Level9, "{FF0000} - {FFFFFF}Para Hablar por el Chat De Levels Altos (8-10) Usa {FFFF00}&Texto");
	ShowPlayerDialog(playerid, 39, DIALOG_STYLE_MSGBOX, "|| Comandos Admin ||", Level9, "Ok", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
}
dcmd_level10(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 10)
	{
	new Level10[1000];
	strcat(Level10, "{0000FF}Comandos {FFFFFF}Level 10 - {FF0000}Owner\n\n");
	strcat(Level10, "{FF0000} - {00aeff}Todos los comandos anteriores + CMDS RCON.\n");
	strcat(Level10, "{FF0000} - {F77810}TraerAdmins, SetPass, Exec, Gravity, Weather, Say.\n");
	strcat(Level10, "{FF0000} - {F77810}Reloadfs, Loadfs, Unloadfs, LockServer.\n");
	strcat(Level10, "{FF0000} - {F77810}UnlockServer, VenderTodasPropiedades.\n");
	strcat(Level10, "{FF0000} - {F77810}*Incluye los Comandos Remotos RCON.\n\n");
	strcat(Level10, "{FF0000} - {F77810}Para hablar por el Chat De Levels Altos (8-10) Usa {FFFF00}&Texto");
	strcat(Level10, "{FF0000} - {F77810}Para hablar por el chat de dueños usa comillas más el texto.");
	ShowPlayerDialog(playerid, 39, DIALOG_STYLE_MSGBOX, "|| Comandos Admin ||", Level10, "Ok", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
}

dcmd_adminreglas(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 0) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Comando modificandose...");
	if(PlayerInfo[playerid][pAdmin] > 0)
	{
	new string[2000];
	strcat(string, "1): El reglamento con sus respectivos artículos deben ser leídos cada vez que tenga su actualización, es primordial.\n");
	strcat(string, "2): Este reglamento incluye toda redacción entendible y madura, eso quiere decir que a la hora de leerlo podrá tener una comprensión literaria.\n");
	strcat(string, "3): Es considerable leer el reglamento del juego el cual te dará un apoyo al controlar todos los usuarios dentro del servidor, y exteriormente del servidor.\n");
	strcat(string, "4): Si uno de estos artículos llegan a ser despreciados, tanto por el Operador hasta dueño pueden terminar siendo sancionados levemente.\n");
	strcat(string, "5): Es importante interpretar que una vez leídos los artículos, ya que al violar una de ellas no tendrá oportunidades de evitar la sanción.\n");
	strcat(string, "6): Cualquier mod que contenga algo referido con la barra de vida, chaleco y respiración (en el agua), llegará a tener una sanción leve.\n");
	strcat(string, "7): Es completamente ilegal abusar o usar cualquier bug que pemita estar presente en el juego o modo de juego (SA:MP).\n");
	strcat(string, "8): Está prohibido abuso de algún comando exclusivo que sólo tiene el acceso el Operador, administrador, encargado o dueño del servidor.\n");
	strcat(string, "9): Es inaceptable utilizar el modo spec para matar con algún comando administrativo a un usuario sin razón.\n");
	strcat(string, "10): Será inaceptable utilizar el /Cadmin sin cortesía al fabricar oraciones.\n");
	ShowPlayerDialog(playerid, DialogAdmin, DIALOG_STYLE_MSGBOX, "|| Reglas Del STAFF ||",string,"Siguiente", "Cancelar");
    } else return SendClientMessage(playerid,red, "Necesitas ser Admin para usar este Comando");
	return 1;
}

dcmd_lconfig(playerid,params[]) {
	#pragma unused params
	new str[400];
	if(PlayerInfo[playerid][pAdmin] > 1)
 {
		format(str,sizeof(str),"Max Ping: %dms | ReadPms %d | ReadCmds %d | Max Admin Level %d | AdminOnlySkins %d\n\nAdminSkin1 %d | AdminSkin2 %d | NameKick %d | AntiBot %d | AntiSpam %d | AntiSwear %d\n\nNoCaps %d | Locked %d | Pass %s | SaveMoney %d | ConnectMessages %d | AutoLogin %d\n\nAdminCmdMsgs %d | MaxMuteWarnings %d | ChatDisabled %d | MustLogin %d | MustRegister %d",ServerInfo[MaxPing],ServerInfo[ReadPMs],ServerInfo[ReadCmds],
		ServerInfo[MaxAdminLevel],ServerInfo[AdminOnlySkins],ServerInfo[AdminSkin],ServerInfo[AdminSkin2],ServerInfo[NameKick],ServerInfo[AntiBot],ServerInfo[AntiSpam],ServerInfo[AntiSwear],ServerInfo[NoCaps],ServerInfo[Locked],ServerInfo[Password],ServerInfo[GiveMoney],ServerInfo[ConnectMessages],ServerInfo[AutoLogin],ServerInfo[AdminCmdMsg],ServerInfo[MaxMuteWarnings],ServerInfo[DisableChat],ServerInfo[MustLogin],ServerInfo[MustRegister]);
        ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Server Configuración",str,"Aceptar","");
	}
	return 1;
}

dcmd_getinfo(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid,red,"[USA]: /getinfo [jugador]") &&
		SendClientMessage(playerid, orange, "[Función]: Muestra Información a Especificado Jugador!");
	    new player1;
	    player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		    new Float:player1health, Float:player1armour, playerip[128], Float:x, Float:y, Float:z, tmp2[256], file[256],
				year, month, day, P1Jailed[4], P1Frozen[4], P1Logged[4], P1Register[4], RegDate[256], TimesOn;

			GetPlayerHealth(player1,player1health);
			GetPlayerArmour(player1,player1armour);
	    	GetPlayerIp(player1, playerip, sizeof(playerip));
	    	GetPlayerPos(player1,x,y,z);
			getdate(year, month, day);
			format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName2(player1)));

			if(PlayerInfo[player1][Jailed] == 1) P1Jailed = "Si"; else P1Jailed = "No";
			if(PlayerInfo[player1][Frozen] == 1) P1Frozen = "Si"; else P1Frozen = "No";
			if(PlayerInfo[player1][LoggedIn] == 1) P1Logged = "Si"; else P1Logged = "No";
			if(fexist(file)) P1Register = "Si"; else P1Register = "No";
			if(dUserINT(PlayerName2(player1)).("LastOn")==0) tmp2 = "n/a"; else tmp2 = dini_Get(file,"LastOn");
			if(strlen(dini_Get(file,"RegisteredDate")) < 3) RegDate = "n/a"; else RegDate = dini_Get(file,"RegisteredDate");
			TimesOn = dUserINT(PlayerName2(player1)).("TimesOnServer");
		    new Sum, Average, w;
			while (w < PING_MAX_EXCEEDS) {
				Sum += PlayerInfo[player1][pPing][w];
				w++;
			}
			Average = (Sum / PING_MAX_EXCEEDS);

	  		format(string2, sizeof(string2),"[Player Info]  ---====> Nick: %s  ID: %d <====---", PlayerName2(player1), player1);
			SendClientMessage(playerid,lightblue,string2);
		  	format(string2, sizeof(string2),"Vida: %d  Chaleco: %d  Score: %d  Cash: %d  Skin: %d  IP: %s  Ping: %d  Promedio Ping: %d",floatround(player1health),floatround(player1armour),
			GetPlayerScore(player1),GetPlayerMoney(player1),GetPlayerSkin(player1),playerip,GetPlayerPing(player1), Average );
			SendClientMessage(playerid,red,string2);
			format(string2, sizeof(string2),"Interior: %d  Virtual World: %d  Nivel de búsqueda: %d  X %0.1f  Y %0.1f  Z %0.1f", GetPlayerInterior(player1), GetPlayerVirtualWorld(player1), GetPlayerWantedLevel(player1), Float:x,Float:y,Float:z);
			SendClientMessage(playerid,orange,string2);
			format(string2, sizeof(string2),"Tiempo en el SV: %d de Tiempo  Asesinatos: %d  Muertes: %d  KDR: %0.2f  Admin: %d Vip: %d", TimesOn, PlayerInfo[player1][Kills], PlayerInfo[player1][Deaths], Float:PlayerInfo[player1][Kills]/Float:PlayerInfo[player1][Deaths], PlayerInfo[player1][pAdmin], PlayerInfo[player1][pVip] );
			SendClientMessage(playerid,yellow,string2);
			format(string2, sizeof(string2),"Registrado: %s  Logueado: %s  Encarcelado: %s  Congelado: %s", P1Register, P1Logged, P1Jailed, P1Frozen );
			SendClientMessage(playerid,green,string2);
			format(string2, sizeof(string2),"Nivel: %d  Experiencia: %d", PlayerInfo[player1][Nivel], PlayerInfo[player1][Experiencia] );
			SendClientMessage(playerid,green,string2);
			format(string2, sizeof(string2),"Ultima conexión: %s  Fecha de registro: %s  Fecha: %d/%d/%d", tmp2, RegDate, day,month,year );
			SendClientMessage(playerid,COLOR_GREEN,string2);

			if(IsPlayerInAnyVehicle(player1)) {
				new Float:VHealth, carid = GetPlayerVehicleID(playerid); GetVehicleHealth(carid,VHealth);
				format(string2, sizeof(string2),"Vehículo ID: %d  Modelo: %d  Nombre del vehículo: %s  Vida del vehículo: %d",carid, GetVehicleModel(carid), VehicleNames[GetVehicleModel(carid)-400], floatround(VHealth) );
				SendClientMessage(playerid,COLOR_BLUE,string2);
			}

			new slot, ammo, weap, Count, WeapName[24], WeapSTR[128], p; WeapSTR = "Armas: ";
			for (slot = 0; slot < 14; slot++) {	GetPlayerWeaponData(player1, slot, weap, ammo); if( ammo != 0 && weap != 0) Count++; }
			if(Count < 1) return SendClientMessage(playerid,lightblue,"Jugador sin armas");
			else {
				for (slot = 0; slot < 14; slot++)
				{
					GetPlayerWeaponData(player1, slot, weap, ammo);
					if (ammo > 0 && weap > 0)
					{
						GetWeaponName(weap, WeapName, sizeof(WeapName) );
						if (ammo == 65535 || ammo == 1) format(WeapSTR,sizeof(WeapSTR),"%s%s (1)",WeapSTR, WeapName);
						else format(WeapSTR,sizeof(WeapSTR),"%s%s [%d]",WeapSTR, WeapName, ammo);
						p++;
						if(p >= 5) { SendClientMessage(playerid, lightblue, WeapSTR); format(WeapSTR, sizeof(WeapSTR), "Armas: "); p = 0;
						} else format(WeapSTR, sizeof(WeapSTR), "%s,  ", WeapSTR);
					}
				}
				if(p <= 4 && p > 0) {
					string2[strlen(string2)-3] = '.';
				    SendClientMessage(playerid, lightblue, WeapSTR);
				}
			}
			return 1;
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
}

dcmd_disable(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 9 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) {
			SendClientMessage(playerid,red,"[USA]: /disable [antiswear / namekick / antispam / ping / readcmds / readpms /caps / admincmdmsgs");
			return SendClientMessage(playerid,red,"       /connectmsgs / autologin ]");
		}
	    new file[256]; format(file,sizeof(file),"ladmin/config/Config.ini");
		if(strcmp(params,"antiswear",true) == 0) {
			ServerInfo[AntiSwear] = 0;
			dini_IntSet(file,"AntiSwear",0);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s {FFFFFF}ha deshabilitado el Antiswear", PlayerName2(playerid));
			SendClientMessageToAll(red,string2);
		} else if(strcmp(params,"namekick",true) == 0) {
			ServerInfo[NameKick] = 0;
			dini_IntSet(file,"NameKick",0);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s {FFFFFF}ha deshabilitado el Namekick", PlayerName2(playerid));
			SendClientMessageToAll(red,string2);
	 	} else if(strcmp(params,"antispam",true) == 0)	{
			ServerInfo[AntiSpam] = 0;
			dini_IntSet(file,"AntiSpam",0);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador{0700D7} %s {FFFFFF}ha deshabilitado el Antispam", PlayerName2(playerid));
			SendClientMessageToAll(red,string2);
		} else if(strcmp(params,"ping",true) == 0)	{
			ServerInfo[MaxPing] = 0;
			dini_IntSet(file,"MaxPing",0);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s {FFFFFF}ha deshabilitado el Ping Kick", PlayerName2(playerid));
			SendClientMessageToAll(red,string2);
		} else if(strcmp(params,"readcmds",true) == 0) {
			ServerInfo[ReadCmds] = 0;
			dini_IntSet(file,"ReadCMDs",0);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s {FFFFFF}ha deshabilitado el Reading Commands", PlayerName2(playerid));
			MessageToAdmins(red,string2);
		} else if(strcmp(params,"readpms",true) == 0) {
			ServerInfo[ReadPMs] = 0;
			dini_IntSet(file,"ReadPMs",0);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s{FFFFFF} ha deshabilitado el Reading Pms", PlayerName2(playerid));
			MessageToAdmins(red,string2);
  		} else if(strcmp(params,"caps",true) == 0)	{
			ServerInfo[NoCaps] = 1;
			dini_IntSet(file,"NoCaps",1);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s {FFFFFF}ha deshabilitado la Mayúscula en el Chat", PlayerName2(playerid));
			SendClientMessageToAll(red,string2);
		} else if(strcmp(params,"admincmdmsgs",true) == 0) {
			ServerInfo[AdminCmdMsg] = 0;
			dini_IntSet(file,"AdminCMDMessages",0);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s{FFFFFF} ha deshabilitado el Admin Command Messages", PlayerName2(playerid));
			MessageToAdmins(red,string2);
		} else if(strcmp(params,"connectmsgs",true) == 0)	{
			ServerInfo[ConnectMessages] = 0;
			dini_IntSet(file,"ConnectMessages",0);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s {FFFFFF}ha deshabilitado el Connect & Disconnect Messages", PlayerName2(playerid));
			MessageToAdmins(red,string2);
		} else if(strcmp(params,"autologin",true) == 0)	{
			ServerInfo[AutoLogin] = 0;
			dini_IntSet(file,"AutoLogin",0);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s{FFFFFF} ha deshabilitado el Auto Login", PlayerName2(playerid));
			MessageToAdmins(red,string2);
		} else {
			SendClientMessage(playerid,red,"[USA]: /disable [antiswear / namekick / antispam / ping / readcmds / readpms /caps /cmdmsg ]");
		} return 1;
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}

dcmd_enable(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 9 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) {
			SendClientMessage(playerid,red,"[USA]: /enable [antiswear / namekick / antispam / ping / readcmds / readpms /caps / admincmdmsgs");
			return SendClientMessage(playerid,red,"       /connectmsgs / autologin ]");
		}
	    new file[256]; format(file,sizeof(file),"ladmin/config/Config.ini");
		if(strcmp(params,"antiswear",true) == 0) {
			ServerInfo[AntiSwear] = 1;
			dini_IntSet(file,"AntiSwear",1);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s{FFFFFF} ha habilitado el Antiswear", PlayerName2(playerid));
			SendClientMessageToAll(blue,string2);
		} else if(strcmp(params,"namekick",true) == 0)	{
			ServerInfo[NameKick] = 1;
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s{FFFFFF} ha habilitado el Namekick.", PlayerName2(playerid));
			SendClientMessageToAll(blue,string2);
 		} else if(strcmp(params,"antispam",true) == 0)	{
			ServerInfo[AntiSpam] = 1;
			dini_IntSet(file,"AntiSpam",1);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s{FFFFFF} ha habilitado el Antispam.", PlayerName2(playerid));
			SendClientMessageToAll(blue,string2);
		} else if(strcmp(params,"ping",true) == 0)	{
			ServerInfo[MaxPing] = 800;
			dini_IntSet(file,"MaxPing",800);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s{FFFFFF} ha habilitado el Ping Kick.", PlayerName2(playerid));
			SendClientMessageToAll(blue,string2);
		} else if(strcmp(params,"readcmds",true) == 0)	{
			ServerInfo[ReadCmds] = 1;
			dini_IntSet(file,"ReadCMDs",1);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s{FFFFFF} ha habilitado el Reading Commands.", PlayerName2(playerid));
			MessageToAdmins(blue,string2);
		} else if(strcmp(params,"readpms",true) == 0) {
			ServerInfo[ReadPMs] = 1;
			dini_IntSet(file,"ReadPMs",1);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s{FFFFFF} ha habilitado el Reading Pms.", PlayerName2(playerid));
			MessageToAdmins(blue,string2);
		} else if(strcmp(params,"caps",true) == 0)	{
			ServerInfo[NoCaps] = 0;
			dini_IntSet(file,"NoCaps",0);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s{FFFFFF} ha habilitado la Mayúscula en el Chat.", PlayerName2(playerid));
			SendClientMessageToAll(blue,string2);
		} else if(strcmp(params,"admincmdmsgs",true) == 0)	{
			ServerInfo[AdminCmdMsg] = 1;
			dini_IntSet(file,"AdminCmdMessages",1);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s{FFFFFF} ha habilitado el Admin Command Messages.", PlayerName2(playerid));
			MessageToAdmins(green,string2);
		} else if(strcmp(params,"connectmsgs",true) == 0) {
			ServerInfo[ConnectMessages] = 1;
			dini_IntSet(file,"ConnectMessages",1);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s{FFFFFF} ha habilitado el Connect & Disconnect Messages.", PlayerName2(playerid));
			MessageToAdmins(green,string2);
		} else if(strcmp(params,"autologin",true) == 0) {
			ServerInfo[AutoLogin] = 1;
			dini_IntSet(file,"AutoLogin",1);
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {0700D7}%s{FFFFFF} ha habilitado el Auto Login.", PlayerName2(playerid));
			MessageToAdmins(green,string2);
		} else {
			SendClientMessage(playerid,red,"[USA]: /enable [antiswear / namekick / antispam / ping / readcmds / readpms /caps /cmdmsg ]");
		} return 1;
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}


dcmd_lconteo(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 3) {
        if(CountDown == -1) {
			CountDown = 6;
			SetTimer("countdown",1000,0);
			return CMDMessageToAdmins(playerid,"LCONTEO");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Conteo en progreso");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

dcmd_lammo(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 3) {
		MaxAmmo(playerid);
		return CMDMessageToAdmins(playerid,"LAMMO");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

dcmd_ltune(playerid,params[]) {
	#pragma unused params
	if(Usoltune[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Sólo puedes usar el comando cada 30 segundos.");
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pVip] >= 2) {
		if(IsPlayerInAnyVehicle(playerid)) {
        new LVehicleID = GetPlayerVehicleID(playerid), LModel = GetVehicleModel(LVehicleID);
        switch(LModel)
		{
			case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
			return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes tunear este vehículo!");
		}
        CMDMessageToVips(playerid,"LTUNE");
		SetVehicleHealth(LVehicleID,2000.0);
		SetTimerEx("Vuelveltune",30000,false,"i",playerid);
		Usoltune[playerid] = 1;
		TuneLCar(LVehicleID);
		return PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No estás en un vehículo!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Administrador nivel 1 o VIP para usar este comando");
}
dcmd_lauto(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if (!IsPlayerInAnyVehicle(playerid)) {
			CarSpawner(playerid,415);
			CMDMessageToAdmins(playerid,"LAUTO");
			return SendClientMessage(playerid,red,"Disfruta tu nuevo auto!");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Ya estás en un vehículo!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
}

dcmd_lmoto(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if (!IsPlayerInAnyVehicle(playerid)) {
			CarSpawner(playerid,522);
			CMDMessageToAdmins(playerid,"LMOTO");
			return SendClientMessage(playerid,red,"Disfruta tu nueva moto!");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Ya estás en un vehículo!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
}

dcmd_lheli(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if (!IsPlayerInAnyVehicle(playerid)) {
			CarSpawner(playerid,487);
			CMDMessageToAdmins(playerid,"LHELI");
			return SendClientMessage(playerid,red,"Disfruta tu nuevo helicóptero!");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Ya estás en un vehículo!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
}

dcmd_lbote(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if (!IsPlayerInAnyVehicle(playerid)) {
			CarSpawner(playerid,493);
			CMDMessageToAdmins(playerid,"LBOTE");
			return SendClientMessage(playerid,red,"Disfruta tu nuevo barco!");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Ya estás en un vehículo!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
}

dcmd_lavion(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if (!IsPlayerInAnyVehicle(playerid)) {
			CarSpawner(playerid,513);
			CMDMessageToAdmins(playerid,"LAVION");
			return SendClientMessage(playerid,ColorAdmin,"Disfruta tu nuevo avión!");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Ya estás en un vehículo!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
}

dcmd_car(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 3) {
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
	    if(!strlen(tmp)) return SendClientMessage(playerid, red, "[USA]: /car [modelo/nombre] [color1] [color2]") &&
   	    SendClientMessage(playerid, orange, "[Función]: Respawnea un Vehículo!");
		new car, colour1, colour2;
   		if(!IsNumeric(tmp)) car = GetVehicleModelIDFromName(tmp); else car = strval(tmp);
		if(car < 400 || car > 611) return  SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Modelo de vehículo inválido");
		if(!strlen(tmp2)) colour1 = random(126); else colour1 = strval(tmp2);
		if(!strlen(tmp3)) colour2 = random(126); else colour2 = strval(tmp3);
		if(PlayerInfo[playerid][pCar] != -1 && !IsPlayerAdmin(playerid) ) CarDeleter(PlayerInfo[playerid][pCar]);
		new LVehicleID,Float:X,Float:Y,Float:Z, Float:Angle,int1;	GetPlayerPos(playerid, X,Y,Z);	GetPlayerFacingAngle(playerid,Angle);   int1 = GetPlayerInterior(playerid);
		if(car == 537 || car == 538)
		{
		LVehicleID = AddStaticVehicle(car, X+3, Y, Z, Angle, colour1, colour2);
		}
		else
		{
		LVehicleID = CreateVehicle(car, X+3, Y, Z, Angle, colour1, colour2, -1);
		}
		SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleID,int1);
		SetVehicleNumberPlate(LVehicleID, "RL 2015");
		PlayerInfo[playerid][pCar] = LVehicleID;
		CMDMessageToAdmins(playerid,"CAR");
		format(string2, sizeof(string2), "{FF0000}%s {FFFFFF}ha aparecido un \"%s\" (Modelo:%d) color (%d, %d), el %0.2f, %0.2f, %0.2f", pName(playerid), VehicleNames[car-400], car, colour1, colour2, X, Y, Z);
        SaveToFile("CarSpawns",string2);
		format(string2, sizeof(string2), "Has aparecido un \"%s\" {29FF0D}(Modelo:%d){FFFFFF} color (%d, %d)", VehicleNames[car-400], car, colour1, colour2);
		return SendClientMessage(playerid,lightblue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

dcmd_carvida(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 4) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /carvida [jugador] [cantidad]") &&
   	    SendClientMessage(playerid, orange, "[Función]: Establece una Determinada Cantidad de Vida a un Vehículo");
		new player1 = strval(tmp), health = strval(tmp2);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
            if(IsPlayerInAnyVehicle(player1)) {
		       	CMDMessageToAdmins(playerid,"CARVIDA");
				format(string2, sizeof(string2), "{FFFFFF}Has puesto la vida del vehículo de \"%s\" en {29FF0D}'%d", pName(player1), health); SendClientMessage(playerid,red,string2);
				if(player1 != playerid) { format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" ha puesto la vida de tu vehículo en '%d'", pName(playerid), health); SendClientMessage(player1,ColorAdmin,string2); }
   				return SetVehicleHealth(GetPlayerVehicleID(player1), health);
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está en un vehículo");
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 4] para Usar este Comando!");
}

dcmd_carcolor(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 4) {
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !strlen(tmp3) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /carcolor [jugador] [color1] [color2]") &&
   	    SendClientMessage(playerid, orange, "[Función]: Especificas el Color del Vehículo a Especificado Jugador!");
		new player1 = strval(tmp), colour1, colour2;
		if(!strlen(tmp2)) colour1 = random(126); else colour1 = strval(tmp2);
		if(!strlen(tmp3)) colour2 = random(126); else colour2 = strval(tmp3);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
            if(IsPlayerInAnyVehicle(player1)) {
		       	CMDMessageToAdmins(playerid,"CARCOLOR");
				format(string2, sizeof(string2), "{FFFFFF}Has cambiado el color del %s de \"%s's\" a {29FF0D}'%d,%d'", pName(player1), VehicleNames[GetVehicleModel(GetPlayerVehicleID(player1))-400], colour1, colour2 ); SendClientMessage(playerid,ColorAdmin,string2);
				if(player1 != playerid) { format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" ha cambiado el color de tu %s a '%d,%d''", pName(playerid), VehicleNames[GetVehicleModel(GetPlayerVehicleID(player1))-400], colour1, colour2 ); SendClientMessage(player1,ColorAdmin,string2); }
   				return ChangeVehicleColor(GetPlayerVehicleID(player1), colour1, colour2);
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está en un vehículo");
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 4] para Usar este Comando!");
}

dcmd_cadmin(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 9) {
		if(ColorChat[playerid] == 0) {
           ColorChat[playerid] = 1;
  return CMDMessageToAdmins(playerid,"CADMIN");
		} else {
   	        ColorChat[playerid] = 0;
		} return CMDMessageToAdmins(playerid,"CADMIN (Off)");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}

dcmd_ecadmin(playerid,params[]) {
    #pragma unused params
     if(PlayerInfo[playerid][pAdmin] >= 9) {
    new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
   if(!strcmp("[Exo_k]_DeadCandy_",pame,true)) {
 		if(ColorMoradoChat[playerid] == 0) {
           ColorMoradoChat[playerid] = 1;
           return CMDMessageToAdmins(playerid,"ECADMIN (ON)");
		} else {
   	        ColorMoradoChat[playerid] = 0; }
   	        return CMDMessageToAdmins(playerid,"ECADMIN (OFF)");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Este cmd es sólo para mujeres -.-!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Solo [Exo_k]_DeadCandy_ puede usar el cmd!");
}


dcmd_god(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 8 || IsPlayerAdmin(playerid)) {
    	if(PlayerInfo[playerid][God] == 0)	{
   	    	PlayerInfo[playerid][God] = 1;
    	    SetPlayerHealth(playerid,100000);
           	SendClientMessage(playerid,green,"GODMODE ACTIVADO");
			return CMDMessageToAdmins(playerid,"GOD (ON)");
		} else {
   	        PlayerInfo[playerid][God] = 0;
       	    SendClientMessage(playerid,red,"GODMODE DESACTIVADO");
        	SetPlayerHealth(playerid, 100);
		} return CMDMessageToAdmins(playerid,"GOD (OFF)");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 8] para Usar este Comando!");
}

dcmd_godcar(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 7 || IsPlayerAdmin(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
	    	if(PlayerInfo[playerid][GodCar] == 0)
			{
	   	    	PlayerInfo[playerid][GodCar] = 1;
	   	    	DisableRemoteVehicleCollisions(playerid, 1);
	    	    SetVehicleHealth(GetPlayerVehicleID(playerid), 1000000);
	           	SendClientMessage(playerid,green,"GODCAR ACTIVADO");
				return CMDMessageToAdmins(playerid,"GODCAR (ON)");
			}
			else
			{
	   	        PlayerInfo[playerid][GodCar] = 0;
	   	    	DisableRemoteVehicleCollisions(playerid, 0);
	    	    SetVehicleHealth(GetPlayerVehicleID(playerid), 1000);
	    	    RepairVehicle(GetPlayerVehicleID(playerid));
	       	    SendClientMessage(playerid,red,"GODCAR DESACTIVADO");
			}
			return CMDMessageToAdmins(playerid,"GODCAR (OFF)");
		}
		else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está en un vehículo");
	}
	else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

dcmd_sgod(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 7 || IsPlayerAdmin(playerid)) {
   		if(PlayerInfo[playerid][God] == 0)	{
        	PlayerInfo[playerid][God] = 1;
	        SetPlayerHealth(playerid,100000);
            return SendClientMessage(playerid,green,"GODMODE ACTIVADO");
		} else	{
   	        PlayerInfo[playerid][God] = 0;
            SendClientMessage(playerid,red,"GODMODE DESACTIVADO");
	        SetPlayerHealth(playerid, 100); return GivePlayerWeapon(playerid,35,0);	}
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

dcmd_die(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 7 || IsPlayerAdmin(playerid)) {
		new Float:x, Float:y, Float:z ;
		GetPlayerPos( playerid, Float:x, Float:y, Float:z );
		CreateExplosion(Float:x+10, Float:y, Float:z, 8,10.0);
		CreateExplosion(Float:x-10, Float:y, Float:z, 8,10.0);
		CreateExplosion(Float:x, Float:y+10, Float:z, 8,10.0);
		CreateExplosion(Float:x, Float:y-10, Float:z, 8,10.0);
		CreateExplosion(Float:x+10, Float:y+10, Float:z, 8,10.0);
		CreateExplosion(Float:x-10, Float:y+10, Float:z, 8,10.0);
		CMDMessageToAdmins(playerid,"DIE");
		return CreateExplosion(Float:x-10, Float:y-10, Float:z, 8,10.0);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

dcmd_getid(playerid,params[]) {
    if(!strlen(params)) return SendClientMessage(playerid,ColorAdmin,"Uso Correcto: /getid [parte del nick]") &&
		SendClientMessage(playerid, orange, "[Función]: Muestra si un Jugador está conectado con ese Nick!");
	new found, playername[MAX_PLAYER_NAME];
	format(string2,sizeof(string2),"Buscado por: \"%s\" ",params);
	SendClientMessage(playerid,ColorAdmin,string2);
	for(new i=0; i <= MAX_PLAYERS; i++)
    {
		if(IsPlayerConnected(i))
		{
	  		GetPlayerName(i, playername, MAX_PLAYER_NAME);
			new namelen = strlen(playername);
			new bool:searched=false;
	    	for(new pos=0; pos <= namelen; pos++)
			{
				if(searched != true)
				{
					if(strfind(playername,params,true) == pos)
					{
		                found++;
						format(string2,sizeof(string2),"%d. %s {0700D7}[ID %d]",found,playername,i);
						SendClientMessage(playerid, green ,string2);
						searched = true;
					}
				}
			}
		}
	}
	if(found == 0) SendClientMessage(playerid, lightblue, "Ningún jugador contiene esa parte en su nick");
	return 1;
}

dcmd_asay(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] == 1) {
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /asay [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Admin!");
		format(string2, sizeof(string2), "|1|Operador[M] %s [%d]: {DEFB01}%s", PlayerName2(playerid), playerid, params[0] );
		return SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 2) {
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /asay [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Admin!");
		format(string2, sizeof(string2), "|2|Operador[M] %s [%d]: {DEFB01}%s", PlayerName2(playerid), playerid, params[0] );
		return SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 3) {
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /asay [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Admin!");
		format(string2, sizeof(string2), "|3|Operador[M] %s [%d]: {DEFB01}%s", PlayerName2(playerid), playerid, params[0] );
		return SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 4) {
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /asay [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Admin!");
		format(string2, sizeof(string2), "|4|Operador[M] %s [%d]: {DEFB01}%s", PlayerName2(playerid), playerid, params[0] );
		return SendClientMessageToAll(azulcito,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 5) {
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /asay [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Admin!");
		format(string2, sizeof(string2), "|5|Game Master[A] %s [%d]: {DEFB01}%s", PlayerName2(playerid), playerid, params[0] );
		return SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 6) {
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /asay [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Admin!");
		format(string2, sizeof(string2), "|6|Game Master[A] %s [%d]: {DEFB01}%s", PlayerName2(playerid), playerid, params[0] );
		return SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 7) {
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /asay [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Admin!");
		format(string2, sizeof(string2), "|7|Game Master[A] %s [%d]: {DEFB01}%s", PlayerName2(playerid), playerid, params[0] );
		return SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 8) {
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /asay [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Admin!");
		format(string2, sizeof(string2), "|8|Game Master[AP] %s [%d]: {DEFB01}%s", PlayerName2(playerid), playerid, params[0] );
		return SendClientMessageToAll(verde_claro,string2);
	}
	if(PlayerInfo[playerid][pAdmin] == 9) {
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /asay [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Admin!");
		format(string2, sizeof(string2), "|9|Co-Manager[E] %s [%d]: {DEFB01}%s", PlayerName2(playerid), playerid, params[0] );
		return SendClientMessageToAll(red,string2);
    }
	if(PlayerInfo[playerid][pAdmin] == 10) {
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /asay [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Admin!");
		format(string2, sizeof(string2), "|10||Owner|[D] %s [%d]: {DEFB01}%s", PlayerName2(playerid), playerid, params[0] );
		return SendClientMessageToAll(red,string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Administrador para usar este comando");
}

dcmd_cchat(playerid,params[]) {
    #pragma unused params
    new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
   if(!strcmp("Carlosxp",pame,true)) {
 		if(ColorCarlosChat[playerid] == 0) {
           ColorCarlosChat[playerid] = 1;
           SendClientMessage(playerid,green,"[Info]: Color de chat Carlos activado.");
		   } else {
   	        ColorCarlosChat[playerid] = 0;
			SendClientMessage(playerid,red,"[Info]: Color de chat Carlos desactivado.");
   }
} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Sólo Carlosxp puede usar el comando!");
return 1;
}

dcmd_rchat(playerid,params[]) {
    #pragma unused params
    new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
   if(!strcmp("[StaffRL]Renato._",pame,true)) {
 		if(ColorRenatoChat[playerid] == 0) {
           ColorRenatoChat[playerid] = 1;
           SendClientMessage(playerid,green,"[Info]: Color de chat Renato activado.");
		} else {
   	        ColorRenatoChat[playerid] = 0;
              SendClientMessage(playerid,red,"[Info]: Color de chat Renato desactivado.");
			   }
} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Sólo [StaffRL]Renato._ puede usar el comando!");
return 1;
}

dcmd_sachat(playerid,params[]) {
    #pragma unused params
    new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
   if(!strcmp("[PFP]Scarface(Jefe)",pame,true)) {
 		if(ColorSamirChat[playerid] == 0) {
           ColorSamirChat[playerid] = 1;
           SendClientMessage(playerid,green,"[Info]: Color de chat Samir activado.");
		} else {
   	        ColorSamirChat[playerid] = 0;
            SendClientMessage(playerid,red,"[Info]: Color de chat Samir desactivado.");
			   }
} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Sólo [PFP]Scarface(Jefe) puede usar el comando!");
return 1;
}

dcmd_fchat(playerid,params[]) {
    #pragma unused params
    new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
   if(!strcmp("Sr.[F]ran",pame,true)) {
 		if(ColorFranciscoChat[playerid] == 0) {
           ColorFranciscoChat[playerid] = 1;
           SendClientMessage(playerid,green,"[Info]: Color de chat Francisco activado.");
		} else {
   	        ColorFranciscoChat[playerid] = 0;
            SendClientMessage(playerid,red,"[Info]: Color de chat Francisco desactivado.");
			   }
} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Sólo Sr.[F]ran puede usar el comando!");
return 1;
}

dcmd_cevento(playerid,params[]) {
    #pragma unused params
    if(EventInfo[Criado] == 0) return SendClientMessage(playerid,red,"[ERROR]: No hay eventos creados.");
	if(PlayerInfo[playerid][pAdmin] >= 2) {
		if(ColorEventoChat[playerid] == 0) {
           ColorEventoChat[playerid] = 1;
  return CMDMessageToAdmins(playerid,"CEVENTO");
		} else {
   	        ColorEventoChat[playerid] = 0;
		} return CMDMessageToAdmins(playerid,"CEVENTO (Off)");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
}


dcmd_vchat(playerid,params[]) {
    #pragma unused params
     if(PlayerInfo[playerid][pAdmin] >= 9) {
    new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
   if(!strcmp("[Exo_k]_DeadCandy_",pame,true)) {
 		if(ColorMoradoChat[playerid] == 0) {
           ColorMoradoChat[playerid] = 1;
           SendClientMessage(playerid,green,"[Info]: Color de chat Morado activado.");
		} else {
   	        ColorMoradoChat[playerid] = 0;
            SendClientMessage(playerid,red,"[Info]: Color de chat Morado desactivado.");
			   }
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Este cmd es sólo para mujeres -.-!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Sólo [Exo_k]_DeadCandy_ puede usar el cmd!");
return 1;
}

dcmd_vsay(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pVip] == 8) {
	if(strfind(params, "/q", true) != -1 || strfind(params, " /q", true) != -1 || strfind(params, "/q ", true) != -1)
		{
			SendClientMessage(playerid, red, "[INFO]: {FFFFFF}¡No intentes Trollear a los Users! [Castigo: 5 minutos de muteo y VIP SILVER]");
			SetTimerEx("FinCastigo", 300000, 0, "i", playerid);
			NoChat[playerid] = 1;
			PlayerInfo[playerid][pVip] = 1;
			ActualizarInformacion(playerid);
			GetTickCount();
			return 0;
		}
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /vsay [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Vip!");
		if(PlayerInfo[playerid][Muted] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes hacer este Anuncio porque estas Muteado!");
		format(string2, sizeof(string2), "||Vip Legendario|| %s [%d]: {0000FF}%s", PlayerName2(playerid), playerid, params[0] );
		return SendClientMessageToAll(COLOR_AMARILLO,string2);
	}
	if(PlayerInfo[playerid][pVip] == 8) {
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /vsay [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Vip!");
		format(string2, sizeof(string2), "||Vip Dios|| %s [%d]: {FF0000}%s", PlayerName2(playerid), playerid, params[0] );
		return SendClientMessageToAll(COLOR_VERDE,string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Vip Legendario para usar este comando!");
}

dcmd_setping(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 7 || IsPlayerAdmin(playerid)) {
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /setping [ping]   0=Desactivado") &&
		SendClientMessage(playerid, orange, "[Función]: Establece el Ping Máximo Permitido");
	    new ping = strval(params);
		ServerInfo[MaxPing] = ping;
		CMDMessageToAdmins(playerid,"SETPING");
		new file[256]; format(file,sizeof(file),"ladmin/config/Config.ini");
		dini_IntSet(file,"MaxPing",ping);
		for(new i = 0; i <= MAX_PLAYERS; i++) if(IsPlayerConnected(i)) PlayerPlaySound(i,1057,0.0,0.0,0.0);
		if(ping == 0) format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador %s ha desactivado el Ping Máximo", PlayerName2(playerid), ping);
		else format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador %s ha puesto el Ping Máximo en{29FF0D} %d", PlayerName2(playerid), ping);
		return SendClientMessageToAll(red,string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

dcmd_decir(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][pVip] >= 7) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Este comando solo es hasta Vip Extremo!");
	if(PlayerInfo[playerid][Muted] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes hacer este Anuncio porque estas Muteado!");
	if(PlayerInfo[playerid][pVip] == 1)
	{
 	    if(Listo(playerid)) return SendClientMessage(playerid,COLOR_RED,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /decir [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Vip!");
		if(strfind(params, "/q", true) != -1 || strfind(params, " /q", true) != -1 || strfind(params, "/q ", true) != -1)
		{
			SendClientMessage(playerid, red, "[INFO]: {FFFFFF}No intentes Trollear a los Users! [Castigo: 5 Min. Mute]");
			SetTimerEx("FinCastigo", 300000, 0, "i", playerid);
			NoChat[playerid] = 1;
			UsarCMD[playerid]=GetTickCount();
			return 0;
		}
		format(string2, sizeof(string2), "{FFFFFF}||Vip Silver|| %s [%d]: %s", PlayerName2(playerid),playerid, params[0] );
		SendClientMessageToAll(decir1,string2);
     	SendClientMessage(playerid,COLOR_YELLOW,"Ahora debes esperar 5 minutos para usar este Cmds u  otro comando Premium o Platinum.");
        UsarCMD[playerid]=GetTickCount();
        return 1;
	}
    if(PlayerInfo[playerid][pVip] == 2)
    {
 	    if(Listo(playerid)) return SendClientMessage(playerid,COLOR_RED,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /decir [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Vip!");
		if(strfind(params, "/q", true) != -1 || strfind(params, " /q", true) != -1 || strfind(params, "/q ", true) != -1)
		{
			SendClientMessage(playerid, red, "[INFO]: {FFFFFF}No intentes Trollear a los Users! [Castigo: 5 Min. Mute]");
			SetTimerEx("FinCastigo", 300000, 0, "i", playerid);
			NoChat[playerid] = 1;
			UsarCMD[playerid]=GetTickCount();
			return 0;
		}
		format(string2, sizeof(string2), "{00EEFF}||Vip Gold|| %s [%d]: %s", PlayerName2(playerid),playerid, params[0] );
		SendClientMessageToAll(decir1,string2);
     	SendClientMessage(playerid,COLOR_YELLOW,"Ahora debes esperar 5 minutos para usar este Cmds u  otro comando Premium o Platinum.");
        UsarCMD[playerid]=GetTickCount();
        return 1;
	}
    if(PlayerInfo[playerid][pVip] == 3)
	{
 	    if(Listo(playerid)) return SendClientMessage(playerid,COLOR_RED,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /decir [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Vip!");
		if(strfind(params, "/q", true) != -1 || strfind(params, " /q", true) != -1 || strfind(params, "/q ", true) != -1)
		{
			SendClientMessage(playerid, red, "[INFO]: {FFFFFF}No intentes Trollear a los Users! [Castigo: 5 Min. Mute]");
			SetTimerEx("FinCastigo", 300000, 0, "i", playerid);
			NoChat[playerid] = 1;
			UsarCMD[playerid]=GetTickCount();
			return 0;
		}
		format(string2, sizeof(string2), "{FFFF00}||Vip Premium|| %s [%d]: %s", PlayerName2(playerid),playerid, params[0] );
		SendClientMessageToAll(decir1,string2);
     	SendClientMessage(playerid,COLOR_YELLOW,"Ahora debes esperar 5 minutos para usar este Cmds u  otro comando Premium o Platinum.");
        UsarCMD[playerid]=GetTickCount();
        return 1;
	}
    if(PlayerInfo[playerid][pVip] == 4)
	{
 	    if(Listo(playerid)) return SendClientMessage(playerid,COLOR_RED,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /decir [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Vip!");
		if(strfind(params, "/q", true) != -1 || strfind(params, " /q", true) != -1 || strfind(params, "/q ", true) != -1)
		{
			SendClientMessage(playerid, red, "[INFO]: {FFFFFF}No intentes Trollear a los Users! [Castigo: 5 Min. Mute]");
			SetTimerEx("FinCastigo", 300000, 0, "i", playerid);
			NoChat[playerid] = 1;
			UsarCMD[playerid]=GetTickCount();
			return 0;
		}
		format(string2, sizeof(string2), "{FFFFFF}||Vip Platinum|| %s [%d]: %s", PlayerName2(playerid),playerid, params[0] );
		SendClientMessageToAll(decir1,string2);
     	SendClientMessage(playerid,COLOR_YELLOW,"Ahora debes esperar 5 minutos para usar este Cmds u  otro comando Premium o Platinum.");
        UsarCMD[playerid]=GetTickCount();
        return 1;
	}
	if(PlayerInfo[playerid][pVip] == 5)
	{
 	    if(Listo(playerid)) return SendClientMessage(playerid,COLOR_RED,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /decir [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Vip!");
		if(strfind(params, "/q", true) != -1 || strfind(params, " /q", true) != -1 || strfind(params, "/q ", true) != -1)
		{
			SendClientMessage(playerid, red, "[INFO]: {FFFFFF}No intentes Trollear a los Users! [Castigo: 5 Min. Mute]");
			SetTimerEx("FinCastigo", 300000, 0, "i", playerid);
			NoChat[playerid] = 1;
			UsarCMD[playerid]=GetTickCount();
			return 0;
		}
		format(string2, sizeof(string2), "{FF0000}||Vip Esmeralda|| %s [%d]: %s", PlayerName2(playerid),playerid, params[0] );
		SendClientMessageToAll(decir1,string2);
     	SendClientMessage(playerid,COLOR_YELLOW,"Ahora debes esperar 5 minutos para usar este Cmds u  otro comando Platinum o Esmeralda.");
        UsarCMD[playerid]=GetTickCount();
        return 1;
	}
    if(PlayerInfo[playerid][pVip] == 6)
	{
 	    if(Listo(playerid)) return SendClientMessage(playerid,COLOR_RED,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /decir [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Vip!");
		if(strfind(params, "/q", true) != -1 || strfind(params, " /q", true) != -1 || strfind(params, "/q ", true) != -1)
		{
			SendClientMessage(playerid, red, "[INFO]: {FFFFFF}No intentes Trollear a los Users! [Castigo: 5 Min. Mute]");
			SetTimerEx("FinCastigo", 300000, 0, "i", playerid);
			NoChat[playerid] = 1;
			UsarCMD[playerid]=GetTickCount();
			return 0;
		}
		format(string2, sizeof(string2), "{AFAFAF}||Vip Diamond|| %s [%d]: %s", PlayerName2(playerid),playerid, params[0] );
		SendClientMessageToAll(decir1,string2);
     	SendClientMessage(playerid,COLOR_YELLOW,"Ahora debes esperar 5 minutos para usar este Cmds u otro comando Diamond o Esmeralda.");
        UsarCMD[playerid]=GetTickCount();
        return 1;
	}
    if(PlayerInfo[playerid][pVip] == 7)
	{
 	    if(Listo(playerid)) return SendClientMessage(playerid,COLOR_RED,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
 		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /decir [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar por el Chat como Vip!");
		if(strfind(params, "/q", true) != -1 || strfind(params, " /q", true) != -1 || strfind(params, "/q ", true) != -1)
		{
			SendClientMessage(playerid, red, "[INFO]: {FFFFFF}No intentes Trollear a los Users! [Castigo: 5 Min. Mute]");
			SetTimerEx("FinCastigo", 300000, 0, "i", playerid);
			NoChat[playerid] = 1;
			UsarCMD[playerid]=GetTickCount();
			return 0;
		}
		format(string2, sizeof(string2), "{00FF00}||Vip Extremo|| %s [%d]: %s", PlayerName2(playerid),playerid, params[0] );
		SendClientMessageToAll(decir1,string2);
     	SendClientMessage(playerid,COLOR_YELLOW,"Ahora debes esperar 5 minutos para usar este Cmds u otro comando Extremo o Diamond.");
        UsarCMD[playerid]=GetTickCount();
        return 1;
	}
	else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Vip Silver o mas para usar este cmd!");
}

dcmd_setgravity(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 9) {
	    if(!strlen(params)||!(strval(params)<=50&&strval(params)>=-50)) return SendClientMessage(playerid,red,"[USA]: /setgravity <-50.0 - 50.0>") &&
		SendClientMessage(playerid, orange, "[Función]: Establece la Gravedad del Servidor!");
        CMDMessageToAdmins(playerid,"SETGRAVITY");
		new adminname[MAX_PLAYER_NAME]; GetPlayerName(playerid, adminname, sizeof(adminname)); new Float:Gravity = floatstr(params);format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado la gravedad a %f",adminname,Gravity);
		SetGravity(Gravity); SaveToFile("Gravity",string2); return SendClientMessageToAll(blue,string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}

dcmd_lcredits(playerid,params[]) {
	#pragma unused params
	SendClientMessage(playerid,COLOR_ROJO,"==============Versión: 15.4 - Revolucion Latina=============");
	SendClientMessage(playerid,green,"Sistema De Administracion Creado Por Los Dueños Del Servidor");
    SendClientMessage(playerid,green," [PFP]Scarface(Jefe) , Sr.[F]ran, Carlosxp.");
    SendClientMessage(playerid,green,"          © Copyright 2015 - Revolucion Latina 2015         ");
	SendClientMessage(playerid,COLOR_ROJO,"=====================================================");
	return 1;
}

dcmd_serverinfo(playerid,params[]) {
	#pragma unused params
    new TotalVehicles = CreateVehicle(411, 0, 0, 0, 0, 0, 0, 1000);    DestroyVehicle(TotalVehicles);
	new numo = CreateObject(1245,0,0,1000,0,0,0);	DestroyObject(numo);
	new nump = CreatePickup(371,2,0,0,1000);	DestroyPickup(nump);
	new gz = GangZoneCreate(3,3,5,5);	GangZoneDestroy(gz);

	new model[250], nummodel;
	for(new i=1;i<TotalVehicles;i++) model[GetVehicleModel(i)-400]++;
	for(new i=0;i<250;i++)	if(model[i]!=0)	nummodel++;

	format(string2,sizeof(string2),"Server Info: [ Players Conectados: %d || Máximos Jugadores: %d ] [Radio %0.2f ]",ConnectedPlayers(),GetMaxPlayers(),Float:ConnectedPlayers() / Float:GetMaxPlayers() );
	SendClientMessage(playerid,green,string2);
	format(string2,sizeof(string2),"Server Info: [ Vehículos: %d || Modelos %d || Players en vehículos: %d || EnAuto %d / EnBici %d ]",TotalVehicles-1,nummodel, InVehCount(),InCarCount(),OnBikeCount() );
	SendClientMessage(playerid,green,string2);
	format(string2,sizeof(string2),"Server Info: [ Objects: %d || Pickups %d || Gangzones %d ]",numo-1, nump, gz);
	SendClientMessage(playerid,green,string2);
	format(string2,sizeof(string2),"Server Info: [ Players encarcelados %d || Players Congelados %d || Muteados %d ]",JailedPlayers(),FrozenPlayers(), MutedPlayers() );
	return SendClientMessage(playerid,green,string2);
}

dcmd_announce(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 4 || IsPlayerAdmin(playerid)) {
    	if(!strlen(params)) return SendClientMessage(playerid,red,"[USA]: /announce <texto>") &&
		SendClientMessage(playerid, orange, "[Función]: Muestra Un Anuncio en la Pantalla a Todos!");
        new admin1[MAX_PLAYER_NAME];
        GetPlayerName(playerid, admin1, sizeof(admin1));
        format(string2, sizeof(string2), "~r~Administrador ~n~~w~%s",admin1);
	    TextDrawSetString(ByNickAnn,string2);
    	TextDrawShowForAll(ByNickAnn);
		format(string2, sizeof(string2), "_");
	    TextDrawSetString(ByNickAnn1,string2);
	    TextDrawShowForAll(ByNickAnn1);
	    SetTimer("TimeNickAnn", 6000, false);
	    SetTimer("TimeNickAnn1", 6000, false);
		CMDMessageToAdmins(playerid,"ANNOUNCE");
		return GameTextForAll(EStexto(params),7000,3);
    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 4] para Usar este Comando!");
}

dcmd_announce2(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 5 || IsPlayerAdmin(playerid)) {
        new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index) ,tmp3 = strtok(params,Index);
	    if(!strlen(tmp)||!strlen(tmp2)||!strlen(tmp3)) return SendClientMessage(playerid,red,"[USA]: /announce <estilo> <tiempo> <texto>") &&
		SendClientMessage(playerid, orange, "[Función]: Muestra Un Anuncio en la Pantalla a Todos con Estilo y Tiempo!");
		if(!(strval(tmp) >= 0 && strval(tmp) <= 6) || strval(tmp) == 2)	return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Estilo de texto invalido. Range: 0 - 6");
		CMDMessageToAdmins(playerid,"ANNOUNCE2");
		return GameTextForAll(EStexto(params[(strlen(tmp)+strlen(tmp2)+2)]), strval(tmp2), strval(tmp));
    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 5] para Usar este Comando!");
}

dcmd_jetpack(playerid,params[]) {
    #pragma unused params
        if(PlayerInfo[playerid][pAdmin] >= 2 || IsPlayerAdmin(playerid)) {
        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
        CMDMessageToAdmins(playerid,"JETPACK");
        }
        else {
        SendClientMessage(playerid,COLOR_red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
        }
		return 1;
		}

dcmd_flip(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) {
		    if(IsPlayerInAnyVehicle(playerid)) {
			new VehicleID, Float:X, Float:Y, Float:Z, Float:Angle; GetPlayerPos(playerid, X, Y, Z); VehicleID = GetPlayerVehicleID(playerid);
			GetVehicleZAngle(VehicleID, Angle);	SetVehiclePos(VehicleID, X, Y, Z); SetVehicleZAngle(VehicleID, Angle); SetVehicleHealth(VehicleID,1000.0);
			CMDMessageToAdmins(playerid,"FLIP"); return SendClientMessage(playerid, blue,"Vehículo Enderezado. También puedes hacer /flip [jugador]") &&
		    SendClientMessage(playerid, orange, "[Función]: Volteas y Fixeas el Vehículo!");
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No estás en un vehículo. También puedes hacer /flip [jugador]");
		}
	    new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
	    player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToAdmins(playerid,"FLIP");
			if (IsPlayerInAnyVehicle(player1)) {
				new VehicleID, Float:X, Float:Y, Float:Z, Float:Angle; GetPlayerPos(player1, X, Y, Z); VehicleID = GetPlayerVehicleID(player1);
				GetVehicleZAngle(VehicleID, Angle);	SetVehiclePos(VehicleID, X, Y, Z); SetVehicleZAngle(VehicleID, Angle); SetVehicleHealth(VehicleID,1000.0);
				CMDMessageToAdmins(playerid,"FLIP");
				GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
				format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha enderezado tu vehículo",adminname); SendClientMessage(player1,ColorAdmin,string2);
				format(string2,sizeof(string2),"Has enderezado el vehículo de %s", playername);
				return SendClientMessage(playerid, blue,string2);
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está en un vehículo!");
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está conectado o eres tú mismo!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
}

dcmd_esposar(playerid, params[])
{
   if(PlayerInfo[playerid][pAdmin] >= 6){
    new id;
    if(sscanf(params, "u", id))return SendClientMessage(playerid, red, "[USO]: /Esposar [playerid]");
    if(IsPlayerConnected(id))
		{
  			if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "ID invalida");
		    if(PlayerInfo[playerid][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"* No puedes usar este comando con un level 8");
  		  	new Float:x, Float:y, Float:z;
        	GetPlayerPos(id, x,y,z);
        	PlayerPlaySound(id, 5201, x,y,z);
        	SetPlayerSpecialAction(id, SPECIAL_ACTION_CUFFED);
        	SetPlayerAttachedObject(id, 10, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
        	CMDMessageToAdmins(playerid,"{80FF00}ESPOSAR");
   			return GameTextForPlayer(id,"~r~Estas Esposado",3000,1);
	    }
		else return  SendClientMessage(playerid, red, "Jugador no conectado");
	}
	else return SendClientMessage(playerid, red, "No eres admin level 6 para usar este comando");
}

dcmd_quitaresposas(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 6){
    new id;
    if(sscanf(params, "u", id))return SendClientMessage(playerid, red, "[USO]: /QuitarEsposas [playerid]");
    if(IsPlayerConnected(id))
		{
  			if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "ID invalida");
   				if(PlayerInfo[playerid][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"* No puedes usar este comando con un level 8");
        	new Float:x, Float:y, Float:z;
        	GetPlayerPos(id, x,y,z);
        	PlayerPlaySound(id, 5201, x,y,z);
        	CMDMessageToAdmins(playerid,"{80FF00}QUITARESPOSAS");
        	for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
        	{
        	if(IsPlayerAttachedObjectSlotUsed(id, i)) RemovePlayerAttachedObject(id, i);
        	SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
        	}

   			return GameTextForPlayer(id,"~b~Te quitaron las esposas",3000,1);
	    }
		else return  SendClientMessage(playerid, red, "Jugador fuera de linea");
	}
	else return SendClientMessage(playerid, red, "* No eres admin level 6 para usar este comando");
}

dcmd_bauto(playerid,params[]) {
    CMDMessageToVips(playerid,"BAUTO");
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pVip] >= 2)
	return EraseVehicle(GetPlayerVehicleID(playerid));
	else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Administrador nivel 1 o GOLD para usar este comando");
}
dcmd_ltc(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(!IsPlayerInAnyVehicle(playerid)) {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToAdmins(playerid,"LTunedCar");	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);
			SetVehicleNumberPlate(LVehicleIDt, "RL 2015");
			AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
		    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
		    AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,0);
	   	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			return PlayerInfo[playerid][pCar] = LVehicleIDt;
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Estás en un vehículo!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
}

dcmd_fix(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pVip] >= 1) {
		if (IsPlayerInAnyVehicle(playerid)) {
		new LVehicleID = GetPlayerVehicleID(playerid), LModel = GetVehicleModel(LVehicleID);
        switch(LModel)
		{
			case 425,432,447,520:
			return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes Fixear vehículos de guerra!");
		}
		if(SAuto == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}El comando fue desactivado por un Administrador");
		if(Ya(playerid)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Debes Esperar 30 Segundos Para Volver a Usar el Comando!");
			SetVehicleHealth(GetPlayerVehicleID(playerid),1250.0);
			RepairVehicle(GetPlayerVehicleID(playerid));
            UsarNombre[playerid]=GetTickCount();
			CMDMessageToVips(playerid,"FIX");
			return SendClientMessage(playerid,ColorAdmin,"Vehículo Reparado");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No estás en un vehículo");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Debes ser administrador o player Vip para usar este comando");
}

dcmd_warp(playerid,params[])
{
	return dcmd_teleplayer(playerid,params);
}

dcmd_teleplayer(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /teleplayer [jugador1] hacia [jugador2]") &&
		SendClientMessage(playerid, orange, "[Función]: Teletransporta un Jugador a otro Jugador!");
		new player1 = strval(tmp), player2 = strval(tmp2), Float:plocx,Float:plocy,Float:plocz;
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
 		 	if(IsPlayerConnected(player2) && player2 != INVALID_PLAYER_ID) {
	 		 	CMDMessageToAdmins(playerid,"TELEPLAYER");
				GetPlayerPos(player2, plocx, plocy, plocz);
				new intid = GetPlayerInterior(player2);	SetPlayerInterior(player1,intid);
				SetPlayerVirtualWorld(player1,GetPlayerVirtualWorld(player2));
				if (GetPlayerState(player1) == PLAYER_STATE_DRIVER)
				{
					new VehicleID = GetPlayerVehicleID(player1);
					SetVehiclePos(VehicleID, plocx, plocy+4, plocz); LinkVehicleToInterior(VehicleID,intid);
					SetVehicleVirtualWorld(VehicleID, GetPlayerVirtualWorld(player2) );
				}
				else SetPlayerPos(player1,plocx,plocy+2, plocz);
				format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" ha teletransportado a \"%s\" a la ubicación de \"%s's\"", pName(playerid), pName(player1), pName(player2) );
				SendClientMessage(player1,ColorAdmin,string2); SendClientMessage(player2,ColorAdmin,string2);
				format(string2,sizeof(string2),"Has teletransportado a \"%s\" hacia \"%s's\" con transportación", pName(player1), pName(player2) );
 		 	    return SendClientMessage(playerid,ColorAdmin,string2);
 		 	} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador2 no está conectado");
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador1 no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

dcmd_goto(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 2 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid,red,"[USA]: /goto [jugador]") &&
		SendClientMessage(playerid, orange, "[Función]: Te teletransporta a Especificado Jugador!");
	    new player1;
		if(!IsNumeric(params)) player1 = ReturnPlayerID(params);
	   	else player1 = strval(params);
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToAdmins(playerid,"GOTO");
			new Float:x, Float:y, Float:z;	GetPlayerPos(player1,x,y,z); SetPlayerInterior(playerid,GetPlayerInterior(player1));
			SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(player1));
			if(GetPlayerState(playerid) == 2) {
				SetVehiclePos(GetPlayerVehicleID(playerid),x+3,y,z);	LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(player1));
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),GetPlayerVirtualWorld(player1));
			} else SetPlayerPos(playerid,x+2,y,z);
			format(string2,sizeof(string2),"Has sido transportado hacia \"%s\"", pName(player1));
			new strcmd[500]; format(strcmd,sizeof(strcmd),"|INFO|: %s uso goto hacia %s",pName(playerid),pName(player1)); printf(strcmd);
			return SendClientMessage(playerid,ColorAdmin,string2);
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está conectado o eres tú mismo!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
}

dcmd_lgoto(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid)) {
		new Float:x, Float:y, Float:z;
        new tmp[256], tmp2[256], tmp3[256];
		new Index;	tmp = strtok(params,Index); tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
    	if(!strlen(tmp) || !strlen(tmp2) || !strlen(tmp3)) return SendClientMessage(playerid,red,"[USA]: /lgoto [x] [y] [z]") &&
		SendClientMessage(playerid, orange, "[Función]: Te teletransporta a un Área Elegida por x, y, z!");
	    x = strval(tmp);		y = strval(tmp2);		z = strval(tmp3);
		CMDMessageToAdmins(playerid,"LGOTO");
		if(GetPlayerState(playerid) == 2) SetVehiclePos(GetPlayerVehicleID(playerid),x,y,z);
		else SetPlayerPos(playerid,x,y,z);
		format(string2,sizeof(string2),"Has sido teletransportado a %f, %f, %f", x,y,z); return SendClientMessage(playerid,ColorAdmin,string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

dcmd_get(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 2 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /get [jugador]")&&
		SendClientMessage(playerid, orange, "[Función]: Teletransporta a Especificado Jugador Hacia ti!");
    	new player1;
		if(!IsNumeric(params)) player1 = ReturnPlayerID(params);
	   	else player1 = strval(params);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToAdmins(playerid,"GET");
			new Float:x, Float:y, Float:z;	GetPlayerPos(playerid,x,y,z); SetPlayerInterior(player1,GetPlayerInterior(playerid));
			SetPlayerVirtualWorld(player1,GetPlayerVirtualWorld(playerid));
			if(GetPlayerState(player1) == 2)	{
			    new VehicleID = GetPlayerVehicleID(player1);
				SetVehiclePos(VehicleID,x+3,y,z);   LinkVehicleToInterior(VehicleID,GetPlayerInterior(playerid));
				SetVehicleVirtualWorld(GetPlayerVehicleID(player1),GetPlayerVirtualWorld(playerid));
			} else SetPlayerPos(player1,x+2,y,z);
			format(string2,sizeof(string2),"Has sido teletransportado a la ubicación de \"%s\"", pName(playerid) );	SendClientMessage(player1,ColorAdmin,string2);
			format(string2,sizeof(string2),"Has traído a \"%s\" a tu ubicación", pName(player1) );
			return SendClientMessage(playerid,ColorAdmin,string2);
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está conectado o eres tú mismo");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
}

dcmd_fu(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 9) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /fu [jugador]") &&
		SendClientMessage(playerid, orange, "[Función]: Cambias el Nick con NOOB, Cambias el Color, Cambias el Clima, ETC a Especificado Jugador!");
    	new player1 = strval(params), NewName[MAX_PLAYER_NAME];
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"FU");
			SetPlayerHealth(player1,1.0); SetPlayerArmour(player1,0.0); ResetPlayerWeapons(player1);GivePlayerWeapon(player1,12,1);
			SetPlayerSkin(player1, 137); SetPlayerColor(player1,COLOR_PINK); SetPlayerWeather(player1,19); SetPlayerWantedLevel(player1,6);
			format(NewName,sizeof(NewName),"[NOOB]%s", pName(player1) ); SetPlayerName(player1,NewName);
			if(IsPlayerInAnyVehicle(player1)) EraseVehicle(GetPlayerVehicleID(player1));
			if(player1 != playerid)	{ format(string2,sizeof(string2),"~w~%s: ~r~Fuck You", pName(playerid) ); GameTextForPlayer(player1, string2, 2500, 3); }
			format(string2,sizeof(string2),"Fuck you \"%s\"", pName(player1) ); return SendClientMessage(playerid,ColorAdmin,string2);
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}

dcmd_warn(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2) {
        new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "[USA]: /warn [playerid] [Razón]") &&
		SendClientMessage(playerid, orange, "[Función]: Le das una Advertencia a Especificado Jugador!");
	    if(!strlen(tmp2)) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Debes dar una razón para advertir a este player");
    	new warned = strval(tmp), str[1000];
    	new year,month,day; getdate(year, month, day);
		if(PlayerInfo[warned][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes dar warn a este player por su nivel Administrativo");
	 	if(IsPlayerConnected(warned) && warned != INVALID_PLAYER_ID) {
 	    	if(warned != playerid) {
            if(!strcmp("[StaffRL]Renato._",pName(warned),true) || !strcmp("[PFP]Scarface(Jefe)",pName(warned),true) || !strcmp("Sr.[F]ran",pName(warned),true)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No puedes Advertir a los dueños!");
			    CMDMessageToAdmins(playerid,"WARN");
				PlayerInfo[warned][Warnings]++;
				if(PlayerInfo[warned][Warnings] == MAX_WARNINGS && PlayerInfo[warned][Kicks] == 5)
				{
					format(str, sizeof (str), "[INFO]: {FFFFFF}\"%s\" Ha sido Baneado por el Admin \"%s\" [Razón: %s] [Adv.: 3/3] [Kicks: %d/4]", pName(warned), pName(playerid), params[1+strlen(tmp)], MAX_KICKS);
					SendClientMessageToAll(red, str);
					SaveToFile("KickLog",str);
					PlayerInfo[warned][Warnings] = 0;
					PlayerInfo[warned][Kicks] = 0;
					new ip[195];
					GetPlayerIp(warned,ip,sizeof(ip));
					new msgd[1500];
					new str1[500], str2[500], str3[500], str4[500], str5[500], str6[500];
					format(str1, sizeof(str1), "El Admin %s te ha Baneado del Servidor.\n\n", pName(playerid));
					strcat(msgd, str1);
					format(str2, sizeof(str2), "* Nick Admin: %s\n", pName(playerid));
					strcat(msgd, str2);
					format(str3, sizeof(str3), "* Tu Nick: %s\n", pName(warned));
					strcat(msgd, str3);
					format(str4, sizeof(str4), "* Tu IP: %s\n", ip);
					strcat(msgd, str4);
					format(str5, sizeof(str5), "* Motivo: %s\n", params[1+strlen(tmp)]);
					strcat(msgd, str5);
					format(str6, sizeof(str6), "* Fecha: %d/%d/%d \n\n", day, month, year);
					strcat(msgd, str6);
					strcat(msgd, "Envia una Foto de este Mensaje con F8 y Muestrasela a un Dueño\n");
					strcat(msgd, "o Encargado en caso de un Error!");
					ShowPlayerDialog(warned, 0, DIALOG_STYLE_MSGBOX, "{FFFFFF}Baneado - {FF0000}Revolucion {FFFFFF}Latina", msgd, "Aceptar", "");
					SetTimerEx("BanearPlayer", 50, 0, "i", warned);
					dUserSetINT(PlayerName2(warned)).("banned",1);
                	dUserSetINT(PlayerName2(warned)).("Warns",PlayerInfo[warned][Warnings]);
   	                dUserSetINT(PlayerName2(warned)).("Kicks",PlayerInfo[warned][Kicks]);
                    return 1;
				}
				if(PlayerInfo[warned][Warnings] == MAX_WARNINGS)
				{
					PlayerInfo[warned][Kicks]++;
					format(str, sizeof (str),"[INFO]: {FFFFFF}\"%s\" Ha sido Kickeado por el Admin \"%s\" [Razón: %s] [Adv.: %d/3] [Kicks: %d/4]", pName(warned), pName(playerid), params[1+strlen(tmp)], PlayerInfo[warned][Warnings], PlayerInfo[warned][Kicks]);
					SendClientMessageToAll(red, str);
					SaveToFile("KickLog",str);
					PlayerInfo[warned][Warnings] = 0;
					new msgd[1500];
					new str1[500], str2[500], str3[500], str4[500], str5[500];
					format(str1, sizeof(str1), "El Admin %s te ha Kickeado del Servidor.\n\n", pName(playerid));
					strcat(msgd, str1);
					format(str2, sizeof(str2), "* Nick Admin: %s\n", pName(playerid));
					strcat(msgd, str2);
					format(str3, sizeof(str3), "* Tu Nick: %s\n", pName(warned));
					strcat(msgd, str3);
					format(str4, sizeof(str4), "* Motivo: Acumulacion de Warns + %s\n", params[1+strlen(tmp)]);
					strcat(msgd, str4);
					format(str5, sizeof(str5), "* Fecha: %d/%d/%d \n\n", day, month, year);
					strcat(msgd, str5);
					strcat(msgd, "Envia una Foto de este Mensaje con F8 y Muestrasela a un Dueño\n");
					strcat(msgd, "o Encargado en caso de un Error!");
					ShowPlayerDialog(warned, 0, DIALOG_STYLE_MSGBOX, "{FFFFFF}Kickeado - {FF0000}Revolucion {FFFFFF}Latina", msgd, "Aceptar", "");
					SetTimerEx("KickearPlayer", 50, 0, "i", warned);
                	dUserSetINT(PlayerName2(warned)).("Warns",PlayerInfo[warned][Warnings]);
   	                dUserSetINT(PlayerName2(warned)).("Kicks",PlayerInfo[warned][Kicks]);
                    return 1;
				}
				else
				{
					format(str, sizeof (str), "[INFO]: El Admin \"%s\" advierte ha \"%s\" [Razón: %s] [Adv.: %d/%d]", pName(playerid), pName(warned), params[1+strlen(tmp)], PlayerInfo[warned][Warnings], MAX_WARNINGS);
					return SendClientMessageToAll(yellow, str);
				}
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes darte advertencias a ti mismo");
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
}

dcmd_quitarwarn(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 2) {
     new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "[USA]: /quitarwarn [playerid] [Razón]") &&
		SendClientMessage(playerid, orange, "[Función]: Le Quitas Las Advertencia a un Jugador Específico!");
	    if(!strlen(tmp2)) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Debes dar una razón para quitarle las advertencias a este player");
    	new warned = strval(tmp), str[210];
		if(PlayerInfo[warned][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes quitarwarn a este player por su nivel Administrativo");
	 	if(IsPlayerConnected(warned) && warned != INVALID_PLAYER_ID) {
 	    	if(warned != playerid) {
				if(PlayerInfo[warned][Warnings] < 1) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No le puedes sacar mas advertencias al player!");
			    CMDMessageToAdmins(playerid,"QUITARWARN");
				PlayerInfo[warned][Warnings]--;
				if( PlayerInfo[warned][Warnings] == MAX_WARNINGS)
				{
					format(str, sizeof (str), "[INFO]: El Administrador \"%s\" Ha Kickeado a \"%s\" [Adv.: %d/%d] **", pName(playerid), pName(warned), PlayerInfo[warned][Warnings], MAX_WARNINGS);
					SendClientMessageToAll(red, str);
					format(str,sizeof(str),"{FFFFFF} Has sido Kickeado del Servidor \npor el Admin {0794FF}%s \n\n{FF0000}Razón: {FFFFFF}%s \n\n{09FF00}Si crees que fué un error o injusto \ntoma una captura con F8", pName(playerid));
                    ShowPlayerDialog(warned, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Revolucion Latina", str, "Aceptar", "") ;
					SaveToFile("KickLog",str);	SetTimerEx("KickearPlayer", 50, 0, "i", warned);
					PlayerInfo[warned][Warnings] = 0;
                    return 1;
					} else {
					format(str, sizeof (str), "[INFO]: El Admin \"%s\" Le Quito una Advertencia a \"%s\" [Adv.: %d/%d]", pName(playerid), pName(warned), PlayerInfo[warned][Warnings], MAX_WARNINGS);
					return SendClientMessageToAll(yellow, str);
				}
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes quitarte las advertencias a ti mismo");
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
}

dcmd_tamarilla(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 9) {
     new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "[USA]: /tamarilla [playerid] [Razón]") &&
		SendClientMessage(playerid, orange, "[Función]: Le das una Advertencia a Especificado Admin!");
	    if(!strlen(tmp2)) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Debes dar una razón para advertir a este Admin");
    	new warned = strval(tmp), str[1000];
		if(PlayerInfo[warned][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes dar warn a este player por su nivel Administrativo");
	 	if(IsPlayerConnected(warned) && warned != INVALID_PLAYER_ID) {
 	    	if(warned != playerid) {
 	    	if(!strcmp("[StaffRL]Renato._",pName(warned),true) || !strcmp("[PFP]Scarface(Jefe)",pName(warned),true) || !strcmp("Sr[F]ran",pName(warned),true)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No puedes Advertir a los dueños!");
			    CMDMessageToAdmins(playerid,"TAMARILLA");
				PlayerInfo[warned][AdminWarn]++;
				if(PlayerInfo[warned][AdminWarn] == MAX_ADMINWARN)
				{
					PlayerInfo[warned][Kicks]++;
					if(PlayerInfo[playerid][pAdmin] == 10) {
					format(str, sizeof (str),"[INFO]: {FFFFFF}\"%s\" Ha sido Demoteado por el Dueño \"%s\" [Razón: %s] [Adv.: %d/5]", pName(warned), pName(playerid), params[1+strlen(tmp)], PlayerInfo[warned][AdminWarn]);}
					if(PlayerInfo[playerid][pAdmin] == 9) {
					format(str, sizeof (str),"[INFO]: {FFFFFF}\"%s\" Ha sido Demoteado por el Encargado \"%s\" [Razón: %s] [Adv.: %d/5]", pName(warned), pName(playerid), params[1+strlen(tmp)], PlayerInfo[warned][AdminWarn]);}
					MessageToAdmins(red,str);
					PlayerInfo[warned][AdminWarn] = 0;
					PlayerInfo[warned][pAdmin] = 0;
					dUserSetINT(PlayerName2(warned)).("level",PlayerInfo[warned][pAdmin]);
                    return 1;
				}
				else
				{
					if(PlayerInfo[playerid][pAdmin] == 10) {
					format(str, sizeof (str), "[INFO]: {FFFFFF}El Dueño \"%s\" le dió tarjeta amarilla al Admin \"%s\" [Razón: %s] [Adv.: %d/%d]", pName(playerid), pName(warned), params[1+strlen(tmp)], PlayerInfo[warned][AdminWarn], MAX_ADMINWARN);}
					if(PlayerInfo[playerid][pAdmin] == 9) {
					format(str, sizeof (str), "[INFO]: {FFFFFF}El Encargado \"%s\" le dió tarjeta amarilla al Admin \"%s\" [Razón: %s] [Adv.: %d/%d]", pName(playerid), pName(warned), params[1+strlen(tmp)], PlayerInfo[warned][AdminWarn], MAX_ADMINWARN);}
                	dUserSetINT(PlayerName2(warned)).("AdmWarn",PlayerInfo[warned][AdminWarn]);
					return MessageToAdmins(yellow, str);
				}
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes darte advertencias a ti");
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}

dcmd_quitartamarilla(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 9) {
     new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "[USA]: /quitartamarilla [playerid] [Razón]") &&
		SendClientMessage(playerid, orange, "[Función]: Le Quitas Las Advertencia a un Admin Específico!");
	    if(!strlen(tmp2)) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Debes dar una razón para quitarle las advertencias a este player");
    	new warned = strval(tmp), str[210];
		if(PlayerInfo[warned][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes quitarwarn a este player por su nivel Administrativo");
	 	if(IsPlayerConnected(warned) && warned != INVALID_PLAYER_ID) {
 	    	if(warned != playerid) {
				if(PlayerInfo[warned][AdminWarn] < 1) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No le puedes sacar mas advertencias al player!");
			    CMDMessageToAdmins(playerid,"QUITARTAMARILLA");
				PlayerInfo[warned][AdminWarn]--;
				if( PlayerInfo[warned][AdminWarn] == MAX_ADMINWARN)
				{
					format(str, sizeof (str), "[INFO]: El Administrador \"%s\" Ha Demoteado a \"%s\"  [Razón: %s] [Adv.: %d/%d] **", pName(playerid), pName(warned), params[1+strlen(tmp)], PlayerInfo[warned][AdminWarn], MAX_ADMINWARN);
					SendClientMessageToAll(red, str);
					format(str,sizeof(str),"{FFFFFF} Has sido Kickeado del Servidor \npor el Admin {0794FF}%s \n\n{FF0000}Razón: {FFFFFF}%s \n\n{09FF00}Si crees que fué un error o injusto \ntoma una captura con F8", pName(playerid), params[1+strlen(tmp)]);
                    ShowPlayerDialog(warned, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Revolucion Latina", str, "Aceptar", "") ;
					SaveToFile("KickLog",str);	SetTimerEx("KickearPlayer", 50, 0, "i", warned);
					PlayerInfo[warned][AdminWarn] = 0;
                    return 1;
				}
				else
				{
					if(PlayerInfo[playerid][pAdmin] == 10) {
					format(str, sizeof (str), "[INFO]: El Dueño \"%s\" le quitó una tarjeta amarilla al Admin \"%s\"  [Razón: %s] [Adv.: %d/%d]", pName(playerid), pName(warned), params[1+strlen(tmp)], PlayerInfo[warned][AdminWarn], MAX_ADMINWARN);}
					if(PlayerInfo[playerid][pAdmin] == 9) {
					format(str, sizeof (str), "[INFO]: El Encargado \"%s\" le quitó una tarjeta amarilla al Admin \"%s\"  [Razón: %s] [Adv.: %d/%d]", pName(playerid), pName(warned), params[1+strlen(tmp)], PlayerInfo[warned][AdminWarn], MAX_ADMINWARN);}
                	dUserSetINT(PlayerName2(warned)).("AdmWarn",PlayerInfo[warned][AdminWarn]);
					return MessageToAdmins(yellow,str);
				}
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes quitarte las advertencias a ti mismo");
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}

dcmd_kick(playerid,params[]) {
		if(PlayerInfo[playerid][pAdmin] >= 3) {
		    new tmp[256], str[1000], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /kick [playerid] [razón]") &&
		    SendClientMessage(playerid, orange, "[Función]: ¡Expulsas del Server a Especificado Jugador!");
		    if(!strlen(tmp2)) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Debes dar una razón para kickear a este player");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
	    	new year,month,day; getdate(year, month, day);
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][pAdmin] != ServerInfo[MaxAdminLevel])) {
				GetPlayerName(player1, playername, sizeof(playername));
				GetPlayerName(playerid, adminname, sizeof(adminname));
                if(!strcmp("[StaffRL]Renato._",playername,true) || !strcmp("Sr.[F]ran",playername,true) || !strcmp("[PFP]Scarface(Jefe)",playername,true) || !strcmp("Carlosxp",playername,true)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}¡No puedes kickear a los dueños!");
				CMDMessageToAdmins(playerid,"KICK");
				PlayerInfo[player1][Kicks]++;
				if(PlayerInfo[player1][Kicks] == 6)
				{
					format(str, sizeof (str), "[INFO]:{FFFFFF} El jugador {FF0000}\"%s\"{FFFFFF} Ha sido Baneado por el administrador {FF0000}\"%s\" [Razón: %s] [Kicks: %d/4]", playername, adminname, params[4], MAX_KICKS);
					SendClientMessageToAll(red, str);
					new msgd[1500];
					new str1[500], str2[500], str3[500], str4[500], str5[500];
					format(str1, sizeof(str1), "El administrador {29FF0D}%s{FFFFFF} te ha Kickeado del Servidor.\n\n", adminname);
					strcat(msgd, str1);
					format(str2, sizeof(str2), "*{FFFFFF} Nick Admin:{29FF0D} %s\n", adminname);
					strcat(msgd, str2);
					format(str3, sizeof(str3), "*{FFFFFF} Tu Nick: {29FF0D}%s\n", playername);
					strcat(msgd, str3);
					format(str4, sizeof(str4), "*{FFFFFF} Motivo: {FF0000}%s\n", params[2]);
					strcat(msgd, str4);
					format(str5, sizeof(str5), "*{FFFFFF} Fecha: {29FF0D}%d/%d/%d \n\n", day, month, year);
					strcat(msgd, str5);
					strcat(msgd, "{29FF0D}Envia una Foto de este Mensaje con F8 y Muestrasela a un Dueño\n");
					strcat(msgd, "{29FF0D}o Encargado en caso de un error!");
					ShowPlayerDialog(player1, 0, DIALOG_STYLE_MSGBOX, "{FFFFFF}Kickeado - {FF0000}Revolucion {FFFFFF}Latina", msgd, "Aceptar", "");
					SaveToFile("KickLog",str);
					SetTimerEx("BanearPlayer", 50, 0, "i", player1);
					PlayerInfo[player1][Warnings] = 0;
					PlayerInfo[player1][Kicks] = 0;
					dUserSetINT(PlayerName2(player1)).("banned",1);
                	dUserSetINT(PlayerName2(player1)).("Warns",PlayerInfo[player1][Warnings]);
   	                dUserSetINT(PlayerName2(player1)).("Kicks",PlayerInfo[player1][Kicks]);
                    return 1;
				}
				else
				{
					format(string2,sizeof(string2),"[INFO]: {FFFFFF}El jugador {FF0000}%s{FFFFFF} ha sido Kickeado por el administrador {FF0000}%s [Razón: %s] [Kicks: %d/4]",playername,adminname,params[4],PlayerInfo[player1][Kicks]);
					SendClientMessageToAll(red,string2);
					SaveToFile("KickLog",string2); print(string2);
   	                dUserSetINT(PlayerName2(player1)).("Kicks",PlayerInfo[player1][Kicks]);
     				return SetTimerEx("KickearPlayer", 50, 0, "i", player1); }
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado, o es ud mismo o tiene nivel superior a usted.");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

dcmd_setkicks(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 8) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "[USA]: /setkicks [jugador] [N° kicks]") &&
		SendClientMessage(playerid, orange, "[Función]: Seteas los Kicks a Especificado Jugador!");
		new player1 = strval(tmp), kick = strval(tmp2);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETKICKS");
			format(string2, sizeof(string2), "Has puesto los kicks de \"%s\" en '%d", pName(player1), kick);
			SendClientMessage(playerid,ColorAdmin,string2);
			if(player1 != playerid)
			{
			format(string2,sizeof(string2),"[INFO]: El Administrador \"%s\" ha puesto tus kicks en '%d'", pName(playerid), kick);
			SendClientMessage(player1,ColorAdmin,string2);
			}
			PlayerInfo[player1][Kicks] = kick;
			dUserSetINT(PlayerName2(player1)).("Kicks",PlayerInfo[player1][Kicks]);
            return 1;
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 8] para Usar este Comando!!");
}


dcmd_banip(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 6)
    {
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
    new string[128];
    if(!strlen(params))
	SendClientMessage(playerid, -1, "[USO]: /banip [IP]");
    else
    {
        format(string, sizeof(string),"banip %s", params[0]);
        SendRconCommand(string);
        SendRconCommand("reloadbans");
        new stringb[128];
        format(stringb, sizeof(stringb),"has baneado la ip %s", params[0]);
        SendClientMessage(playerid, COLOR_GREEN,stringb);
    }
	return true;
	}
	else return SendClientMessage(playerid,COLOR_RED,"[Error]: Debes estar registrado para usar este comando");
	}
	else return SendClientMessage(playerid, 0xFF0000FF, "[Error]: Este comando es solo para admins lvl 6");
}

dcmd_unbanip(playerid,params[])
{
    #pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 6)
    {
    if(PlayerInfo[playerid][LoggedIn] == 1)
	{
    ShowPlayerDialog(playerid,UNBAN,DIALOG_STYLE_INPUT,"{00FF00}RL - Desbanea una Ip","Desban IP:\n","Desban!","Cancelar");
    }
	else return SendClientMessage(playerid,COLOR_RED,"[Error]: Usted debe identificarse para usar este comando");
	}
	else return SendClientMessage(playerid, 0xFF0000FF, "[Error]: Este comando es solo para admins nivel 6");
	return 1;
}

	dcmd_ban(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
   	GetPlayerName(playerid, pame, sizeof(pame));
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][pAdmin] >= 6) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /ban [playerid] [razón]") &&
		    SendClientMessage(playerid, orange, "[CONSEJO]: Se recomienda usar /bantemp el Ban sólo es en casos Extremos.");
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "ERROR: Debe dar una razón");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

            if(!strcmp("Carlosxp",pName(player1),true) || !strcmp("[PFP]Scarface(Jefe)",pName(player1),true) || !strcmp("Sr.[F]ran",pName(player1),true) || !strcmp("[StaffRL]Renato._",pName(player1),true)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No puedes banear al dueño!");
            if(PlayerInfo[player1][pAdmin] >= 7) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No puedes banear a un Admin! [Hasta lvl 6!]");
			if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][pAdmin] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
				new year,month,day,hour,minuite,second; getdate(year, month, day); gettime(hour,minuite,second);
				CMDMessageToAdmins(playerid,"BAN");
				format(string2,sizeof(string2),"[INFO]: El jugador %s ha sido Baneado por el Administrador %s [Razón: %s] [Fecha: %d/%d/%d]",playername,adminname,params[2],day,month,year);
				SendClientMessageToAll(red,string2);
				new ip[195];
				GetPlayerIp(player1,ip,sizeof(ip));
				new msgd[1500];
				new str1[500], str2[500], str3[500], str4[500], str5[500], str6[500];
				format(str1, sizeof(str1), "{FFFFFF}El admininstrador {29FF0D}%s{FFFFFF} te ha Baneado Permanentemente del Servidor.\n\n", adminname);
				strcat(msgd, str1);
				format(str2, sizeof(str2), "* {FFFFFF}Nick Admin: {29FF0D}%s\n", adminname);
				strcat(msgd, str2);
				format(str3, sizeof(str3), "* {FFFFFF}Tu Nick: {29FF0D}%s\n", playername);
				strcat(msgd, str3);
				format(str4, sizeof(str4), "* {FFFFFF}Tu IP: {29FF0D}%s\n", ip);
				strcat(msgd, str4);
				format(str5, sizeof(str5), "* {FFFFFF}Motivo: {FF0000}%s\n", params[2]);
				strcat(msgd, str5);
				format(str6, sizeof(str6), "* {FFFFFF}Fecha: {29FF0D}%d/%d/%d \n\n", day, month, year);
				strcat(msgd, str6);
				strcat(msgd, "{29FF0D}Envia una Foto de este Mensaje con F8 y Muestrasela a un Dueño\n");
				strcat(msgd, "{29FF0D}o Encargado en caso de un Error!");
				ShowPlayerDialog(player1, 0, DIALOG_STYLE_MSGBOX, "{FFFFFF}Baneado - {FF0000}Revolucion {FFFFFF}Latina", msgd, "Aceptar", "");
				SaveToFile("BanLog",string2);
                RangeBanRank[playerid]++;
				print(string2);
				if(udb_Exists(PlayerName2(player1)) && PlayerInfo[player1][LoggedIn] == 1) dUserSetINT(PlayerName2(player1)).("banned",1);
				format(string2,sizeof(string2),"Ud fue Baneado por el Administrador %s. Razón: %s", adminname, params[2] );
				return SetTimerEx("BanearPlayer", 500, 0, "i", player1);
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado o es usted mismo");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 6] para Usar este Comando!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Debes estar logeado para usar este comando");
}


dcmd_nunban(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 6)
        {
        new tmp[256], Index;        tmp = strtok(params,Index);
        if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /nunban [name]") &&	SendClientMessage(playerid, orange, "[Función]: Desbaneas el Nick!");
            new adminname[MAX_PLAYER_NAME], unbanname[256];
            unbanname = tmp;
            if(udb_Exists(unbanname))    {
	        dUserSetINT(unbanname).("banned", 0);
            GetPlayerName(playerid, adminname, sizeof(adminname));
            CMDMessageToAdmins(playerid,"NUNBAN");
            format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador %s [%d] ha desbaneado el Nick: \"%s\" .",adminname,playerid,unbanname);
            SendClientMessageToAll(red,string2);
            } else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ese Nick No Se Encuentra En Nuestra Base de Datos.");
        } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 6] para Usar este Comando!");
    return 1;
}

dcmd_nban(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 8)
	{
        new tmp[256], Index; tmp = strtok(params,Index);
        if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /nban [name]") &&
		SendClientMessage(playerid, orange, "[Función]: Baneas el Nick!");
        new adminname[MAX_PLAYER_NAME], unbanname[256];
        unbanname = tmp;
        if(udb_Exists(unbanname))
		{
	        dUserSetINT(unbanname).("banned", 1);
	        GetPlayerName(playerid, adminname, sizeof(adminname));
	        CMDMessageToAdmins(playerid,"NBAN");
	        format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador %s [%d] ha Baneado el Nick: \"%s\" .",adminname,playerid,unbanname);
	        SendClientMessageToAll(green,string2);
        }
		else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ese Nick No Se Encuentra En Nuestra Base de Datos.");
    }
	else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 8] para Usar este Comando!");
    return 1;
}

dcmd_snombre(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 7) {
		CMDMessageToAdmins(playerid,"SNOMBRE");
		if(NombreI == 0) {
			NombreI = 1;
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" Ha desactivado el cambio de Nick", pName(playerid) );
		} else {
			NombreI = 0;
			format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" Ha activado el cambio de Nick", pName(playerid) );
		} return SendClientMessageToAll(green,string2);
 	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

dcmd_nombre(playerid,params[]) {
  if(NombreI == 0)
  {
    if(PlayerInfo[playerid][pAdmin] >= 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Los Admins ya no se pueden Cambiar de Nick. Pedir Autorizacion a un Encargado/Dueño!");
    if(GetPlayerScore(playerid) < 200)
		return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Debes Tener más de 200 de Score para cambiarte el Nick");
    new pos,len;
	for (pos = 0, len = strlen(params[8]); pos < len; pos ++)
        {
            switch (params[1 + pos])
            {
                case 'a' .. 'z': continue;
                case 'A' .. 'Z': continue;
                case '0' .. '9': continue;
                case '_':        continue;
                case '[',   ']': continue;
                case '(',   ')': continue;
                case '$':        continue;
				case '.':        continue;
                default:         return SendClientMessage(playerid, 0xFFFFFFFF, "[ERROR]: {FFFFFF}El nombre solo puede tener carácteres alfanuméricos.");
            }
	}
	if(PlayerInfo[playerid][LoggedIn] == 1)
 	{
        if(Ya(playerid)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Debes Esperar 30 Segundos Para Volverte a Cambiar el Nick!");
            if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /nombre [NuevoNombre]") &&
		    SendClientMessage(playerid, orange, "[[Función]]: Cambias tu Nick y Todos Tus Datos Pasa al Nuevo Nick!") &&
		    SendClientMessage(playerid, orange, "[Info]: Recuerda cambiarte el Nuevo Nick en el Programa SA-MP.");
            if(strfind(params, "!", true) != -1 || strfind(params, "¡", true) != -1 || strfind(params, "¡", true) != -1 || strfind(params, "ñ", true) != -1 || strfind(params, "?", true) != -1 || strfind(params, "¿", true) != -1 || strfind(params, "{", true) != -1 || strfind(params, "}", true) != -1 || strfind(params, "|", true) != -1 || strfind(params, "¬", true) != -1 || strfind(params, "®", true) != -1
            || strfind(params, "#", true) != -1 || strfind(params, "@", true) != -1 || strfind(params, "*", true) != -1 || strfind(params, "Ç", true) != -1 || strfind(params, "'", true) != -1 || strfind(params, "´", true) != -1 || strfind(params, ",", true) != -1 || strfind(params, ";", true) != -1 || strfind(params, "%", true) != -1 || strfind(params, "&", true) != -1 || strfind(params, "/", true) != -1
            || strfind(params, "=", true) != -1 || strfind(params, "¨", true) != -1 || strfind(params, "^", true) != -1 || strfind(params, "+", true) != -1 || strfind(params, "-", true) != -1 || strfind(params, ">", true) != -1 || strfind(params, "<", true) != -1 || strfind(params, "~", true) != -1 || strfind(params, ":", true) != -1 || strfind(params, "", true) != -1 || strfind(params, " ", true) != -1)
			return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Sin Signos Raros ni Espacio en tu Nick.");
            if (strlen(params) < 3 || strlen(params) > 20) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El Nombre Tiene Que Ser Entre 3 y 20 Carácteres");
            new nombre[MAX_PLAYER_NAME], stringname[200];
            if(!strcmp("con",params,true) || !strcmp("aux",params,true) || !strcmp("Admin",params,true) || !strcmp("prn",params,true) || !strcmp("lptn",params,true) || !strcmp("nul",params,true) || !strcmp("Anonymous",params,true) || !strcmp("clock$",params,true)) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Esos Nicks están prohibidos en el Servidor");
            if(udb_Exists(params)) return SendClientMessage(playerid, red, "Este Nombre Ya Existe, Seleccione Otro");
			//if(udb_Exists(PlayerName2(playerid))) return SendClientMessage(playerid, red, "Este Nombre Ya Existe, Seleccione Otro");
            GetPlayerName(playerid, nombre, sizeof(nombre));
            format(string2,sizeof(string2),"[Revolucion Latina]: %s [ID: %d] Se A Cambiado El Nombre A: %s",nombre,playerid,params);
            SendClientMessageToAll(green,string2);
			//================================//
		    new ownerid;
			for(new propid; propid < PropertiesAmount; propid++)
			{
				if(PropInfo[propid][PropIsBought] == 1)
				{
	                ownerid = GetPlayerID(PropInfo[propid][PropOwner]);
					if(ownerid == playerid)
					{
						format(PropInfo[propid][PropOwner], MAX_PLAYER_NAME, "%s", params);
					}
				}
			}
			SaveProperties();
			//================================//
            SendClientMessage(playerid, orange, "[Info]: Recuerda cambiarte el Nuevo Nick en el Programa SA-MP.");
            GameTextForPlayer(playerid,"~g~Recuerda cambiarte ~n~el Nuevo Nick ~n~en el Programa SAMP",5000,3);
			format(stringname,sizeof(stringname),"%s Se Cambio el Nick a %s",nombre,params);
			print(stringname);
            udb_RenameUser(nombre, params);
            SetPlayerName(playerid, params);
            UsarNombre[playerid]=GetTickCount();
        } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted Necesita Identificarse (/login) Para Usar este comando!");
  } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El comando está Desactivado, si quieres cambiar Nick habla con un Admin Level Alto");
    return 1;
}

dcmd_unban(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][pAdmin] >= 6) {
        	ShowPlayerDialog(playerid,UNBAN,DIALOG_STYLE_INPUT,"Desbaneo de IP","Desban IP:\n","Desban!","Cancelar");
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 6] para Usar este Comando!");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted debe identificarse (/login) para usar este comando");
	return 1;
}

dcmd_rban(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][pAdmin] >= 7) {
		    new ip[128], tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /rban [playerid] [razón]") &&
		    SendClientMessage(playerid, orange, "[Función]: Expulsas del Server a Especificado Jugador y Baneas El rango de la IP!");
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Debes dar una razón para hacer un RangeBan a este player");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][pAdmin] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
				new year,month,day,hour,minuite,second; getdate(year, month, day); gettime(hour,minuite,second);
				CMDMessageToAdmins(playerid,"RBAN");
				format(string2,sizeof(string2),"%s Ha sido Baneado (RangeBan) Por el Admin %s [Razón: %s] [Fecha: %d/%d/%d]",playername,adminname,params[2],day,month,year);
				SendClientMessageToAll(red,string2);
				format(string2,sizeof(string2),"{FFFFFF} Has sido Rbaneado del Servidor \npor el Admin {0794FF}%s \n\n{FF0000}Razón: {FFFFFF}%s \n\n{09FF00}Si crees que fué un error o injusto \ntoma una captura con F8",adminname, params[2]);
                ShowPlayerDialog(player1, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Advertencia - Revolucion Latina", string2, "Aceptar", "") ;
				SaveToFile("RBanLog",string2);
				print(string2);
				if(udb_Exists(PlayerName2(player1)) && PlayerInfo[player1][LoggedIn] == 1) dUserSetINT(PlayerName2(player1)).("banned",1);
				RangeBan(player1);
            	SendRconCommand(ip);
				return 1;
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está conectado, es ud mismo o posee un nivel admin mayor al suyo");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Logueate para usar este comando");
}

dcmd_slap(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][pAdmin] >= 2) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /slap [playerid] [razón]") &&
		SendClientMessage(playerid, orange, "[Función]: Le das una Abofeteada a Especificado Jugador!");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	//if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][pAdmin] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
				CMDMessageToAdmins(playerid,"SLAP");
		        new Float:x, Float:y, Float:z;
				GetPlayerPos(player1,x,y,z); SetPlayerPos(player1,x,y,z+20); PlayerPlaySound(playerid,1190,0.0,0.0,0.0); PlayerPlaySound(player1,1190,0.0,0.0,0.0);

				if(strlen(tmp2)) {
					format(string2,sizeof(string2),"Tú has sido abofeteado por el Administrador %s %s ",adminname,params[2]);	SendClientMessage(player1,red,string2);
					format(string2,sizeof(string2),"Tú has abofeteado a %s %s ",playername,params[2]); return SendClientMessage(playerid,green,string2);
				} else {
					format(string2,sizeof(string2),"Tú has sido abofeteado por el Administrador %s ",adminname);	SendClientMessage(player1,red,string2);
					format(string2,sizeof(string2),"Tú has abofeteado a %s",playername); return SendClientMessage(playerid,green,string2); }
			//} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado o es usted mismo");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Logueate para usar este comando");
}

dcmd_explotar(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][pAdmin] >= 2) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /explotar [playerid] [razón]") &&
		SendClientMessage(playerid, orange, "[Función]: Explotar a Especificado Jugador!");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][pAdmin] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername)); 	GetPlayerName(playerid, adminname, sizeof(adminname));
				CMDMessageToAdmins(playerid,"EXPLOTAR");
				new Float:burnx, Float:burny, Float:burnz; GetPlayerPos(player1,burnx, burny, burnz); CreateExplosion(burnx, burny , burnz, 7,10.0);

				if(strlen(tmp2)) {
					format(string2,sizeof(string2),"Fuiste explotado por el Administrador %s [Razón: %s]",adminname,params[2]); SendClientMessage(player1,green,string2);
					format(string2,sizeof(string2),"Fuiste explotado por %s [Razón: %s]", playername,params[2]); return SendClientMessage(playerid,green,string2);
				} else {
					format(string2,sizeof(string2),"Fuiste explotado por el Administrador %s",adminname); SendClientMessage(player1,green,string2);
					format(string2,sizeof(string2),"Explotaste a %s", playername); return SendClientMessage(playerid,green,string2); }
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado o posee un nivel superior");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Debes estar logueado para usar este comando");
}

dcmd_jail(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][pAdmin] >= 2) {
		    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /jail [playerid] [minutes] [razón]") &&
		    SendClientMessage(playerid, orange, "[Función]: Mandarás a la Carcel a Especificado Jugador!");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][pAdmin] != ServerInfo[MaxAdminLevel]) ) {
				if(PlayerInfo[player1][Jailed] == 0) {
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
					new jtime = strval(tmp2);
					if(jtime == 0) jtime = 9999;

			       	CMDMessageToAdmins(playerid,"JAIL");
					PlayerInfo[player1][JailTime] = jtime*1000*60;
    			    SetTimerEx("JailPlayer",5000,0,"d",player1);
		    	    SetTimerEx("Jail1",1000,0,"d",player1);
		        	PlayerInfo[player1][Jailed] = 1;

					if(jtime == 9999) {
						if(!strlen(params[strlen(tmp2)+1])) format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha encarcelado ha %s ",adminname, playername);
						else format(string2,sizeof(string2),"[INFO]: El Administrador %s ha encarcelado ha %s [Razón: %s]",adminname, playername, params[strlen(tmp)+1] );
   					} else {
						if(!strlen(tmp3)) format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador %s ha encarcelado ha %s por %d minutos",adminname, playername, jtime);
						else format(string2,sizeof(string2),"[INFO]: El Administrador %s ha encarcelado ha %s por %d minutos [Razón: %s]",adminname, playername, jtime, params[strlen(tmp2)+strlen(tmp)+1] );
					}
	    			return SendClientMessageToAll(yellow,string2);
				} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player ya está encarcelado");
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado o posee un nivel superior");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Debes estar logueado para usar este comando");
}

dcmd_unjail(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][pAdmin] >= 2) {
		    new tmp[256], Index; tmp = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /unjail [playerid]") &&
		    SendClientMessage(playerid, orange, "[Función]: Sacas de la Carcel a Especificado Jugador!");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	//if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][pAdmin] != ServerInfo[MaxAdminLevel]) ) {
				if(PlayerInfo[player1][Jailed] == 1) {
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador %s ha liberado ha",adminname);	SendClientMessage(player1,green,string2);
					format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador %s ha liberado ha %s",adminname, playername);
					JailRelease(player1);
					return SendClientMessageToAll(blue,string2);
				//} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}el player no está encarcelado");
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado o posee un nivel superior");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Debes estar logueado para usar este comando");
}

dcmd_encarcelados(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][pAdmin] >= 1) {
	 		new bool:First2 = false, Count, adminname[MAX_PLAYER_NAME], i;
		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Jailed]) Count++;
			if(Count == 0) return SendClientMessage(playerid,red, "No hay jugadores encarcelados");

		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Jailed]) {
	    		GetPlayerName(i, adminname, sizeof(adminname));
				if(!First2) { format(string2, sizeof(string2), "Players Encarcelados: [%d]%s", i,adminname); First2 = true; }
		        else format(string2,sizeof(string2),"%s, [%d]%s ",string2,i,adminname);
	        }
		    return SendClientMessage(playerid,COLOR_WHITE,string2);
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Debes estar logueado para usar este comando");
}

dcmd_respawncars(playerid,params[]) {
#pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 5 ) {
 	for(new i; i != MAX_VEHICLES; i++) if(!EsVehiculoOcupado(i)) SetVehicleToRespawn(i);
	CMDMessageToAdmins(playerid,"RESPAWNCARS");
	return SendClientMessage(playerid,green,"[INFO]: Vehículos Respawneados");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 5] para Usar este Comando!");
}

dcmd_congelar(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][pAdmin] >= 2) {
		    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /congelar [playerid] [minutos] [razón]") &&
		    SendClientMessage(playerid, orange, "[Función]: Congelas a Especificado Jugador!");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if(PlayerInfo[player1][Frozen] == 0) {
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
					new ftime = strval(tmp2);
					if(ftime == 0) ftime = 9999;

			       	CMDMessageToAdmins(playerid,"CONGELAR");
					TogglePlayerControllable(player1,false); PlayerInfo[player1][Frozen] = 1; PlayerPlaySound(player1,1057,0.0,0.0,0.0);
					PlayerInfo[player1][FreezeTime] = ftime*1000*60;
			        FreezeTimer[player1] = SetTimerEx("UnFreezeMe",PlayerInfo[player1][FreezeTime],0,"d",player1);

					if(ftime == 9999) {
						if(!strlen(params[strlen(tmp2)+1])) format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s congeló ha %s ",adminname, playername);
						else format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador %s congeló ha %s [Razón: %s]",adminname, playername, params[strlen(tmp)+1] );
	   				} else {
						if(!strlen(tmp3)) format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador %s congeló ha %s por %d minutos",adminname, playername, ftime);
						else format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador %s congeló ha %s por %d minutos [Razón: %s]",adminname, playername, ftime, params[strlen(tmp2)+strlen(tmp)+1] );
					}
		    		return SendClientMessageToAll(blue,string2);
				} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player ya está congelado");
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado o posee un nivel superior");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Debes estar logueado para usar este comando");
}

dcmd_descongelar(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
	    if(PlayerInfo[playerid][pAdmin] >= 2|| IsPlayerAdmin(playerid)) {
		    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /descongelar [playerid]") &&
		    SendClientMessage(playerid, orange, "[Función]: Descongelas a Especificado Jugador!");
	    	new player1;
			player1 = strval(params);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		 	    if(PlayerInfo[player1][Frozen] == 1) {
			       	CMDMessageToAdmins(playerid,"DESCONGELAR");
					UnFreezeMe(player1);
					format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador %s te ha descongelado", PlayerName2(playerid) ); SendClientMessage(player1,ColorAdmin,string2);
					format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador %s ha descongelado a %s", PlayerName2(playerid), PlayerName2(player1));
		    		return SendClientMessageToAll(blue,string2);
				} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está congelado");
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Logueate para usar este comando");
}

dcmd_congelados(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][pAdmin] >= 1) {
	 		new bool:First2 = false, Count, adminname[MAX_PLAYER_NAME], i;
		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Frozen]) Count++;
			if(Count == 0) return SendClientMessage(playerid,red, "No hay players congelados");

		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Frozen]) {
	    		GetPlayerName(i, adminname, sizeof(adminname));
				if(!First2) { format(string2, sizeof(string2), " Players Congelados: [%d]%s", i,adminname); First2 = true; }
		        else format(string2,sizeof(string2),"%s, [%d]%s ",string2,i,adminname);
	        }
		    return SendClientMessage(playerid,COLOR_WHITE,string2);
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Logueate para usar este comando");
}

/*dcmd_mute(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][pAdmin] >= 2) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /mute [playerid] [razón]") &&
		    SendClientMessage(playerid, orange, "[Función]: Muteas del Chat a Especificado Jugador!");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][pAdmin] != ServerInfo[MaxAdminLevel]) ) {
		 	    if(PlayerInfo[player1][Muted] == 0) {
					GetPlayerName(player1, playername, sizeof(playername)); 	GetPlayerName(playerid, adminname, sizeof(adminname));
					CMDMessageToAdmins(playerid,"MUTE");
					PlayerPlaySound(player1,1057,0.0,0.0,0.0);  PlayerInfo[player1][Muted] = 1; PlayerInfo[player1][MuteWarnings] = 0;
					if(strlen(tmp2)) {
						format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha muteado a %s [Razón: %s]",adminname,playername,params[2]);
						 return SendClientMessageToAll(blue,string2);
					} else {
						format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha muteado a %s",adminname,playername);
                         return SendClientMessageToAll(blue,string2); }
				} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player ya está muteado");
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado o No tienes el nivel para usar este comando");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Logueate para usar este comando");
}*/

dcmd_mute(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][pAdmin] >= 2) {
		    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /mute [playerid] [minutos] [razón]") &&
		    SendClientMessage(playerid, orange, "[Función]: Mandarás a la Carcel a Especificado Jugador!");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][pAdmin] != ServerInfo[MaxAdminLevel]) ) {
				if(PlayerInfo[player1][Muted] == 0) {
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
					new mtime = strval(tmp2);
					if(mtime == 0) mtime = 9999;

			       	CMDMessageToAdmins(playerid,"MUTE");
					PlayerInfo[player1][MuteTime] = mtime*1000*60;
					SetTimerEx("MutePlayer",1000,0,"d",player1);

					if(mtime == 9999) {
						if(!strlen(params[strlen(tmp2)+1])) format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s a encarcelado a %s ",adminname, playername);
						else format(string2,sizeof(string2),"[INFO]: El Administrador %s ha muteado a %s [Razón: %s]",adminname, playername, params[strlen(tmp)+1] );
   					} else {
						if(!strlen(tmp3)) format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha encarcelado a %s por %d minutos",adminname, playername, mtime);
						else format(string2,sizeof(string2),"[INFO]: El Administrador %s ha muteado a %s por %d minutos [Razón: %s]",adminname, playername, mtime, params[strlen(tmp2)+strlen(tmp)+1] );
					}
	    			return SendClientMessageToAll(yellow,string2);
				} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player ya está muteado");
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado o posee un nivel superior");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Debes estar logueado para usar este comando");
}

dcmd_unmute(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][pAdmin] >= 2) {
		    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /unmute [playerid]") &&
		    SendClientMessage(playerid, orange, "[Función]: Desmuteas del Chat a Especificado Jugador!");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(params);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][pAdmin] != ServerInfo[MaxAdminLevel]) ) {
		 	    if(PlayerInfo[player1][Muted] == 1) {
					GetPlayerName(player1, playername, sizeof(playername)); 	GetPlayerName(playerid, adminname, sizeof(adminname));
					CMDMessageToAdmins(playerid,"UNMUTE");
					PlayerPlaySound(player1,1057,0.0,0.0,0.0);
					KillTimer(MuteTimer[player1]);
					PlayerInfo[player1][MuteTime] = 0;
					PlayerInfo[player1][Muted] = 0;
					PlayerInfo[player1][MuteWarnings] = 0;
					format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha dejado hablar a %s",adminname,playername);
				    return SendClientMessageToAll(blue,string2);
				} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está muteado");
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Logueate para usar este comando");
}

dcmd_muteados(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][pAdmin] >= 1) {
	 		new bool:First2 = false, Count, adminname[MAX_PLAYER_NAME], i;
		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Muted]) Count++;
			if(Count == 0) return SendClientMessage(playerid,red, "No hay players muteados");

		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Muted]) {
	    		GetPlayerName(i, adminname, sizeof(adminname));
				if(!First2) { format(string2, sizeof(string2), " Players Muteados: [%d]%s", i,adminname); First2 = true; }
		        else format(string2,sizeof(string2),"%s, [%d]%s ",string2,i,adminname);
	        }
		    return SendClientMessage(playerid,COLOR_WHITE,string2);
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Logueate para usar este comando");
}

dcmd_akill(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
	    if(PlayerInfo[playerid][pAdmin] >= 5 || IsPlayerAdmin(playerid)) {
		    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /akill [playerid]") &&
		    SendClientMessage(playerid, orange, "[Función]: Matas a Especificado Jugador!");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(params);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if( (PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel] ) )
					return SendClientMessage(playerid, red, "No puedes dar akill a un admin de nivel más alto");
				CMDMessageToAdmins(playerid,"AKILL");
				GetPlayerName(player1, playername, sizeof(playername));	GetPlayerName(playerid, adminname, sizeof(adminname));
				format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s te ha matado",adminname);	SendClientMessage(player1,ColorAdmin,string2);
				format(string2,sizeof(string2),"Tú has matado a %s",playername); SendClientMessage(playerid,ColorAdmin,string2);
				return SetPlayerHealth(player1,0.0);
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 5] para Usar este Comando!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Logueate para usar este comando");
}

dcmd_weaps(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /weaps [playerid]") &&
		SendClientMessage(playerid, orange, "[Función]: Para ver las Armas que Tiene a Especificado Jugador!");
    	new player1, WeapName[24], slot, weap, ammo, Count, x;
		player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			format(string2,sizeof(string2),"[>> %s [%d] <<]", PlayerName2(player1), player1); SendClientMessage(playerid,ColorAdmin,string2);
			for (slot = 0; slot < 14; slot++) {	GetPlayerWeaponData(player1, slot, weap, ammo); if( ammo != 0 && weap != 0) Count++; }
			if(Count < 1) return SendClientMessage(playerid,ColorAdmin,"El player no tiene armas");

			if(Count >= 1)
			{
				for (slot = 0; slot < 14; slot++)
				{
					GetPlayerWeaponData(player1, slot, weap, ammo);
					if( ammo != 0 && weap != 0)
					{
						GetWeaponName(weap, WeapName, sizeof(WeapName) );
						if(ammo == 65535 || ammo == 1) format(string2,sizeof(string2),"%s%s (1)",string2, WeapName );
						else format(string2,sizeof(string2),"%s%s [%d]",string2, WeapName, ammo );
						x++;
						if(x >= 5)
						{
						    SendClientMessage(playerid, blue, string2);
						    x = 0;
							format(string2, sizeof(string2), "");
						}
						else format(string2, sizeof(string2), "%s,  ", string2);
					}
			    }
				if(x <= 4 && x > 0) {
					string2[strlen(string2)-3] = '.';
				    SendClientMessage(playerid, blue, string2);
				}
		    }
		    return 1;
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
}

dcmd_aka(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /aka [playerid]") &&
		SendClientMessage(playerid, orange, "[Función]: Para ver los Nick Anteriores que ha Tenido a Especificado Jugador!");
    	new player1, playername[MAX_PLAYER_NAME], str[128], tmp3[50];
		player1 = strval(params);
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
  		  	GetPlayerIp(player1,tmp3,50);
			GetPlayerName(player1, playername, sizeof(playername));
		    format(str,sizeof(str),"AKA: [%s id:%d] [%s] %s", playername, player1, tmp3, dini_Get("ladmin/config/aka.txt",tmp3) );
	        return SendClientMessage(playerid,ColorAdmin,str);
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado o es usted mismo");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

dcmd_screen(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2) {
	    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /screen [playerid] [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Mandas un Anuncio en la Pantalla a Especificado Jugador!");
    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
		player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][pAdmin] != ServerInfo[MaxAdminLevel]) ) {
			GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
			CMDMessageToAdmins(playerid,"SCREEN");
			format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s te ha enviado un mensaje de pantalla",adminname);	SendClientMessage(player1,ColorAdmin,string2);
			format(string2,sizeof(string2),"Tú has enviado a %s un mensaje de pantalla (%s)", playername, params[2]); SendClientMessage(playerid,ColorAdmin,string2);

			if(PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel])
			{
			format(string2, sizeof(string2), "|-%s[%d] envió a %s[%d] : %s", adminname, playerid, playername, player1, params[2]);
  			for (new b = 0; b < MAX_PLAYERS; b++)
			if(IsPlayerConnected(b) && (PlayerInfo[b][pAdmin] >= 3) && b != playerid)
			SendClientMessage(b, lightblue, string2);
			}

			return GameTextForPlayer(player1, EStexto(params[2]),4000,3);
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
}

dcmd_laston(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 2) {
    	new tmp2[256], file[256],player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], str[128];
		GetPlayerName(playerid, adminname, sizeof(adminname));

	    if(!strlen(params)) {
			format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(adminname));
			if(!fexist(file)) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El fichero no existe, el player no está registrado");
			if(dUserINT(PlayerName2(playerid)).("LastOn")==0) {	format(str, sizeof(str),"Never"); tmp2 = str;
			} else { tmp2 = dini_Get(file,"LastOn"); }
			format(str, sizeof(str),"You were last on the server on %s",tmp2);
			return SendClientMessage(playerid, red, str);
		}
		player1 = strval(params);
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToAdmins(playerid,"LASTON");
   	    	GetPlayerName(player1,playername,sizeof(playername)); format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(playername));
			if(!fexist(file)) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El fichero no existe, el player no está registrado");
			if(dUserINT(PlayerName2(player1)).("LastOn")==0) { format(str, sizeof(str),"Never"); tmp2 = str;
			} else { tmp2 = dini_Get(file,"LastOn"); }
			format(str, sizeof(str),"%s was last on the server on %s",playername,tmp2);
			return SendClientMessage(playerid, red, str);
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
}

dcmd_admins(playerid,params[])
{
#pragma unused params
if(GetPlayerScore(playerid) <= 149) return SendClientMessage(playerid,red, "[ERROR]: Necesitas al menos 150 de score para usar este comando.") &&
SendClientMessage(playerid,red, "Puedes usar /solicitar para llamar a un administrador.");

new conteo, admins[2000],texto[500],titulo[128];
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(IsPlayerAdmin(i))
{
conteo++;
}
else if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][Hide] == 0)
{
conteo++;
}
}
if(conteo == 0)return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFFFFF}||{FF0000}No hay administradores online{FFFFFF}||", "{FFFFFF}Llama A Los Administradores Del Servidor\n{FF0000}www.Facebook.com/groups/GameZoneFree\n{00EEFF}www.Game-Zone.hol.es", "Salir", "");
format(titulo,128,"Admins Conectados: {FFFFFF}|| {FF0000}%d {FFFFFF}||",conteo);
//Se contaron los admins conectados
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(IsPlayerAdmin(i) && IsPlayerConnected(i))
{
//Si el player es admin RCON...
format(texto,128,"{FFFFFF}%s [ID: %d] {FF0000}[Level: Admin RCON]\n",PlayerName2(i),i);
strcat(admins,texto);
format(string2, sizeof(string2),"PELIGRO %s ESTA LOGEADO CON RCON !PELIGRO PELIGRO!", PlayerName2(playerid) );
MessageToAdmins(red,string2);
}
else if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][Hide] == 0 && AdminTemp2[i] == 0 && AdminOn[i] == 0 && IsPlayerConnected(i))
{
new TxAdm[1000];
switch(PlayerInfo[i][pAdmin])
{
case 0: TxAdm = "{FFFFFF}Normal {FF0000}|OFF|";
case 1: TxAdm = "{0D00FF}|1|Operador[A] {FF0000}|OFF|";
case 2: TxAdm = "{0D00FF}|2|Operador[I] {FF0000}|OFF|";
case 3: TxAdm = "{0D00FF}|3|Operador[M] {FF0000}|OFF|";
case 4: TxAdm = "{0D00FF}|4|Operador[P] {FF0000}|OFF|";
case 5: TxAdm = "{00FF00}|5|Game Master[A] {FF0000}|OFF|";
case 6: TxAdm = "{00FF00}|6|Game Master[I] {FF0000}|OFF|";
case 7: TxAdm = "{00FF00}|7|Game Master[G] {FF0000}|OFF|";
case 8: TxAdm = "{00FF00}|8|Game Master[P] {FF0000}|OFF|";
case 9: TxAdm = "{FF0000}|9|Co-Manager {FF0000}|OFF|";
case 10: TxAdm = "{FF0000}|10|OwnerRL {FF0000}|OFF|";
}
//Si no es RCON pero si admin normal...
format(texto,128,"{FFFFFF}%s [ID: %d] [Level: %d] %s \n",PlayerName2(i),i,PlayerInfo[i][pAdmin],TxAdm);
strcat(admins,texto);
}
else if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][Hide] == 0 && AdminTemp2[i] == 0 && AdminOn[i] == 1 && IsPlayerConnected(i))
{
new TxAdm[1000];
switch(PlayerInfo[i][pAdmin])
{
case 0: TxAdm = "{FFFFFF}Normal {FACC2E}|OFF|";
case 1: TxAdm = "{0D00FF}|1|Operador[A]{FF0000}|ON|";
case 2: TxAdm = "{0D00FF}|2|Operador[I] {FF0000}|ON|";
case 3: TxAdm = "{0D00FF}|3|Operador[M] {FF0000}|ON|";
case 4: TxAdm = "{0D00FF}|4|Operador[P] {FF0000}|ON|";
case 5: TxAdm = "{00FF00}|5|Game Master[A] {FF0000}|ON|";
case 6: TxAdm = "{00FF00}|6|Game Master[I] {FF0000}|ON|";
case 7: TxAdm = "{00FF00}|7|Game Master[G] {FF0000}|ON|";
case 8: TxAdm = "{00FF00}|8|Game Master[P] {FF0000}|ON|";
case 9: TxAdm = "{FF0000}|9|Co-Manager {FF0000}|ON|";
case 10: TxAdm = "{FF0000}|10|OwnerRL {FF0000}|ON|";
}
//Si no es RCON pero si admin normal...
format(texto,128,"{FFFFFF}%s [ID: %d] [Level: %d] %s \n",PlayerName2(i),i,PlayerInfo[i][pAdmin],TxAdm);
strcat(admins,texto);
}
else if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][Hide] == 0 && AdminTemp2[i] == 1 && AdminOn[i] == 0 && IsPlayerConnected(i))
{
new TxAdm2[10000];
switch(PlayerInfo[i][pAdmin])
{
case 1: TxAdm2 = "{0D00FF}|1|Operador[A] {FFFFFF}(Temporal.) {FF0000}|OFF|";
case 2: TxAdm2 = "{0D00FF}|2|Operador[I] {FFFFFF}(Temporal.) {FF0000}|OFF|";
case 3: TxAdm2 = "{0D00FF}|3|Operador[M] {FFFFFF}(Temporal.) {FF0000}|OFF|";
case 4: TxAdm2 = "{0D00FF}|4|Operador[P] {FFFFFF}(Temporal.) {FF0000}|OFF|";
case 5: TxAdm2 = "{00FF00}|5|Game Master[A] {FFFFFF}(Temporal.) {FF0000}|OFF|";
case 6: TxAdm2 = "{00FF00}|6|Game Master[I] {FFFFFF}(Temporal.) {FF0000}|OFF|";
case 7: TxAdm2 = "{00FF00}|7|Game Master[G] {FFFFFF}(Temporal.) {FF0000}|OFF|";
case 8: TxAdm2 = "{00FF00}|8|Game Master[P] {FFFFFF}(Temporal.) {FF0000}|OFF|";
}
//Si no es RCON pero si admin normal...
format(texto,128,"{FFFFFF}%s [ID: %d] [Level: %d] %s \n",PlayerName2(i),i,PlayerInfo[i][pAdmin],TxAdm2);
strcat(admins,texto);
}
else if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][Hide] == 0 && AdminTemp2[i] == 1 && AdminOn[i] == 1 && IsPlayerConnected(i))
{
new TxAdm2[10000];
switch(PlayerInfo[i][pAdmin])
{
case 1: TxAdm2 = "{0D00FF}|1|Operador[A] {FFFFFF}(Temporal.) {FF0000}|ON|";
case 2: TxAdm2 = "{0D00FF}|2|Operador[I] {FFFFFF}(Temporal.) {FF0000}|ON|";
case 3: TxAdm2 = "{0D00FF}|3|Operador[M] {FFFFFF}(Temporal.) {FF0000}|ON|";
case 4: TxAdm2 = "{0D00FF}|4|Operador[P] {FFFFFF}(Temporal.) {FF0000}|ON|";
case 5: TxAdm2 = "{00FF00}|5|Game Master[A] {FFFFFF}(Temporal.) {FF0000}|ON|";
case 6: TxAdm2 = "{00FF00}|6|Game Master[I] {FFFFFF}(Temporal.) {FF0000}|ON|";
case 7: TxAdm2 = "{00FF00}|7|Game Master[G] {FFFFFF}(Temporal.) {FF0000}|ON|";
case 8: TxAdm2 = "{00FF00}|8|Game Master[P] {FFFFFF}(Temporal.) {FF0000}|ON|";
}
//Si no es RCON pero si admin normal...
format(texto,128,"{FFFFFF}%s [ID: %d] [Level: %d] %s \n",PlayerName2(i),i,PlayerInfo[i][pAdmin],TxAdm2);
strcat(admins,texto);
}
}
ShowPlayerDialog(playerid,78,DIALOG_STYLE_MSGBOX,titulo,admins,"Salir","");
return 1;
}

dcmd_listavip(playerid,params[])
{
#pragma unused params
new conteo, vips[2000],texto[128],titulo[128];
for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
{
if(PlayerInfo[i][pVip] >= 1)
{
conteo++;
}
}
if(conteo == 0)return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, " {FF0000}|| Users Vips ||", "{00EEFF}No Hay {FF0000}VIPS {00EEFF}Conectados\nQuieres Ser Vip Usa {00FF00}/Cmds7", "Salir", "");
format(titulo,128,"Users Vips Conectados: {FFFFFF}|| {FF0000}%d {FFFFFF}||",conteo);
//Se contaron los vips conectados
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pVip] >= 1)
{
new Vip[50];
switch(PlayerInfo[i][pVip])
{
case 0: Vip = "{FFFFFF}Ninguno";
case 1: Vip = "{3C3214}Silver";
case 2: Vip = "{C3D5DF}Gold";
case 3: Vip = "{DFC418}Premium";
case 4: Vip = "{209193}Platinum";
case 5: Vip = "{FF0000}Esmeralda";
case 6: Vip = "{0C242E}Diamond";
case 7: Vip = "{FF0000}Extremo";
case 8: Vip = "{00FF00}Legendario";
case 9: Vip = "{FFFF00}Dios";
}
//Si el player es VIP
format(texto,128,"{FFFFFF}%s [ID: %d] [Cuenta: %s{FFFFFF}]\n",PlayerName2(i),i,Vip);
strcat(vips,texto);
}
}
ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,titulo,vips,"Salir","");
return 1;
}

dcmd_vips(playerid,params[])
{
	return dcmd_listavip(playerid,params);
}

dcmd_adminarea(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 1) {
        ResetPlayerWeapons(playerid);
        CMDMessageToAdmins(playerid,"ADMINAREA");
	    SetPlayerPos(playerid, -3523.8030,-2152.0591,4.5256);
		SetPlayerVirtualWorld(playerid, 15);
		SetPlayerTime(playerid,24,0);
		TogglePlayerControllable(playerid, false);
        SetTimerEx("Descongelar", 4000, false, "d", playerid);
		return GameTextForPlayer(playerid,"~b~Bienvenido Admin ~n~~w~Cargando objetos, espere...",4000,3);
	} else {
	   	SetPlayerHealth(playerid,1.0);
	} return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
}

dcmd_zonavip(playerid,params[]) {
 	#pragma unused params
 	if(PlayerInfo[playerid][pVip] >= 1) {
        ResetPlayerWeapons(playerid);
 	    SetPlayerPos(playerid, ZonaVip[0], ZonaVip[1], ZonaVip[2]);
 	    SetPlayerFacingAngle(playerid, ZonaVip[3]);
 	    SetPlayerInterior(playerid, ZonaVip[4]);
 	    CMDMessageToVips(playerid,"ZONAVIP");
		return GameTextForPlayer(playerid,"Bienvenido Vip",2000,3);
	} else return SendClientMessage(playerid,red,"No Seas Homosexual (gay o lesbiana), tu no eres vip");
}

dcmd_zonavip2(playerid,params[]) {
 	#pragma unused params
 	if(PlayerInfo[playerid][pVip] >= 1) {
        ResetPlayerWeapons(playerid);
 	    SetPlayerPos(playerid, -1131.4133,1057.4004,1346.4136);
 	    SetPlayerFacingAngle(playerid, 274.9136);
 	    SetPlayerInterior(playerid, 10);
 	    CMDMessageToVips(playerid,"ZONAVIP2");
		return GameTextForPlayer(playerid,"Bienvenido Vip",2000,3);
	} else return SendClientMessage(playerid,red,"No Seas Homosexual (gay o lesbiana), tu no eres vip");
}

dcmd_invisible(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][pVip] >= 1)
	{
			SetPlayerColor(playerid, 0xFFFFFF00);
			CMDMessageToVips(playerid,"INVISIBLE");
   			GameTextForPlayer(playerid, "~n~~n~~n~~n~~g~Invisible!",2500,3);
   			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
   			{
   	    		new int1 = GetPlayerInterior(playerid);
   	    		LinkVehicleToInterior(GetPlayerVehicleID(playerid),int1+1);
    		}
    		return 1;
		}
	else return  SendClientMessage(playerid,red,"Tú No Eres Player Silver");
}


dcmd_visible(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][pVip] >= 1)
	{
			SetPlayerColor(playerid, verde);
			CMDMessageToVips(playerid,"VISIBLE");
   			GameTextForPlayer(playerid, "~n~~n~~n~~n~~b~Visible!",2500,3);
   			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
   			{
   	    		new int1 = GetPlayerInterior(playerid);
   	    		LinkVehicleToInterior(GetPlayerVehicleID(playerid),int1);
   			}
   			return 1;
		}
	else return  SendClientMessage(playerid,red,"Tú No Eres Player Silver");
}

dcmd_autostun(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][pVip] >= 1)
	{
	    ShowPlayerDialog(playerid, AutosTuning, DIALOG_STYLE_LIST, "Autos Tuneados para Vip", "Auto 1\nAuto 2\nAuto 3\nAuto 4\nAuto 5\nAuto 6\nAuto 7\nAuto 8\nAuto 9\nAuto 10\nAuto 11\nAuto 12\nAuto 13", "Seleccionar","Cancelar");
	    CMDMessageToVips(playerid,"AUTOSTUN");
	} else SendClientMessage(playerid, red,"Tú No Eres Player Silver");
	return 1;
}

dcmd_autosrc(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][pVip] >= 1)
	{
	    CMDMessageToVips(playerid,"AUTOSRC");
	    ShowPlayerDialog(playerid, AutosRC, DIALOG_STYLE_LIST, "Autos RC para Vip", "Bandit\nRaider\nGoblin\nTiger\nCam", "Seleccionar","Cancelar");
	} else SendClientMessage(playerid, red,"Tú No Eres Player Silver");
	return 1;
}

dcmd_vflip(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][pVip] >= 2) {
		    if(IsPlayerInAnyVehicle(playerid)) {
		    if(SAuto == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}El comando fue desactivado por un Administrador");
			new VehicleID, Float:X, Float:Y, Float:Z, Float:Angle; GetPlayerPos(playerid, X, Y, Z); VehicleID = GetPlayerVehicleID(playerid);
			GetVehicleZAngle(VehicleID, Angle);	SetVehiclePos(VehicleID, X, Y, Z); SetVehicleZAngle(VehicleID, Angle);
			CMDMessageToVips(playerid,"VFLIP"); return SendClientMessage(playerid, blue,"Vehículo Enderezado.");
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No estás en un vehiculo.");

	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Player GOLD Para Usar Este Comando");
}

dcmd_porno(playerid,params[]) {
 	#pragma unused params
 	if(PlayerInfo[playerid][pVip] >= 2) {
        ResetPlayerWeapons(playerid);
 	    CMDMessageToVips(playerid,"PORNO");
 	    SetPlayerPos(playerid,749.0486,1439.3495,1102.9531);
 	    SetPlayerFacingAngle(playerid,1.9035);
 	    SetPlayerInterior(playerid,6);
 	    SendClientMessage(playerid,0x3333ffff,"¿Eres Mayor Verdad?");
		return GameTextForPlayer(playerid,"~w~No Me Demandes",3000,3);
	} else return SendClientMessage(playerid,red,"No Seas Homosexual (gay o lesbiana), tu no eres GOLD");
}

dcmd_bici(playerid,params[]) {
    #pragma unused params
        if(PlayerInfo[playerid][pVip] >= 2)
        {
        if(SaltosBici[playerid] > 0)
                {
                        SaltosBici[playerid] = 0;
                        SendClientMessage(playerid,COLOR_YELLOW,"Super saltos en bici desactivado.");
                }
                else
                {
                        SaltosBici[playerid] = 1;
                        SendClientMessage(playerid,COLOR_YELLOW,"Super saltos en bici activado. Usa /bici para desactivarlo.");
                }
                }
                else {
                SendClientMessage(playerid,COLOR_red,"Usted No Es Un Player GOLD o PREMIUM.");
                }
        return 1;
        }

dcmd_vida(playerid,params[]) {
    #pragma unused params
        if(Listo(playerid)) return SendClientMessage(playerid,COLOR_red,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
        if(PlayerInfo[playerid][pVip] >= 3)
        {
        CMDMessageToVips(playerid,"VIDA");
        SetPlayerHealth(playerid,100);
        SendClientMessage(playerid,COLOR_red,"Se Restauró Vida.");
        SendClientMessage(playerid,COLOR_YELLOW,"Ahora debes esperar 5 minutos para usar otro comando Premium.");
        UsarCMD[playerid]=GetTickCount();
        }
        else {
        SendClientMessage(playerid,COLOR_red,"Usted No Es Un Player PREMIUM.");
        }
		return 1;
		}

dcmd_chaleco(playerid,params[]) {
    #pragma unused params
        if(Listo(playerid)) return SendClientMessage(playerid,COLOR_red,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
        if(PlayerInfo[playerid][pVip] >= 3)
        {
        SetPlayerArmour(playerid,100);
        SendClientMessage(playerid,COLOR_red,"Se Restauró Armadura.");
        SendClientMessage(playerid,COLOR_YELLOW,"Ahora debes esperar 5 minutos para usar otro comando Premium.");
        CMDMessageToVips(playerid,"CHALECO");
		UsarCMD[playerid]=GetTickCount();
        }
        else {
        SendClientMessage(playerid,COLOR_red,"Usted No Es Un Player PREMIUM.");
        }
		return 1;
		}
		
dcmd_vjetpack(playerid,params[]) {
    #pragma unused params
        if(Listo(playerid)) return SendClientMessage(playerid,COLOR_red,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
        if(PlayerInfo[playerid][pVip] >= 3)
        {
        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
        SendClientMessage(playerid,COLOR_YELLOW,"Ahora debes esperar 5 minutos para usar otro comando Premium.");
        CMDMessageToVips(playerid,"VJETPACK");
        UsarCMD[playerid]=GetTickCount();
        }
        else {
        SendClientMessage(playerid,COLOR_red,"Usted No Es Un Player PREMIUM.");
        }
		return 1;
		}

dcmd_vscreen(playerid,params[]) {
	if(PlayerInfo[playerid][pVip] >= 4) {
	    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /vscreen [playerid] [texto]") &&
		SendClientMessage(playerid, orange, "[Función]: Mandas un Anuncio en la Pantalla a Especificado Jugador!");
    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
		player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][pAdmin] != ServerInfo[MaxAdminLevel]) ) {
			GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
			CMDMessageToVips(playerid,"VSCREEN");
			format(string2,sizeof(string2),"El player Vip %s te ha enviado un mensaje de pantalla",adminname);	SendClientMessage(player1,ColorAdmin,string2);
			format(string2,sizeof(string2),"Tú has enviado a %s un mensaje de pantalla (%s)", playername, params[2]); SendClientMessage(playerid,ColorAdmin,string2);

			if(PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel])
			{
			format(string2, sizeof(string2), "|-%s[%d] envió a %s[%d] : %s", adminname, playerid, playername, player1, params[2]);
  			for (new b = 0; b < MAX_PLAYERS; b++)
			if(IsPlayerConnected(b) && (PlayerInfo[b][pAdmin] >= 3) && b != playerid)
			SendClientMessage(b, lightblue, string2);
			}

			return GameTextForPlayer(player1, EStexto(params[2]),4000,3);
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No eres Platinum para usar este comando.");
}

dcmd_traeradmins(playerid,params[]) {
#pragma unused params
if(PlayerInfo[playerid][pAdmin] <= 10) {
CMDMessageToAdmins(playerid,"TRAERADMINS");
new Float:x,Float:y,Float:z, interior = GetPlayerInterior(playerid);
GetPlayerPos(playerid,x,y,z);
for(new i = 0; i < MAX_PLAYERS; i++) {
if(IsPlayerConnected(i)) {
if(PlayerInfo[i][pAdmin] >= 1) {
SetPlayerPos(i,x+(playerid/4)+1,y+(playerid/4),z); SetPlayerInterior(i,interior);
PlayerPlaySound(i,1057,0.0,0.0,0.0);
}
}
}
format(string2,sizeof(string2),"El Administrador \"%s\" Ha Traido a Todos los Administradores/Operadores a su posición", pName(playerid) );
return SendClientMessageToAll(blue, string2);
	} else return SendClientMessage(playerid,red,"ERROR: Tu Necesitas Lvl 10 Para Usar Este Comando");
}

dcmd_darnitro(playerid, params[])
{
   	if(PlayerInfo[playerid][pAdmin] >= 2)
          {
    new id;
    if(sscanf(params, "u", id))return SendClientMessage(playerid, green, "Usa: /DarNitro [playerid]");
    if(IsPlayerConnected(id))
		{
  			if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "ID invalida");
		    AddVehicleComponent(GetPlayerVehicleID(id), 1010); // Nitro
    		SendClientMessage(id, 0xFF4500AA, "Nitro agregado a tu vehiculo");
    		CMDMessageToAdmins(playerid,"DARNITRO");
   			return GameTextForPlayer(id,"~b~+Nitro ~w~By admin",3000,1);
	    }
		else return  SendClientMessage(playerid, red, "Jugador no conectado");
	}
	else return SendClientMessage(playerid, red, "* Nesecitas nivel 2 para este comando");
}

dcmd_pais(playerid,params[]) {
	 new
	    IPA[16];
        new player1;
	    if(!strlen(params)) player1 = playerid;
	    else player1 = strval(params);
        if(IsPlayerConnected(player1)) {
	    GetPlayerIp(player1, IPA, sizeof IPA);
	    format(string2, sizeof string2, "* Nick: %s  \n\n* País: {277DFD}%s", pName(player1), IpToCountry_db(IPA));
	    ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{ffb800}|| País ||", string2, "OK", "");
	    } else return SendClientMessage(playerid, red, "Jugador no conectado");

	return 1;
	 }
	 
dcmd_vidaychaleco(playerid,params[]) {
    #pragma unused params
        if(Listo(playerid)) return SendClientMessage(playerid,COLOR_red,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
        if(PlayerInfo[playerid][pVip] >= 6)
        {
        CMDMessageToVips(playerid,"VIDAYCHALECO");
        SetPlayerHealth(playerid,100);
        SetPlayerArmour(playerid,100);
        SendClientMessage(playerid,COLOR_red,"Se Restauró Vida y Chaleco.");
        SendClientMessage(playerid,COLOR_YELLOW,"Ahora debes esperar 5 minutos para usar este comando.");
        UsarCMD[playerid]=GetTickCount();
        }
        else {
        SendClientMessage(playerid,COLOR_red,"Usted No Es Un Player Platinum.");
        }
		return 1;
		}

dcmd_vcar(playerid,params[]) {
	if(PlayerInfo[playerid][pVip] >= 6) {
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
	    if(!strlen(tmp)) return SendClientMessage(playerid, red, "[USA]: /vcar [modelo/nombre] [color1] [color2]") &&
   	    SendClientMessage(playerid, orange, "[Función]: Respawnea un Vehículo!");
		new car, colour1, colour2;
   		if(!IsNumeric(tmp)) car = GetVehicleModelIDFromName(tmp); else car = strval(tmp);
		if(car < 400 || car > 611) return  SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Modelo de vehículo inválido");
		if(!strlen(tmp2)) colour1 = random(126); else colour1 = strval(tmp2);
		if(!strlen(tmp3)) colour2 = random(126); else colour2 = strval(tmp3);
		if(PlayerInfo[playerid][pCar] != -1 && !IsPlayerAdmin(playerid) ) CarDeleter(PlayerInfo[playerid][pCar]);
  		new LVehicleID,Float:X,Float:Y,Float:Z, Float:Angle,int1;	GetPlayerPos(playerid, X,Y,Z);	GetPlayerFacingAngle(playerid,Angle);   int1 = GetPlayerInterior(playerid);
		if(car == 537 || car == 538)
		{
		LVehicleID = AddStaticVehicle(car, X+3, Y, Z, Angle, colour1, colour2);
		}
		else
		{
		LVehicleID = CreateVehicle(car, X+3, Y, Z, Angle, colour1, colour2, -1);
		}
		SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleID,int1);
		SetVehicleNumberPlate(LVehicleID, "RL 2015");
		PlayerInfo[playerid][pCar] = LVehicleID;
		CMDMessageToVips(playerid,"VCAR");
		format(string2, sizeof(string2), "%s ha aparecido un \"%s\" (Modelo:%d) color (%d, %d), el %0.2f, %0.2f, %0.2f", pName(playerid), VehicleNames[car-400], car, colour1, colour2, X, Y, Z);
        SaveToFile("CarSpawns",string2);
		format(string2, sizeof(string2), "Has aparecido un \"%s\" (Modelo:%d) color (%d, %d)", VehicleNames[car-400], car, colour1, colour2);
		return SendClientMessage(playerid,lightblue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Diamond para usar este comando");
}

dcmd_vtransf(playerid,params[]) {
	if(PlayerInfo[playerid][pVip] >= 5) {
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
	    if(!strlen(tmp)) return SendClientMessage(playerid, red, "[USA]: /vtransf Bullet [color1] [color2]") &&
   	    SendClientMessage(playerid, orange, "[Función]: Respawnea al Bumblebee!");
		new car, colour1, colour2;
   		if(!IsNumeric(tmp)) car = GetVehicleModelIDFromName(tmp); else car = strval(tmp);
		if(car < 400 || car > 611) return  SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Modelo de vehículo inválido");
		if(!strlen(tmp2)) colour1 = random(126); else colour1 = strval(tmp2);
		if(!strlen(tmp3)) colour2 = random(126); else colour2 = strval(tmp3);
		if(PlayerInfo[playerid][pCar] != -1 && !IsPlayerAdmin(playerid) ) CarDeleter(PlayerInfo[playerid][pCar]);
  		new LVehicleID,Float:X,Float:Y,Float:Z, Float:Angle,int1;	GetPlayerPos(playerid, X,Y,Z);	GetPlayerFacingAngle(playerid,Angle);   int1 = GetPlayerInterior(playerid);
		if(car == 537 || car == 538)
		{
		bumblebee = AddStaticVehicle(car, X+3, Y, Z, Angle, colour1, colour2);
		}
		else
		{
		bumblebee = CreateVehicle(car, X+3, Y, Z, Angle, colour1, colour2, -1);
		}
		SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleID,int1);
		SetVehicleNumberPlate(LVehicleID, "RL 2015");
		PlayerInfo[playerid][pCar] = LVehicleID;
		CMDMessageToVips(playerid,"VTRANSF");
 		format(string2, sizeof(string2), "%s ha aparecido un \"%s\" (Modelo:%d) color (%d, %d), el %0.2f, %0.2f, %0.2f", pName(playerid), VehicleNames[car-400], car, colour1, colour2, X, Y, Z);
        SaveToFile("CarSpawns",string2);
		format(string2, sizeof(string2), "Has aparecido un \"%s\" (Modelo:%d) color (%d, %d)", VehicleNames[car-400], car, colour1, colour2);
		return SendClientMessage(playerid,lightblue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Diamond para usar este comando");
}

/*dcmd_vtransf(playerid,params[]) {
	if(PlayerInfo[playerid][pVip] >= 5) {
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
	    if(!strlen(tmp)) return SendClientMessage(playerid, red, "[USA]: /vtransf Linerunner [color1] [color2]") &&
   	    SendClientMessage(playerid, orange, "[Función]: Respawnea al Optimus Prime!");
		new car, colour1, colour2;
   		if(!IsNumeric(tmp)) car = GetVehicleModelIDFromName(tmp); else car = strval(tmp);
		if(car < 400 || car > 611) return  SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Modelo de vehículo inválido");
		if(!strlen(tmp2)) colour1 = random(126); else colour1 = strval(tmp2);
		if(!strlen(tmp3)) colour2 = random(126); else colour2 = strval(tmp3);
		if(PlayerInfo[playerid][pCar] != -1 && !IsPlayerAdmin(playerid) ) CarDeleter(PlayerInfo[playerid][pCar]);
  		new LVehicleID,Float:X,Float:Y,Float:Z, Float:Angle,int1;	GetPlayerPos(playerid, X,Y,Z);	GetPlayerFacingAngle(playerid,Angle);   int1 = GetPlayerInterior(playerid);
		if(car == 537 || car == 538)
		{
		optimusprime = AddStaticVehicle(car, X+3, Y, Z, Angle, colour1, colour2);
		}
		else
		{
		optimusprime = CreateVehicle(car, X+3, Y, Z, Angle, colour1, colour2, -1);
		}
		SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleID,int1);
		SetVehicleNumberPlate(LVehicleID, "RL 2015");
		PlayerInfo[playerid][pCar] = LVehicleID;
		CMDMessageToVips(playerid,"VTRANSF");
		format(string2, sizeof(string2), "%s ha aparecido un \"%s\" (Modelo:%d) color (%d, %d), el %0.2f, %0.2f, %0.2f", pName(playerid), VehicleNames[car-400], car, colour1, colour2, X, Y, Z);
        SaveToFile("CarSpawns",string2);
		format(string2, sizeof(string2), "Has aparecido un \"%s\" (Modelo:%d) color (%d, %d)", VehicleNames[car-400], car, colour1, colour2);
		return SendClientMessage(playerid,lightblue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Diamond para usar este comando");
}

dcmd_vtransf3(playerid,params[]) {
	if(PlayerInfo[playerid][pVip] >= 5) {
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
	    if(!strlen(tmp)) return SendClientMessage(playerid, red, "[USA]: /vtransf3 Monster [color1] [color2]") &&
   	    SendClientMessage(playerid, orange, "[Función]: Respawnea al Jazz!");
		new car, colour1, colour2;
   		if(!IsNumeric(tmp)) car = GetVehicleModelIDFromName(tmp); else car = strval(tmp);
		if(car < 400 || car > 611) return  SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Modelo de vehículo inválido");
		if(!strlen(tmp2)) colour1 = random(126); else colour1 = strval(tmp2);
		if(!strlen(tmp3)) colour2 = random(126); else colour2 = strval(tmp3);
		if(PlayerInfo[playerid][pCar] != -1 && !IsPlayerAdmin(playerid) ) CarDeleter(PlayerInfo[playerid][pCar]);
  		new LVehicleID,Float:X,Float:Y,Float:Z, Float:Angle,int1;	GetPlayerPos(playerid, X,Y,Z);	GetPlayerFacingAngle(playerid,Angle);   int1 = GetPlayerInterior(playerid);
		if(car == 537 || car == 538)
		{
		jazz = AddStaticVehicle(car, X+3, Y, Z, Angle, colour1, colour2);
		}
		else
		{
		jazz = CreateVehicle(car, X+3, Y, Z, Angle, colour1, colour2, -1);
		}
		SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleID,int1);
		SetVehicleNumberPlate(LVehicleID, "RL 2015");
		PlayerInfo[playerid][pCar] = LVehicleID;
		CMDMessageToVips(playerid,"VTRANSF3");
		format(string2, sizeof(string2), "%s ha aparecido un \"%s\" (Modelo:%d) color (%d, %d), el %0.2f, %0.2f, %0.2f", pName(playerid), VehicleNames[car-400], car, colour1, colour2, X, Y, Z);
        SaveToFile("CarSpawns",string2);
		format(string2, sizeof(string2), "Has aparecido un \"%s\" (Modelo:%d) color (%d, %d)", VehicleNames[car-400], car, colour1, colour2);
		return SendClientMessage(playerid,lightblue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Diamond para usar este comando");
}

dcmd_vtransf4(playerid,params[]) {
	if(PlayerInfo[playerid][pVip] >= 5) {
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
	    if(!strlen(tmp)) return SendClientMessage(playerid, red, "[USA]: /vtransf4 Patriot [color1] [color2]") &&
   	    SendClientMessage(playerid, orange, "[Función]: Respawnea al Ratchet!");
		new car, colour1, colour2;
   		if(!IsNumeric(tmp)) car = GetVehicleModelIDFromName(tmp); else car = strval(tmp);
		if(car < 400 || car > 611) return  SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Modelo de vehículo inválido");
		if(!strlen(tmp2)) colour1 = random(126); else colour1 = strval(tmp2);
		if(!strlen(tmp3)) colour2 = random(126); else colour2 = strval(tmp3);
		if(PlayerInfo[playerid][pCar] != -1 && !IsPlayerAdmin(playerid) ) CarDeleter(PlayerInfo[playerid][pCar]);
  		new LVehicleID,Float:X,Float:Y,Float:Z, Float:Angle,int1;	GetPlayerPos(playerid, X,Y,Z);	GetPlayerFacingAngle(playerid,Angle);   int1 = GetPlayerInterior(playerid);
		if(car == 537 || car == 538)
		{
		ratchet = AddStaticVehicle(car, X+3, Y, Z, Angle, colour1, colour2);
		}
		else
		{
		ratchet = CreateVehicle(car, X+3, Y, Z, Angle, colour1, colour2, -1);
		}
		SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleID,int1);
		SetVehicleNumberPlate(LVehicleID, "RL 2015");
		PlayerInfo[playerid][pCar] = LVehicleID;
		CMDMessageToVips(playerid,"VTRANSF4");
		format(string2, sizeof(string2), "%s ha aparecido un \"%s\" (Modelo:%d) color (%d, %d), el %0.2f, %0.2f, %0.2f", pName(playerid), VehicleNames[car-400], car, colour1, colour2, X, Y, Z);
        SaveToFile("CarSpawns",string2);
		format(string2, sizeof(string2), "Has aparecido un \"%s\" (Modelo:%d) color (%d, %d)", VehicleNames[car-400], car, colour1, colour2);
		return SendClientMessage(playerid,lightblue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Diamond para usar este comando");
}

dcmd_vtransf5(playerid,params[]) {
	if(PlayerInfo[playerid][pVip] >= 5) {
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
	    if(!strlen(tmp)) return SendClientMessage(playerid, red, "[USA]: /vtransf5 Banshee [color1] [color2]") &&
   	    SendClientMessage(playerid, orange, "[Función]: Respawnea al Ironhide!");
		new car, colour1, colour2;
   		if(!IsNumeric(tmp)) car = GetVehicleModelIDFromName(tmp); else car = strval(tmp);
		if(car < 400 || car > 611) return  SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Modelo de vehículo inválido");
		if(!strlen(tmp2)) colour1 = random(126); else colour1 = strval(tmp2);
		if(!strlen(tmp3)) colour2 = random(126); else colour2 = strval(tmp3);
		if(PlayerInfo[playerid][pCar] != -1 && !IsPlayerAdmin(playerid) ) CarDeleter(PlayerInfo[playerid][pCar]);
  		new LVehicleID,Float:X,Float:Y,Float:Z, Float:Angle,int1;	GetPlayerPos(playerid, X,Y,Z);	GetPlayerFacingAngle(playerid,Angle);   int1 = GetPlayerInterior(playerid);
		if(car == 537 || car == 538)
		{
		ironhide = AddStaticVehicle(car, X+3, Y, Z, Angle, colour1, colour2);
		}
		else
		{
		ironhide = CreateVehicle(car, X+3, Y, Z, Angle, colour1, colour2, -1);
		}
		SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleID,int1);
		SetVehicleNumberPlate(LVehicleID, "RL 2015");
		PlayerInfo[playerid][pCar] = LVehicleID;
		CMDMessageToVips(playerid,"VTRANSF5");
		format(string2, sizeof(string2), "%s ha aparecido un \"%s\" (Modelo:%d) color (%d, %d), el %0.2f, %0.2f, %0.2f", pName(playerid), VehicleNames[car-400], car, colour1, colour2, X, Y, Z);
        SaveToFile("CarSpawns",string2);
		format(string2, sizeof(string2), "Has aparecido un \"%s\" (Modelo:%d) color (%d, %d)", VehicleNames[car-400], car, colour1, colour2);
		return SendClientMessage(playerid,lightblue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Diamond para usar este comando");
}*/

dcmd_vspec(playerid,params[]) {
    if(PlayerInfo[playerid][pVip] >= 6) {
	    if(!strlen(params) || !IsNumeric(params)) return SendClientMessage(playerid, red, "[USA]: /vspec [playerid]") &&
		SendClientMessage(playerid, orange, "[Función]: Vigilar a Especificado Jugador!");
		new specplayerid = strval(params);
		if(PlayerInfo[specplayerid][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un Admin");
        if(IsPlayerConnected(specplayerid) && specplayerid != INVALID_PLAYER_ID) {
			if(specplayerid == playerid) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes vigilarte a ti mismo");
			if(GetPlayerState(specplayerid) == PLAYER_STATE_SPECTATING && PlayerInfo[specplayerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El Player está Spectenado");
			if(GetPlayerState(specplayerid) != 1 && GetPlayerState(specplayerid) != 2 && GetPlayerState(specplayerid) != 3) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Player no Spawneado");
			if( (PlayerInfo[specplayerid][pAdmin] != ServerInfo[MaxAdminLevel]) || (PlayerInfo[specplayerid][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] == ServerInfo[MaxAdminLevel]) )	{
				StartSpectate(playerid, specplayerid);
				CMDMessageToVips(playerid,"VSPEC");
				GetPlayerPos(playerid,Pos[playerid][0],Pos[playerid][1],Pos[playerid][2]);
				GetPlayerFacingAngle(playerid,Pos[playerid][3]);
				return SendClientMessage(playerid,ColorAdmin,"Vigilando...");
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes vigilar a un Administrador de este nivel");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El player no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Diamond para usar este comando");
}

dcmd_vspecoff(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][pVip] >= 6) {
        if(PlayerInfo[playerid][SpecType] != ADMIN_SPEC_TYPE_NONE) {
			StopSpectate(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			CMDMessageToVips(playerid,"VSPECOFF");
			return SendClientMessage(playerid,ColorAdmin,"Ya no estás spectando");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted no está spectando");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Diamond para usar este comando");
}

dcmd_anunciovip(playerid,params[]) {
    if(UsoAnuncio[playerid] == 1) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Tienes que esperar 5 minutos para volver a usar este comando!");
    if(PlayerInfo[playerid][pVip] >= 7)
 	{
 	if(!strlen(params)) return SendClientMessage(playerid,red,"[USO]: /AnuncioVip [texto]") &&
     SendClientMessage(playerid, orange, "[Función]: Muestra Un Anuncio en la Pantalla a Todos!");
	if(strfind(params, "/q", true) != -1 || strfind(params, " /q", true) != -1 || strfind(params, "/q ", true) != -1)
  	{
		SendClientMessage(playerid, red, "[INFO]: {FFFFFF}No intentes Trollear a los Users! [Castigo: 5 Min. Mute]");
		SetTimerEx("FinCastigo", 300000, 0, "i", playerid);
		NoChat[playerid] = 1;
		UsarCMD[playerid]=GetTickCount();
		return 0;
	}
    new admin1[MAX_PLAYER_NAME];
    GetPlayerName(playerid, admin1, sizeof(admin1));
    format(string2, sizeof(string2), "~g~VIP ~n~~w~%s",admin1);
	TextDrawSetString(ByNickAnn,string2);
 	TextDrawShowForAll(ByNickAnn);
    format(string2, sizeof(string2), "_");
    TextDrawSetString(ByNickAnn1,string2);
	TextDrawShowForAll(ByNickAnn1);
    SetTimer("TimeNickAnn", 6000, false);
    SetTimer("TimeNickAnn1", 6000, false);
	CMDMessageToVips(playerid,"ANUNCIOVIP");
    UsoAnuncio[playerid] = 1;
    SetTimerEx("VolverAnuncio", 300000, 0, "i", playerid);
    SendClientMessage(playerid, orange, "[INFO]: {FFFFFF}Puedes volver a usar este comando en 5 minutos!");
	return GameTextForAll(params,6000,3);
    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Nesesitas ser Vip Extremo para usar este comando!");
}

/*dcmd_vwarn(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
    new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
	if(PlayerInfo[playerid][pVip] >= 8)
	{
	if(Usarvwarn == 1)
	{
     new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "[USA]: /vwarn [playerid] [Razón]") &&
		SendClientMessage(playerid, orange, "[Función]: Le das una Advertencia a Especificado Jugador!");
	    if(!strlen(tmp2)) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Debes dar una razón para advertir a este player");
    	new warned = strval(tmp), str[1000];
		if(PlayerInfo[warned][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes dar warn a este player por su nivel Administrativo");
	 	if(IsPlayerConnected(warned) && warned != INVALID_PLAYER_ID) {
 	    	if(warned != playerid) {
 	    	if(!strcmp("[StaffRL]Renato._",pName(warned),true) || !strcmp("[PFP]Scarface(Jefe)",pName(warned),true) || !strcmp("Sr.[F]ran",pName(warned),true)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No puedes Advertir a los dueños!");
				PlayerInfo[warned][Warnings]++;
				if(PlayerInfo[warned][Warnings] == MAX_WARNINGS && PlayerInfo[warned][Kicks] == 5)
				{
					format(str, sizeof (str), "[INFO]: {FFFFFF}\"%s\" Ha sido Baneado por el Player Vip \"%s\" [Razón: %s] [Adv.: 3/3] [Kicks: %d/6]", pName(warned), pName(playerid), params[1+strlen(tmp)], MAX_KICKS);
					SendClientMessageToAll(red, str);
					SaveToFile("KickLog",str);
					SetTimerEx("BanearPlayer", 50, 0, "i", warned);
					PlayerInfo[warned][Warnings] = 0;
					PlayerInfo[warned][Kicks] = 0;
                	dUserSetINT(PlayerName2(warned)).("Warns",PlayerInfo[warned][Warnings]);
   	                dUserSetINT(PlayerName2(warned)).("Kicks",PlayerInfo[warned][Kicks]);
                    return 1;
				}
				if(PlayerInfo[warned][Warnings] == MAX_WARNINGS)
				{
					PlayerInfo[warned][Kicks]++;
					format(str, sizeof (str),"[INFO]: {FFFFFF}\"%s\" Ha sido Kickeado por el Player Vip \"%s\" [Razón: %s] [Adv.: %d/3] [Kicks: %d/6]", pName(warned), pName(playerid), params[1+strlen(tmp)], PlayerInfo[warned][Warnings], PlayerInfo[warned][Kicks]);
					SendClientMessageToAll(red, str);
					SaveToFile("KickLog",str);
					SetTimerEx("KickearPlayer", 50, 0, "i", warned);
					PlayerInfo[warned][Warnings] = 0;
                 	dUserSetINT(PlayerName2(warned)).("Warns",PlayerInfo[warned][Warnings]);
   	                dUserSetINT(PlayerName2(warned)).("Kicks",PlayerInfo[warned][Kicks]);
                    return 1;
				}
				else
				{
					format(str, sizeof (str), "[INFO]: El Player Vip \"%s\" advierte ha \"%s\" [Razón: %s] [Adv.: %d/%d]", pName(playerid), pName(warned), params[1+strlen(tmp)], PlayerInfo[warned][Warnings], MAX_WARNINGS);
					return SendClientMessageToAll(yellow, str);
				}
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes darte advertencias a ti");
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El Comando fue Desactivado por un Admistrador!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Vip Legendario para usar este cmd!");
	} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está logeado.");
}

dcmd_vquitarwarn(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
    new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
	if(Usarvwarn == 1)
	{
     new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "[USA]: /vquitarwarn [playerid] [Razón]") &&
		SendClientMessage(playerid, orange, "[Función]: Le Quitas Una Advertencia a un Jugador Específico!");
	    if(!strlen(tmp2)) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Debes dar una razón para quitarle las advertencias a este player");
    	new warned = strval(tmp), str[210];
		if(PlayerInfo[warned][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes quitarwarn a este player por su nivel Administrativo");
	 	if(IsPlayerConnected(warned) && warned != INVALID_PLAYER_ID) {
 	    	if(warned != playerid) {
				if(PlayerInfo[warned][Warnings] < 1) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No le puedes sacar mas advertencias al player!");
				PlayerInfo[warned][Warnings]--;
				if(PlayerInfo[warned][Warnings] == MAX_WARNINGS)
				{
					format(str, sizeof (str), "[INFO]: El Player Vip \"%s\" Ha Kickeado a \"%s\"  [Razón: %s] [Adv.: %d/%d] **", pName(playerid), pName(warned), params[1+strlen(tmp)], PlayerInfo[warned][Warnings], MAX_WARNINGS);
					SendClientMessageToAll(red, str);
					format(str,sizeof(str),"{FFFFFF} Has sido Kickeado del Servidor \npor el Admin {0794FF}%s \n\n{FF0000}Razón: {FFFFFF}%s \n\n{09FF00}Si crees que fué un error o injusto \ntoma una captura con F8", pName(playerid), params[1+strlen(tmp)]);
                    ShowPlayerDialog(warned, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Revolucion Latina", str, "Aceptar", "") ;
					SaveToFile("KickLog",str);	SetTimerEx("KickearPlayer", 50, 0, "i", warned);
					PlayerInfo[warned][Warnings] = 0;
                    return 1;
					} else {
					format(str, sizeof (str), "[INFO]: El Player Vip \"%s\" Le Ha Quitado una Advertencia a \"%s\"  [Razón: %s] [Adv.: %d/%d] **", pName(playerid), pName(warned), params[1+strlen(tmp)], PlayerInfo[warned][Warnings], MAX_WARNINGS);
					return SendClientMessageToAll(yellow, str);
				}
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes quitarte las advertencias a ti mismo");
		} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El Comando fue Desactivado por un Admistrador!");
	} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El jugador no está logeado.");
}
*/
dcmd_vgod(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pVip] >= 9) {
    	if(PlayerInfo[playerid][God] == 0)	{
   	    	PlayerInfo[playerid][God] = 1;
    	    SetPlayerHealth(playerid,100000);
    	    ResetPlayerWeapons(playerid);
           	SendClientMessage(playerid,green,"VGODMODE ACTIVADO");
			return CMDMessageToVips(playerid,"VGOD");
		} else {
   	        PlayerInfo[playerid][God] = 0;
       	    SendClientMessage(playerid,red,"GODMODE DESACTIVADO");
        	SetPlayerHealth(playerid, 100);
		} return CMDMessageToVips(playerid,"VGOD (Off)");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Vip Dios para usar este comando!");
}

dcmd_vgoto(playerid,params[]) {
    if(PlayerInfo[playerid][pVip] >= 9) {
	    if(!strlen(params)) return SendClientMessage(playerid,red,"[USA]: /vgoto [jugador]") &&
		SendClientMessage(playerid, orange, "[Función]: Te teletransporta a Especificado Jugador!");
	    new player1;
		if(!IsNumeric(params)) player1 = ReturnPlayerID(params);
	   	else player1 = strval(params);
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToVips(playerid,"VGOTO");
			new Float:x, Float:y, Float:z;	GetPlayerPos(player1,x,y,z); SetPlayerInterior(playerid,GetPlayerInterior(player1));
			SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(player1));
			if(GetPlayerState(playerid) == 2) {
				SetVehiclePos(GetPlayerVehicleID(playerid),x+3,y,z);	LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(player1));
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),GetPlayerVirtualWorld(player1));
			} else SetPlayerPos(playerid,x+2,y,z);
			format(string2,sizeof(string2),"¡Info!: Has sido transportado hacia \"%s\"", pName(player1));
			new strcmd[500]; format(strcmd,sizeof(strcmd),"|INFO|: %s uso vgoto hacia %s",pName(playerid),pName(player1)); printf(strcmd);
			return SendClientMessage(playerid,ColorAdmin,string2);
		} else return SendClientMessage(playerid, red, "¡Error!: {FFFFFF}El jugador no está conectado o eres tú mismo!");
	} else return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}Necesitas ser VIP DIOS para Usar este Comando!");
}

dcmd_darlevel(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
        new pame[MAX_PLAYER_NAME];
    	GetPlayerName(playerid, pame, sizeof(pame));
		if(PlayerInfo[playerid][pAdmin] >= 9 || !strcmp("Sr.[F]ran",pame,true) || !strcmp("[PFP]Scarface(Jefe)",pame,true) || !strcmp("Carlosxp",pame,true) || !strcmp("[StaffRL]Renato._",pame,true)) {
   			if(!strcmp("[STAFF]a[X]one12",pame,true)) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}La cuenta del Soporte no puede mas Bajar o Subir Admin.");
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /darlevel [playerid] [level]") &&
            SendClientMessage(playerid, orange, "[Función]: ¡Establece un Nivel de administrador a un especificado Jugador!");
	    	new player1, level, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "[USA]: /darlevel [playerid] [level]") &&
		    SendClientMessage(playerid, orange, "[Función]: Establece un Nivel Admin a Especificado Jugador!");
			level = strval(tmp2);

			if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if(PlayerInfo[player1][LoggedIn] == 1) {
					if(level > ServerInfo[MaxAdminLevel] ) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Nivel incorrecto");
					if(level == PlayerInfo[player1][pAdmin]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El Player ya tiene este level");
	       			CMDMessageToAdmins(playerid,"DARLEVEL (Admin)");
					GetPlayerName(player1, playername, sizeof(playername));	GetPlayerName(playerid, adminname, sizeof(adminname));
			       	new year,month,day;   getdate(year, month, day); new hour,minute,second; gettime(hour,minute,second);

					if(level > 0) format(string2,sizeof(string2),"[INFO]:{FFFFFF} El Administrador %s te ha dado admin {29FF0D}[level %d]",adminname, level);
					else format(string2,sizeof(string2),"[INFO]:{FFFFFF} El Administrador {FF0000}%s{FFFFFF} te ha bajado de nivel de admin {29FF0D}[level %d]",adminname, level);
					SendClientMessage(player1,ColorAdmin,string2);

					if(level > PlayerInfo[player1][pAdmin]) GameTextForPlayer(player1,"~w~Promovido a admin ~n~~g~permanente", 6000, 3);
					else GameTextForPlayer(player1,"~w~Degradado del admin ~n~~r~permanente", 6000, 3);

					format(string2,sizeof(string2),"[INFO]:{FFFFFF} Tú has hecho a {FF0000}%s{FFFFFF} nivel {29FF0D}%d{FFFFFF} el {29FF0D}%d/%d/%d a las %d:%d:%d", playername, level, day, month, year, hour, minute, second); SendClientMessage(playerid,red,string2);
					format(string2,sizeof(string2),"[INFO]:{FFFFFF}El Administrador {FF0000}%s{FFFFFF} a hecho Admin Perm a {FF0000}%s{FFFFFF} nivel {29FF0D}%d{FFFFFF} el {29FF0D}%d/%d/%d a las %d:%d:%d",adminname, playername, level, day, month, year, hour, minute, second);
					SaveToFile("AdminLog",string2);
					format(string2,sizeof(string2),"[INFO]:{FFFFFF}El Administrador {FF0000}%s{FFFFFF} a hecho Admin Perm a {FF0000}%s{FFFFFF} nivel {29FF0D}%d{FFFFFF} el {29FF0D}%d/%d/%d a las %d:%d:%d",adminname, playername, level, day, month, year, hour, minute, second);
					SendClientMessageToAll(red,string2);
					dUserSetINT(PlayerName2(player1)).("level",(level));
					PlayerInfo[player1][pAdmin] = level;
					AdminTemp2[player1] = 0;
					return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
				} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El Player no está registrado o logeado.");
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
}

dcmd_tnegra(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
        new pame[MAX_PLAYER_NAME];
    	GetPlayerName(playerid, pame, sizeof(pame));
            if(!strcmp("Sr.[F]ran",pame,true) || !strcmp("[PFP]Scarface(Jefe)",pame,true) || !strcmp("[StaffRL]Renato._",pame,true) || !strcmp("Carlosxp",pame,true)) {
			new tmp[256], Index;	tmp = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /demoted [playerid]") &&
            SendClientMessage(playerid, orange, "[Función]: Baja el nivel de un admin especifico a 0!");
	    	new player1, level, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

			if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if(PlayerInfo[player1][LoggedIn] == 1) {
					if(PlayerInfo[player1][pAdmin] < 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El Player no es admin!");
					GetPlayerName(player1, playername, sizeof(playername));
					GetPlayerName(playerid, adminname, sizeof(adminname));
	                if(!strcmp("[StaffRL]Renato._",playername,true) || !strcmp("[PFP]Scarface(Jefe)",playername,true) || !strcmp("Sr.[F]ran",playername,true)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No puedes bajarle admin al dueño!");
	       			CMDMessageToAdmins(playerid,"TNEGRA");
                    format(string2,sizeof(string2),"{FF0000}[INFO]:{FFFFFF} El Administrador {FF0000}%s{FFFFFF} te ha bajado de nivel de admin {29FF0D}[level %d]",adminname, level);
					SendClientMessage(player1,ColorAdmin,string2);
					GameTextForPlayer(player1,"~w~Degradado del admin ~n~~r~permanente", 6000, 3);
					SaveToFile("AdminLog",string2);
					new string9[1000];
					format(string9,sizeof(string9),"{FF0000}[INFO]: {FFFFFF}El Dueño/Encargado {FF0000}%s{FFFFFF} le dió tarjeta negra {0700D7}[Level %d] {FFFFFF}a {FF0000}%s", adminname, level, playername);
					SendClientMessageToAll(-1,string9);
					PlayerInfo[player1][pAdmin] = 0;
            		dUserSetINT(PlayerName2(player1)).("level",PlayerInfo[player1][pAdmin]);
					AdminTemp2[player1] = 0;
					return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
				} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El Player no está registrado o logeado.");
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Sólo Sr.[F]ran, [PFP]Scarface(Jefe), [StaffRL]Renato._ y Carlosxp pueden usar el comando!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No estas logeado!");
}

dcmd_setvip(playerid,params[])
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		new pame[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pame, sizeof(pame));
		if(PlayerInfo[playerid][pAdmin] >= 8)
		{
		    new tmp [256];
			new tmp2[256];
			new Index;
			tmp  = strtok(params,Index);
			tmp2 = strtok(params,Index);
		    if(!strlen(params)) return
   			SendClientMessage(playerid, LIGHTBLUE2, "[USA]: /setvip [PlayerID] [Cuenta (0-9)]") &&
			SendClientMessage(playerid, orange, "[Función]: Especifique el Tipo de Cuenta (0-Normal,1-Silver,2-Gold,3-Premium,4-Platinum,5-Esmeralda,6-Diamond,7-Extremo,8-Legendario,9-Dios)");

	    	new player1, type, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);
			if(!strlen(tmp2)) return
			SendClientMessage(playerid, LIGHTBLUE2, "[USA]: /setvip [PlayerID] [Cuenta (0-9)]") &&
			SendClientMessage(playerid, orange, "[Función]: Especifique el Tipo de Cuenta (0-Normal,1-Silver,2-Gold,3-Premium,4-Platinum,5-Esmeralda,6-Diamond,7-Extremo,8-Legendario,9-Dios)");
			type = strval(tmp2);

			if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[player1][LoggedIn] == 1)
				{
				if(type > 9)
				return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Tipo de Cuenta Inválida!");
				if(type == PlayerInfo[player1][pVip])
				return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Este Player Ya Tiene Este Tipo de Cuenta!");
				GetPlayerName(player1, playername, sizeof(playername));
				GetPlayerName(playerid, adminname, sizeof(adminname));
	       		CMDMessageToAdmins(playerid,"SETVIP");
		       	new year,month,day;
		   		new hour,minute,second;
		  		getdate(year, month, day);
		  		gettime(hour,minute,second);

 				switch(type)
				{
					case 0: AccType = "Normal";
					case 1: AccType = "Silver";
					case 2: AccType = "Gold";
					case 3: AccType = "Premium";
					case 4: AccType = "Platinum";
					case 5: AccType = "Esmeralda";
					case 6: AccType = "Diamond";
					case 7: AccType = "Extremo";
					case 8: AccType = "Legendario";
					case 9: AccType = "Dios";
				}
				if(type > 0)
				format(string2,sizeof(string2),"{FFFFFF}.:Info:. El Administrador {29FF0D}%s{FFFFFF} pusó tu VIP a: {0700D7}%s",adminname,AccType);
				else
				format(string2,sizeof(string2),"{FFFFFF}.:Info:. El Administrador {29FF0D}%s{FFFFFF} pusó tu VIP a: {FF0000}*Ninguno*",adminname);
				SendClientMessage(player1,0x66C178AA,string2);
				if(type > PlayerInfo[player1][pVip])
				GameTextForPlayer(player1,"~g~Promovido a Vip", 4000, 3);
				else GameTextForPlayer(player1,"~r~Degradado de Vip", 4000, 3);

				format(string2,sizeof(string2),"{FFFFFF}Usted le dió/pusó a %s el VIP: {0700D7}%s{FFFFFF} el {29FF0D}'%d/%d/%d'{FFFFFF} a las {29FF0D}'%d:%d:%d'", playername, AccType, day, month, year, hour, minute, second);
				SendClientMessage(playerid,0x00C378AA,string2);
				format(string2,sizeof(string2),"[INFO]:{FFFFFF} El Administrador %s hizo a %s el tipo de VIP:{0700D7} %s",adminname, playername, AccType);
				SaveToFile("VipLog",string2);
				dUserSetINT(PlayerName2(player1)).("AccountType",(type));
				PlayerInfo[player1][pVip] = type;
				ActualizarInformacion(playerid);
				return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
				}
				else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El Jugador no está registrado o logueado");
			}
			else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes nivel para usar este comando!");
		}
		else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 8] para Usar este Comando!");
 }
	else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Debes estar logueado para usar este comando!");
}

dcmd_settiempo(playerid,params[])
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		new pame[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pame, sizeof(pame));
		if(PlayerInfo[playerid][pAdmin] >= 8)
		{
		    new tmp [256];
			new tmp2[256];
			new tmp3[256];
			new tmp4[256];
			new Index;
			tmp  = strtok(params,Index);
			tmp2 = strtok(params,Index);
			tmp3 = strtok(params,Index);
			tmp4 = strtok(params,Index);
		    if(!strlen(params)) return
   			SendClientMessage(playerid, red, "[USA]: /settiempo [Playerid] [Horas] [Minutos] [Segundos]") &&
			SendClientMessage(playerid, orange, "[Función]: Re-Estableces el Tiempo (Horas, Minutos y Segundos) en el Servidor a un Jugador Especifico!");

	    	new player1, player2, hora, minu, segu, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);
			if(!strlen(tmp2) || !strlen(tmp3)) return
   			SendClientMessage(playerid, red, "[USA]: /settiempo [Playerid] [Horas] [Minutos] [Segundos]") &&
			SendClientMessage(playerid, orange, "[Función]: Re-Estableces el Tiempo (Horas, Minutos y Segundos) en el Servidor a un Jugador Especifico!");
			hora = strval(tmp2);
			minu = strval(tmp3);

			if(!strlen(tmp4)) return
   			SendClientMessage(playerid, red, "[USA]: /settiempo [Playerid] [Horas] [Minutos] [Segundos]") &&
			SendClientMessage(playerid, orange, "[Función]: Re-Estableces el Tiempo (Horas, Minutos y Segundos) en el Servidor a un Jugador Especifico!");
			segu = strval(tmp4);

			if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[player1][LoggedIn] == 1)
				{
				if(minu >= 60) return SendClientMessage(playerid, red, "¡Error!: {FFFFFF}No puedes Ponerle mas de 60 Minutos!");
				if(segu >= 60) return SendClientMessage(playerid, red, "¡Error!: {FFFFFF}No puedes Ponerle mas de 60 Segundos!");
				if(minu < 0) return SendClientMessage(playerid, red, "¡Error!: {FFFFFF}No puedes Ponerle menos de 1 Minuto!");
				if(segu < 0) return SendClientMessage(playerid, red, "¡Error!: {FFFFFF}No puedes Ponerle menos de 1 Segundo!");

				GetPlayerName(player1, playername, sizeof(playername));
				GetPlayerName(playerid, adminname, sizeof(adminname));
	       		CMDMessageToAdmins(playerid,"SETTIEMPO");

				format(string2,sizeof(string2),"¡Info!: {FFFFFF}Usted ha Seteado a %s el Tiempo de Cuenta en %d Horas, %d Minutos y %d Segundos!", playername, hora, minu, segu);
				SendClientMessage(playerid,0x00C378AA,string2);
				format(string2,sizeof(string2),"¡Info!: El Administrador %s ha Seteado a %s el Tiempo en: %d Horas, %d Minutos y %d Segundos.",adminname, playername, hora, minu, segu);
				SaveToFile("TiempoLog",string2);
				PlayerInfo[player1][hours] = hora;
				PlayerInfo[player1][mins] = minu;
				PlayerInfo[player1][secs] = segu;
				new str[256];
				new h, m, s;

				format(str, sizeof(str), "/ladmin/users/%s.sav", player2);
				dUserSetINT(PlayerName2(player1)).("hours", h);
				dUserSetINT(PlayerName2(player1)).("minutes", m);
				dUserSetINT(PlayerName2(player1)).("seconds", s);
				if(PlayerInfo[player1][LoggedIn] == 1) SavePlayer(player1);
       			TotalGameTime(player1, h, m, s);
				return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
				}
				else return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}El Jugador no está registrado o logueado");
			}
			else return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}No tienes nivel para usar este comando!");
		}
		else return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}Necesitas ser Game-Master [Lvl 8] para Usar este Comando!");
	}
	else return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}Debes estar logueado para usar este comando!");
}

dcmd_darleveltemp(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		new pame[MAX_PLAYER_NAME];
    	GetPlayerName(playerid, pame, sizeof(pame));
		if(PlayerInfo[playerid][pAdmin] >= 8 || !strcmp("Sr.[F]ran",pame,true) || !strcmp("[PFP]Scarface(Jefe)",pame,true) || !strcmp("[StaffRL]Renato._",pame,true) || !strcmp("Carlosxp",pame,true)) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "[USA]: /darleveltemp [playerid] [level 1-8]") &&
		    SendClientMessage(playerid, orange, "[Función]: ¡Establece un Nivel de administrador Temporal a un especificado Jugador!");
	    	new player1, level;
			player1 = strval(tmp);
			level = strval(tmp2);
			if( level > 8 ) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}¡Sólo puedes dar Admin Temporal hasta el nivel 8!");


			if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if(PlayerInfo[player1][LoggedIn] == 1) {
					if(level >= ServerInfo[MaxAdminLevel] ) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Level Incorrecto");
					if(level == PlayerInfo[player1][pAdmin]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El Player ya tiene este level");
	                if(!strcmp("[StaffRL]Renato._",pName(player1),true) || !strcmp("[PFP]Scarface(Jefe)",pName(player1),true) || !strcmp("Carlosxp",pName(player1),true) || !strcmp("Sr.[F]ran",pName(player1),true)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No puedes bajarle admin al dueño!");
	       			CMDMessageToAdmins(playerid,"DARLEVELTEMP (Admin Temporal)");
			       	new year,month,day; getdate(year, month, day); new hour,minute,second; gettime(hour,minute,second);

					if(level > 0) format(string2,sizeof(string2),"[INFO]: El Administrador {FF0000}%s{FFFFFF} te ha dado admin temporalmente {29FF0D}[level %d]", pName(playerid), level);
					else format(string2,sizeof(string2),"[INFO]: El Administrador {FF0000}%s{FFFFFF} te ha bajado de level temporalmente {29FF0D}[level %d]", pName(playerid), level);
					SendClientMessage(player1,ColorAdmin,string2);

					if(level > PlayerInfo[player1][pAdmin]) GameTextForPlayer(player1,"~w~Promovido a admin ~n~~g~temporalmente", 6000, 3);
					else GameTextForPlayer(player1,"~w~Degradado del admin ~n~~r~temporalmente", 6000, 3);

					format(string2,sizeof(string2),"{FFFFFF}Tú has hecho a {FF0000}%s{FFFFFF} nivel %d el {29FF0D}%d/%d/%d{FFFFFF} a las {29FF0D}%d:%d:%d", pName(player1), level, day, month, year, hour, minute, second); SendClientMessage(playerid,ColorAdmin,string2);
					format(string2,sizeof(string2),"{FF0000}[INFO]:{FFFFFF} El Administrador {FF0000}%s{FFFFFF} le ha dado admin temporal a {FF0000}%s{FFFFFF} nivel {29FF0D}%d{FFFFFF} el {29FF0D}%d/%d/%d{FFFFFF} a las {29FF0D}%d:%d:%d",pName(playerid), pName(player1), level, day, month, year, hour, minute, second);
					SaveToFile("TempAdminLog",string2);
					if(PlayerInfo[playerid][pAdmin] == 8)
					{
					new string9[1000];
					format(string9,sizeof(string9),"{FF0000}[INFO]: {FFFFFF}El Admin {FF0000}%s{FFFFFF} le dió admin temporal nivel {29FF0D}%d{FFFFFF} a {FF0000}%s",pName(playerid), level, pName(player1));
					SendClientMessageToAll(-1,string9);
					PlayerInfo[player1][pAdmin] = level;
                    AdminTemp2[player1] = 1;
				    PlayerInfo[player1][Hide] = 0;
				    PlayerInfo[player1][God] = 0;
				    SetPlayerHealth(player1,100);
				    SetPlayerArmour(player1,100);
					AdminOn[player1] = 0;
					return 1;
					}
					if(PlayerInfo[playerid][pAdmin] == 9)
					{
					new string9[1000];
					format(string9,sizeof(string9),"{FF0000}[INFO]: {FFFFFF}El Co-Manager {FF0000}%s{FFFFFF} le dió admin temporal nivel {29FF0D}%d{FFFFFF} a {FF0000}%s",pName(playerid), level, pName(player1));
					SendClientMessageToAll(-1,string9);
					PlayerInfo[player1][pAdmin] = level;
                    AdminTemp2[player1] = 1;
				    PlayerInfo[player1][Hide] = 0;
				    PlayerInfo[player1][God] = 0;
				    SetPlayerHealth(player1,100);
				    SetPlayerArmour(player1,100);
					AdminOn[player1] = 0;
					return 1;
					}
					if(PlayerInfo[playerid][pAdmin] == 10)
					{
					new string9[1000];
					format(string9,sizeof(string9),"{FF0000}[INFO]: {FFFFFF}El Dueño {FF0000}%s{FFFFFF} le dió admin temporal nivel {29FF0D}%d{FFFFFF} a {FF0000}%s",pName(playerid), level, pName(player1));
					SendClientMessageToAll(-1,string9);
					PlayerInfo[player1][pAdmin] = level;
                    AdminTemp2[player1] = 1;
				    PlayerInfo[player1][Hide] = 0;
				    PlayerInfo[player1][God] = 0;
				    SetPlayerHealth(player1,100);
				    SetPlayerArmour(player1,100);
					AdminOn[player1] = 0;
					}
					return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
				} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El Player no está registrado o logeado.");
			} else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El player no está conectado");
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 8] para Usar este Comando!");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Tienes que estar Logueado para Usar este Comando!");
}

dcmd_hide(playerid,params[])
{
    #pragma unused params
	if (PlayerInfo[playerid][pAdmin] >= 6)
	{
	    if (PlayerInfo[playerid][Hide] == 1)
 		return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}¡Tu ya estás en estado HIDE!");

 		PlayerInfo[playerid][Hide] = 1;
 		ColorChat[playerid] = 0;
		ColorRojoChat[playerid] = 0;
		ColorAzulChat[playerid] = 0;
		ColorAmarilloChat[playerid] = 0;
		ColorMoradoChat[playerid] = 0;
		ColorCarlosChat[playerid] = 0;
		ColorFranciscoChat[playerid] = 0;
		ColorSamirChat[playerid] = 0;
		ColorRenatoChat[playerid] = 0;
		ColorEventoChat[playerid] = 0;
 		CMDMessageToAdmins(playerid,"HIDE");
   		return SendClientMessage(playerid,green,"|- Has cambiado tu estado a HIDE ahora no te verán en /admins, Reviértelo con /unhide -|");
	}
	return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}Necesitas ser Game-Master [Lvl 6] para Usar este Comando!");
}

dcmd_unhide(playerid,params[])
{
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
 		if (PlayerInfo[playerid][Hide] == 0)
 		return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Tu no estás en estado HIDE!");
  		PlayerInfo[playerid][Hide] = 0;
   		return SendClientMessage(playerid,green,"|- Ya Estás De Nuevo Visible en /admins -|");
	}
 	return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 6] para Usar este Comando!");
}

dcmd_reportes(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 1) {
        new adminname[MAX_PLAYER_NAME];
        new string[128];
        new ReportCount;
		for(new i = 1; i < MAX_REPORTS; i++)
		{
			if(strcmp( Reports[i], "<none>", true) != 0)
			{
				ReportCount++;
				SendClientMessage(playerid,-1,Reports[i]);
   			}
   		}
		if(ReportCount == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No hay reportes!");
		GetPlayerName(playerid, adminname, sizeof(adminname));
		format (string,sizeof(string),"{FF0000}[Info]:{F2FE13} El Administrador %s está revisando los reportes.", adminname);
		SendClientMessageToAll(red,string);
    } else SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Necesitas ser Operador [Lvl 1] para usar este comando!");
	return 1;
}

dcmd_ricos(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pVip] >= 6) {
 		new Slot1 = -1, Slot2 = -1, Slot3 = -1, Slot4 = -1, HighestCash = -9999;
 		SendClientMessage(playerid,COLOR_WHITE,"Lista de Ricos:");

		for(new x=0; x<MAX_PLAYERS; x++) if (IsPlayerConnected(x)) if (GetPlayerMoney(x) >= HighestCash) {
			HighestCash = GetPlayerMoney(x);
			Slot1 = x;
		}
		HighestCash = -9999;
		for(new x=0; x<MAX_PLAYERS; x++) if (IsPlayerConnected(x) && x != Slot1) if (GetPlayerMoney(x) >= HighestCash) {
			HighestCash = GetPlayerMoney(x);
			Slot2 = x;
		}
		HighestCash = -9999;
		for(new x=0; x<MAX_PLAYERS; x++) if (IsPlayerConnected(x) && x != Slot1 && x != Slot2) if (GetPlayerMoney(x) >= HighestCash) {
			HighestCash = GetPlayerMoney(x);
			Slot3 = x;
		}
		HighestCash = -9999;
		for(new x=0; x<MAX_PLAYERS; x++) if (IsPlayerConnected(x) && x != Slot1 && x != Slot2 && x != Slot3) if (GetPlayerMoney(x) >= HighestCash) {
			HighestCash = GetPlayerMoney(x);
			Slot4 = x;
		}
		format(string2, sizeof(string2), "[%d] %s - $%d", Slot1,PlayerName2(Slot1),GetPlayerMoney(Slot1) );
		SendClientMessage(playerid,COLOR_WHITE,string2);
		if(Slot2 != -1)	{
			format(string2, sizeof(string2), "[%d] %s - $%d", Slot2,PlayerName2(Slot2),GetPlayerMoney(Slot2) );
			SendClientMessage(playerid,COLOR_WHITE,string2);
		}
		if(Slot3 != -1)	{
			format(string2, sizeof(string2), "[%d] %s - $%d", Slot3,PlayerName2(Slot3),GetPlayerMoney(Slot3) );
			SendClientMessage(playerid,COLOR_WHITE,string2);
		}
		if(Slot4 != -1)	{
			format(string2, sizeof(string2), "[%d] %s - $%d", Slot4,PlayerName2(Slot4),GetPlayerMoney(Slot4) );
			SendClientMessage(playerid,COLOR_WHITE,string2);
		}
		return 1;
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Diamond o Admin para usar este comando.");
}

dcmd_loquendo(playerid,params[]) {
#pragma unused params
new str[128], Nombre[MAX_PLAYER_NAME];
    if(PlayerInfo[playerid][pAdmin] >= 9 || PlayerInfo[playerid][pVip] >= 9) {
ShowPlayerDialog(playerid,loquendoVoz,DIALOG_STYLE_INPUT,"{ffffff}Loquendo Voz","{FF8000}Escribe el texto que quieres que todos escuchen en el espacio de abajo\n\n{ff0000}Info: {ffffff}No Insultes usando este Comando y usalo con delicadeza","Reproducir","Cancelar");
CMDMessageToVips(playerid,"LOQUENDO");
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(str,sizeof(str),"[INFO]: El usuario %s[%d] Ha insertado un mensaje de voz (LOQUENDO).", Nombre, playerid);
SendClientMessageToAll(0xFF9900AA, str);
	return 1;
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Vip Dios o Administrador para usar este comando.");
}

dcmd_loquenda(playerid,params[]) {
#pragma unused params
new str[128], Nombre[MAX_PLAYER_NAME];
    if(PlayerInfo[playerid][pAdmin] >= 8 || PlayerInfo[playerid][pVip] >= 9) {
ShowPlayerDialog(playerid,loquendaV,DIALOG_STYLE_INPUT,"{ffffff}Loquenda Voz Girl","{FF00FF}Escribe el texto que quieres que todos escuchen en el espacio de abajo\n\n{ff0000}Info: {ffffff}No Insultes usando este Comando y usalo con delicadeza","Reproducir","Cancelar");
CMDMessageToVips(playerid,"LOQUENDA");
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(str,sizeof(str),"[INFO]: El usuario %s[%d] Ha insertado un mensaje de voz (LOQUENDA).", Nombre, playerid);
SendClientMessageToAll(0xFF9900AA, str);
	return 1;
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser vip Dios o Administrador para usar este comando.");
}

dcmd_miniguns(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 1) {
		new bool:First2 = false, Count, i, slot, weap, ammo;
		for(i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				for(slot = 0; slot < 14; slot++) {
					GetPlayerWeaponData(i, slot, weap, ammo);
					if(ammo != 0 && weap == 38) {
					    Count++;
						if(!First2) { format(string2, sizeof(string2), "Minigun: [%d]%s(ammo%d)", i, PlayerName2(i), ammo); First2 = true; }
				        else format(string2,sizeof(string2),"%s, [%d]%s(ammo%d) ",string2, i, PlayerName2(i), ammo);
					}
				}
    	    }
		}
		if(Count == 0) return SendClientMessage(playerid,COLOR_WHITE,"No hay jugadores con minigun"); else return SendClientMessage(playerid,COLOR_WHITE,string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
}

dcmd_rockets(playerid,params[])
{
    #pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		new bool:First2 = false, Count, i, slot, weap, ammoaa, dmajust[256];
		for(i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				for(slot = 0; slot < 10; slot++)
				{
					GetPlayerWeaponData(i, slot, weap, ammoaa);
					if(ammoaa != 0 && weap == 35)
					{
					    Count++;
						if(!First2) { format(dmajust, sizeof(dmajust), "rocket: (%d)%s (municiones%d)", i, PlayerName2(i), ammoaa); First2 = true; }
				        else format(dmajust,sizeof(dmajust),"%s, (%d)%s(municiones%d) ",dmajust, i, PlayerName2(i), ammoaa);
					}
				}
    	    }
		}
		if(Count == 0) return SendClientMessage(playerid,COLOR_WHITE,"-|Info|- No hay jugadores con rocket!");
		else return SendClientMessage(playerid,COLOR_WHITE,dmajust);
	}
	else return SendClientMessage(playerid,COLOR_RED,"-|Error|- Tu No Tienes El Lvl Suficiente Para Usar Este Comando!");
}

dcmd_uconfig(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 7)
	{
		UpdateConfig();
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return CMDMessageToAdmins(playerid,"UCONFIG");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

dcmd_botcheck(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 3) {
		for(new i=0; i<MAX_PLAYERS; i++) BotCheck(i);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return CMDMessageToAdmins(playerid,"BOTCHECK");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

dcmd_lockserver(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 10) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /lockserver [password]") &&
		SendClientMessage(playerid, orange, "[Función]: Bloquea el Server por Contraseña!");
    	new adminname[MAX_PLAYER_NAME];
		ServerInfo[Locked] = 1;
		strmid(ServerInfo[Password], params[0], 0, strlen(params[0]), 128);
		GetPlayerName(playerid, adminname, sizeof(adminname));
		format(string2, sizeof(string2), "{0000FF}[INFO]: {FF4000}El Administrador \"%s\" ha bloqueado el server",adminname);
  		SendClientMessageToAll(red,"________________________________________");
  		SendClientMessageToAll(red," ");
		SendClientMessageToAll(red,string2);
		SendClientMessageToAll(red,"________________________________________");
		for(new i = 0; i <= MAX_PLAYERS; i++) if(IsPlayerConnected(i)) { PlayerPlaySound(i,1057,0.0,0.0,0.0); PlayerInfo[i][AllowedIn] = true; }
		CMDMessageToAdmins(playerid,"LOCKSERVER");
		format(string2, sizeof(string2), "{0000FF}[INFO]: {FF4000}El Administrador \"%s\" Ha cambiado la contraseña del Servidor ha '%s'",adminname, ServerInfo[Password] );
		return MessageToAdmins(COLOR_WHITE, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Dueño [Lvl 10] para Usar este Comando!");
}

dcmd_unlockserver(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 10) {
	    if(ServerInfo[Locked] == 1) {
	    	new adminname[MAX_PLAYER_NAME];
			ServerInfo[Locked] = 0;
			strmid(ServerInfo[Password], "", 0, strlen(""), 128);
			GetPlayerName(playerid, adminname, sizeof(adminname));
			format(string2, sizeof(string2), "{0000FF}[INFO]: {FF4000}El Administrador \"%s\" ha desbloqueado el Servidor",adminname);
  			SendClientMessageToAll(green,"________________________________________");
	  		SendClientMessageToAll(green," ");
			SendClientMessageToAll(green,string2);
			SendClientMessageToAll(green,"________________________________________");
			for(new i = 0; i <= MAX_PLAYERS; i++) if(IsPlayerConnected(i)) { PlayerPlaySound(i,1057,0.0,0.0,0.0); PlayerInfo[i][AllowedIn] = true; }
			return CMDMessageToAdmins(playerid,"UNLOCKSERVER");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El Servidor no está bloqueado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Dueño [Lvl 10] para Usar este Comando!");
}

dcmd_password(playerid,params[]) {
	if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /password [password]") &&
		SendClientMessage(playerid, orange, "[Función]: Poner la Contraseña del Server o Serás Kickeado!");
	if(ServerInfo[Locked] == 1) {
	    if(PlayerInfo[playerid][AllowedIn] == false) {
			if(!strcmp(ServerInfo[Password],params[0],true)) {
				KillTimer( LockKickTimer[playerid] );
				PlayerInfo[playerid][AllowedIn] = true;
				SendClientMessage(playerid,COLOR_WHITE,"Has entrado al Servidor.");
				format(string2, sizeof(string2), "%s Ha entrado al Servidor exitosamente",PlayerName2(playerid));
				return MessageToAdmins(COLOR_WHITE, string2);
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Contraseña Incorrecta");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Tu ya te habías logueado en el Servidor");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El Servidor no está bloqueado");
}


dcmd_pm(playerid,params[])
{
    new id;
    new mensage[256];
    new namax[MAX_PLAYERS];
    new namax2[MAX_PLAYERS];
	new idx, pid[256];
    pid = strtok(params, idx); mensage = strtok(params, idx);
    if(!strlen(pid) || !strlen(mensage)) return SendClientMessage(playerid,red,"[USA]: /pm [ID] [Mensaje]");
	id=strval(pid);

    if(id == playerid) return SendClientMessage(playerid, COLOR_red, "No Puedes Enviarte Un Mensaje Privado A Ti Mismo");
    if(ADpm[id] == 0)
    {
    if(IsPlayerConnected(id))
    {
    if(Informacion[id][AFK] == 1) return SendClientMessage(playerid,COLOR_ROJO,"¡Error!: {FFFFFF}El player está en Modo AFK, espera a q salga del AFK para enviarle un PM.");

    if(YaPM(playerid)) return SendClientMessage(playerid,COLOR_ROJO,"¡Error!: {FFFFFF}Debes Esperar 5 Segundos Para Volverte a Mandar un PM!");
	if(DetectarSpam(mensage) && PlayerInfo[playerid][pAdmin] < 7) {
        new stringp[260]; GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
        SendClientMessage(playerid,0xFFFFFFFF,"¡Anti SPAM!: No puedes Escribir 8 o Más dígitos de Números en este Servidor.");
        format(stringp, sizeof(stringp), "¡Info!: {FFFFFF}%s [%d] escribió más de 7 dígitos numerales en PM [Texto: %s]",pname,playerid,mensage); MessageToAdmins(red,stringp); print(stringp);
	return 0;
    }
    if(ServerInfo[AntiSwear] == 1 && PlayerInfo[playerid][pAdmin] < 7)
	for(new s = 0; s < ForbiddenWordCount; s++)
    {
		new pos;
		while((pos = strfind(mensage,ForbiddenWords[s],true)) != -1) for(new i = pos, j = pos + strlen(ForbiddenWords[s]); i < j; i++) mensage[i] = '*';
	}
    GetPlayerName(playerid, namax, sizeof(namax));
    GetPlayerName(id, namax2, sizeof(namax2));
    format(string2, sizeof(string2), "*Le Enviaste a %s [%d]: %s", namax2, id, params[strlen(pid)+1]);
    SendClientMessage(playerid,COLOR_YELLOW, string2);
    GameTextForPlayer(playerid,"~w~PM Enviado con Exito!",4000,3);
    format(string2, sizeof(string2), "*%s [%d] Te Envia: %s", namax, playerid, params[strlen(pid)+1]);
    SendClientMessage(id,COLOR_YELLOW,string2);
    GameTextForPlayer(id,"~y~PM Recibido~n~~w~Mira el Chat!",7000,3);
    PlayerPlaySound(id,1057,0.0,0.0,0.0);
    APM[playerid]=GetTickCount();
    if(ServerInfo[ReadPMs] == 1 && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != 9)
	{
		format(string2, sizeof(string2), "LOG PM: %s [%d] A %s [%d]: %s", namax, playerid, namax2, id, params[strlen(pid)+1]);
  		for (new a = 0; a < MAX_PLAYERS; a++)
		if(IsPlayerConnected(a) && (PlayerInfo[a][pAdmin] >= 3) && a != playerid)
		SendClientMessage(a,0xC0C0C0AA, string2);
	}
    }
    else SendClientMessage(playerid, COLOR_red, "¡Error!: {FFFFFF}Ese Player No Está Conectado!");
	}
    else SendClientMessage(playerid, COLOR_red, "¡Error!: {FFFFFF}Este Player Tiene Desactivado Los Mensajes Privados!");
 	return 1;
}

dcmd_mpa(playerid,params[])
{
    new id;
    new mensage[256];
    new namax[MAX_PLAYERS];
    new namax2[MAX_PLAYERS];
	new idx, pid[256];
    pid = strtok(params, idx); mensage = strtok(params, idx);
    if(!strlen(pid) || !strlen(mensage)) return SendClientMessage(playerid,red,"[USA]: /mpa [ID] [Mensaje]");
	id=strval(pid);

    if(id == playerid) return SendClientMessage(playerid, COLOR_red, "No Puedes Enviarte Un Mensaje Privado A Ti Mismo");
    if(ADpm[id] == 0)
    {
    if(IsPlayerConnected(id))
    {
    if(Informacion[id][AFK] == 1) return SendClientMessage(playerid,COLOR_ROJO,"¡Error!: {FFFFFF}El player está en Modo AFK, espera a q salga del AFK para enviarle un PM.");

    if(YaPM(playerid)) return SendClientMessage(playerid,COLOR_ROJO,"¡Error!: {FFFFFF}Debes Esperar 5 Segundos Para Volverte a Mandar un PM!");
	if(DetectarSpam(mensage) && PlayerInfo[playerid][pAdmin] < 7) {
        new stringp[260]; GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
        SendClientMessage(playerid,0xFFFFFFFF,"¡Anti SPAM!: No puedes Escribir 8 o Más dígitos de Números en este Servidor.");
        format(stringp, sizeof(stringp), "¡Info!: {FFFFFF}%s [%d] escribió más de 7 dígitos numerales en PM [Texto: %s]",pname,playerid,mensage); MessageToAdmins(red,stringp); print(stringp);
	return 0;
    }
    if(ServerInfo[AntiSwear] == 1 && PlayerInfo[playerid][pAdmin] < 7)
	for(new s = 0; s < ForbiddenWordCount; s++)
    {
		new pos;
		while((pos = strfind(mensage,ForbiddenWords[s],true)) != -1) for(new i = pos, j = pos + strlen(ForbiddenWords[s]); i < j; i++) mensage[i] = '*';
	}
    GetPlayerName(playerid, namax, sizeof(namax));
    GetPlayerName(id, namax2, sizeof(namax2));
    format(string2, sizeof(string2), "*Le Enviaste a %s [%d]: %s", namax2, id, params[strlen(pid)+1]);
    SendClientMessage(playerid,COLOR_YELLOW, string2);
    GameTextForPlayer(playerid,"~w~PM Enviado con Exito!",4000,3);
    format(string2, sizeof(string2), "*%s [%d] Te Envia: %s", namax, playerid, params[strlen(pid)+1]);
    SendClientMessage(id,COLOR_YELLOW,string2);
    GameTextForPlayer(id,"~y~PM Recibido~n~~w~Mira el Chat!",7000,3);
    PlayerPlaySound(id,1057,0.0,0.0,0.0);
    APM[playerid]=GetTickCount();
    }
    else SendClientMessage(playerid, COLOR_red, "¡Error!: {FFFFFF}Ese Player No Está Conectado!");
	}
    else SendClientMessage(playerid, COLOR_red, "¡Error!: {FFFFFF}Este Player Tiene Desactivado Los Mensajes Privados!");
 	return 1;
}
//------------------------------------------------------------------------------
dcmd_forbidname(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 8) {
		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /forbidname [nickname]") &&
		SendClientMessage(playerid, orange, "[Función]: Prohibes un Nick del Server!");
		new File:BLfile;
		BLfile = fopen("ladmin/config/ForbiddenNames.cfg",io_append);
		format(string2,sizeof(string2),"%s\r\n",params[1]);
		fwrite(BLfile,string2);
		fclose(BLfile);
		UpdateConfig();
		CMDMessageToAdmins(playerid,"FORBIDNAME");
		format(string2, sizeof(string2), "El Administrador \"%s\" ha añadido el nick \"%s\" a la lista negra", pName(playerid), params );
		return MessageToAdmins(green,string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas nivel 8 para usar este comando");
}

dcmd_forbidword(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 8) {
		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /forbidword [word]") &&
		SendClientMessage(playerid, orange, "[Función]: Prohibes una Palabra del Server!");
		new File:BLfile;
		BLfile = fopen("ladmin/config/ForbiddenWords.cfg",io_append);
		format(string2,sizeof(string2),"%s\r\n",params[1]);
		fwrite(BLfile,string2);
		fclose(BLfile);
		UpdateConfig();
		CMDMessageToAdmins(playerid,"FORBIDWORD");
		format(string2, sizeof(string2), "El Administrador \"%s\" ha añadido la palabra \"%s\" a la lista negra", pName(playerid), params );
		return MessageToAdmins(green,string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas nivel 8 para usar este comando");
}
//==========================[ Spectate Commands ]===============================
#if defined ENABLE_SPEC

dcmd_spec(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params) || !IsNumeric(params)) return SendClientMessage(playerid, red, "[USA]: /spec [playerid]") &&
		SendClientMessage(playerid, orange, "[Función]: Vigilar a Especificado Jugador!");
		new specplayerid = strval(params);
		new aname[MAX_PLAYER_NAME];
		new specname[MAX_PLAYER_NAME];
		GetPlayerName(playerid,aname,sizeof(aname));
		GetPlayerName(specplayerid,specname,sizeof(specname));
		if(PlayerInfo[specplayerid][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(specplayerid) && specplayerid != INVALID_PLAYER_ID) {
			if(specplayerid == playerid) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes vigilarte a ti mismo");
			if(GetPlayerState(specplayerid) == PLAYER_STATE_SPECTATING && PlayerInfo[specplayerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}El Player está Spectando");
			if(GetPlayerState(specplayerid) != 1 && GetPlayerState(specplayerid) != 2 && GetPlayerState(specplayerid) != 3) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Player no Spawneado");
			if( (PlayerInfo[specplayerid][pAdmin] != ServerInfo[MaxAdminLevel]) || (PlayerInfo[specplayerid][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] == ServerInfo[MaxAdminLevel]) )	{
				StartSpectate(playerid, specplayerid);
				CMDMessageToAdmins(playerid,"SPEC");
				GetPlayerPos(playerid,Pos[playerid][0],Pos[playerid][1],Pos[playerid][2]);
				GetPlayerFacingAngle(playerid,Pos[playerid][3]);
  				format(string2,sizeof(string2), "[INFO]: {FFFFFF}El Administrador %s empezó a spectear al jugador %s [ID: %d]",aname,specname,specplayerid);
  				MessageToAdminsD(green,string2);
				return SendClientMessage(playerid,ColorAdmin,"Vigilando...");
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes vigilar a un administrador de este nivel.");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El player no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas nivel 1 para usar este comando");
}


dcmd_specoff(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid)) {
        if(PlayerInfo[playerid][SpecType] != ADMIN_SPEC_TYPE_NONE) {
			StopSpectate(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			CMDMessageToAdmins(playerid,"SPECOFF");
			return SendClientMessage(playerid,ColorAdmin,"Ya no estás spectando");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted no está spectando");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas level 1 para usar este comando");
}

#endif

//==========================[ CHAT COMMANDS ]===================================

dcmd_schat(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 6) {
		CMDMessageToAdmins(playerid,"SCHAT");
		if(ServerInfo[DisableChat] == 0) {
			ServerInfo[DisableChat] = 1;
			format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" ha desactivado el Chat", pName(playerid) );
		} else {
			ServerInfo[DisableChat] = 0;
			format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" Ha activado el Chat", pName(playerid) );
		} return SendClientMessageToAll(blue,string2);
 	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 6] para Usar este Comando!");
}

dcmd_borrarchat(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 3) {
		for(new i = 0; i < 11; i++)
		SendClientMessageToAll(green," ");
		CMDMessageToAdmins(playerid,"BORRARCHAT");
		SendClientMessageToAll(red,"[Info]: El log del chat fue limpiado por un administrador.");
		return 1;
 	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

dcmd_bc(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 3) {
		for(new i = 0; i < 11; i++)
		SendClientMessageToAll(green," ");
		CMDMessageToAdmins(playerid,"BORRARCHAT");
		SendClientMessageToAll(red,"[Info]: El log del chat fue limpiado por un administrador.");
		return 1;
 	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

dcmd_borrartodochat(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 3) {
		for(new i = 0; i < 100; i++)
		SendClientMessageToAll(green," ");
		CMDMessageToAdmins(playerid,"BORRARTODOCHAT");
		SendClientMessageToAll(red,"[Info]: El log del chat fue limpiado por un administrador.");
		return 1;
 	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

dcmd_btc(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 3) {
		for(new i = 0; i < 100; i++)
		SendClientMessageToAll(green," ");
		CMDMessageToAdmins(playerid,"BORRARTODOCHAT");
		SendClientMessageToAll(red,"[Info]: El log del chat fue limpiado por un administrador.");
		return 1;
 	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!");
}

//==================[ Object & Pickup ]=========================================
dcmd_pickup(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 9 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid,red,"[USA]: /pickup [pickup id]") &&
		SendClientMessage(playerid, orange, "[Función]: Agregas un Pickup al Server!");
	    new pickup = strval(params), Float:x, Float:y, Float:z, Float:a;
	    CMDMessageToAdmins(playerid,"PICKUP");
		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, a);
		x += (3 * floatsin(-a, degrees));
		y += (3 * floatcos(-a, degrees));
		CreatePickup(pickup, 2, x+2, y, z);
		format(string2, sizeof(string2), "CreatePickup(%d, 2, %0.2f, %0.2f, %0.2f);", pickup, x+2, y, z);
       	SaveToFile("Pickups",string2);
		return SendClientMessage(playerid,yellow, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}
//===================[ Move ]===================================================

dcmd_mover(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 4 || PlayerInfo[playerid][pVip] >= 6) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /mover [up / down / +x / -x / +y / -y / off]") &&
		SendClientMessage(playerid, orange, "[Función]: Para Moverte por Todo San Andreas!");
		new Float:X, Float:Y, Float:Z;
		if(strcmp(params,"up",true) == 0)	{
			TogglePlayerControllable(playerid,false); GetPlayerPos(playerid,X,Y,Z);	SetPlayerPos(playerid,X,Y,Z+5); SetCameraBehindPlayer(playerid); }
		else if(strcmp(params,"down",true) == 0)	{
			TogglePlayerControllable(playerid,false); GetPlayerPos(playerid,X,Y,Z);	SetPlayerPos(playerid,X,Y,Z-5); SetCameraBehindPlayer(playerid); }
		else if(strcmp(params,"+x",true) == 0)	{
			TogglePlayerControllable(playerid,false); GetPlayerPos(playerid,X,Y,Z);	SetPlayerPos(playerid,X+5,Y,Z);	}
		else if(strcmp(params,"-x",true) == 0)	{
			TogglePlayerControllable(playerid,false); GetPlayerPos(playerid,X,Y,Z);	SetPlayerPos(playerid,X-5,Y,Z); }
		else if(strcmp(params,"+y",true) == 0)	{
			TogglePlayerControllable(playerid,false); GetPlayerPos(playerid,X,Y,Z);	SetPlayerPos(playerid,X,Y+5,Z);	}
		else if(strcmp(params,"-y",true) == 0)	{
			TogglePlayerControllable(playerid,false); GetPlayerPos(playerid,X,Y,Z);	SetPlayerPos(playerid,X,Y-5,Z);	}
	    else if(strcmp(params,"off",true) == 0)	{
			TogglePlayerControllable(playerid,true);	}
		else return SendClientMessage(playerid,red,"[USA]: /move [up / down / +x / -x / +y / -y / off]");
		return 1;
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser VIP o Operador [Lvl 4] para Usar este Comando!");
}

dcmd_moverplayer(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 5) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp)) return SendClientMessage(playerid, red, "[USA]: /moveplayer [playerid] [up / down / +x / -x / +y / -y / off]") &&
		SendClientMessage(playerid, orange, "[Función]: Para Mover por Todo San Andreas a Especificado Jugador!");
	    new Float:X, Float:Y, Float:Z, player1 = strval(tmp);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
		if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			if(strcmp(tmp2,"up",true) == 0)	{
				GetPlayerPos(player1,X,Y,Z);	SetPlayerPos(player1,X,Y,Z+5); SetCameraBehindPlayer(player1);	}
			else if(strcmp(tmp2,"down",true) == 0)	{
				GetPlayerPos(player1,X,Y,Z);	SetPlayerPos(player1,X,Y,Z-5); SetCameraBehindPlayer(player1);	}
			else if(strcmp(tmp2,"+x",true) == 0)	{
				GetPlayerPos(player1,X,Y,Z);	SetPlayerPos(player1,X+5,Y,Z);	}
			else if(strcmp(tmp2,"-x",true) == 0)	{
				GetPlayerPos(player1,X,Y,Z);	SetPlayerPos(player1,X-5,Y,Z); }
			else if(strcmp(tmp2,"+y",true) == 0)	{
				GetPlayerPos(player1,X,Y,Z);	SetPlayerPos(player1,X,Y+5,Z);	}
			else if(strcmp(tmp2,"-y",true) == 0)	{
				GetPlayerPos(player1,X,Y,Z);	SetPlayerPos(player1,X,Y-5,Z);	}
			else SendClientMessage(playerid,red,"[USA]: /moveplayer [up / down / +x / -x / +y / -y / off]");
			return 1;
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El player no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 5] para Usar este Comando!");
}

//===================[ Fake ]===================================================

#if defined ENABLE_FAKE_CMDS
dcmd_fakedeath(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 5) {
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !strlen(tmp3)) return SendClientMessage(playerid, red, "[USA]: /fakedeath [killer] [death] [weapon]") &&
		SendClientMessage(playerid, orange, "[Función]: Hacer una Muerte Falsa a Especificado Jugador!");
		new killer = strval(tmp), killee = strval(tmp2), weap = strval(tmp3);
		if(!IsValidWeapon(weap)) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}ID del arma inválida");
		if(PlayerInfo[killer][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
  if(PlayerInfo[killee][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");

        if(IsPlayerConnected(killer) && killer != INVALID_PLAYER_ID) {
         if(IsPlayerConnected(killee) && killee != INVALID_PLAYER_ID) {
	    	  	CMDMessageToAdmins(playerid,"FAKEDEATH");
				SendDeathMessage(killer,killee,weap);
				return SendClientMessage(playerid,ColorAdmin,"|-Fake death Enviado-|");
		    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Killee no está conectado");
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Killer no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 5] para Usar este Comando!");
}

dcmd_fakechat(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 7) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "[USA]: /fakechat [playerid] [text]") &&
		SendClientMessage(playerid, orange, "[Función]: Hacer hablar por el Chat a Especificado Jugador!");
		new player1 = strval(tmp);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
	        CMDMessageToAdmins(playerid,"FAKECHAT");
	        if(PlayerInfo[player1][pAdmin] == 1) {
	        new chat[130], nombre[MAX_PLAYER_NAME];
    		GetPlayerName(player1, nombre, sizeof(nombre));
            format(chat, sizeof(chat), "{0D00FF}|1|Operador[A] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(player1) >>> 8, nombre, player1, params[strlen(tmp)+1]);
            SendClientMessageToAll(-1,chat);
			return 1;
	        }
	        if(PlayerInfo[player1][pAdmin] == 2) {
	        new chat[130], nombre[MAX_PLAYER_NAME];
    		GetPlayerName(player1, nombre, sizeof(nombre));
            format(chat, sizeof(chat), "{0D00FF}|2|Operador[I] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(player1) >>> 8, nombre, player1, params[strlen(tmp)+1]);
            SendClientMessageToAll(-1,chat);
            return 1;
	        }
	        if(PlayerInfo[player1][pAdmin] == 3) {
	        new chat[130], nombre[MAX_PLAYER_NAME];
    		GetPlayerName(player1, nombre, sizeof(nombre));
            format(chat, sizeof(chat), "{0D00FF}|3|Operador[M] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(player1) >>> 8, nombre, player1, params[strlen(tmp)+1]);
            SendClientMessageToAll(-1,chat);
            return 1;
	        }
	        if(PlayerInfo[player1][pAdmin] == 4) {
	        new chat[130], nombre[MAX_PLAYER_NAME];
    		GetPlayerName(player1, nombre, sizeof(nombre));
            format(chat, sizeof(chat), "{0D00FF}|4|Operador[P] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(player1) >>> 8, nombre, player1, params[strlen(tmp)+1]);
            SendClientMessageToAll(-1,chat);
            return 1;
	        }
	        if(PlayerInfo[player1][pAdmin] == 5) {
	        new chat[130], nombre[MAX_PLAYER_NAME];
    		GetPlayerName(player1, nombre, sizeof(nombre));
            format(chat, sizeof(chat), "{00FF00}|5|Game Master[A] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(player1) >>> 8, nombre, player1, params[strlen(tmp)+1]);
            SendClientMessageToAll(-1,chat);
            return 1;
	        }
	        if(PlayerInfo[player1][pAdmin] == 6) {
	        new chat[130], nombre[MAX_PLAYER_NAME];
    		GetPlayerName(player1, nombre, sizeof(nombre));
            format(chat, sizeof(chat), "{00FF00}|6|Game Master[I] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(player1) >>> 8, nombre, player1, params[strlen(tmp)+1]);
            SendClientMessageToAll(-1,chat);
            return 1;
	        }
	        if(PlayerInfo[player1][pAdmin] == 7) {
	        new chat[130], nombre[MAX_PLAYER_NAME];
    		GetPlayerName(player1, nombre, sizeof(nombre));
            format(chat, sizeof(chat), "{00FF00}|7|Game Master[G] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(player1) >>> 8, nombre, player1, params[strlen(tmp)+1]);
            SendClientMessageToAll(-1,chat);
            return 1;
	        }
	        if(PlayerInfo[player1][pAdmin] == 8) {
	        new chat[130], nombre[MAX_PLAYER_NAME];
    		GetPlayerName(player1, nombre, sizeof(nombre));
            format(chat, sizeof(chat), "{00FF00}|5|Game Master[P] {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(player1) >>> 8, nombre, player1, params[strlen(tmp)+1]);
            SendClientMessageToAll(-1,chat);
            return 1;
	        }
	        if(PlayerInfo[player1][pAdmin] == 9) {
	        new chat[130], nombre[MAX_PLAYER_NAME];
    		GetPlayerName(player1, nombre, sizeof(nombre));
            format(chat, sizeof(chat), "{FF0000}|9|Co-Manager {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(player1) >>> 8, nombre, player1, params[strlen(tmp)+1]);
            SendClientMessageToAll(-1,chat);
            return 1;
	        }
	        if(PlayerInfo[player1][pVip] >= 1 && PlayerInfo[player1][pAdmin] == 0) {
	        new chat[130], nombre[MAX_PLAYER_NAME];
    		GetPlayerName(player1, nombre, sizeof(nombre));
            format(chat, sizeof(chat), "{3FFE00}|Vip| {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(player1) >>> 8, nombre, player1, params[strlen(tmp)+1]);
            SendClientMessageToAll(-1,chat);
            return 1;
	        }
	        new chat[130], nombre[MAX_PLAYER_NAME];
    		GetPlayerName(player1, nombre, sizeof(nombre));
            format(chat, sizeof(chat), "{FFFFFF}|N| {%06x}%s {3FFE00}[%d]: {FFFFFF}%s", GetPlayerColor(player1) >>> 8, nombre, player1, params[strlen(tmp)+1]);
            SendClientMessageToAll(-1,chat);
			return SendClientMessage(playerid,ColorAdmin,"|- Fake Text Enviado! -|");
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El player no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

dcmd_fakecmd(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 7) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "[USA]: /fakecmd [playerid] [command]") &&
		SendClientMessage(playerid, orange, "[Función]: Hacer Usar un Comando a Especificado Jugador!");
		new player1 = strval(tmp);
		if(PlayerInfo[player1][pAdmin] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este comando sobre un admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
	        CMDMessageToAdmins(playerid,"FAKECMD");
			CallRemoteFunction("OnPlayerCommandText", "is", player1, tmp2);
			return SendClientMessage(playerid,ColorAdmin,"|- Fake Command Enviado! -|");
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El player no está conectado");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}
#endif

//----------------------------------------------------------------------------//
// 		             	/all Commands                                         //
//----------------------------------------------------------------------------//

//------------------------------------------------------------------------------
dcmd_spawnall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 7) {
		CMDMessageToAdmins(playerid,"SPAWNAll");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerPos(i, 0.0, 0.0, 0.0); SpawnPlayer(i);
			}
		}
		format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" ha reiniciado a todos los players", pName(playerid) );
		return SendClientMessageToAll(blue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

dcmd_muteall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 7) {
		CMDMessageToAdmins(playerid,"MUTEALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); PlayerInfo[i][Muted] = 1; PlayerInfo[i][MuteWarnings] = 0;
			}
		}
		format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" ha muteado a todos los players", pName(playerid) );
		return SendClientMessageToAll(blue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

dcmd_unmuteall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 7) {
		CMDMessageToAdmins(playerid,"UNMUTEAll");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); PlayerInfo[i][Muted] = 0; PlayerInfo[i][MuteWarnings] = 0;
			}
		}
		format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" ha desmuteado a todos los players", pName(playerid) );
		return SendClientMessageToAll(blue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

dcmd_getall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 5) {
		CMDMessageToAdmins(playerid,"GETALL");
		new Float:x,Float:y,Float:z, interior = GetPlayerInterior(playerid);
    	GetPlayerPos(playerid,x,y,z);
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerPos(i,x+(playerid/4)+1,y+(playerid/4),z); SetPlayerInterior(i,interior);
			}
		}
		format(string2,sizeof(string2),"{FC15FF}El Administrador {FFFFFF}\"%s\" {FC15FF}ha traído a todos los players a su posición", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 5] para Usar este Comando!!");
}

dcmd_healall(playerid,params[])
{
return dcmd_vidaall(playerid,params);
}

dcmd_darallvida(playerid,params[])
{
return dcmd_vidaall(playerid,params);
}
dcmd_vidaall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 6) {
		CMDMessageToAdmins(playerid,"VIDAALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerHealth(playerid,100.0); SetPlayerHealth(i,100.0);
			}
		}
		format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {29FF0D}\"%s\"{FFFFFF} ha restaurado la vida de todos los usuarios.", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 6] para Usar este Comando!");
}

dcmd_armourall(playerid,params[])
{
return dcmd_chalecoall(playerid,params);
}

dcmd_darallchaleco(playerid,params[])
{
return dcmd_chalecoall(playerid,params);
}
dcmd_chalecoall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 7) {
		CMDMessageToAdmins(playerid,"CHALECOALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerArmour(playerid,100.0); SetPlayerArmour(i,100.0);
			}
		}
		format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {29FF0D}\"%s\"{FFFFFF} ha restaurado la armadura de todos los usuarios.", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

dcmd_killall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 7) {
		CMDMessageToAdmins(playerid,"KILLALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel] && EnDuelo[i]==0) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerHealth(i,0.0);
			}
		}
    	format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {29FF0D}\"%s\"{FFFFFF} ha matado a todos los usuarios.", pName(playerid) );
		return SendClientMessageToAll(blue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

//=============================================VIP CMD============================
dcmd_congelarall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 7) {
		CMDMessageToAdmins(playerid,"CONGELARALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); TogglePlayerControllable(i,false); PlayerInfo[i][Frozen] = 1;
			}
		}
		format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {29FF0D}\"%s\"{FFFFFF} ha congelado a todos los usuarios.", pName(playerid) );
		return SendClientMessageToAll(blue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

dcmd_descongelarall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 7) {
		CMDMessageToAdmins(playerid,"DESCONGELARALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); TogglePlayerControllable(i,true); PlayerInfo[i][Frozen] = 0;
			}
		}
		format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {29FF0D}\"%s\"{FFFFFF} ha descongelado a todos los usuarios.", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

/*dcmd_kickall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 9) {
		CMDMessageToAdmins(playerid,"KICKALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				ShowPlayerDialog(i, 1, DIALOG_STYLE_MSGBOX, " {FF0000} Revolucion Latina","{FFFFFF} Has sido Kickeado del Servidor \n\n{FF0000}Razón: {FFFFFF}Kick a Todos", "Aceptar", "") ;
				Kick(i);
			}
		}
		format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" ha Kickeado a todos los players", pName(playerid) );
		SaveToFile("KickLog",string2);
		return SendClientMessageToAll(blue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas nivel 9 para usar este comando");
}*/

dcmd_slapall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 7) {
		CMDMessageToAdmins(playerid,"SLAPALL");
		new Float:x, Float:y, Float:z;
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1190,0.0,0.0,0.0); GetPlayerPos(i,x,y,z);	SetPlayerPos(i,x,y,z+4);
			}
		}
		format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {29FF0D}\"%s\"{FFFFFF} ha abofeteado a todos los usuarios.", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
}

dcmd_explotarall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 8) {
		CMDMessageToAdmins(playerid,"EXPLOTARALL");
		new Float:x, Float:y, Float:z;
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1190,0.0,0.0,0.0); GetPlayerPos(i,x,y,z);	CreateExplosion(x, y , z, 7, 10.0);
			}
		}
		format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador \"%s\" Ha explotado a todos los players", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 8] para Usar este Comando!");
}

dcmd_desarmarall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 5) {
		CMDMessageToAdmins(playerid,"DESARMARALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); ResetPlayerWeapons(i); GivePlayerWeapon(i,1,1);
			}
		}
		format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {29FF0D}\"%s\"{FFFFFF} ha desarmado a todos los usuarios.", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 5] para Usar este Comando!");
}

dcmd_sacarall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 5) {
    	CMDMessageToAdmins(playerid,"SACARALL");
        new Float:x, Float:y, Float:z;
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
			    if(IsPlayerInAnyVehicle(i)) {
					PlayerPlaySound(i,1057,0.0,0.0,0.0); GetPlayerPos(i,x,y,z); SetPlayerPos(i,x,y,z+3);
				}
			}
		}
		format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador {29FF0D}\"%s\"{FFFFFF} ha sacado a todos los usuarios de sus vehículos.", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 5] para Usar este Comando!");
}

//-------------==== Set All Commands ====-------------//

dcmd_setallskin(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 6) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /setallskin [skinid]") &&
		SendClientMessage(playerid, orange, "[Función]: Establece un Skin a Todos los Jugadores!");
		new var = strval(params);
		if(!IsValidSkin(var)) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}ID del skin inválida");
       	CMDMessageToAdmins(playerid,"SETALLSKIN");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerSkin(i,var);
			}
		}
		format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" Ha cambiado el skin de todos los players ha {29FF0D}'%d'", pName(playerid), var );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 6] para Usar este Comando!");
}

dcmd_setallbusqueda(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 4) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /setallbusqueda [wanted level]") &&
		SendClientMessage(playerid, orange, "[Función]: Establece un Nivel de Búsqueda a Todos los Jugadores!");
		new var = strval(params);
       	CMDMessageToAdmins(playerid,"SETALLBUSQUEDA");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerWantedLevel(i,var);
			}
		}
		format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" Ha cambiado el nivel de búsqueda de todos los players ha {0700D7}'%d'", pName(playerid), var );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 4] para Usar este Comando!");
}

dcmd_setallmundo(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 6) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /setallmundo [virtual world]") &&
		SendClientMessage(playerid, orange, "[Función]: Establece un Mundo Virtual a Todos los Jugadores!");
		new var = strval(params);
       	CMDMessageToAdmins(playerid,"SETALLMUNDO");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerVirtualWorld(i,var);
			}
		}
		format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" Ha cambiado el mundo virtual de todos los players a {0700D7}'%d'", pName(playerid), var );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 6] para Usar este Comando!");
}

dcmd_setallscore(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 9) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /setallscore [score]") &&
		SendClientMessage(playerid, orange, "[Función]: Establece Score a Todos los Jugadores!");
		new var = strval(params);
       	CMDMessageToAdmins(playerid,"SETALLSCORE");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerScore(i,var);
			}
		}
		format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" Ha reseteado el score de todos los players ha '%d'", pName(playerid), var );
		return SendClientMessageToAll(blue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}

dcmd_darallscore(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 9) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /darallscore [score]") &&
		SendClientMessage(playerid, orange, "[Función]: Sumas un determinado score a todos los usuarios ON!");
		new score = strval(params), experiencia = strval(params);
       	CMDMessageToAdmins(playerid,"DARALLSCORE");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
			PlayerPlaySound(i,1057,0.0,0.0,0.0);
			SetPlayerScore(i, GetPlayerScore(i)+ score);
		 	SavePlayer(i);
		 	#if defined USE_STATS
		 	PlayerInfo[i][Kills] = PlayerInfo[i][Kills]+ score;
			PlayerInfo[i][Experiencia] = PlayerInfo[i][Experiencia]+ experiencia;
	    	#endif
			}
		}
		format(string2, sizeof(string2), "[INFO]: {FFFFFF}El Administrador \"%s\" ha añadido Puntaje a todos los usuarios con {29FF0D}'%d'{FFFFFF} de Score", pName(playerid), score);
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}

dcmd_darallnivel(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 9) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /darallnivel [Nivel]") &&
		SendClientMessage(playerid, orange, "[Función]: Das un Determinado Nivel a Todos los Jugadores!");
		new nivel = strval(params);
       	CMDMessageToAdmins(playerid,"DARALLNIVEL");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
			PlayerPlaySound(i,1057,0.0,0.0,0.0);
		 	#if defined USE_STATS
		 	PlayerInfo[i][Nivel] = PlayerInfo[i][Nivel]+ nivel;
	    	#endif
		 	SavePlayer(i);
			}
		}
		format(string2, sizeof(string2), "[INFO]: {FFFFFF}El Administrador \"%s\" Ha añadido a todos los Players con {29FF0D}'%d'{FFFFFF} de Nivel!", pName(playerid), nivel);
		return SendClientMessageToAll(blue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}

dcmd_setallnivel(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 9) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /setallnivel [Nivel]") &&
		SendClientMessage(playerid, orange, "[Función]: Establece el Nivel a Todos los Jugadores!");
		new nivel = strval(params);
       	CMDMessageToAdmins(playerid,"SETALLNIVEL");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
			PlayerPlaySound(i,1057,0.0,0.0,0.0);
		 	#if defined USE_STATS
		 	PlayerInfo[i][Nivel] = nivel;
	    	#endif
		 	SavePlayer(i);
			}
		}
		format(string2, sizeof(string2), "[INFO]: {FFFFFF}El Administrador \"%s\" Ha Seteado a todos los Players con '%d' de Nivel!", pName(playerid), nivel);
		return SendClientMessageToAll(blue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}

dcmd_setallcash(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 9) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /setallcash [Amount]") &&
		SendClientMessage(playerid, orange, "[Función]: Establece el Dinero a Todos los Jugadores!");
		new var = strval(params);
       	CMDMessageToAdmins(playerid,"SETALLCASH");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				ResetPlayerMoney(i);
				GivePlayerMoney(i,var);
			}
		}
		format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" ha puesto el dinero de todos en {FF0000}'$%d'", pName(playerid), var );
		return SendClientMessageToAll(blue, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}

dcmd_darallcash(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 6) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /darallcash [Amount]") &&
		SendClientMessage(playerid, orange, "[Función]: Agregar Dinero a Todos los Jugadores!");
		new var = strval(params);
       	CMDMessageToAdmins(playerid,"DARALLCASH");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				GivePlayerMoney(i,var);
			}
		}
		format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" le ha dado a todos los players {29FF0D}'$%d'", pName(playerid), var );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 6] para Usar este Comando!");
}

dcmd_darallarmas(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 6) {
	    new tmp[256], tmp2[256], Index, ammo, weap, WeapName[32]; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) ) return SendClientMessage(playerid, red, "[USA]: /darallarmas [arma id] [ammo]") &&
		SendClientMessage(playerid, orange, "[Función]: Dar un Tipo de Arma a Todos los Jugadores!");
		if(!strlen(tmp2) || !IsNumeric(tmp2) || strval(tmp2) <= 0) ammo = 100; else ammo = strval(tmp2);
		if(!IsNumeric(tmp)) weap = GetWeaponIDFromName(tmp); else weap = strval(tmp);
	  	if(!IsValidWeapon(weap)) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}ID del arma inválida");
	  	new arma;
        	if(!IsNumeric(tmp)) arma = GetWeaponIDFromName(tmp); else arma = strval(tmp);
		    if(arma == 18 || arma == 36 || arma == 37 || arma == 39 || arma == 44 || arma == 45) return  SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No Puedes dar esta Arma a los Players");
      	CMDMessageToAdmins(playerid,"DARALLARMAS");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				GivePlayerWeapon(i,weap,ammo);
			}
		}
		GetWeaponName(weap, WeapName, sizeof(WeapName) );
		format(string2,sizeof(string2),"[INFO]: {FFFFFF}El Administrador \"%s\" ha dado a todos los players una {29FF0D}%s [%d]{FFFFFF} con {29FF0D}%d{FFFFFF} municiones", pName(playerid), WeapName, weap, ammo);
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 6] para Usar este Comando!");
}

dcmd_rvida(playerid,params[]) {

	if(PlayerInfo[playerid][pAdmin] >= 3) {
	new vrango, dvida;
	new Float:X, Float:Y, Float:Z;
	if(sscanf(params,"dd", vrango, dvida)) return SendClientMessage(playerid, LIGHTBLUE2, "USO: /rvida [rango] [vida]") && SendClientMessage(playerid, orange, "[Función]: Establece la Vida a los Jugadores que están en el Rango Determinado!");

	for(new i = 0; i < MAX_PLAYERS; i++) {
	    GetPlayerPos(playerid, X, Y, Z);
	    if(IsPlayerConnected(i))
	    {
		if(IsPlayerInRangeOfPoint(i, vrango, X, Y, Z))
		{
		SetPlayerHealth(i, dvida);
		}
		}
		}
	return CMDMessageToAdmins(playerid,"RVIDA");
	} else return SendClientMessage(playerid, red, "No Tienes El Nivel Suficiente Para Usar Este Comando");
}

dcmd_rchaleco(playerid,params[]) {

	if(PlayerInfo[playerid][pAdmin] >= 3) {
	new vrango, dchaleco;
	new Float:X, Float:Y, Float:Z;
	if(sscanf(params,"dd", vrango, dchaleco)) return SendClientMessage(playerid, LIGHTBLUE2, "USO: /rchaleco [rango] [chaleco]") &&
		SendClientMessage(playerid, orange, "[Función]: Establece el Chaleco a los Jugadores que están en el Rango Determinado!");

	for(new i = 0; i < MAX_PLAYERS; i++) {
	    GetPlayerPos(playerid, X, Y, Z);
	    if(IsPlayerConnected(i))
	    {
		if(IsPlayerInRangeOfPoint(i, vrango, X, Y, Z))
		{
		SetPlayerArmour(i, dchaleco);
		}
		}
		}
	return CMDMessageToAdmins(playerid,"RCHALECO");
	} else return SendClientMessage(playerid, red, "No Tienes El Nivel Suficiente Para Usar Este Comando");
}
//================================[ Menu Commands ]=============================

#if defined USE_MENUS

dcmd_lmenu(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 9) {
        if(IsPlayerInAnyVehicle(playerid)) {
        TogglePlayerControllable(playerid,false); return ShowMenuForPlayer(LMainMenu,playerid);
        } else return ShowMenuForPlayer(LMainMenu,playerid);
    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
}
dcmd_ltele(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 4) {
        if(IsPlayerInAnyVehicle(playerid)) {
        TogglePlayerControllable(playerid,false); return ShowMenuForPlayer(LTele,playerid);
        } else return ShowMenuForPlayer(LTele,playerid);
    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 4] para Usar este Comando!");
}
dcmd_lweather(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 4) {
        if(IsPlayerInAnyVehicle(playerid)) {
        TogglePlayerControllable(playerid,false); return ShowMenuForPlayer(LWeather,playerid);
        } else return ShowMenuForPlayer(LWeather,playerid);
    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 4] para Usar este Comando!");
}
dcmd_ltime(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 4) {
        if(IsPlayerInAnyVehicle(playerid)) {
        TogglePlayerControllable(playerid,false); return ShowMenuForPlayer(LTime,playerid);
        } else return ShowMenuForPlayer(LTime,playerid);
    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 4] para Usar este Comando!");
}

dcmd_lweapons(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 4) {
        if(IsPlayerInAnyVehicle(playerid)) {
        TogglePlayerControllable(playerid,false); return ShowMenuForPlayer(XWeapons,playerid);
        } else return ShowMenuForPlayer(XWeapons,playerid);
    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 4] para Usar este Comando!");
}
dcmd_lvehicle(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 4) {
 		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un coche.");
        else { ShowMenuForPlayer(LVehicles,playerid); return TogglePlayerControllable(playerid,false);  }
    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 4] para Usar este Comando!");
}

#endif

//----------------------===== Place & Skin Saving =====-------------------------

dcmd_g(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1 && PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pVip] >= 1)	{
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar /s o /g mientras estás Spectando!");
		if (dUserINT(PlayerName2(playerid)).("x")!=0) {
		    new Float:health;
			GetPlayerHealth(playerid, health);
			if(health > 50) {
			    PutAtPos(playerid);
			    CMDMessageToVips(playerid,"G (Ir a mi posición)");
				return SendClientMessage(playerid,yellow,"Ha sido transportado a su lugar guardado");
			} else return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar /s o /g!");
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted debe guardar un lugar para poder teletransportarse a él.");
	} else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Usted debe ser un Administrador o Vip para utilizar este comando");
}

dcmd_s(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1 && PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pVip] >= 1)	{
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar /s o /g mientras estás Spectando!");
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 50) {
			new Float:x,Float:y,Float:z, interior;
			GetPlayerPos(playerid,x,y,z);	interior = GetPlayerInterior(playerid);
			dUserSetINT(PlayerName2(playerid)).("x",floatround(x));
			dUserSetINT(PlayerName2(playerid)).("y",floatround(y));
			dUserSetINT(PlayerName2(playerid)).("z",floatround(z));
			dUserSetINT(PlayerName2(playerid)).("interior",interior);
			CMDMessageToVips(playerid,"S (Guardar Posición)");
			return SendClientMessage(playerid,yellow,"Usted ha guardado la posición actual.");
		} else return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar /s o /g!");
	} else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Usted debe ser un Administrador o Vip para utilizar este comando");
}

dcmd_guardarskin(playerid,params[]) {
#pragma unused params
if(PlayerInfo[playerid][LoggedIn] == 1 && PlayerInfo[playerid][pVip] >= 1)	{
	 	new SkinID = strval(params);
		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /guardarkin [ID del skin]");
  if((SkinID >= 1) && (SkinID <= 311))
		{
 			dUserSetINT(PlayerName2(playerid)).("FavSkin",SkinID);
		 	format(string2, sizeof(string2), "Has guardado el skin [ID %d]",SkinID);
		 	SendClientMessage(playerid,yellow,string2);
			SendClientMessage(playerid,yellow,"[USA]: /usarskin Para usar el skin o /nousarskin Para borrar el skin usado");
			dUserSetINT(PlayerName2(playerid)).("UseSkin",1);
			CMDMessageToVips(playerid,"GUARDARSKIN");
		} else return SendClientMessage(playerid, green, "[ERROR]: {FFFFFF}ID del skin inválida");
}
return 1;
}

dcmd_usarskin(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1 && PlayerInfo[playerid][pVip] >= 1)	{
	    dUserSetINT(PlayerName2(playerid)).("UseSkin",1);
    	SetPlayerSkin(playerid,dUserINT(PlayerName2(playerid)).("FavSkin"));
    	CMDMessageToVips(playerid,"USARSKIN");
		return SendClientMessage(playerid,yellow,"[INFO]: Skin activado");
		}
return 1;
}

dcmd_nousarskin(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1 && PlayerInfo[playerid][pVip] >= 1)	{
	    dUserSetINT(PlayerName2(playerid)).("UseSkin",0);
	    CMDMessageToVips(playerid,"NOUSARSKIN");
		return SendClientMessage(playerid,yellow,"[INFO]: Skin borrado");
 }
return 1;
}

//====================== [REGISTER  &  LOGIN] ==================================

dcmd_registrarme(playerid,params[])
{
return dcmd_register(playerid,params);
}

dcmd_registro(playerid,params[])
{
return dcmd_register(playerid,params);
}

dcmd_register(playerid,params[])
{
    #pragma unused params
    new dialogstr[256],pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
    if(GetPlayerScore(playerid)<=9) return ShowPlayerDialog(playerid,2018,DIALOG_STYLE_MSGBOX,"{FF8000}ERROR DE REGISTRO || REVOLUCION LATINA FR", "{FF8000}Info: {ffffff}Necesitas 10 de score para poder registrarte, consigue el score.", "Ok", "");
	{
	if(PlayerInfo[playerid][Registered] == 0)
	if(GetPlayerScore(playerid)>=10)
	format(dialogstr,sizeof(dialogstr),"{011AFE}Hola %s \n\n{00FF00}Bienvenido a Revolucion Latina\n\nFelicidades, has conseguido el score requerido para registrarte!!\n ahora ingresa una Contraseña \nPara Guardar Tus Datos (Score, Nivel, Dinero, Experiencia)\n\n{01C8FF}Preparate Para Experimentar La Mayor Diversion", pame), ShowPlayerDialog(playerid,9049,DIALOG_STYLE_PASSWORD, "{FF0000}   || Registro || ~~ RL - Revolucion Latina", dialogstr, "Registrar", "");
    PlayerPlaySound(playerid,1058,0.0,0.0,0.0);
    
    if(PlayerInfo[playerid][Registered] == 1)
	if(GetPlayerScore(playerid)>=10)
	return ShowPlayerDialog(playerid,2018,DIALOG_STYLE_MSGBOX," ", "{FF8000}Info: {ffffff}Tu ya estás registrado!", "Ok", "");
	
	if (PlayerInfo[playerid][LoggedIn] == 1) return ShowPlayerDialog(playerid,2018,DIALOG_STYLE_MSGBOX," ", "{FF8000}Info: {ffffff}Tu ya estás registrado y Logueado", "Ok", "");

	if (udb_Exists(PlayerName2(playerid)))
	return SendClientMessage(playerid,red,"[ERROR]: Esta Cuenta Ya Existe") &&
    SendClientMessage(playerid,orange,"Logueate Usando /Login [Contraseña]");
    }
	return 1;
}

dcmd_login(playerid,params[])
{
    dUserSetINT(PlayerName2(playerid)).("loggedin",1);
    if (PlayerInfo[playerid][LoggedIn] == 1) return SendClientMessage(playerid,red,"[CUENTA]: Usted ya está conectado");
    if (!udb_Exists(PlayerName2(playerid))) return SendClientMessage(playerid,red,"[CUENTA]: La cuenta no existe, por favor, utilice '/register [contraseña]'.");
    if (strlen(params)==0) return SendClientMessage(playerid,red,"[CUENTA]: Uso correcto: '/login [contraseña]'");
    if (udb_CheckLogin(PlayerName2(playerid),params))
	{
		new file[256], tmp3[1000], str[1000], pDeaths;
	   	format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName2(playerid)) );
   		GetPlayerIp(playerid,tmp3,100);
	   	dini_Set(file,"ip",tmp3);
		LoginPlayer(playerid);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);

	    Logged[playerid] = 1;
	    SendClientMessage(playerid, -1, "{0ED59C}|-:-|{C50404}Info{0ED59C}|-:-|{098BEE}: Te conectaste con la cuenta de {00FF00}propiedades.");
			    #if ENABLE_LOGIN_SYSTEM == 1
			    if(PlayerProps[playerid] > 0)
				{
				    format(str, 128, "Tienes {00FF00}%d {ffffff}Propiedades por el momento. Usa {00FF00}/MisPropiedades {FFFFFF}para expandir los detalles.", PlayerProps[playerid]);
				    SendClientMessage(playerid, -1, str);
		}
		#endif

		if(PlayerInfo[playerid][pAdmin] > 0) {
       	new rango[24];
        new IPA[16];
	    GetPlayerIp(playerid, IPA, sizeof IPA);
    if(PlayerInfo[playerid][Deaths] == 0) pDeaths = 1; else pDeaths = PlayerInfo[playerid][Deaths];
         if((PlayerInfo[playerid][Experiencia]>= 0 && PlayerInfo[playerid][Experiencia] <= 1000)) { rango = "Noob"; }
    else if((PlayerInfo[playerid][Experiencia]>= 1001 && PlayerInfo[playerid][Experiencia] <= 2000)) { rango = "Semi-Novato"; }
    else if((PlayerInfo[playerid][Experiencia]>= 2001 && PlayerInfo[playerid][Experiencia] <= 3500)) { rango = "Aprendíz"; }
    else if((PlayerInfo[playerid][Experiencia]>= 3501 && PlayerInfo[playerid][Experiencia] <= 5000)) { rango = "Novato"; }
    else if((PlayerInfo[playerid][Experiencia]>= 5001 && PlayerInfo[playerid][Experiencia] <= 6500)) { rango = "Veterano"; }
    else if((PlayerInfo[playerid][Experiencia]>= 6501 && PlayerInfo[playerid][Experiencia] <= 7000)) { rango = "Psicópata"; }
    else if((PlayerInfo[playerid][Experiencia]>= 7001 && PlayerInfo[playerid][Experiencia] <= 7500)) { rango = "Loco extremo"; }
    else if((PlayerInfo[playerid][Experiencia]>= 7501 && PlayerInfo[playerid][Experiencia] <= 8000)) { rango = "Asesino"; }
    else if((PlayerInfo[playerid][Experiencia]>= 8001 && PlayerInfo[playerid][Experiencia] <= 10000)) { rango = "Sicario Novato"; }
    else if((PlayerInfo[playerid][Experiencia]>= 10001 && PlayerInfo[playerid][Experiencia] <= 11500)) { rango = "Sicario"; }
    else if((PlayerInfo[playerid][Experiencia]>= 11501 && PlayerInfo[playerid][Experiencia] <= 12000)) { rango = "Asesino Pro"; }
    else if((PlayerInfo[playerid][Experiencia]>= 12001 && PlayerInfo[playerid][Experiencia] <= 13000)) { rango = "Rambo ._.!"; }
    else if((PlayerInfo[playerid][Experiencia]>= 13001 && PlayerInfo[playerid][Experiencia] <= 14500)) { rango = "Pro Killer"; }
    else if((PlayerInfo[playerid][Experiencia]>= 14501 && PlayerInfo[playerid][Experiencia] <= 25000)) { rango = "Kratos"; }
    else if((PlayerInfo[playerid][Experiencia]>= 25001 && PlayerInfo[playerid][Experiencia] <= 90000)) { rango = "DiosRL"; }

       	new h, m, s;
       	TotalGameTime(playerid, h, m, s);

       	dUserSetINT(PlayerName2(playerid)).("hours", h);
       	dUserSetINT(PlayerName2(playerid)).("minutes", m);
       	dUserSetINT(PlayerName2(playerid)).("seconds", s);

       	new TxAdm[50];
       	switch(PlayerInfo[playerid][pAdmin])
       	{
       	case 0: TxAdm = "{FFFFFF}Normal";
       	case 1: TxAdm = "{0D00FF}|1|Operador[A]";
       	case 2: TxAdm = "{0D00FF}|2|Operador[M]";
       	case 3: TxAdm = "{0D00FF}|3|Operador[M]";
       	case 4: TxAdm = "{0D00FF}|4|Operador[P]";
       	case 5: TxAdm = "{00FF00}|5|Game Master[A]";
       	case 6: TxAdm = "{00FF00}|6|Game Master[I]";
       	case 7: TxAdm = "{00FF00}|7|Game Master[G]";
       	case 8: TxAdm = "{00FF00}|8|Game Master[P]";
       	case 9: TxAdm = "{FF0000}|9|Co-Manager";
       	case 10: TxAdm = "{FF0000}|10|Owner";
       	}

	    new Vip[50];
       	switch(PlayerInfo[playerid][pVip])
       	{
       	case 0: Vip = "{FFFFFF}Ninguno";
       	case 1: Vip = "{3C3214}Silver";
       	case 2: Vip = "{C3D5DF}Gold";
       	case 3: Vip = "{DFC418}Premium";
       	case 4: Vip = "{209193}Platinum";
       	case 5: Vip = "{FF0000}Esmeralda";
       	case 6: Vip = "{0C242E}Diamond";
       	case 7: Vip = "{FF0000}Extremo";
       	case 8: Vip = "{00FF00}Legendario";
       	case 9: Vip = "{FFFF00}Dios";
       	}

       	format(string2, sizeof(string2), "{050DFA}  || Logueado Correctamente ||");
       	format(str,sizeof(str),"{29FF0D}» Asesinatos: %d\n{0700D7}» Muertes: %d\n{29FF0D}» AdminLevel: %d\n%s\n{0700D7}» Score Race: %d\n{29FF0D}» Duelos Ganados: %d\n{FF0000}» Duelos Perdidos: %d\n{29FF0D}» Score Evento: %d\n{0700D7}» Experiencia: %d\n{FF0000}» Nivel: %d\n{FFFF00}» AxoneCash: {0700D7}%d\n{FF8040}» KDR: %0.2f\n{29FF0D}» Rango: %s\n{0700D7}» Dinero: $%d\n{29FF0D}» Vip: %s\n{0700D7}» Tiempo SV: %d H. %d M. y %d S.\n{29FF0D}» Advertencias: %d\n{FF0000}» Kicks: %d",
       	PlayerInfo[playerid][Kills],PlayerInfo[playerid][Deaths],PlayerInfo[playerid][pAdmin],TxAdm,PlayerInfo[playerid][ScoreRace],PlayerInfo[playerid][ScoreDueloWin],PlayerInfo[playerid][ScoreDueloLose],PlayerInfo[playerid][pScoreEvento],PlayerInfo[playerid][Experiencia],PlayerInfo[playerid][Nivel],PlayerInfo[playerid][AxoneCash],Float:PlayerInfo[playerid][Kills]/Float:pDeaths,rango,GetPlayerMoney(playerid),Vip,h,m,s,PlayerInfo[playerid][Warnings],PlayerInfo[playerid][Kicks]);
       	return ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,string2,str,"Aceptar","");

       	} else return SendClientMessage(playerid,green,"[CUENTA]: Logueado correctamente.");
	}
	else
	{
		PlayerInfo[playerid][FailLogin]++;
		printf("LOGIN: %s a puesto una contraseña incorrecta, contraseña ingresada: (%s) Intentos: [%d]", PlayerName2(playerid), params, PlayerInfo[playerid][FailLogin] );
		if(PlayerInfo[playerid][FailLogin] == MAX_FAIL_LOGINS)
		{
			format(string2, sizeof(string2), "[INFO]: {FFFFFF}%s Ha sido Kickeado del Servidor. [Razón: Login Incorrecto]", PlayerName2(playerid) );
			SendClientMessageToAll(red, string2);
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Revolucion Latina","{FFFFFF} Has sido Kickeado del Servidor \n\n{FF0000}Razón: {FFFFFF}Razón: Login Incorrecto", "Aceptar", "") ;
			print(string2);
			SetTimerEx("KickearPlayer", 50, 0, "i", playerid);
		}
		return SendClientMessage(playerid,red,"[CUENTA]: Error de inicio de sesión! Contraseña incorrecta");
	}
}

dcmd_nuevapass(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1)	{
		if(!strlen(params)) return SendClientMessage(playerid, red, "[USA]: /nuevapass [nueva contraseña]") &&
		SendClientMessage(playerid, orange, "[Función]: Cambias la Contraseña de tu Cuenta!");
		if(strlen(params) < 4) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Minimo 4 carácteres para la contraseña");
		dUserSetINT(PlayerName2(playerid)).("password_hash",udb_hash(params));
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        format(string2, sizeof(string2),"[CUENTA]: Has cambiado tu contraseña ha \"%s\"",params);
		return SendClientMessage(playerid,yellow,string2);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Debes estar logueado para usar este comando");
}
//====================================================================================================================
dcmd_setpass(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 10) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "[USA]: /setpass [playername] [new password]") &&
		SendClientMessage(playerid, orange, "[Función]: Cambias la Contraseña a Especificado Jugador!");
		if(strlen(tmp2) < 4 || strlen(tmp2) > MAX_PLAYER_NAME) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Incorrecto password");
		if(udb_Exists(tmp)) {
			dUserSetINT(tmp).("password_hash", udb_hash(tmp2));
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    	    format(string2, sizeof(string2),"[CUENTA]: Has cambiado la clave de \"%s\" ha \"%s\"", tmp, tmp2);
			return SendClientMessage(playerid,yellow,string2);
		} else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Este player no tiene una cuenta");
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Dueño [Lvl 10] para Usar este Comando!");
}

#if defined USE_STATS
dcmd_resetstats(playerid,params[]) {
    #pragma unused params
    
	if(PlayerInfo[playerid][LoggedIn] == 1)	{
		// save as backup
	   	dUserSetINT(PlayerName2(playerid)).("oldkills",PlayerInfo[playerid][Kills]);
	   	dUserSetINT(PlayerName2(playerid)).("olddeaths",PlayerInfo[playerid][Deaths]);
	   	dUserSetINT(PlayerName2(playerid)).("oldexperiencia",PlayerInfo[playerid][Experiencia]);
	   	dUserSetINT(PlayerName2(playerid)).("oldscorerace",PlayerInfo[playerid][ScoreRace]);
	   	dUserSetINT(PlayerName2(playerid)).("oldscoreduelowin",PlayerInfo[playerid][ScoreDueloWin]);
	   	dUserSetINT(PlayerName2(playerid)).("oldscoreduelolose",PlayerInfo[playerid][ScoreDueloLose]);
		// stats reset
		PlayerInfo[playerid][Kills] = 0;
		PlayerInfo[playerid][Deaths] = 0;
		PlayerInfo[playerid][Experiencia] = 0;
		PlayerInfo[playerid][ScoreRace] = 0;
		PlayerInfo[playerid][ScoreDueloWin] = 0;
        PlayerInfo[playerid][ScoreDueloLose] = 0;
		dUserSetINT(PlayerName2(playerid)).("kills",PlayerInfo[playerid][Kills]);
	   	dUserSetINT(PlayerName2(playerid)).("deaths",PlayerInfo[playerid][Deaths]);
	   	dUserSetINT(PlayerName2(playerid)).("experiencia",PlayerInfo[playerid][Experiencia]);
	   	dUserSetINT(PlayerName2(playerid)).("RaceScore",PlayerInfo[playerid][ScoreRace]);
	   	dUserSetINT(PlayerName2(playerid)).("scoreduelowin",PlayerInfo[playerid][ScoreDueloWin]);
	   	dUserSetINT(PlayerName2(playerid)).("scoreduelolose",PlayerInfo[playerid][ScoreDueloLose]);
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return SendClientMessage(playerid,yellow,"[CUENTA]: Has reseteado tus Stats. Tus Kills (asesinatos), Deaths (muertes), ScoreRace, ScoreDuelos y Experiencia están en: 0");
	} else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Usted debe tener una cuenta para utilizar este comando");
}
#endif

#if defined USE_STATS
dcmd_resettime(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1)	{
		// stats reset
		PlayerInfo[playerid][hours] = 0;
		PlayerInfo[playerid][mins] = 0;
		PlayerInfo[playerid][secs] = 0;
		dUserSetINT(PlayerName2(playerid)).("hours",PlayerInfo[playerid][hours]);
		dUserSetINT(PlayerName2(playerid)).("minutes",PlayerInfo[playerid][mins]);
		dUserSetINT(PlayerName2(playerid)).("seconds",PlayerInfo[playerid][secs]);
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return SendClientMessage(playerid,yellow,"[CUENTA]: Has reseteado tu Tiempo en: 0");
	} else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Usted debe tener una cuenta para utilizar este comando");
}
#endif

#if defined USE_STATS
dcmd_resetnivel(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1)	{
		// save as backup
	   	dUserSetINT(PlayerName2(playerid)).("oldnivel",PlayerInfo[playerid][Nivel]);
		// stats reset
		PlayerInfo[playerid][Nivel] = 0;
		dUserSetINT(PlayerName2(playerid)).("nivel",PlayerInfo[playerid][Nivel]);
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return SendClientMessage(playerid,yellow,"[CUENTA]: Has reseteado tu Nivel y están en: 0");
	} else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Usted debe tener una cuenta para utilizar este comando");
}
#endif
	 
#if defined USE_STATS
dcmd_stats(playerid,params[]) {
	new str[1000],pDeaths,player1,IPA[16];
	if(!strlen(params)) player1 = playerid;
	else player1 = strval(params);

	    if(IsPlayerConnected(player1)) {
	    GetPlayerIp(player1, IPA, sizeof IPA);
 		if(PlayerInfo[player1][Deaths] == 0) pDeaths = 1; else pDeaths = PlayerInfo[player1][Deaths];
 		new Vip[100];
 		new rango[44];
        if((PlayerInfo[player1][Experiencia]>= 0 && PlayerInfo[player1][Experiencia] <= 1000)) { rango = "Noob"; }
    else if((PlayerInfo[player1][Experiencia]>= 1001 && PlayerInfo[player1][Experiencia] <= 2000)) { rango = "Semi-Novato"; }
    else if((PlayerInfo[player1][Experiencia]>= 2001 && PlayerInfo[player1][Experiencia] <= 3500)) { rango = "Aprendíz"; }
    else if((PlayerInfo[player1][Experiencia]>= 3501 && PlayerInfo[player1][Experiencia] <= 5000)) { rango = "Novato"; }
    else if((PlayerInfo[player1][Experiencia]>= 5001 && PlayerInfo[player1][Experiencia] <= 6500)) { rango = "Veterano"; }
    else if((PlayerInfo[player1][Experiencia]>= 6501 && PlayerInfo[player1][Experiencia] <= 7000)) { rango = "Psicópata"; }
    else if((PlayerInfo[player1][Experiencia]>= 7001 && PlayerInfo[player1][Experiencia] <= 7500)) { rango = "Loco extremo"; }
    else if((PlayerInfo[player1][Experiencia]>= 7501 && PlayerInfo[player1][Experiencia] <= 8000)) { rango = "Asesino"; }
    else if((PlayerInfo[player1][Experiencia]>= 8001 && PlayerInfo[player1][Experiencia] <= 10000)) { rango = "Sicario Novato"; }
    else if((PlayerInfo[player1][Experiencia]>= 10001 && PlayerInfo[player1][Experiencia] <= 11500)) { rango = "Sicario"; }
    else if((PlayerInfo[player1][Experiencia]>= 11501 && PlayerInfo[player1][Experiencia] <= 12000)) { rango = "Asesino Pro"; }
    else if((PlayerInfo[player1][Experiencia]>= 12001 && PlayerInfo[player1][Experiencia] <= 13000)) { rango = "Rambo ._.!"; }
    else if((PlayerInfo[player1][Experiencia]>= 13001 && PlayerInfo[player1][Experiencia] <= 14500)) { rango = "Pro Killer"; }
    else if((PlayerInfo[player1][Experiencia]>= 14501 && PlayerInfo[player1][Experiencia] <= 25000)) { rango = "Kratos"; }
    else if((PlayerInfo[player1][Experiencia]>= 25001 && PlayerInfo[player1][Experiencia] <= 90000)) { rango = "DiosRL"; }

	new h, m, s;
    TotalGameTime(player1, h, m, s);

	dUserSetINT(PlayerName2(player1)).("hours", h);
	dUserSetINT(PlayerName2(player1)).("minutes", m);
	dUserSetINT(PlayerName2(player1)).("seconds", s);

switch(PlayerInfo[player1][pVip])
{
case 0: Vip = "{FFFFFF}Ninguno";
case 1: Vip = "{3C3214}Silver";
case 2: Vip = "{C3D5DF}Gold";
case 3: Vip = "{DFC418}Premium";
case 4: Vip = "{209193}Platinum";
case 5: Vip = "{FF0000}Esmeralda";
case 6: Vip = "{0C242E}Diamond";
case 7: Vip = "{FF0000}Extremo";
case 8: Vip = "{00FF00}Legendario";
case 9: Vip = "{FFFF00}Dios";
}
format(string2, sizeof(string2), "{39EB16}%s {BCC3E1}",PlayerName2(player1));
format(str,sizeof(str),"{29FF0D}» Asesinatos: %d\n{0700D7}» Muertes: %d\n{0700D7}» Score Race: %d\n{29FF0D}» Duelos Ganados: %d\n{FF0000}» Duelos Perdidos: %d\n{29FF0D}» Score Evento: %d\n{0700D7}» Experiencia: %d\n{FF0000}» Nivel: %d\n{FFFF00}» AxoneCash: {0700D7}%d\n{FF8040}» KDR: %0.2f\n{29FF0D}» Rango: %s\n{0700D7}» Dinero: $%d\n{29FF0D}» Vip: %s\n{0700D7}» Tiempo SV: %d H. %d M. y %d S.\n{29FF0D}» Advertencias: %d\n{FF0000}» Kicks: %d",
PlayerInfo[player1][Kills],PlayerInfo[player1][Deaths],PlayerInfo[player1][ScoreRace],PlayerInfo[player1][ScoreDueloWin],PlayerInfo[player1][ScoreDueloLose],PlayerInfo[player1][pScoreEvento],PlayerInfo[player1][Experiencia],PlayerInfo[player1][Nivel],PlayerInfo[player1][AxoneCash],Float:PlayerInfo[player1][Kills]/Float:pDeaths,rango,GetPlayerMoney(player1),Vip,h,m,s,PlayerInfo[player1][Warnings],PlayerInfo[player1][Kicks]);
return ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,string2,str,"Aceptar","");
} else return SendClientMessage(playerid, red, "[ERROR]:{FFFFFF} Jugador no conectado");
}
#endif


dcmd_drogas(playerid,params[])
{
	#pragma unused params
	new
	    Byte[940];
    strcat(Byte,"{FFFB00}» {00FFFF}Lista de drogas, precios e información:");
	strcat(Byte,"\n \n");
	strcat(Byte,"{000000} {FFFFFF}/Marihuana         {B400E6}({FFFB00}Precio {2AFF17}$4.000. {FFFB00}El efecto durará 1 minutos.{B400E6})");
	strcat(Byte,"\n \n");
	strcat(Byte,"{000000} {FFFFFF}/Heroína              {B400E6}({FFFB00}Precio {2AFF17}$5.000. {FFFB00}El efecto durará 2 minutos.{B400E6})");
	strcat(Byte,"\n \n");
	strcat(Byte,"{000000} {FFFFFF}/Cocaína              {B400E6}({FFFB00}Precio {2AFF17}$5.000. {FFFB00}El efecto durará 3 minutos.{B400E6})");
	strcat(Byte,"\n \n");
	strcat(Byte,"{000000} {FFFFFF}/Extasis               {B400E6}({FFFB00}Precio {2AFF17}$7.000. {FFFB00}El efecto durará 4 minutos.{B400E6})");
	strcat(Byte,"\n \n");
	strcat(Byte,"{000000} {FFFFFF}/LSD                     {B400E6}({FFFB00}Precio {2AFF17}$10.000. {FFFB00}El efecto durará 4 minutos.{B400E6})");
	strcat(Byte,"\n \n");
	strcat(Byte,"{000000} {FFFFFF}/Metanfetamina {B400E6}({FFFB00}Precio {2AFF17}$10.000. {FFFB00}El efecto durará 5 minutos.{B400E6})");
	strcat(Byte,"\n \n");
	strcat(Byte,"{FFFFFF}Recuerda no abusar de las drogas por que perderás a los que te quieren.");
	strcat(Byte,"\n");
	strcat(Byte,"{FFFFFF}Además te cagará el cerebro.");
	ShowPlayerDialog(playerid,Dialog_Drogas,DIALOG_STYLE_MSGBOX,"{A8A49E}Drogas",Byte,"OK","");
	return 1;
}
//------------------------------------------------------------------------------
dcmd_marihuana(playerid,params[])
{
	#pragma unused params
	if(InfoDrogas[playerid][UsaDrogas] == 0)
	{
        if(GetPlayerMoney(playerid) > 4000)
        {
			new
			    Byte[103],
			    Nombre[MAX_PLAYER_NAME];
			GetPlayerName(playerid,Nombre,sizeof(Nombre));
			format(Byte,sizeof(Byte),"{FF0000}*** {FFFFFF}%s [%d] {FF0000}¡Se ha drogado con Marihuana y los violará a todos!",Nombre,playerid);
			SendClientMessageToAll(COLOR_INACTIVO,Byte);
			GameTextForPlayer(playerid,"~r~~h~~h~]]] ~b~~h~~h~Modo ~g~~h~~h~marihuana ~b~~h~~h~encendido XD ~r~~h~~h~]]]",5000,3);
			SetTimerEx("TerminarEfectoDeLaDroga", 60000, 0,"e",playerid);
			SetTimerEx("ComenzarEfectoDeDroga", 500, 0,"e",playerid);
            SetPlayerWeather(playerid, -70);
            GivePlayerMoney(playerid, -4000);
            SetPlayerDrunkLevel(playerid, 7000);
            ApplyAnimation(playerid,"ped","Smoke_in_car",4.1,1,1,1,1,1);
        }
        else
        {
            SendClientMessage(playerid, COLOR_INACTIVO, "{FF0000}<!> {FFFFFF}No tienes dinero para comprar Marihuana.");
        }

	}
	if(InfoDrogas[playerid][UsaDrogas] == 1) return SendClientMessage(playerid,COLOR_INACTIVO,"{FF0000}<!> {FFFFFF}Ya estás drogado, espera a que se termine el efecto."),
											       GameTextForPlayer(playerid,"~r~Ya estas drogado~n~espera a que se termine el efecto.",5000,3);
	return 1;
}
//------------------------------------------------------------------------------
dcmd_heroina(playerid,params[])
{
	#pragma unused params
	if(InfoDrogas[playerid][UsaDrogas] == 0)
	{
        if(GetPlayerMoney(playerid) > 5000)
        {
			new
			    Byte[103],
			    Nombre[MAX_PLAYER_NAME];
			GetPlayerName(playerid,Nombre,sizeof(Nombre));
			format(Byte,sizeof(Byte),"{FF0000}*** {FFFFFF}%s [%d] {FF0000}¡Se ha drogado con Heroína y los violará a todos!",Nombre,playerid);
			SendClientMessageToAll(COLOR_INACTIVO,Byte);
			GameTextForPlayer(playerid,"~r~~h~~h~]]] ~b~~h~~h~Modo ~g~~h~~h~heroina ~b~~h~~h~encendido XD ~r~~h~~h~]]]",5000,3);
			SetTimerEx("TerminarEfectoDeLaDroga", 120000, 0,"e",playerid);
			SetTimerEx("ComenzarEfectoDeDroga", 500, 0,"e",playerid);
            SetPlayerWeather(playerid, -50);
            GivePlayerMoney(playerid, -5000);
            SetPlayerDrunkLevel(playerid, 10000);
            ApplyAnimation(playerid,"ped","Smoke_in_car",4.1,1,1,1,1,1);
        }
        else
        {
            SendClientMessage(playerid, COLOR_INACTIVO, "{FF0000}<!> {FFFFFF}No tienes dinero para comprar Heroina.");
        }

	}
	if(InfoDrogas[playerid][UsaDrogas] == 1) return SendClientMessage(playerid,COLOR_INACTIVO,"{FF0000}<!> {FFFFFF}Ya estás drogado, espera a que se termine el efecto."),
	   									      GameTextForPlayer(playerid,"~r~Ya estas drogado~n~espera a que se termine el efecto.",5000,3);
	return 1;
}
//------------------------------------------------------------------------------
dcmd_cocaina(playerid,params[])
{
	#pragma unused params
	if(InfoDrogas[playerid][UsaDrogas] == 0)
	{
        if(GetPlayerMoney(playerid) > 5000)
        {
			new
			    Byte[103],
			    Nombre[MAX_PLAYER_NAME];
			GetPlayerName(playerid,Nombre,sizeof(Nombre));
			format(Byte,sizeof(Byte),"{FF0000}*** {FFFFFF}%s [%d] {FF0000}¡Se ha drogado con Cocaína y los violará a todos!",Nombre,playerid);
			SendClientMessageToAll(COLOR_INACTIVO,Byte);
			GameTextForPlayer(playerid,"~r~~h~~h~]]] ~b~~h~~h~Modo ~g~~h~~h~cocaina ~b~~h~~h~encendido XD ~r~~h~~h~]]]",5000,3);
			SetTimerEx("TerminarEfectoDeLaDroga", 180000, 0,"e",playerid);
			SetTimerEx("ComenzarEfectoDeDroga", 500, 0,"e",playerid);
            SetPlayerWeather(playerid, -40);
            GivePlayerMoney(playerid, -5000);
            SetPlayerDrunkLevel(playerid, 20000);
            ApplyAnimation(playerid,"ped","Smoke_in_car",4.1,1,1,1,1,1);
        }
        else
        {
            SendClientMessage(playerid, COLOR_INACTIVO, "{FF0000}<!> {FFFFFF}No tienes dinero para comprar Cocaina.");
        }
	}
	if(InfoDrogas[playerid][UsaDrogas] == 1) return SendClientMessage(playerid,COLOR_INACTIVO,"{FF0000}<!> {FFFFFF}Ya estás drogado, espera a que se termine el efecto."),
	    								      GameTextForPlayer(playerid,"~r~Ya estas drogado~n~espera a que se termine el efecto.",5000,3);
	return 1;
}
//------------------------------------------------------------------------------
dcmd_extasis(playerid,params[])
{
	#pragma unused params
	if(InfoDrogas[playerid][UsaDrogas] == 0)
	{
        if(GetPlayerMoney(playerid) > 7000)
        {
			new
			    Byte[103],
			    Nombre[MAX_PLAYER_NAME];
			GetPlayerName(playerid,Nombre,sizeof(Nombre));
			format(Byte,sizeof(Byte),"{FF0000}*** {FFFFFF}%s [%d] {FF0000}¡Se ha drogado con Extasis y los violará a todos!",Nombre,playerid);
			SendClientMessageToAll(COLOR_INACTIVO,Byte);
			GameTextForPlayer(playerid,"~r~~h~~h~]]] ~b~~h~~h~Modo ~g~~h~~h~extasis ~b~~h~~h~encendido XD ~r~~h~~h~]]]",5000,3);
			SetTimerEx("TerminarEfectoDeLaDroga", 240000, 0,"e",playerid);
			SetTimerEx("ComenzarEfectoDeDroga", 500, 0,"e",playerid);
            SetPlayerWeather(playerid, -32);
            GivePlayerMoney(playerid, -7000);
            SetPlayerDrunkLevel(playerid, 30000);
            ApplyAnimation(playerid,"ped","Smoke_in_car",4.1,1,1,1,1,1);
        }
        else
        {
            SendClientMessage(playerid, COLOR_INACTIVO, "{FF0000}<!> {FFFFFF}No tienes dinero para comprar Extasis.");
        }

	}
	if(InfoDrogas[playerid][UsaDrogas] == 1) return SendClientMessage(playerid,COLOR_INACTIVO,"{FF0000}<!> {FFFFFF}Ya estás drogado, espera a que se termine el efecto."),
											       GameTextForPlayer(playerid,"~r~Ya estas drogado~n~espera a que se termine el efecto.",5000,3);
	return 1;
}
//------------------------------------------------------------------------------
dcmd_lsd(playerid,params[])
{
	#pragma unused params
	if(InfoDrogas[playerid][UsaDrogas] == 0)
	{
        if(GetPlayerMoney(playerid) > 10000)
        {
			new
			    Byte[100],
			    Nombre[MAX_PLAYER_NAME];
			GetPlayerName(playerid,Nombre,sizeof(Nombre));
			format(Byte,sizeof(Byte),"{FF0000}*** {FFFFFF}%s [%d] {FF0000}¡Se ha drogado con LSD y los violará a todos!",Nombre,playerid);
			SendClientMessageToAll(COLOR_INACTIVO,Byte);
			GameTextForPlayer(playerid,"~r~~h~~h~]]] ~b~~h~~h~Modo ~g~~h~~h~lsd ~b~~h~~h~encendido XD ~r~~h~~h~]]]",5000,3);
			SetTimerEx("TerminarEfectoDeLaDroga", 240000, 0,"e",playerid);
			SetTimerEx("ComenzarEfectoDeDroga", 500, 0,"e",playerid);
            SetPlayerWeather(playerid, -47);
            GivePlayerMoney(playerid, -10000);
            SetPlayerDrunkLevel(playerid, 40000);
            ApplyAnimation(playerid,"ped","Smoke_in_car",4.1,1,1,1,1,1);
        }
        else
        {
            SendClientMessage(playerid, COLOR_INACTIVO, "{FF0000}<!> {FFFFFF}No tienes dinero para comprar LSD.");
        }

	}
	if(InfoDrogas[playerid][UsaDrogas] == 1) return SendClientMessage(playerid,COLOR_INACTIVO,"{FF0000}<!> {FFFFFF}Ya estás drogado, espera a que se termine el efecto."),
											       GameTextForPlayer(playerid,"~r~Ya estas drogado~n~espera a que se termine el efecto.",5000,3);
	return 1;
}
//------------------------------------------------------------------------------
dcmd_metanfetamina(playerid,params[])
{
	#pragma unused params
	if(InfoDrogas[playerid][UsaDrogas] == 0)
	{
        if(GetPlayerMoney(playerid) > 10000)
        {
			new
			    Byte[108],
			    Nombre[MAX_PLAYER_NAME];
			GetPlayerName(playerid,Nombre,sizeof(Nombre));
			format(Byte,sizeof(Byte),"{FF0000}*** {FFFFFF}%s [%d] {FF0000}¡Se ha drogado con Metanfetamina y los violará a todos!",Nombre,playerid);
			SendClientMessageToAll(COLOR_INACTIVO,Byte);
			GameTextForPlayer(playerid,"~r~~h~~h~]]]~n~~b~~h~~h~Modo ~g~~h~~h~metanfetamina ~b~~h~~h~encendido XD~n~~r~~h~~h~]]]",5000,3);
			SetTimerEx("TerminarEfectoDeLaDroga", 300000, 0,"e",playerid);
			SetTimerEx("ComenzarEfectoDeDroga", 500, 0,"e",playerid);
            SetPlayerWeather(playerid, -1);
            GivePlayerMoney(playerid, -10000);
            SetPlayerDrunkLevel(playerid, 50000);
            ApplyAnimation(playerid,"ped","Smoke_in_car",4.1,1,1,1,1,1);
        }
        else
        {
            SendClientMessage(playerid, COLOR_INACTIVO, "{FF0000}<!> {FFFFFF}No tienes dinero para comprar Metanfetamina.");
        }

	}

	if(InfoDrogas[playerid][UsaDrogas] == 1) return SendClientMessage(playerid,COLOR_INACTIVO,"{FF0000}<!> {FFFFFF}Ya estás drogado, espera a que se termine el efecto."),
											       GameTextForPlayer(playerid,"~r~Ya estas drogado~n~espera a que se termine el efecto.",5000,3);
	return 1;
}
//------------------------------------------------------------------------------


LoginPlayer(playerid)
{
	if(ServerInfo[GiveMoney] == 1) {GivePlayerMoney(playerid, dUserINT(PlayerName2(playerid)).("money") ); }
	dUserSetINT(PlayerName2(playerid)).("loggedin",1);
	PlayerInfo[playerid][Deaths] = (dUserINT(PlayerName2(playerid)).("deaths"));
	PlayerInfo[playerid][Kills] = (dUserINT(PlayerName2(playerid)).("kills"));
	PlayerInfo[playerid][Nivel] = (dUserINT(PlayerName2(playerid)).("nivel"));
	PlayerInfo[playerid][Experiencia] = (dUserINT(PlayerName2(playerid)).("experiencia"));
	PlayerInfo[playerid][ScoreRace] = (dUserINT(PlayerName2(playerid)).("RaceScore"));
	PlayerInfo[playerid][ScoreDueloWin] = (dUserINT(PlayerName2(playerid)).("ScoreDueloWin"));
	PlayerInfo[playerid][ScoreDueloLose] = (dUserINT(PlayerName2(playerid)).("ScoreDueloLose"));
	PlayerInfo[playerid][Banka] = (dUserINT(PlayerName2(playerid)).("Banka"));
 	PlayerInfo[playerid][pAdmin] = (dUserINT(PlayerName2(playerid)).("level"));
 	PlayerInfo[playerid][Kicks] = (dUserINT(PlayerName2(playerid)).("Kicks"));
 	PlayerInfo[playerid][pVip] = (dUserINT(PlayerName2(playerid)).("AccountType"));
   	PlayerInfo[playerid][hours] = dUserINT(PlayerName2(playerid)).("hours");
   	PlayerInfo[playerid][mins] = dUserINT(PlayerName2(playerid)).("minutes");
   	PlayerInfo[playerid][secs] = dUserINT(PlayerName2(playerid)).("seconds");
   	dUserSetINT(PlayerName2(playerid)).("loggedin",1);
	PlayerInfo[playerid][Registered] = 1;
 	PlayerInfo[playerid][LoggedIn] = 1;
}

//==============================================================================
public OnPlayerCommandText(playerid, cmdtext[])
{
dcmd(mievento,8,cmdtext);
dcmd(irevento,8,cmdtext);
dcmd(salirevento,11,cmdtext);

if(PlayerInfoE[playerid][NoEvento] == 1 && PlayerInfo[playerid][pAdmin] == 0)
{
SendClientMessage(playerid,ERROR_COLOR,"[ERROR]: {FFFFFF}No puedes usar comandos en el Evento! Usa /salirevento para Salir!");
return 1;
}

if(PlayerInfo[playerid][EnEvento] == 1 && PlayerInfo[playerid][pAdmin] == 0)
{
SendClientMessage(playerid,ERROR_COLOR,"[ERROR]: {FFFFFF}No puedes usar comandos en el Evento!");
return 1;
}

if(EnDuelo[playerid] == 1)
{
SendClientMessage(playerid,ERROR_COLOR,"[ERROR]: {FFFFFF}No puedes usar comandos mientras estés Dueleando!");
return 1;
}

if(PlayerInfo[playerid][Jailed] == 1 && PlayerInfo[playerid][pAdmin] == 0)
{
SendClientMessage(playerid,ERROR_COLOR,"[ERROR]: {FFFFFF}No puedes usar comandos en la carcel!");
return 1;
}

	if(strcmp(cmdtext, "/out", true) == 0)
	{
		if(Minijuego[playerid] == 1 || InformacionL[playerid][PAR] == 1 || JoinedD[playerid] == 1)
		{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,24,300);
		GivePlayerWeapon(playerid,26,300);
		GivePlayerWeapon(playerid,31,300);
		GivePlayerWeapon(playerid,32,300);
		GivePlayerWeapon(playerid,34,300);
		GivePlayerWeapon(playerid,8,1);
		GivePlayerWeapon(playerid,14,1);
		GivePlayerWeapon(playerid,1,1);
		Minijuego[playerid] = 0;
		Minigun[playerid] = 0;
		Minigun2[playerid] = 0;
		Minigun3[playerid] = 0;
		Rocket[playerid] = 0;
		Rocket2[playerid] = 0;
		CS16[playerid] = 0;
		Mario[playerid] = 0;
		Desmadre[playerid] = 0;
		SetPlayerHealth(playerid, 100);
		SetPlayerWorldBounds(playerid,20000.0000, -20000.0000, 20000.0000, -20000.0000);
		SetPlayerArmour(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerTeam(playerid, 255);
		SpawnPlayer(playerid);
		InformacionL[playerid][PAR] = 0;
		PlayerPlaySound(playerid,1063,0.0,0.0,0.0);
		SendClientMessage(playerid, COLOR_VERDE, "[INFO]: Has salido con exito!");
		GameTextForPlayer(playerid,"~r~Has salido con exito!",4000,3);
		}
		else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No estás en un Minijuego o Fiesta DJ.");
		return 1;
	}
	
	if(strcmp(cmdtext,"/facebook",true) == 0)
	{
	SendClientMessage(playerid,blue,"[FACEBOOK]: {FFFFFF}El URL del grupo es '{0700D7}www.facebook.com/groups/revolucionlatina2016/{FFFFFF}'. ¡Envía la invitación!");
	return 1;
	}

	if(!strcmp(cmdtext, "/Autos", true) || !strcmp(cmdtext, "/v", true))
 	{
	if (SoloWW2[playerid]) return SendClientMessage(playerid, COLOR_YELLOW, "No puedes usar esto Estando en Zonas WW2!!");
		if(!IsPlayerInAnyVehicle(playerid))
		{
		ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "{00EEFF}Autos De {FF0000}Revolucion {FFFFFF}Latina", "{FF8000}Autos\n{FF0000}Autos Rápidos\n{FE2E2E}Motos y Bicicletas\n{00FF00}Camiones y Camionetas\n{FFFFFF}Aviones\n{80FF00}Helicópteros\n{0000FF}Botes\n{DBA901}Autos de Guerra", "Seleccionar","Cancelar");
		}
		else
		{
		SendClientMessage(playerid,ERROR_COLOR,"[ERROR]: {FFFFFF}Ya estás en un vehículo, Sal del vehículo he intentalo nuevamente");
		}
		return 1;
		}

	if(strcmp(cmdtext, "/exit",  true) == 0)
	{
	    if(InformacionL[playerid][PAR] == 0)
	    return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No estás en Parkour, Isla o Salto!");
	    InformacionL[playerid][PAR] = 0;
	    SpawnPlayer(playerid);
	    SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "[INFO]: Salistes de Parkour, Isla o Salto.");
	    GameTextForPlayer(playerid,"~r~Salistes de ~n~Parkour, Isla o Salto!",4000,3);
		return 1;
	}

    if (strcmp("/afk", cmdtext, true) == 0)
	{
        new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No puedes estar en un vehículo al usar /afk, bájate primero!");
	        return 1;
		}
		if(Informacion[playerid][AFK] == 0)
		{
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
      		format(string2, sizeof(string2), "{FFFFFF}[INFO]: %s [%d] está ahora en modo AFK {FF0000}[Ausente]. {FFFFFF}Players AFK: {00FF00}/afks{FFFFFF}!", sendername, playerid);
      		SendClientMessageToAll(COLOR_ROJO, string2);
      		GameTextForPlayer(playerid,"~r~ Modo AFK ~n~Activado!!",4000,3);
    		TogglePlayerControllable(playerid, 0);
    		Informacion[playerid][AFK] = 1;
    		Informacion[playerid][SHH] = 1;
            SetPlayerVirtualWorld(playerid, 8);
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Ya estás en modo AFK!");
		return 1;
		}
		else
		{
		SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar el AFK!");
		return 1;
		}
	}
	if (strcmp("/salirafk", cmdtext, true) == 0)
	{
        if(Informacion[playerid][AFK] == 1)
		{
			TogglePlayerControllable(playerid,1);
    		Informacion[playerid][AFK] = 0;
    		Informacion[playerid][SHH] = 0;
    		SetPlayerInterior(playerid,0);
    		SetPlayerVirtualWorld(playerid, 0);
    		GameTextForPlayer(playerid,"~b~ Modo AFK ~n~Desactivado!!",4000,3);
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
      		format(string2, sizeof(string2), "{FFFFFF}[INFO]: %s [%d] ha salido del modo AFK {251EFF}[Volvió]. {FFFFFF}Players AFK: {00FF00}/afks{FFFFFF}!", sendername, playerid);
      		SendClientMessageToAll(COLOR_BLUE, string2);
			return 1;
		}
		else
		{
		SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No estás en modo AFK!");
		return 1;
		}

	}
	
	if(Minijuego[playerid] == 1 || Desmadre[playerid] == 1 || InformacionL[playerid][PAR] == 1)
	{
		SendClientMessage(playerid,ERROR_COLOR,"{0ED59C}|-:-|{C50404}Error{0ED59C}|-:-|{098BEE}: No se pueden usar comandos acá. Usa /Out ... /Kill.");
		return 1;
	}

    if(Informacion[playerid][AFK] == 1)
    {
        SendClientMessage(playerid,COLOR_ROJO,"{0ED59C}|-:-|{C50404}Error{0ED59C}|-:-|{098BEE}: No se pueden usar comandos en AFK. Usa /Salirafk.)");
	    return 1;
    }
    

	dcmd(clan, 4, cmdtext);
	dcmd(deletezone, 10, cmdtext);
	
	
	
//=========== -Sistema DJ By Carlosxp- ===========//




if(strcmp(cmdtext,"/prepararfiesta",true) == 0)
{
	if(IsADJ[playerid] == 1)
	{
	    if(PartyStarted == 0 && PartyPrepared == 0)
	    {
	            PartyPrepared = 1;
				CurrentParticipants = 0;
	            SendClientMessage(playerid, azulcito, "{38A6E6}.:|ATENCIÓN|:. Estás preparando un concierto, use /empezarfiesta ¡para empezar una vez que haya 5 personas!");
	            GetPlayerPos(playerid, Float:PartyX, Float:PartyY, Float:PartyZ);
	            for(new i = 0; i < MAX_PLAYERS; i++)
 				{
				    ShowPlayerDialog(i, DIALOG_PARTY, DIALOG_STYLE_MSGBOX, "Comienza un concierto en...", "El primer concierto de RL, ¿desea ingresar?", "Si", "No");
				}
	    }
	    else return SendClientMessage(playerid, red, "{38A6E6}.:|ERROR|:. Ya existe un concierto en curso (o una fiesta ya está preparado, él usó /empezarfiesta ).");
	}
	else return SendClientMessage(playerid, red, "{38A6E6}.:|ERROR|:. {FFFFFF}No está autorizado para utilizar éste comando.");
	return 1;
}

if(strcmp(cmdtext,"/empezarfiesta",true) == 0)
{
	if(IsADJ[playerid] == 1)
	{
	    if(PartyStarted == 0)
	    {
	        	if(CurrentParticipants >= MinimumParticipants)
				{
				    PartyStarted = 1;
				    PartyPrepared = 0;
				    SendClientMessageToAll(green, "{38A6E6}.:|INFO|:. {FFFFFF}5 usuarios se han unido, ¡estás a tiempo de llegar!.");
				}
				else return SendClientMessage(playerid, red, "{38A6E6}.:|ERROR|:. {FFFFFF}Debe esperar al menos 5 personas a unirse primero ! ::.");
	    }
	    else return SendClientMessage(playerid, red, "{38A6E6}.:|ERROR|:. {FFFFFF}Ya existe un concierto en curso (o una fiesta ya está preparada, él usó /empezarfiesta).");
	}
	else return SendClientMessage(playerid, red, "{38A6E6}.:|ERROR|:. {FFFFFF}No está autorizado para utilizar éste comando.");
	return 1;
}
if(strcmp(cmdtext,"/play",true) == 0)
{
	if(IsADJ[playerid] == 1)
	{
	    if(PartyStarted == 0)
	    {
 			ShowPlayerDialog(playerid, DIALOG_MUSICNAME, DIALOG_STYLE_INPUT, "¿Cuál es el nombre de las canciones?", "¿Cuál es el nombre de la canción que vas a poner?", "Aceptar", "Cancelar");
 	    }
	    else return SendClientMessage(playerid, red, "{38A6E6}|-:-|ERROR|-:-|: {FFFFFF}No hay un concierto que se celebra en el momento.");
	}
	else return SendClientMessage(playerid, red, "{38A6E6}|-:-|ERROR|-:-|: {FFFFFF}No está autorizado para utilizar éste comando.");
	return 1;
}
if(strcmp(cmdtext, "/presentacion", true) == 0)
{
if(IsADJ[playerid] == 0) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar este comando.");
MoveObject(Palo,82.35, 87.96, 1000.31,5.00);
MoveObject(Palo2,82.35, 90.20, 1000.31,5.00);
MoveObject(Palo3,82.35, 92.32, 1000.31,5.00);
MoveObject(Palo4,82.35, 94.54, 1000.31,5.00);
MoveObject(Palo5,82.35, 96.77, 1000.31,5.00);
MoveObject(Palo6,82.35, 98.90, 1000.31,5.00);
MoveObject(Palo7,82.35, 100.99, 1000.31,5.00);
MoveObject(Palo8,82.35, 102.76, 1000.31,5.00);
GameTextForAll("DJ RENATO!",2500,1);
SetTimerEx("Sevahumo",25000,true,"i",playerid);
SetTimerEx("Bajaymas",7500,true,"i",playerid);
return 1;
}


if(strcmp(cmdtext, "/presentarme",true) == 0)
{
if(IsADJ[playerid] == 0) return SendClientMessage(playerid, red,"[ERROR]: {FFFFFF}No puedes usar este comando.");
SetPlayerPos(playerid, 77.7062, 96.1579, 985.4383);
SendClientMessage(playerid, green, "[INFO]: {FFFFFF}Para presentarte usa {FF0000}/presentacion{FFFFFF} y te presentarás automáticamente.");
return 1;
}

if(strcmp(cmdtext,"/terminarfiesta",true) == 0)
{
    if(IsADJ[playerid] == 1)
	{
	    if(PartyStarted == 1 || PartyPrepared == 1)
	    {
	        new string[128];
			PartyStarted = 0;
			PartyPrepared = 0;
			CurrentParticipants = 0;
			format(string, sizeof(string), "{38A6E6}|-:-|INFO|-:-|: {FFFFFF}El DJ %s ha finalizado el concierto. ¡Nos vemos pronto :)!.", N(playerid));
	    }
	    else return SendClientMessage(playerid, red, "{38A6E6}.:|INFO|:. {FFFFFF}No hay fiesta que se celebra en el momento.");
	}
	else return SendClientMessage(playerid, red, "{38A6E6}.:|INFO|:. {FFFFFF}Usted no está autorizado a utilizar este comando.");
	return 1;
}

//==============================================================================
	if (strcmp(cmdtext,"/evsurvival", true)==0)
    {
 	if(SBOX == 1 || SOP7 == 1 || GT == 1 || SSWAT == 1 || SHG == 1 || SRHINO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
	if(SEVENTO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
	if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Desactiva tu God!");
	ShowPlayerDialog(playerid, 5154, DIALOG_STYLE_LIST, "|| Survival Arena ||", "Liberty City\nBox {FF0000}[Nuevo]", "Elegir", "Cancelar");
    return 1;
    }

	if (strcmp(cmdtext,"/survival", true)==0)
    {
	    if(SBOX == 0) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}El evento no está Activado!");
	    if(balason[playerid] == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva las balas explosivas! (/balase)");
       if(vKnockOut[playerid] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva el VKNOCKOUT para ir al counter!");
        if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Desactiva tu God!");
        if(PlayerInfo[playerid][EnEvento] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya estás en el Evento!");
	    if(boxplaying == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya comenzó el Evento!");
		if(EstaEnFly[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Desactiva el /fly antes de ir al evento!");
        if(DBP_Stats[playerid] >= 0) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Tienes que salir del derby antes! (Pon /Derby2 para salir!)");
	    if(boxon == 0)
	    {
            if(PlayerInfo[playerid][pAdmin] <2) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");}
			boxon = 1;
	        PlayerInfo[playerid][PlayerinBox] = 1;
   	        PlayerInfo[playerid][EnEvento] = 1;
	        boxrank = 1;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Sobrevivientes: ~w~%d",boxrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
	        TogglePlayerControllable(playerid, 0);
	        SetPlayerVirtualWorld(playerid,7);
			if(arenabox1 == 1)
			{
				SetPlayerInterior(playerid,1);
				SetPlayerPos(playerid,-794.5078,492.2195,1376.1953);
	            InterpolateCameraPos(playerid, -988.182861, 401.625152, 1373.336669, -738.948303, 506.041259, 1386.421386, 20000);
	            InterpolateCameraLookAt(playerid, -983.878173, 404.096740, 1372.735839, -743.874938, 505.270721, 1386.054931, 20000);
			}
			else if(arenabox2 == 1)
			{
				SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid, 1041.8075, 3779.8628, 4.5020);
	            InterpolateCameraPos(playerid, 1048.2373, 3730.6431, 259.4452, 1047.8110, 3766.4849, 65.9441, 20000);
	            InterpolateCameraLookAt(playerid, 1048.2094, 3731.6387, 254.6801, 1047.8169, 3767.4805, 60.3691, 20000);
			}
	        ResetPlayerWeapons(playerid);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{FF0000}|| Evento Survival ||","{FF0000}Objetivo:\n\n{FFFFFF}Mata A Todos Y Sobrevive\nEl Premio Espera Por Ti.!", "Aceptar", "") ;
			SendClientMessage(playerid,green,"[INFO]: Has activado el Evento de Supervivencia!");
            if (Puno==1) { SetPlayerHealth(playerid,10); }
		    else if (Pala==1){ SetPlayerHealth(playerid,10); GivePlayerWeapon(playerid,6,1);}
		    else if (Bate==1) { SetPlayerHealth(playerid,10); GivePlayerWeapon(playerid,5,1);}
		    else if (Dildo==1) { SetPlayerHealth(playerid,10); GivePlayerWeapon(playerid,12,1);}
		    else if (Golf==1) { SetPlayerHealth(playerid,10); GivePlayerWeapon(playerid,2,1);}
		    else if (Nmm==1) { SetPlayerHealth(playerid,100); GivePlayerWeapon(playerid,22,500);}
		    else if (Desert==1) { SetPlayerHealth(playerid,100); GivePlayerWeapon(playerid,24,500);}
		    else if (Shotgun==1) { SetPlayerHealth(playerid,100); GivePlayerWeapon(playerid,25,500);}
		    else if (Spray==1) { SetPlayerHealth(playerid,10); GivePlayerWeapon(playerid,41,500);}
	        SetPlayerArmour(playerid,0);
	        startvar[4] = 1;
	        boxtimer = SetTimer("StartBox", 31000, 0);
			CountTimerSurvival = SetTimer("CountTillSurvival", 999, 1);
            CMDMessageToAdmins(playerid,"RLEVENTOS");
            CountAmountSv = 30;
            foreach(Player, i)
			{
            StopAudioStreamForPlayer(i);
			PlayAudioStreamForPlayer(i, "http://www.dropbox.com/s/xput22cxlqq7do9/Evento%20survival.mp3?dl=1");
			}
			return 1;
		}
		else if(boxon == 1)
		{
	        PlayerInfo[playerid][PlayerinBox] = 1;
	        TogglePlayerControllable(playerid, 0);
	        SetPlayerVirtualWorld(playerid,7);
	        PlayerInfo[playerid][EnEvento] = 1;
			if(arenabox1 == 1)
			{
				SetPlayerInterior(playerid,1);
				new RandomBX = random(8);
	            switch(RandomBX)
				{
	                case 0: SetPlayerPos(playerid, -794.5078,492.2195,1376.1953);
	                case 1: SetPlayerPos(playerid, -784.3000,490.8948,1376.1953);
	                case 2: SetPlayerPos(playerid, -783.4004,496.8858,1376.1953);
	                case 3: SetPlayerPos(playerid, -787.3870,495.2898,1376.1953);
	                case 4: SetPlayerPos(playerid, -794.9577,506.0290,1371.7422);
	                case 5: SetPlayerPos(playerid, -788.9881,505.6488,1371.7422);
	                case 6: SetPlayerPos(playerid, -780.9147,504.6486,1371.7422);
				    case 7: SetPlayerPos(playerid, -779.4028,507.6292,1371.7422);
	 			}
	            InterpolateCameraPos(playerid, -988.182861, 401.625152, 1373.336669, -738.948303, 506.041259, 1386.421386, 20000);
	            InterpolateCameraLookAt(playerid, -983.878173, 404.096740, 1372.735839, -743.874938, 505.270721, 1386.054931, 20000);
			}
			else if(arenabox2 == 1)
			{
				SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid, 1041.8075, 3779.8628, 4.5020);
				new RandomBX = random(8);
	            switch(RandomBX)
				{
	                case 0: SetPlayerPos(playerid, 1049.87317, 3788.86304, 4.50200);
	                case 1: SetPlayerPos(playerid, 1041.56848, 3788.36279, 4.50200);
	                case 2: SetPlayerPos(playerid, 1041.98792, 3771.18945, 4.50200);
	                case 3: SetPlayerPos(playerid, 1049.00549, 3771.35034, 4.50200);
	                case 4: SetPlayerPos(playerid, 1055.33569, 3778.26807, 4.50200);
	                case 5: SetPlayerPos(playerid, 1035.14893, 3779.43164, 4.50200);
	                case 6: SetPlayerPos(playerid, 1028.81616, 3762.62061, 7.61710);
	                case 7: SetPlayerPos(playerid, 1061.95129, 3798.06470, 7.57710);
	 			}
	            InterpolateCameraPos(playerid, 1048.2373, 3730.6431, 259.4452, 1047.8110, 3766.4849, 65.9441, 20000);
	            InterpolateCameraLookAt(playerid, 1048.2094, 3731.6387, 254.6801, 1047.8169, 3767.4805, 60.3691, 20000);
			}
			boxrank++;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Sobrevivientes: ~w~%d",boxrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
			ResetPlayerWeapons(playerid);
	        if (Puno==1) {SetPlayerHealth(playerid,10);}
		    else if (Pala==1){SetPlayerHealth(playerid,10); GivePlayerWeapon(playerid,6,1);}
		    else if (Bate==1) {SetPlayerHealth(playerid,10); GivePlayerWeapon(playerid,5,1);}
		    else if (Dildo==1) {SetPlayerHealth(playerid,10); GivePlayerWeapon(playerid,12,1);}
		    else if (Golf==1) {SetPlayerHealth(playerid,10); GivePlayerWeapon(playerid,2,1);}
		    else if (Nmm==1) {SetPlayerHealth(playerid,100); GivePlayerWeapon(playerid,22,500);}
		    else if (Desert==1) {SetPlayerHealth(playerid,100); GivePlayerWeapon(playerid,24,500);}
		    else if (Shotgun==1) {SetPlayerHealth(playerid,100); GivePlayerWeapon(playerid,25,500);}
		    else if (Spray==1) {SetPlayerHealth(playerid,10); GivePlayerWeapon(playerid,41,500);}
	        SetPlayerArmour(playerid,0);
	        format(string2, sizeof(string2), "{FF0000}[Evento Supervivencia]: {FFFFFF}%s {00EEFF}ha entrado a la {00FF00}Supervivencia!", pName(playerid));
			SendClientMessageToAll(0x33AA33AA,string2);
			GameTextForPlayer(playerid,"~b~Espera a que ~n~comienze!",4000,3);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{FF0000}|| Evento Survival ||","{FF0000}Objetivo:\n\n{FFFFFF}Mata A Todos Y Sobrevive\nEl Premio Espera Por Ti.!", "Aceptar", "") ;
			}
			return 1;
}
	 	 if (strcmp(cmdtext,"/evop7", true)==0)
    {
        if(PlayerInfo[playerid][pAdmin] <2) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");}
		if(SBOX == 1 || SOP7 == 1 || GT == 1 || SSWAT == 1 || SHG == 1 || SRHINO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
		if(SEVENTO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
		ShowPlayerDialog(playerid,5055,DIALOG_STYLE_LIST,"Elige Mapa","Rush Challenge\nDeath Square\nTerreno Gansters","Elegir", "Cancelar");
 		return 1;
	}
		 	 if (strcmp(cmdtext,"/op7", true)==0)
    {
		  if(SOP7 == 0) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}El evento no está Activado!");
		  if(balason[playerid] == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva las balas explosivas! (/balase)");
       if(vKnockOut[playerid] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva el VKNOCKOUT para ir al counter!");
        if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Desactiva tu God!");
        if(PlayerInfo[playerid][EnEvento] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya estás en el Evento!");
		if(EstaEnFly[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Desactiva el /fly antes de ir al evento!");
	    if(tdmplaying == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya comenzó el Evento!");
        if(DBP_Stats[playerid] >= 0) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Tienes que salir del derby antes! (Pon /Derby2 para salir!)");
	    if(tdmon == 0)
	    {
            if(PlayerInfo[playerid][pAdmin] <2) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");}
	        tdmon = 1;
	        PlayerInfo[playerid][PlayerinTdm] = 1;
	        PlayerInfo[playerid][EnEvento] = 1;
	        tdmrank = 1;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",tdmrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
	        TogglePlayerControllable(playerid, 0);
            SetPlayerVirtualWorld(playerid,7);
            if (RushChallenge==1) { new r = random(sizeof(RUSHBLUE)); SetPlayerPos(playerid, RUSHBLUE[r][0], RUSHBLUE[r][1], RUSHBLUE[r][2]); SetPlayerFacingAngle(playerid,0.0000); InterpolateCameraPos(playerid, 3352.421630, 3249.380371, 101.850135, 3353.318115, 3166.165283, 57.273918, 3000); InterpolateCameraLookAt(playerid, 3352.387695, 3245.144042, 99.194564, 3353.284667, 3161.991699, 54.520744, 3000);}
		    else if (DeathSquare==1) { new r = random(sizeof(DEATHBLUE)); SetPlayerPos(playerid, DEATHBLUE[r][0], DEATHBLUE[r][1], DEATHBLUE[r][2]); SetPlayerFacingAngle(playerid,88.1348); InterpolateCameraPos(playerid, -1761.882812, -3637.132324, 153.383773, -1750.555786, -3577.179443, 80.554557, 3000); InterpolateCameraLookAt(playerid, -1762.049560, -3634.517822, 149.125091, -1751.901977, -3574.518554, 76.541114, 3000);}
		    else if (Otro==1) { new r = random(sizeof(OTROBLUE)); SetPlayerPos(playerid, OTROBLUE[r][0], OTROBLUE[r][1], OTROBLUE[r][2]); SetPlayerFacingAngle(playerid,86.9673); InterpolateCameraPos(playerid, -2335.557617, 3.024714, 94.482887, -2336.532470, -61.911529, 63.309024, 3000); InterpolateCameraLookAt(playerid, -2335.838134, -1.967402, 94.472381, -2336.599853, -65.692817, 60.038349, 3000);}
            ResetPlayerWeapons(playerid);
	        GivePlayerWeapon(playerid,1,1);
	        GivePlayerWeapon(playerid,24,50000);
	        GivePlayerWeapon(playerid,31,50000);
	        GivePlayerWeapon(playerid,32,50000);
	        SetPlayerHealth(playerid,100);
	        SetPlayerArmour(playerid,0);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00EEFF}|| Evento OP7 ||","{FF0000}Objetivo:\n\n{FFFFFF}Mata Al Equipo Contrario Sin Morir\nRecuerda Divertirte Y Sobrevivir.!", "Aceptar", "") ;
			SetPlayerColor(playerid,0x0000BBAA);// BLUE
	        SetPlayerTeam(playerid, 1);
	        blueplayers = 1;
	        redplayers = 0;
	        tdmcolor = 1;
	        startvar[1] = 1;
	        CountTimerOP7 = SetTimer("CountTillOP7", 999, 1);
            CMDMessageToAdmins(playerid,"RLEVENTOS");
            SendClientMessage(playerid,green,"[INFO]: Has activado el Evento OP7!");
            CountAmount7 = 30;
            foreach(Player, i)
			{
			PlayAudioStreamForPlayer(i, "http://www.dropbox.com/s/pivhxt57huax3g4/Evento%20Operation7.mp3?dl=1");
			}
	        tdmtimer = SetTimer("Starttdm", 31000, 0);
			return 1;
	        } else if(tdmon == 1 && tdmcolor == 1) {
	        PlayerInfo[playerid][PlayerinTdm] = 1;
	        PlayerInfo[playerid][EnEvento] = 1;
	        tdmrank++;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",tdmrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
			TogglePlayerControllable(playerid, 0);
	        SetPlayerVirtualWorld(playerid,7);
	        if (RushChallenge==1) { new r = random(sizeof(RUSHRED)); SetPlayerPos(playerid, RUSHRED[r][0], RUSHRED[r][1], RUSHRED[r][2]); SetPlayerFacingAngle(playerid,181.9021); InterpolateCameraPos(playerid, 3352.421630, 3249.380371, 101.850135, 3353.318115, 3166.165283, 57.273918, 3000); InterpolateCameraLookAt(playerid, 3352.387695, 3245.144042, 99.194564, 3353.284667, 3161.991699, 54.520744, 3000);}
		    else if (DeathSquare==1) { new r = random(sizeof(DEATHRED)); SetPlayerPos(playerid, DEATHRED[r][0], DEATHRED[r][1], DEATHRED[r][2]); SetPlayerFacingAngle(playerid,271.0580); InterpolateCameraPos(playerid, -1761.882812, -3637.132324, 153.383773, -1750.555786, -3577.179443, 80.554557, 3000); InterpolateCameraLookAt(playerid, -1762.049560, -3634.517822, 149.125091, -1751.901977, -3574.518554, 76.541114, 3000);}
		    else if (Otro==1) { new r = random(sizeof(OTRORED)); SetPlayerPos(playerid, OTRORED[r][0], OTRORED[r][1], OTRORED[r][2]); SetPlayerFacingAngle(playerid,260.8271); InterpolateCameraPos(playerid, -2335.557617, 3.024714, 94.482887, -2336.532470, -61.911529, 63.309024, 3000); InterpolateCameraLookAt(playerid, -2335.838134, -1.967402, 94.472381, -2336.599853, -65.692817, 60.038349, 3000);}
	        ResetPlayerWeapons(playerid);
	        GivePlayerWeapon(playerid,1,1);
	        GivePlayerWeapon(playerid,24,50000);
	        GivePlayerWeapon(playerid,31,50000);
	        GivePlayerWeapon(playerid,32,50000);
	        SetPlayerHealth(playerid,100);
	        SetPlayerArmour(playerid,0);
	        SetPlayerColor(playerid,0xffe400ff);// AMARILLO
	        GameTextForPlayer(playerid,"~r~Espera a que ~n~comienze!",4000,3);
	        PlayAudioStreamForPlayer(playerid, "http://www.dropbox.com/s/pivhxt57huax3g4/Evento%20Operation7.mp3?dl=1");
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00EEFF}|| Evento OP7 ||","{FF0000}Objetivo:\n\n{FFFFFF}Mata Al Equipo Contrario Sin Morir\nRecuerda Divertirte Y Sobrevivir.!", "Aceptar", "") ;
			SetPlayerTeam(playerid, 2);
	        redplayers++;
	        tdmcolor = 0;
	        format(string2, sizeof(string2), "[Evento OP7]: {FFFFFF}%s ha entrado al OP7 del equipo {FDFF37}Amarillo!", pName(playerid));//
			SendClientMessageToAll(0x33AA33AA,string2);
			return 1;
	        } else if(tdmon == 1 && tdmcolor == 0) {
	        PlayerInfo[playerid][PlayerinTdm] = 1;
	        PlayerInfo[playerid][EnEvento] = 1;
	        tdmrank++;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",tdmrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
			TogglePlayerControllable(playerid, 0);
            SetPlayerVirtualWorld(playerid,7);
	        if (RushChallenge==1) { new r = random(sizeof(RUSHBLUE)); SetPlayerPos(playerid, RUSHBLUE[r][0], RUSHBLUE[r][1], RUSHBLUE[r][2]); SetPlayerFacingAngle(playerid,0.0000); InterpolateCameraPos(playerid, 3352.421630, 3249.380371, 101.850135, 3353.318115, 3166.165283, 57.273918, 3000); InterpolateCameraLookAt(playerid, 3352.387695, 3245.144042, 99.194564, 3353.284667, 3161.991699, 54.520744, 3000);}
		    else if (DeathSquare==1) { new r = random(sizeof(DEATHBLUE)); SetPlayerPos(playerid, DEATHBLUE[r][0], DEATHBLUE[r][1], DEATHBLUE[r][2]); SetPlayerFacingAngle(playerid,88.1348); InterpolateCameraPos(playerid, -1761.882812, -3637.132324, 153.383773, -1750.555786, -3577.179443, 80.554557, 3000); InterpolateCameraLookAt(playerid, -1762.049560, -3634.517822, 149.125091, -1751.901977, -3574.518554, 76.541114, 3000);}
		    else if (Otro==1) { new r = random(sizeof(OTROBLUE)); SetPlayerPos(playerid, OTROBLUE[r][0], OTROBLUE[r][1], OTROBLUE[r][2]); SetPlayerFacingAngle(playerid,86.9673); InterpolateCameraPos(playerid, -2335.557617, 3.024714, 94.482887, -2336.532470, -61.911529, 63.309024, 3000); InterpolateCameraLookAt(playerid, -2335.838134, -1.967402, 94.472381, -2336.599853, -65.692817, 60.038349, 3000);}
	        ResetPlayerWeapons(playerid);
	        GivePlayerWeapon(playerid,1,1);
	        GivePlayerWeapon(playerid,24,50000);
	        GivePlayerWeapon(playerid,31,50000);
	        GivePlayerWeapon(playerid,32,50000);
	        SetPlayerHealth(playerid,100);
	        SetPlayerArmour(playerid,0);
	        SetPlayerColor(playerid,0x0000BBAA);// BLUE
	        GameTextForPlayer(playerid,"~b~Espera a que ~n~comienze!",4000,3);
	        PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/177110854/M%C3%BAsica/track2op7.mp3");
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00EEFF}|| Evento OP7 ||","{FF0000}Objetivo:\n\n{FFFFFF}Mata Al Equipo Contrario Sin Morir\nRecuerda Divertirte Y Sobrevivir.!", "Aceptar", "") ;
		    SetPlayerTeam(playerid, 1);
	        blueplayers++;
	        tdmcolor = 1;
	        format(string2, sizeof(string2), "[Evento OP7]: {FFFFFF}%s ha entrado al OP7 del equipo {001EFF}Azul!", pName(playerid));//
			SendClientMessageToAll(0x33AA33AA,string2);
		    }
			return 1;
}
	 	 if (strcmp(cmdtext,"/evgetwet", true)==0)
    {
 	if(SBOX == 1 || SOP7 == 1 || GT == 1 || SSWAT == 1 || SHG == 1 || SRHINO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
	//if(SEVENTO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
		if( Minigamer_{playerid} != false)
	    return SendClientMessage(playerid,azulcito,"{00FF00}[INFO]: Listo! Cuando El Juego Comienze Serás Llevado Al No Te Mojes!");
	    if(inProgress < 1)
	    {
            if(PlayerInfo[playerid][pAdmin] <2) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");}
		    VIEW_FROM_ABOVE = true;
			Minigamer_{playerid} = true;
			Iter_Add(_Minigamer,playerid);
			GT = 1;
			CountTimerGET = SetTimer("CountTillGET", 999, 1);
            CMDMessageToAdmins(playerid,"RLEVENTOS");
            SendClientMessage(playerid,green,"[INFO]: Has activado el Evento No Te Mojes!");
            CountAmountGet = 30;
            foreach(Player, i)
			{
			PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/u/177110854/M%C3%BAsica/otros.mp3");
			}
			SetTimer("MinigameCountdown",31000,0);
			for( new i; i < MAX_SLOTS; i++ )
		    {
			Objects_[0][i] = CreateObject(1649,gCoords[i][0],gCoords[i][1],gCoords[i][2],gCoords[i][3],gCoords[i][4],gCoords[i][5],gCoords[i][6]);
			if(!VIEW_FROM_ABOVE)
			Objects_[1][i] = CreateObject(1649,gCoords[i][0],gCoords[i][1],gCoords[i][2],gCoords[i][3] -180.0,gCoords[i][4],gCoords[i][5],gCoords[i][6]);
			Iter_Add(_Objects,i);
		    }
		    inProgress = 1;
	    }
	    else
	    {
    	Minigamer_{playerid} = true;
 		Iter_Add(_Minigamer,playerid);
        SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Tú Ya Estás En el No Te Mojes!");
		}
		return 1;
}
	 	 if (strcmp(cmdtext,"/evgetwet1", true)==0)
    {
	if(SBOX == 1 || SOP7 == 1 || GT == 1 || SSWAT == 1 || SHG == 1 || SRHINO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
	//if(SEVENTO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
		if( Minigamer_{playerid} != false)
		return SendClientMessage(playerid,azulcito,"[INFO]: Listo! Cuando El Juego Comienze Serás Llevado Al No Te Mojes!");
	    if(inProgress < 1)
	    {
            if(PlayerInfo[playerid][pAdmin] <2) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");}
			VIEW_FROM_ABOVE = false;
			Minigamer_{playerid} = true;
			Iter_Add(_Minigamer,playerid);
			GT = 1;
			CountTimerGET = SetTimer("CountTillGET", 999, 1);
            CMDMessageToAdmins(playerid,"RLEVENTOS");
            SendClientMessage(playerid,green,"[INFO]: Has activado el Evento No Te Mojes!");
            CountAmountGet = 30;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",Iter_Count(_Minigamer));
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
            foreach(Player, i)
			{
			PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/u/177110854/M%C3%BAsica/otros.mp3");
			}
			SetTimer("MinigameCountdown",31000,0);
			for( new i; i < MAX_SLOTS; i++ )
		    {
			Objects_[0][i] = CreateObject(1649,gCoords[i][0],gCoords[i][1],gCoords[i][2],gCoords[i][3],gCoords[i][4],gCoords[i][5],gCoords[i][6]);
			if(!VIEW_FROM_ABOVE)
			Objects_[1][i] = CreateObject(1649,gCoords[i][0],gCoords[i][1],gCoords[i][2],gCoords[i][3] -180.0,gCoords[i][4],gCoords[i][5],gCoords[i][6]);
			Iter_Add(_Objects,i);
		    }
		    inProgress = 1;
	    }
	    else
	    {
    	Minigamer_{playerid} = true;
 		Iter_Add(_Minigamer,playerid);
        SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Tú Ya Estás En el No Te Mojes!");
		}
		return 1;
}
	 	 if (strcmp(cmdtext,"/notemojes", true)==0)
    {
      if(GT == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El Minijuego no está Activado!");
		    if( Minigamer_{playerid} != false)
			return SendClientMessage(playerid,azulcito,"[INFO]: Listo! Cuando El Juego Comienze Serás Llevado Al No Te Mojes!");
		    else if(inProgress > 1)
			return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No Te Mojes Minijuego En Proceso... Por Favor Espere!");
		    else if(Iter_Count(_Minigamer) > MAX_SLOTS)
			return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Ya está Lleno!");
            if(DBP_Stats[playerid] >= 0) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Tienes que salir del derby antes! (Pon /Derby2 para salir!)");
			Minigamer_{playerid} = true;
	 		Iter_Add(_Minigamer,playerid);
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",Iter_Count(_Minigamer));
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
			SendClientMessage(playerid,azulcito,"[INFO]: Has entrado en el No Te Mojes, espera a que Comiense!");
            if( inProgress < 1 )
	        {
	    	Minigamer_{playerid} = true;
	 		Iter_Add(_Minigamer,playerid);
            SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Ya Estás en el No Te Mojes!");
            }
		    return 1;
}
	if(strcmp(cmdtext,"/evhg", true)==0)
    {
 	if(SBOX == 1 || SOP7 == 1 || GT == 1 || SSWAT == 1 || SHG == 1 || SRHINO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
	if(SEVENTO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
	if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Desactiva tu God!");
    ShowPlayerDialog(playerid,5180,DIALOG_STYLE_LIST,"Elige Mapa","Mapa Bayside\nMapa Montgomery {FF0000}[Nuevo]","Elegir", "Cancelar");
    return 1;
    }

    if(strcmp(cmdtext,"/hg", true)==0)
    {
	    if(SHG == 0) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}El evento no está Activado!");
	    if(balason[playerid] == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva las balas explosivas! (/balase)");
       if(vKnockOut[playerid] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva el VKNOCKOUT para ir al evento!");
        if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Desactiva tu God!");
        if(PlayerInfo[playerid][EnEvento] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya estás en el Evento!");
        if(PlayerInfo[playerid][PlayerinHg] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya estás en el Evento!");
		if(EstaEnFly[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Desactiva el /fly antes de ir al evento!");
		if(SaltarMas[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Usa /supersaltosff (Para desactivar los supersaltos e ir al evento)!");
		if(hgplaying == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya comenzó el Evento!");
        if(DBP_Stats[playerid] >= 0) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Tienes que salir del derby antes! (Pon /Derby2 para salir!)");
	    if(hgon == 0)
	    {
            if(PlayerInfo[playerid][pAdmin] <2) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");}
	        hgon = 1;
	        PlayerInfo[playerid][PlayerinHg] = 1;
   	        PlayerInfo[playerid][EnEvento] = 1;
	        hgrank = 1;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",hgrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
	        TogglePlayerControllable(playerid, 0);
	        SetPlayerInterior(playerid,0);
	        SetPlayerVirtualWorld(playerid,7);
	        ResetPlayerWeapons(playerid);
            SetPlayerTime(playerid,24,0);
			SendClientMessage(playerid,green,"[INFO]: Has activado el Evento de Hunger Games!");
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{FF0000}|| Evento HG ||","{FF0000}Objetivo:\n\n{FFFFFF}Encuentra Las Armas Que Estan Por Todo El Mapa\nY Elimina A Cuantos Puedas Y Ganar El Evento.!", "Aceptar", "") ;
	        startvar[4] = 1;
	        hgtimer = SetTimer("StartHg", 31000, 0);
			CountTimerHg = SetTimer("CountTillHG", 999, 1);
            CMDMessageToAdmins(playerid,"RLEVENTOS");
            CountAmountHg = 30;
			if(ArenaHG1 == 1)
			{
				new r = random(sizeof(SpawnHg));
				SetPlayerPos(playerid, SpawnHg[r][0], SpawnHg[r][1], SpawnHg[r][2]);
	            InterpolateCameraPos(playerid, -2303.443115, 2252.984130, 43.120346, -2545.374267, 2464.643066, 18.844251, 6666);
	            InterpolateCameraLookAt(playerid, -2300.486572, 2256.863037, 42.018768, -2541.636718, 2461.350097, 19.277301, 6666);
			    Arma1 = CreatePickup(353, 3, -2378.3298,2410.6401,8.5177, 7);
			    Arma2 = CreatePickup(356, 3, 2508.6475,2343.5398,4.9799, 7);
			    Arma3 = CreatePickup(346, 3, -2568.7009,2256.8291,4.9766, 7);
			    Arma4 = CreatePickup(357, 3, 2587.5112,2257.6382,6.5399, 7);
			    Arma5 = CreatePickup(349, 3, -2458.9263,2263.4585,4.9596, 7);
			    Arma6 = CreatePickup(339, 3, -2445.4893,2302.3809,4.9828, 7);
			    Arma7 = CreatePickup(348, 3, -2458.6252,2303.7600,4.9844, 7);
			    Arma8 = CreatePickup(355, 3, -2477.1960,2415.4592,16.2123, 7);
				Arma9 = CreatePickup(335, 3, -2229.3469,2320.2893,7.5469, 7);
			    Arma10 = CreatePickup(350, 3, -2225.1863,2337.0745,7.5469, 7);
			    Arma11 = CreatePickup(353, 3, -2395.7114,2465.3879,10.3956, 7);
			    Arma12 = CreatePickup(356, 3, -2432.5261,2496.7498,13.7817, 7);
			    Arma13 = CreatePickup(346, 3, -2487.2073,2494.5928,18.0562, 7);
			    Arma14 = CreatePickup(357, 3, -2515.6750,2384.3330,17.3004, 7);
			    Arma15 = CreatePickup(349, 3, -2513.2446,2365.8977,4.9868, 7);
			    Arma16 = CreatePickup(339, 3, -2544.5959,2358.1975,4.9844, 7);
			    Arma17 = CreatePickup(348, 3, -2499.9006,2288.4094,4.9844, 7);
			    Arma18 = CreatePickup(355, 3, -2407.5825,2367.1191,5.5729, 7);
				Arma19 = CreatePickup(335, 3, -2375.6033,2379.4817,4.4421, 7);
			    Arma20 = CreatePickup(350, 3, -2624.4751,2291.3579,8.2894, 7);
			    VidaHg = CreatePickup(1240, 3, -2426.5024,2337.2834,4.8359, 7);
			    ChalecoHg = CreatePickup(1242, 3, -2457.1162,2434.2605,14.8653, 7);
			}
			else if(ArenaHG2 == 1)
			{
				new r = random(sizeof(SpawnHg2));
				SetPlayerPos(playerid, SpawnHg2[r][0], SpawnHg2[r][1], SpawnHg2[r][2]);
	            InterpolateCameraPos(playerid, 1370.9515, 438.5856, 346.4601, 1309.6918, 294.6932, 31.3899 , 6666);
	            InterpolateCameraLookAt(playerid, 1370.5535, 437.6636, 343.7101, 1309.2677, 293.7827, 31.2198, 6666);
			    Arma1 = CreatePickup(353, 3, 1290.30493, 385.26480, 19.65800, 7);
			    Arma2 = CreatePickup(356, 3, 1316.19019, 458.85492, 20.37315, 7);
			    Arma3 = CreatePickup(346, 3, 1444.87256, 370.13177, 19.42816, 7);
			    Arma4 = CreatePickup(357, 3, 1340.37109, 282.55109, 19.90093, 7);
			    Arma5 = CreatePickup(349, 3, 1197.33740, 162.40204, 20.50957, 7);
			    Arma6 = CreatePickup(339, 3, 1297.82678, 302.96399, 27.88133, 7);
			    Arma7 = CreatePickup(348, 3, 1271.77856, 295.56317, 20.37121, 7);
			    Arma8 = CreatePickup(355, 3, 1255.64746, 369.02780, 20.00118, 7);
				Arma9 = CreatePickup(335, 3, 1311.32434, 349.82346, 19.68864, 7);
			    Arma10 = CreatePickup(350, 3, 1362.38464, 250.74368, 19.88784, 7);
			    Arma11 = CreatePickup(353, 3, 1340.12134, 196.06583, 19.80755, 7);
			    Arma12 = CreatePickup(356, 3, 1290.21814, 249.17294, 20.21250, 7);
			    Arma13 = CreatePickup(346, 3, 1289.27795, 159.94342, 20.66437, 7);
			    Arma14 = CreatePickup(357, 3, 1430.52588, 230.27003, 19.59043, 7);
			    Arma15 = CreatePickup(349, 3, 1192.07788, 239.17308, 20.04128, 7);
			    Arma16 = CreatePickup(339, 3, 1401.30640, 399.53183, 19.76325, 7);
			    Arma17 = CreatePickup(348, 3, 1359.55396, 309.44116, 24.57057, 7);
			    Arma18 = CreatePickup(355, 3, 1316.63269, 327.67120, 19.65659, 7);
				Arma19 = CreatePickup(335, 3, 1368.19299, 366.18158, 20.82018, 7);
			    Arma20 = CreatePickup(350, 3, 1313.97095, 402.26190, 20.28075, 7);
			    VidaHg = CreatePickup(1240, 3, 1484.48059, 317.99887, 19.76205, 7);
			    ChalecoHg = CreatePickup(1242, 3, 1430.44141, 332.99893, 18.96191, 7);
			}
            foreach(Player, i)
			{
            StopAudioStreamForPlayer(i);
			PlayAudioStreamForPlayer(i, "http://www.dropbox.com/s/g09mfbqr8kdstzz/Evento%20HG.mp3?dl=1");
			}
			return 1;
	    }
		else if(hgon == 1)
		{
	        PlayerInfo[playerid][PlayerinHg] = 1;
   	        PlayerInfo[playerid][EnEvento] = 1;
	        TogglePlayerControllable(playerid, 0);
	        SetPlayerInterior(playerid,0);
            SetPlayerTime(playerid,24,0);
			SetPlayerVirtualWorld(playerid,7);
	        SetPlayerArmour(playerid,100);
         	hgrank++;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",hgrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
			ResetPlayerWeapons(playerid);
	        SetPlayerArmour(playerid,0);
            SetPlayerColor(playerid, COLOR_ROJO);
			format(string2, sizeof(string2), "{00EEFF}[Evento Hunger Games]: {00FF00}%s ha entrado a {FFFFFF}los Hunger Games!", pName(playerid));
			SendClientMessageToAll(0x33AA33AA,string2);
			if(ArenaHG1 == 1)
			{
				new r = random(sizeof(SpawnHg));
				SetPlayerPos(playerid, SpawnHg[r][0], SpawnHg[r][1], SpawnHg[r][2]);
	            InterpolateCameraPos(playerid, -2303.443115, 2252.984130, 43.120346, -2545.374267, 2464.643066, 18.844251, 6666);
	            InterpolateCameraLookAt(playerid, -2300.486572, 2256.863037, 42.018768, -2541.636718, 2461.350097, 19.277301, 6666);
			}
			else if(ArenaHG2 == 1)
			{
				new r = random(sizeof(SpawnHg2));
				SetPlayerPos(playerid, SpawnHg2[r][0], SpawnHg2[r][1], SpawnHg2[r][2]);
	            InterpolateCameraPos(playerid, 1370.9515, 438.5856, 346.4601, 1309.6918, 294.6932, 31.3899 , 6666);
	            InterpolateCameraLookAt(playerid, 1370.5535, 437.6636, 343.7101, 1309.2677, 293.7827, 31.2198, 6666);
			}
			GameTextForPlayer(playerid,"~b~Espera a que ~n~comienze!",4000,3);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{FF0000}|| Evento HG ||","{FF0000}Objetivo:\n\n{FFFFFF}Encuentra Las Armas Que Estan Por Todo El Mapa\nY Elimina A Cuantos Puedas Y Ganar El Evento.!", "Aceptar", "") ;
	 	}
		return 1;
    }

    if(strcmp(cmdtext,"/evrevolucion", true)==0)
    {
        if(PlayerInfo[playerid][pAdmin] <2) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");}
	    if(SBOX == 1 || SOP7 == 1 || GT == 1 || SSWAT == 1 || SHG == 1 || SRHINO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
		if(SEVENTO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
		ShowPlayerDialog(playerid,5057,DIALOG_STYLE_LIST,"Elige Mapa","Revolucion 1","Elegir", "Cancelar");
		return 1;
	}
	if(strcmp(cmdtext,"/Revolucion", true)==0)
    {
        if(vKnockOut[playerid] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Sacate el VKNOCKOUT para entrar al evento.");
		if(SSWAT == 0) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}El evento no está Activado!");
        if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Desactiva tu God!");
        if(PlayerInfo[playerid][EnEvento] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya estás en el Evento!");
        if(PlayerInfo[playerid][PlayerinSwat] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya estás en el Evento!");
		if(EstaEnFly[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Desactiva el /fly antes de ir al evento!");
		if(SaltarMas[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Usa /supersaltosff (Para desactivar los supersaltos e ir al evento)!");
	    if(swatplaying == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya comenzó el Evento!");
        if(DBP_Stats[playerid] >= 0) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Tienes que salir del derby antes! (Pon /Derby2 para salir!)");
	    if(swaton == 0)
	    {
            if(PlayerInfo[playerid][pAdmin] <2) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");}
	        swaton = 1;
	        PlayerInfo[playerid][PlayerinSwat] = 1;
	        PlayerInfo[playerid][EnEvento] = 1;
	        swatrank = 1;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",swatrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
	        TogglePlayerControllable(playerid, 0);
            SetPlayerVirtualWorld(playerid,7);
		    if(ArenaSwat1==1)
			{
			new r = random(sizeof(ARENASBLUE));
			SetPlayerPos(playerid, ARENASBLUE[r][0], ARENASBLUE[r][1], ARENASBLUE[r][2]);
			SetPlayerFacingAngle(playerid,88.1348);
			InterpolateCameraPos(playerid, -3469.110107, -697.385803, 36.485687, -3290.734375, -880.893249, 25.445999, 20000);
            InterpolateCameraLookAt(playerid, -3465.605224, -700.885925, 35.803447, -3294.273681, -877.806030, 23.730775, 20000);
			}
		    if(ArenaSwat2==1)
			{
			new r = random(sizeof(ARENASBLUE2));
			SetPlayerPos(playerid, ARENASBLUE2[r][0], ARENASBLUE2[r][1], ARENASBLUE2[r][2]);
			SetPlayerFacingAngle(playerid,88.1348);
			InterpolateCameraPos(playerid, -3469.110107, -697.385803, 36.485687, -3290.734375, -880.893249, 25.445999, 20000);
            InterpolateCameraLookAt(playerid, -3465.605224, -700.885925, 35.803447, -3294.273681, -877.806030, 23.730775, 20000);
			}
	        ResetPlayerWeapons(playerid);
	        GivePlayerWeapon(playerid,1,1);
	        GivePlayerWeapon(playerid,24,50000);
	        GivePlayerWeapon(playerid,31,50000);
	        GivePlayerWeapon(playerid,29,50000);
            GivePlayerWeapon(playerid,34,1);
			SetPlayerHealth(playerid,100);
	        SetPlayerArmour(playerid,100);
	        SetPlayerSkin(playerid,285);
	        SetPlayerColor(playerid,0x0000BBAA);// AZUL
	        SetPlayerTeam(playerid, 1);
	        blueplayers = 1;
	        redplayers = 0;
	        swatcolor = 1;
	        startvar[1] = 1;
	        CountTimerSwat = SetTimer("CountTillSwat", 999, 1);
            CMDMessageToAdmins(playerid,"RLEVENTOS");
            SendClientMessage(playerid,green,"[INFO]: Has activado el Evento Revolucion!");
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00FF00}|| Evento Revolucion ||","{FF0000}Objetivo:\n\n{FFFFFF}Mata Al Equipo Contrario Al Que Te Enfrentas\nEl Evento Termina Cuando No Quede Ninguna Del Equipo Contrario.!", "Aceptar", "") ;
		    CountAmountSwat = 30;
            foreach(Player, i)
            {
			PlayAudioStreamForPlayer(i, "http://www.dropbox.com/s/nib9pbvw9eiwjp1/Evento%20Revolucion.mp3?dl=1");
			}
	        swattimer = SetTimer("StartSwat", 31000, 0);
			return 1;
	        } else if(swaton == 1 && swatcolor == 1) {
	        PlayerInfo[playerid][PlayerinSwat] = 1;
	        PlayerInfo[playerid][EnEvento] = 1;
	        swatrank++;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",swatrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
			TogglePlayerControllable(playerid, 0);
	        SetPlayerVirtualWorld(playerid,7);
		    if(ArenaSwat1==1)
			{
			new r = random(sizeof(ARENASRED));
			SetPlayerPos(playerid, ARENASRED[r][0], ARENASRED[r][1], ARENASRED[r][2]);
			SetPlayerFacingAngle(playerid,271.0580);
			InterpolateCameraPos(playerid, -3469.110107, -697.385803, 36.485687, -3290.734375, -880.893249, 25.445999, 20000);
            InterpolateCameraLookAt(playerid, -3465.605224, -700.885925, 35.803447, -3294.273681, -877.806030, 23.730775, 20000);
			}
		    if(ArenaSwat2==1)
			{
			new r = random(sizeof(ARENASRED2));
			SetPlayerPos(playerid, ARENASRED2[r][0], ARENASRED2[r][1], ARENASRED2[r][2]);
			SetPlayerFacingAngle(playerid,271.0580);
			InterpolateCameraPos(playerid, -3469.110107, -697.385803, 36.485687, -3290.734375, -880.893249, 25.445999, 20000);
            InterpolateCameraLookAt(playerid, -3465.605224, -700.885925, 35.803447, -3294.273681, -877.806030, 23.730775, 20000);
			}
	        ResetPlayerWeapons(playerid);
	        GivePlayerWeapon(playerid,1,1);
	        GivePlayerWeapon(playerid,24,50000);
	        GivePlayerWeapon(playerid,30,50000);
	        GivePlayerWeapon(playerid,28,50000);
            GivePlayerWeapon(playerid,34,1);
			SetPlayerHealth(playerid,100);
	        SetPlayerArmour(playerid,100);
	        SetPlayerSkin(playerid,73);
	        SetPlayerColor(playerid,0xFF0000FF);// ROJO
	        GameTextForPlayer(playerid,"~r~Espera a que ~n~comienze!",4000,3);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00FF00}|| Evento Revolucion ||","{FF0000}Objetivo:\n\n{FFFFFF}Mata Al Equipo Contrario Al Que Te Enfrentas\nEl Evento Termina Cuando No Quede Ninguna Del Equipo Contrario.!", "Aceptar", "") ;
		    SetPlayerTeam(playerid, 2);
	        redplayers++;
	        swatcolor = 0;
	        format(string2, sizeof(string2), "[Evento Revolucion]: {FFFFFF}%s ha entrado al Evento Revolucion del equipo {FF0000}Rojo!", pName(playerid));//
			SendClientMessageToAll(0x33AA33AA,string2);
			return 1;
	        } else if(swaton == 1 && swatcolor == 0) {
	        PlayerInfo[playerid][PlayerinSwat] = 1;
	        PlayerInfo[playerid][EnEvento] = 1;
	        swatrank++;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",swatrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
			TogglePlayerControllable(playerid, 0);
            SetPlayerVirtualWorld(playerid,7);
		    if(ArenaSwat1==1)
			{
			new r = random(sizeof(ARENASBLUE));
			SetPlayerPos(playerid, ARENASBLUE[r][0], ARENASBLUE[r][1], ARENASBLUE[r][2]);
			SetPlayerFacingAngle(playerid,88.1348);
			InterpolateCameraPos(playerid, -3469.110107, -697.385803, 36.485687, -3290.734375, -880.893249, 25.445999, 20000);
            InterpolateCameraLookAt(playerid, -3465.605224, -700.885925, 35.803447, -3294.273681, -877.806030, 23.730775, 20000);
			}
		    if(ArenaSwat2==1)
			{
			new r = random(sizeof(ARENASBLUE2));
			SetPlayerPos(playerid, ARENASBLUE2[r][0], ARENASBLUE2[r][1], ARENASBLUE2[r][2]);
			SetPlayerFacingAngle(playerid,88.1348);
			InterpolateCameraPos(playerid, -3469.110107, -697.385803, 36.485687, -3290.734375, -880.893249, 25.445999, 20000);
            InterpolateCameraLookAt(playerid, -3465.605224, -700.885925, 35.803447, -3294.273681, -877.806030, 23.730775, 20000);
			}
	        ResetPlayerWeapons(playerid);
	        GivePlayerWeapon(playerid,1,1);
	        GivePlayerWeapon(playerid,24,50000);
	        GivePlayerWeapon(playerid,31,50000);
	        GivePlayerWeapon(playerid,29,50000);
            GivePlayerWeapon(playerid,34,1);
			SetPlayerHealth(playerid,100);
	        SetPlayerArmour(playerid,100);
	        SetPlayerSkin(playerid,285);
	        SetPlayerColor(playerid,0x0000BBAA);// AZUL
	        GameTextForPlayer(playerid,"~b~Espera a que ~n~comienze!",4000,3);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00FF00}|| Evento Revolucion ||","{FF0000}Objetivo:\n\n{FFFFFF}Mata Al Equipo Contrario Al Que Te Enfrentas\nEl Evento Termina Cuando No Quede Ninguna Del Equipo Contrario.!", "Aceptar", "") ;
		    SetPlayerTeam(playerid, 1);
	        blueplayers++;
	        swatcolor = 1;
	        format(string2, sizeof(string2), "[Evento Revolucion]: {FFFFFF}%s ha entrado al Evento Revolucion del equipo {001EFF}Azul!", pName(playerid));//
			SendClientMessageToAll(0x33AA33AA,string2);
		    }
			return 1;
    }
	if(strcmp(cmdtext,"/evrhino", true)==0)
    {
 	if(SBOX == 1 || SOP7 == 1 || GT == 1 || SSWAT == 1 || SRHINO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}{FFFFFF}Hay un Evento o Carrera en Progreso!");
	if(SEVENTO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
	if(AceleracionBrutal[playerid] == true) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Sacate la /velocidad para hacer este Evento/Carrera!");
	if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}{FFFFFF}Desactiva tu God!");
    ShowPlayerDialog(playerid,5156,DIALOG_STYLE_LIST,"Elige Mapa","Mapa Campo de Golf","Elegir", "Cancelar");
    return 1;
    }
    if(strcmp(cmdtext,"/rhino", true)==0)
    {
	    if(SRHINO == 0) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}{FFFFFF}El evento no está Activado!");
        if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}{FFFFFF}Desactiva tu God!");
        if(PlayerInfo[playerid][PlayerinRhino] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya estás en el Evento!");
		if(EstaEnFly[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Desactiva el /fly antes de ir al evento!");
		if(SaltarMas[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Usa /supersaltosff (Para desactivar los supersaltos e ir al evento)!");
		if(PlayerInfo[playerid][EnEvento] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}{FFFFFF}Ya estás en el Evento!");
	    if(rhinoplaying == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}{FFFFFF}Ya comenzó el Evento!");
	    if(rhinoon == 0)
	    {
            if(PlayerInfo[playerid][pAdmin] <2) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");}
		    if(ArenaRhino1==1)
			{
			SetPlayerPos(playerid, 1232.3917, 2850.3342, 10.8543);
			InterpolateCameraPos(playerid, 182.7918, 1925.3373, 25.5668, 180.7284, 2047.6089, 83.5278, 3000);
			InterpolateCameraLookAt(playerid, 182.8087, 1924.3354, 25.0919, 180.7453, 2046.6069, 83.0529, 3000);
			SetTimerEx("RhinoDentro", 1000, 0, "i", playerid);
			}
		    if(ArenaRhino2==1)
			{
			new r = random(sizeof(SpawnCaja));
			SetPlayerPos(playerid, SpawnCaja[r][0], SpawnCaja[r][1], SpawnCaja[r][2]);
			InterpolateCameraPos(playerid, -1278.8661, 2803.8411, 315.9575, -1284.3754, 2914.0706, 275.4362, 3000);
			InterpolateCameraLookAt(playerid, -1278.8843, 2804.8384, 315.4572, -1284.4231, 2915.0679, 275.1311, 3000);
			SetTimerEx("RhinoDentro2", 1000, 0, "i", playerid);
			}
	        rhinoon = 1;
	        PlayerInfo[playerid][PlayerinRhino] = 1;
   	        PlayerInfo[playerid][EnEvento] = 1;
	        rhinorank = 1;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",rhinorank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
	        TogglePlayerControllable(playerid, 0);
	        SetPlayerInterior(playerid,0);
	        SetPlayerVirtualWorld(playerid,7);
	        ResetPlayerWeapons(playerid);
		    SendClientMessage(playerid,green,"[INFO]: Has activado el Evento de Rhino!");
	        SetPlayerArmour(playerid,0);
	        startvar[4] = 1;
	        rhinotimer = SetTimer("StartRhino", 31000, 0);
			CountTimerRhino = SetTimer("CountTillRhino", 999, 1);
            CMDMessageToAdmins(playerid,"RLEVENTOS");
            CountAmountRhino = 30;
            RankOcupado = 1;
            foreach(Player, i){PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/u/177110854/M%C3%BAsica/otros.mp3");}
            InterpolateCameraPos(playerid, 1293.9736, 2797.4871, 25.7719, 1293.4463, 2749.2878, 63.4511, 3000);
            InterpolateCameraLookAt(playerid, 1294.0846, 2798.4846, 25.0919, 1293.4631, 2750.2920, 62.6561, 3000);
			GameTextForPlayer(playerid,"~b~Espera a que ~n~comienze!",4000,3);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00EEFF}|| Evento Rhino ||","{FF0000}Objetivo:\n\n{FFFFFF}Mata A Todos Con Tu Rhino Sin Que Otro User Te Dispare\nSuerte xD.!", "Aceptar", "") ;
			return 1;
	    }
	    else if(rhinoon == 1)
	    {
		    if(ArenaRhino1==1)
			{
			if(RankOcupado == 1) { SetPlayerPos(playerid, 1397.4700, 2792.5288, 11.1681);RankOcupado = 2;}
			else if(RankOcupado == 2) { SetPlayerPos(playerid, 1374.6456, 2811.8491, 11.1544);RankOcupado = 3;}
			else if(RankOcupado == 3) { SetPlayerPos(playerid, 1399.0984, 2775.2332, 11.1957);RankOcupado = 4;}
			else if(RankOcupado == 4) { SetPlayerPos(playerid, 1379.5178, 2777.5781, 11.2240);RankOcupado = 5;}
			else if(RankOcupado == 5) { SetPlayerPos(playerid, 1402.1398, 2817.1382, 11.2098);RankOcupado = 6;}
			else if(RankOcupado == 6) { SetPlayerPos(playerid, 1143.8005, 2794.3872, 10.7253);RankOcupado = 7;}
			else if(RankOcupado == 7) { SetPlayerPos(playerid, 1145.0352, 2846.4580, 10.7346);RankOcupado = 8;}
			else if(RankOcupado == 8) { SetPlayerPos(playerid, 1137.2751, 2817.2969, 10.7441);RankOcupado = 9;}
			else if(RankOcupado == 9) { SetPlayerPos(playerid, 1141.8362, 2769.2703, 10.6978);RankOcupado = 10;}
			else if(RankOcupado == 10) { SetPlayerPos(playerid, 1140.2029, 2750.2939, 10.6889);RankOcupado = 11;}
			else if(RankOcupado == 11) { SetPlayerPos(playerid, 1177.7087, 2774.7788, 12.3673);RankOcupado = 12;}
			else if(RankOcupado == 12) { SetPlayerPos(playerid, 1185.4158, 2843.4265, 12.3981);RankOcupado = 13;}
			else if(RankOcupado == 13) { SetPlayerPos(playerid, 1159.9799, 2817.6260, 12.3723);RankOcupado = 14;}
			else if(RankOcupado == 14) { SetPlayerPos(playerid, 1158.6101, 2775.9285, 11.4262);RankOcupado = 15;}
			else if(RankOcupado == 15) { SetPlayerPos(playerid, 1166.2296, 2755.7644, 12.6123);RankOcupado = 16;}
			else if(RankOcupado == 16) { SetPlayerPos(playerid, 1194.4554, 2785.7439, 11.2150);RankOcupado = 17;}
			else if(RankOcupado == 17) { SetPlayerPos(playerid, 1194.4227, 2799.7209, 11.2207);RankOcupado = 18;}
			else if(RankOcupado == 18) { SetPlayerPos(playerid, 1193.4877, 2818.0471, 11.2264);RankOcupado = 19;}
			else if(RankOcupado == 19) { SetPlayerPos(playerid, 1198.6643, 2770.0063, 10.9895);RankOcupado = 20;}
			else if(RankOcupado == 20) { SetPlayerPos(playerid, 1200.4196, 2756.2332, 11.0374);RankOcupado = 21;}
			else if(RankOcupado == 21) { SetPlayerPos(playerid, 1237.7622, 2795.4465, 10.8437);RankOcupado = 22;}
			else if(RankOcupado == 22) { SetPlayerPos(playerid, 1237.5659, 2814.2424, 10.8543);RankOcupado = 23;}
			else if(RankOcupado == 23) { SetPlayerPos(playerid, 1214.7820, 2832.4937, 10.8128);RankOcupado = 24;}
			else if(RankOcupado == 24) { SetPlayerPos(playerid, 1219.0660, 2780.1738, 10.8333);RankOcupado = 25;}
			else if(RankOcupado == 25) { SetPlayerPos(playerid, 1237.1407, 2770.6079, 10.9538);RankOcupado = 26;}
			else if(RankOcupado == 26) { SetPlayerPos(playerid, 1263.3379, 2787.3511, 10.8649);RankOcupado = 27;}
			else if(RankOcupado == 27) { SetPlayerPos(playerid, 1260.9397, 2804.1909, 10.8756);RankOcupado = 28;}
			else if(RankOcupado == 28) { SetPlayerPos(playerid, 1259.5555, 2836.1338, 10.8865);RankOcupado = 29;}
			else if(RankOcupado == 29) { SetPlayerPos(playerid, 1254.8494, 2774.3042, 10.9196);RankOcupado = 30;}
			else if(RankOcupado == 30) { SetPlayerPos(playerid, 1269.1266, 2754.5479, 10.9655);RankOcupado = 31;}
			else if(RankOcupado == 31) { SetPlayerPos(playerid, 1288.8053, 2789.9067, 10.9309);RankOcupado = 32;}
			else if(RankOcupado == 32) { SetPlayerPos(playerid, 1284.8107, 2811.7712, 10.9085);RankOcupado = 33;}
			else if(RankOcupado == 33) { SetPlayerPos(playerid, 1281.6957, 2831.2112, 10.8974);RankOcupado = 34;}
			else if(RankOcupado == 34) { SetPlayerPos(playerid, 1295.8240, 2773.5532, 10.9423);RankOcupado = 35;}
			else if(RankOcupado == 35) { SetPlayerPos(playerid, 1298.5531, 2759.7742, 10.9772);RankOcupado = 36;}
			else if(RankOcupado == 36) { SetPlayerPos(playerid, 1314.9976, 2782.8059, 10.9891);RankOcupado = 37;}
			else if(RankOcupado == 37) { SetPlayerPos(playerid, 1306.0508, 2811.0146, 11.0010);RankOcupado = 38;}
			else if(RankOcupado == 38) { SetPlayerPos(playerid, 1320.4435, 2838.5313, 11.0883);RankOcupado = 39;}
			else if(RankOcupado == 39) { SetPlayerPos(playerid, 1325.4774, 2771.1777, 11.0253);RankOcupado = 40;}
			else if(RankOcupado == 40) { SetPlayerPos(playerid, 1319.6069, 2747.8142, 11.0131);RankOcupado = 41;}
			else if(RankOcupado == 41) { SetPlayerPos(playerid, 1319.0836, 2826.3201, 11.0627);RankOcupado = 42;}
			else if(RankOcupado == 42) { SetPlayerPos(playerid, 1333.6334, 2801.9617, 11.0754);RankOcupado = 43;}
			else if(RankOcupado == 43) { SetPlayerPos(playerid, 1348.8417, 2831.6204, 11.1013);RankOcupado = 44;}
			else if(RankOcupado == 44) { SetPlayerPos(playerid, 1340.7163, 2772.1729, 11.0377);RankOcupado = 45;}
			else if(RankOcupado == 45) { SetPlayerPos(playerid, 1343.9113, 2758.3628, 11.0501);RankOcupado = 46;}
			else if(RankOcupado == 46) { SetPlayerPos(playerid, 1353.3827, 2801.9880, 10.6800);RankOcupado = 47;}
			else if(RankOcupado == 47) { SetPlayerPos(playerid, 1361.9922, 2855.8926, 11.1276);RankOcupado = 48;}
			else if(RankOcupado == 48) { SetPlayerPos(playerid, 1377.3542, 2838.4082, 11.1143);RankOcupado = 49;}
			else if(RankOcupado == 49) { SetPlayerPos(playerid, 1384.3231, 2790.5388, 11.1409);RankOcupado = 50;}
			else if(RankOcupado == 50) { SetPlayerPos(playerid, 1402.3945, 2750.9268, 11.1818);RankOcupado = 0;}
            else if(RankOcupado == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El evento ya esta lleno!");
			InterpolateCameraPos(playerid, 182.7918, 1925.3373, 25.5668, 180.7284, 2047.6089, 83.5278, 3000);
			InterpolateCameraLookAt(playerid, 182.8087, 1924.3354, 25.0919, 180.7453, 2046.6069, 83.0529, 3000);
			SetTimerEx("RhinoDentro", 1000, 0, "i", playerid);
			}
		    if(ArenaRhino2==1)
			{
			new r = random(sizeof(SpawnCaja));
			SetPlayerPos(playerid, SpawnCaja[r][0], SpawnCaja[r][1], SpawnCaja[r][2]);
			InterpolateCameraPos(playerid, -1278.8661, 2803.8411, 315.9575, -1284.3754, 2914.0706, 275.4362, 3000);
			InterpolateCameraLookAt(playerid, -1278.8843, 2804.8384, 315.4572, -1284.4231, 2915.0679, 275.1311, 3000);
			SetTimerEx("RhinoDentro2", 1000, 0, "i", playerid);
			}
	        PlayerInfo[playerid][PlayerinRhino] = 1;
   	        PlayerInfo[playerid][EnEvento] = 1;
	        TogglePlayerControllable(playerid, 0);
	        SetPlayerInterior(playerid,0);
	        SetPlayerVirtualWorld(playerid,7);
         	rhinorank++;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",rhinorank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
			ResetPlayerWeapons(playerid);
	        SetPlayerArmour(playerid,100);
	        format(string2, sizeof(string2), "{FF0000}[Evento Rhino]: {FFFFFF}%s {00EEFF}ha entrado al {00FF00}Evento Rhino!", pName(playerid));
			SendClientMessageToAll(0x33AA33AA,string2);
            InterpolateCameraPos(playerid, 1293.9736, 2797.4871, 25.7719, 1293.4463, 2749.2878, 63.4511, 3000);
            InterpolateCameraLookAt(playerid, 1294.0846, 2798.4846, 25.0919, 1293.4631, 2750.2920, 62.6561, 3000);
			GameTextForPlayer(playerid,"~b~Espera a que ~n~comienze!",4000,3);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00EEFF}|| Evento Rhino ||","{FF0000}Objetivo:\n\n{FFFFFF}Mata A Todos Con Tu Rhino Sin Que Otro User Te Dispare\nSuerte xD.!", "Aceptar", "") ;
			}
			return 1;
    }

    if(strcmp(cmdtext,"/evzombie", true)==0)
    {
        if(PlayerInfo[playerid][pAdmin] <2) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");}
	    if(SBOX == 1 || SOP7 == 1 || GT == 1 || SSWAT == 1 || SHG == 1 || SRHINO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
		if(SEVENTO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
		ShowPlayerDialog(playerid,5185,DIALOG_STYLE_LIST,"Elige Mapa","Mapa Puente\nMapa SF {FF0000}[Nuevo]","Elegir", "Cancelar");
		return 1;
	}
	if(strcmp(cmdtext,"/zombie", true)==0)
    {
		if(SZOMBIE == 0) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}El evento no está Activado!");
		if(balason[playerid] == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva las balas explosivas! (/balase)");
       if(vKnockOut[playerid] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva el VKNOCKOUT para ir al evento!");
        if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Desactiva tu God!");
        if(PlayerInfo[playerid][EnEvento] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya estás en el Evento!");
        if(PlayerInfo[playerid][PlayerinZombie] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya estás en el Evento!");
		if(EstaEnFly[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Desactiva el /fly antes de ir al evento!");
		if(SaltarMas[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Usa /supersaltosff (Para desactivar los supersaltos e ir al evento)!");
		if(zombieplaying == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya comenzó el Evento!");
        if(DBP_Stats[playerid] >= 0) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Tienes que salir del derby antes! (Pon /Derby2 para salir!)");
	    if(zombieon == 0)
	    {
            if(PlayerInfo[playerid][pAdmin] <2) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");}
	        zombieon = 1;
	        PlayerInfo[playerid][PlayerinZombie] = 1;
	        PlayerInfo[playerid][EnEvento] = 1;
	        zombierank = 1;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",zombierank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
	        SetPlayerTime(playerid, 0, 0);
	        TogglePlayerControllable(playerid, 0);
            SetPlayerVirtualWorld(playerid,7);
		    if(ArenaZombie1==1)
			{
				new r = random(sizeof(ARENA1H));
				SetPlayerPos(playerid, ARENA1H[r][0], ARENA1H[r][1], ARENA1H[r][2]);
				SetPlayerFacingAngle(playerid,88.1348);
				InterpolateCameraPos(playerid, -3358.888671, 1423.110107, 58.568176, -3348.783691, 2216.685058, 82.447128, 20000);
				InterpolateCameraLookAt(playerid, -3358.188720, 1428.051879, 58.269134, -3349.002197, 2221.085205, 80.082565, 20000);
			}
		    else if(ArenaZombie2==1)
			{
				new r = random(sizeof(ARENA2H));
				SetPlayerPos(playerid, ARENA2H[r][0], ARENA2H[r][1], ARENA2H[r][2]);
				SetPlayerFacingAngle(playerid, 92.8200);
				InterpolateCameraPos(playerid, -1794.2587, 949.9558, 53.9137, -1772.2606, 922.6116, 56.1737, 6000);
				InterpolateCameraLookAt(playerid, -1794.2699, 950.9595, 53.7690, -1771.2617, 922.6228, 55.9137, 6000);
			}
	        ResetPlayerWeapons(playerid);
	        GivePlayerWeapon(playerid,1,1);
	        GivePlayerWeapon(playerid,24,50000);
	        GivePlayerWeapon(playerid,31,50000);
	        GivePlayerWeapon(playerid,29,50000);
            GivePlayerWeapon(playerid,34,1);
			SetPlayerHealth(playerid,100);
	        SetPlayerSkin(playerid, 287);
            SetPlayerArmour(playerid, 100);
			SetPlayerColor(playerid,0x0000BBAA);// AZUL
	        SetPlayerTeam(playerid, 1);
	        humanplayers = 1;
	        zombieplayers = 0;
	        zombiecolor = 1;
	        startvar[1] = 1;
	        CountTimerZombie = SetTimer("CountTillZombie", 999, 1);
            CMDMessageToAdmins(playerid,"RLEVENTOS");
            SendClientMessage(playerid,green,"[INFO]: Has activado el Evento Zombie!");
            CountAmountZombie = 30;
            foreach(Player, i)
            {
            StopAudioStreamForPlayer(i);
			PlayAudioStreamForPlayer(i, "http://www.dropbox.com/s/w8yosj6chedtp3f/Evento%20Zombie.mp3?dl=01");
			}
	        zombietimer = SetTimer("StartZombie", 31000, 0);
			return 1;
		}
		else if(zombieon == 1 && zombiecolor == 1)
		{
	        PlayerInfo[playerid][PlayerinZombie] = 1;
	        PlayerInfo[playerid][EnEvento] = 1;
	        zombierank++;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",zombierank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
			SetPlayerTime(playerid, 0, 0);
	        TogglePlayerControllable(playerid, 0);
	        SetPlayerVirtualWorld(playerid,7);
		    if(ArenaZombie1==1)
			{
				new r = random(sizeof(ARENA1Z));
				SetPlayerPos(playerid, ARENA1Z[r][0], ARENA1Z[r][1], ARENA1Z[r][2]);
				SetPlayerFacingAngle(playerid, 271.0580);
				InterpolateCameraPos(playerid, -3358.888671, 1423.110107, 58.568176, -3348.783691, 2216.685058, 82.447128, 20000);
				InterpolateCameraLookAt(playerid, -3358.188720, 1428.051879, 58.269134, -3349.002197, 2221.085205, 80.082565, 20000);
			}
		    else if(ArenaZombie2==1)
			{
				new r = random(sizeof(ARENA2Z));
				SetPlayerPos(playerid, ARENA2Z[r][0], ARENA2Z[r][1], ARENA2Z[r][2]);
				SetPlayerFacingAngle(playerid, 270.5452);
				InterpolateCameraPos(playerid, -1794.2587, 949.9558, 53.9137, -1772.2606, 922.6116, 56.1737, 6000);
				InterpolateCameraLookAt(playerid, -1794.2699, 950.9595, 53.7690, -1771.2617, 922.6228, 55.9137, 6000);
			}
	        ResetPlayerWeapons(playerid);
            GivePlayerWeapon(playerid,9,1);
			SetPlayerHealth(playerid,100);
	        SetPlayerArmour(playerid,100);
	        SetPlayerSkin(playerid,162);
	        SetPlayerColor(playerid,0xFF0000FF);// ROJO
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00EEFF}|| Evento Zombie ||","{FF0000}Objetivo:\n\n{FFFFFF}Mata A Los Humanos Con Tu Minigun Zombie....\n{FF0000}Trata De Que No Llegen Hasta Tu Lugar ESCONDETE...", "Aceptar", "") ;
		    GameTextForPlayer(playerid,"~r~Espera a que ~n~comienze!",4000,3);
	        PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/177110854/M%C3%BAsica/track2op7.mp3");
	        SetPlayerTeam(playerid, 2);
	        zombieplayers++;
	        zombiecolor = 0;
	        format(string2, sizeof(string2), "[Evento Zombie]: {FFFFFF}%s ha entrado al Evento en el equipo {FF0000}Zombie!", pName(playerid));//
			SendClientMessageToAll(0x33AA33AA,string2);
			return 1;
		}
		else if(zombieon == 1 && zombiecolor == 0)
		{
	        PlayerInfo[playerid][PlayerinZombie] = 1;
	        PlayerInfo[playerid][EnEvento] = 1;
	        zombierank++;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",zombierank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
		    SetPlayerTime(playerid, 0, 0);
	        TogglePlayerControllable(playerid, 0);
            SetPlayerVirtualWorld(playerid,7);
		    if(ArenaZombie1==1)
			{
				new r = random(sizeof(ARENA1H));
				SetPlayerPos(playerid, ARENA1H[r][0], ARENA1H[r][1], ARENA1H[r][2]);
				SetPlayerFacingAngle(playerid,88.1348);
				InterpolateCameraPos(playerid, -3358.888671, 1423.110107, 58.568176, -3348.783691, 2216.685058, 82.447128, 20000);
				InterpolateCameraLookAt(playerid, -3358.188720, 1428.051879, 58.269134, -3349.002197, 2221.085205, 80.082565, 20000);
  			}
		    else if(ArenaZombie2==1)
			{
				new r = random(sizeof(ARENA2H));
				SetPlayerPos(playerid, ARENA2H[r][0], ARENA2H[r][1], ARENA2H[r][2]);
				SetPlayerFacingAngle(playerid, 92.8200);
				InterpolateCameraPos(playerid, -1794.2587, 949.9558, 53.9137, -1772.2606, 922.6116, 56.1737, 6000);
				InterpolateCameraLookAt(playerid, -1794.2699, 950.9595, 53.7690, -1771.2617, 922.6228, 55.9137, 6000);
			}
	        ResetPlayerWeapons(playerid);
	        GivePlayerWeapon(playerid,1,1);
	        GivePlayerWeapon(playerid,24,50000);
	        GivePlayerWeapon(playerid,31,50000);
	        GivePlayerWeapon(playerid,29,50000);
            GivePlayerWeapon(playerid,34,1);
			SetPlayerHealth(playerid,100);
	        SetPlayerSkin(playerid, 287);
            SetPlayerArmour(playerid, 100);
		    SetPlayerColor(playerid,0x0000BBAA);// AZUL
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00EEFF}|| Evento Zombie ||","{FF0000}Objetivo:\n\n{FFFFFF}Intenta Matar Y Llegar Hasta EL Final Del Puente Sin Morir\n{FF0000}Cuidado Los Zombies Tienen Minigun...", "Aceptar", "") ;
			GameTextForPlayer(playerid,"~b~Espera a que ~n~comienze!",4000,3);
	        PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/177110854/M%C3%BAsica/track2op7.mp3");
	        SetPlayerTeam(playerid, 1);
	        humanplayers++;
	        zombiecolor = 1;
	        format(string2, sizeof(string2), "[Evento Zombie]: {FFFFFF}%s ha entrado al Evento en el equipo {001EFF}Humano!", pName(playerid));//
			SendClientMessageToAll(0x33AA33AA,string2);
		}
		return 1;
    }

	if (strcmp(cmdtext,"/evderby", true)==0)
    {
 	if(SBOX == 1 || SOP7 == 1 || GT == 1 || SSWAT == 1 || SHG == 1 || SRHINO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
	if(SEVENTO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
	if(AceleracionBrutal[playerid] == true) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Sacate la /velocidad para hacer este Evento/Carrera!");
	if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Desactiva tu God!");
    ShowPlayerDialog(playerid,5090,DIALOG_STYLE_LIST,"Elige Arena","Arena Derby 1\nArena Derby 2 {FF0000}[Nuevo]","Elegir", "Cancelar");
    //ShowPlayerDialog(playerid,5090,DIALOG_STYLE_LIST,"Elige Arena","Arena Derby 1","Elegir", "Cancelar");
	return 1;
    }

	if (strcmp(cmdtext,"/derby", true)==0)
    {
	    if(SDERBY == 0) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}El evento no está Activado!");
        if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Desactiva tu God!");
        if(PlayerInfo[playerid][EnEvento] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya estás en el Evento!");
	    if(derbyplaying == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya comenzó el Evento!");
		if(EstaEnFly[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Desactiva el /fly antes de ir al evento!");
        if(DBP_Stats[playerid] >= 0) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Tienes que salir del derby antes! (Pon /Derby2 para salir!)");
	    if(derbyon == 0)
	    {
            if(PlayerInfo[playerid][pAdmin] <2) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");}
	        derbyon = 1;
	        PlayerInfo[playerid][PlayerinDerby] = 1;
   	        PlayerInfo[playerid][EnEvento] = 1;
	        derbyrank = 1;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",derbyrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
			TogglePlayerControllable(playerid, 0);
			if(ArenaDerby1 == 1)
			{
				if(derbyrank == 1)
				{
					SetPlayerPos(playerid, 2639.9490,-2942.3552,1003.6198);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
			}
			else if(ArenaDerby2 == 1)
			{
				if(derbyrank == 1)
				{
					SetPlayerPos(playerid, 4906.5591,228.6008,23.3100);
					SetPlayerFacingAngle(playerid, 180.0000);
				}
   			}
	        SetPlayerInterior(playerid,0);
	        SetPlayerVirtualWorld(playerid,7);
	        ResetPlayerWeapons(playerid);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{FF0000}|| Evento Derby ||","{FF0000}Objetivo:\n\n{FFFFFF}Derriba a todos Con Tu Auto y Sobrevive\nEl Premio Espera Por Ti.!", "Aceptar", "") ;
			SendClientMessage(playerid,green,"[INFO]: Has activado el Evento de Derby!");
	        SetPlayerArmour(playerid,0);
	        startvar[4] = 1;
	        derbytimer = SetTimer("StartDerby", 31000, 0);
			CountTimerDerby = SetTimer("CountTillDerby", 999, 1);
            CMDMessageToAdmins(playerid,"RLEVENTOS");
            CountAmountDerby = 30;
            foreach(Player, i)
			{
				PlayAudioStreamForPlayer(i, "https://www.dropbox.com/s/gwu9e9if5w913ea/Derby%20RL.mp3?dl=1");
			}
			if(ArenaDerby1 == 1)
			{
				InterpolateCameraPos(playerid, 2517.0068, -2975.9094, 1023.7945,2521.7271, -2975.8479, 1023.7945,3000);
			    InterpolateCameraLookAt(playerid, 2517.0068, -2975.9094, 1023.7945,2521.7271, -2975.8479, 1023.7945, 3000);
			}
			else if(ArenaDerby2 == 1)
			{
				InterpolateCameraPos(playerid,4935.4448, 239.9428, 38.8512, 4654.3569, -197.6559, 108.3816, 5000);
	            InterpolateCameraLookAt(playerid, 4936.0332, 240.7496, 37.1412,4654.9033, -196.8203, 107.7216, 5000);
			}
			return 1;
		}
		else if(derbyon == 1)
		{
	        PlayerInfo[playerid][PlayerinDerby] = 1;
	        TogglePlayerControllable(playerid, 0);
	        SetPlayerInterior(playerid,0);
	        SetPlayerVirtualWorld(playerid,7);
	        PlayerInfo[playerid][EnEvento] = 1;
         	derbyrank++;
			if(ArenaDerby1 == 1)
			{
				if(derbyrank == 2)
				{
					SetPlayerPos(playerid, 2596.3357,-2997.4434,1003.6129);
					SetPlayerFacingAngle(playerid, 90.0000);
					SetCameraBehindPlayer(playerid);
					}
				else if(derbyrank == 3)
				{
					SetPlayerPos(playerid, 2561.3723,-2923.2393,1003.6131);
					SetPlayerFacingAngle(playerid, 270.0000);
					SetCameraBehindPlayer(playerid);
				}
				else if(derbyrank == 4)
				{
					SetPlayerPos(playerid, 2563.1963,-2960.3638,1003.6144);
					SetPlayerFacingAngle(playerid, 180.00000);
					}
				else if(derbyrank == 5)
				{
					SetPlayerPos(playerid,2581.2207,-2962.1218,1003.6146);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 6)
				{
					SetPlayerPos(playerid, 2579.2927,-2940.7334,1003.6111);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 7)
				{
					SetPlayerPos(playerid, 2580.9817,-2926.1870,1003.6123);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 8)
				{
					SetPlayerPos(playerid, 2592.7915,-2922.1580,1003.6126);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 9)
				{
					SetPlayerPos(playerid, 2622.3767,-2925.4124,1003.6143);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 10)
				{
					SetPlayerPos(playerid, 2613.6167,-2940.1960,1003.6127);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 11)
				{
					SetPlayerPos(playerid, 2640.1414,-2930.7405,1003.6107);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 12)
				{
					SetPlayerPos(playerid, 2639.3198,-2921.3596,1003.6143);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 13)
				{
					SetPlayerPos(playerid, 2677.2959,-2921.9324,1003.6144);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 14)
				{
					SetPlayerPos(playerid, 2681.7388,-2939.4272,1003.6122);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 15)
				{
					SetPlayerPos(playerid, 2680.4238,-2960.3469,1003.6136);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 16)
				{
					SetPlayerPos(playerid, 2681.2822,-2985.7031,1003.6142);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 17)
				{
					SetPlayerPos(playerid, 2665.0999,-3000.1890,1003.6123);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 18)
				{
					SetPlayerPos(playerid, 2681.4788,-3016.2703,1003.6155);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 19)
				{
					SetPlayerPos(playerid, 2677.4180,-3041.8130,1003.6120);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 20)
				{
					SetPlayerPos(playerid, 2648.1365,-3042.0867,1003.6134);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 21)
				{
					SetPlayerPos(playerid, 2642.9822,-3026.2864,1003.6105);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 22)
				{
					SetPlayerPos(playerid, 2603.8416,-3041.6726,1003.6131);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 23)
				{
					SetPlayerPos(playerid, 2661.9087,-3020.2261,1003.6105);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 24)
				{
					SetPlayerPos(playerid, 2573.4724,-3020.2373,1003.6121);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 25)
				{
					SetPlayerPos(playerid, 2561.9094,-3003.1724,1003.6122);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 26)
				{
					SetPlayerPos(playerid, 2571.3613,-2978.9373,1003.6160);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 27)
				{
					SetPlayerPos(playerid, 2590.2644,-2979.0815,1003.6105);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 28)
				{
					SetPlayerPos(playerid, 2582.0586,-2987.6353,1003.6143);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 29)
				{
					SetPlayerPos(playerid, 2581.4951,-2969.3398,1003.6122);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 30)
				{
					SetPlayerPos(playerid, 2573.5491,-2960.4673,1003.6107);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 31)
				{
					SetPlayerPos(playerid, 2561.7427,-2947.0686,1003.6106);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 32)
				{
					SetPlayerPos(playerid, 2588.8997,-2960.9541,1003.6102);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 33)
				{
					SetPlayerPos(playerid, 2610.8699,-2971.1328,1003.6122);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 34)
				{
					SetPlayerPos(playerid, 2613.2202,-2987.0759,1003.6129);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 35)
				{
					SetPlayerPos(playerid, 2596.3357,-2997.4434,1003.6129);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 36)
				{
    			    SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Evento lleno. ¡Espera al próximo!");
			        PlayerInfo[playerid][PlayerinDerby] = 0;
			        TogglePlayerControllable(playerid, 0);
			        SetPlayerInterior(playerid,0);
			        SetPlayerVirtualWorld(playerid,0);
			        PlayerInfo[playerid][EnEvento] = 0;
		         	derbyrank--;
					SpawnPlayer(playerid);
				}
			}
			else if(ArenaDerby2 == 1)
			{
				if(derbyrank == 2)
				{
					SetPlayerPos(playerid, 4906.8750,150.4317,23.2768);
					SetPlayerFacingAngle(playerid, 180.0000);
				}
				else if(derbyrank == 3)
				{
					SetPlayerPos(playerid, 4906.2095,95.8288,23.2768);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 4)
				{
					SetPlayerPos(playerid, 4889.7813,96.5303,23.2767);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 5)
				{
					SetPlayerPos(playerid, 4886.3120,131.5157,23.2767);
					SetPlayerFacingAngle(playerid, 90.0000);
	            }
				else if(derbyrank == 6)
				{
					SetPlayerPos(playerid, 4885.7949,151.2032,23.2769);
					SetPlayerFacingAngle(playerid, 180.0000);
				}
				else if(derbyrank == 7)
				{
					SetPlayerPos(playerid, 4850.3882,93.6145,23.2768);
					SetPlayerFacingAngle(playerid, 180.0000);
				}
				else if(derbyrank == 8)
				{
					SetPlayerPos(playerid, 4852.6768,61.8834,23.2769);
					SetPlayerFacingAngle(playerid, 270.0000);
				}
				else if(derbyrank == 9)
				{
					SetPlayerPos(playerid, 4885.7988,61.0373,23.2767);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 10)
				{
					SetPlayerPos(playerid, 4926.2183,49.7428,23.2768);
					SetPlayerFacingAngle(playerid, 90.0000);
				}
				else if(derbyrank == 11)
				{
					SetPlayerPos(playerid, 4891.2090,19.5770,23.2766);
					SetPlayerFacingAngle(playerid, 270.0000);
				}
				else if(derbyrank == 12)
				{
			        SetPlayerPos(playerid, 4925.9863,20.2165,23.2767);
					SetPlayerFacingAngle(playerid, 180.0000);
				}
				else if(derbyrank == 13)
				{
					SetPlayerPos(playerid, 4926.5850,-11.7853,23.2766);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 14)
				{
					SetPlayerPos(playerid, 4888.4175,-11.1823,23.2767);
					SetPlayerFacingAngle(playerid, 90.0000);
				}
				else if(derbyrank == 15)
				{
					SetPlayerPos(playerid, 4850.7490,-59.3912,23.2768);
					SetPlayerFacingAngle(playerid, 90.0000);
				}
				else if(derbyrank == 16)
				{
					SetPlayerPos(playerid, 4824.1396,-59.9067,23.2768);
					SetPlayerFacingAngle(playerid, 270.0000);
				}
				else if(derbyrank == 17)
				{
					SetPlayerPos(playerid, 4791.6729,-59.5801,23.2769);
					SetPlayerFacingAngle(playerid, 270.0000);
				}
				else if(derbyrank == 18)
				{
					SetPlayerPos(playerid, 4789.6255,-94.7782,23.2769);
					SetPlayerFacingAngle(playerid, 0.0000);
				}
				else if(derbyrank == 19)
				{
					SetPlayerPos(playerid, 4725.4673,-95.1621,23.2766);
					SetPlayerFacingAngle(playerid, 90.0000);
				}
				else if(derbyrank == 20)
				{
					SetPlayerPos(playerid, 4694.2129,-59.3407,23.2769);
					SetPlayerFacingAngle(playerid, 90.0000);
				}
				else if(derbyrank == 21)
				{
					SetPlayerPos(playerid, 4659.2993,-60.7908,23.2768);
					SetPlayerFacingAngle(playerid, 180.0000);
				}
				else if(derbyrank == 22)
				{
					SetPlayerPos(playerid, 4620.8613,-13.2851,23.2768);
					SetPlayerFacingAngle(playerid, 180.000);
	            }
           		else if(derbyrank == 23)
				{
					SetPlayerPos(playerid, 4659.3452,49.4882,23.2768);
					SetPlayerFacingAngle(playerid, 270.000);
	            }
           		else if(derbyrank == 24)
				{
					SetPlayerPos(playerid, 4658.6904,96.9392,23.2768);
					SetPlayerFacingAngle(playerid, 0.000);
	            }
           		else if(derbyrank == 25)
				{
					SetPlayerPos(playerid, 4659.7173,153.1448,23.2769);
					SetPlayerFacingAngle(playerid, 180.000);
	            }
	            else if(derbyrank == 26)
				{
					SetPlayerPos(playerid, 4686.5913,153.0371,23.2759);
					SetPlayerFacingAngle(playerid, 180.000);
	            }
	            else if(derbyrank == 27)
				{
					SetPlayerPos(playerid, 4732.4155,152.8533,23.2767);
					SetPlayerFacingAngle(playerid, 270.000);
	            }
	            else if(derbyrank == 28)
				{
					SetPlayerPos(playerid, 4734.5405,171.9915,23.2774);
					SetPlayerFacingAngle(playerid, 270.000);
	            }
	            else if(derbyrank == 29)
				{
					SetPlayerPos(playerid, 4734.5347,197.0190,23.2768);
					SetPlayerFacingAngle(playerid, 270.000);
	            }
				else if(derbyrank == 30)
				{
				    SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Evento lleno. Espera al Proximo!");
			        PlayerInfo[playerid][PlayerinDerby] = 0;
			        TogglePlayerControllable(playerid, 0);
			        SetPlayerInterior(playerid,0);
			        SetPlayerVirtualWorld(playerid,0);
			        PlayerInfo[playerid][EnEvento] = 0;
		         	derbyrank--;
					SpawnPlayer(playerid);
				}
			}
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",derbyrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
			ResetPlayerWeapons(playerid);
	        SetPlayerArmour(playerid,0);
	        format(string2, sizeof(string2), "{FF0000}[Evento Derby]: ¡{FFFFFF}%s {00EEFF}ha entrado al {00FF00}Derby!", pName(playerid));
			SendClientMessageToAll(0x33AA33AA,string2);
			if(ArenaDerby1 == 1)
			{
				InterpolateCameraPos(playerid, 2517.0068, -2975.9094, 1023.7945,2521.7271, -2975.8479, 1023.7945,3000);
			    InterpolateCameraLookAt(playerid, 2517.0068, -2975.9094, 1023.7945,2521.7271, -2975.8479, 1023.7945, 3000);
			}
			else if(ArenaDerby2 == 1)
			{
			     InterpolateCameraPos(playerid,4935.4448, 239.9428, 38.8512, 4654.3569, -197.6559, 108.3816, 5000);
	            InterpolateCameraLookAt(playerid, 4936.0332, 240.7496, 37.1412,4654.9033, -196.8203, 107.7216, 5000);
			}
			GameTextForPlayer(playerid,"~b~Espera a que ~n~comienze!",4000,3);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{FF0000}|| Evento Derby ||","{FF0000}Objetivo:\n\n{FFFFFF}Con tu vehículo choca & tira a los otros vehículos al vacío.\n¡Mucha suerte! y a ganar a los contrincantes.", "Aceptar", "") ;
		}
		return 1;
	}

	if (strcmp(cmdtext,"/evparkour", true)==0)
    {
 	if(SBOX == 1 || SOP7 == 1 || GT == 1 || SSWAT == 1 || SHG == 1 || SRHINO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
	if(SEVENTO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
	if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Desactiva tu God!");
    ShowPlayerDialog(playerid,5198,DIALOG_STYLE_LIST,"Elige Mapa","Mapa 1 {FF0000}[BUG]\nMapa 2","Elegir", "Cancelar");
    return 1;
    }

	if (strcmp(cmdtext,"/park", true)==0)
    {
	    if(SPARK == 0) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}El evento no está Activado!");
        if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Desactiva tu God!");
        if(PlayerInfo[playerid][EnEvento] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya estás en el Evento!");
		if(EstaEnFly[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Desactiva el /fly antes de ir al evento!");
		if(SaltarMas[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Usa /supersaltosff (Para desactivar los supersaltos e ir al evento)!");
		if(parkplaying == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya comenzó el Evento!");
        if(DBP_Stats[playerid] >= 0) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Tienes que salir del derby antes! (Pon /Derby2 para salir!)");
	    if(parkon == 0)
	    {
            if(PlayerInfo[playerid][pAdmin] <2) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");}
	        parkon = 1;
	        PlayerInfo[playerid][PlayerinParkour] = 1;
   	        PlayerInfo[playerid][EnEvento] = 1;
	        parkrank = 1;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",parkrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
	        TogglePlayerControllable(playerid, 0);
	        SetPlayerInterior(playerid,0);
	        SetPlayerVirtualWorld(playerid,7);
	        SetPlayerPos(playerid,-1004.017639,1613.899414,623.163879);
	        ResetPlayerWeapons(playerid);
		    SendClientMessage(playerid,green,"[INFO]: Has activado el Evento de Parkour!");
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00EEFF}|| Evento Parkour ||","{FF0000}Objetivo:\n\n{FFFFFF}Corre Hasta El Final De Este Mapeo Sin Caer Tratando De Saltar Lo Mas Alto\nQue Puedas Y Ganar.!", "Aceptar", "") ;
		    SetPlayerHealth(playerid,100);
	        SetPlayerArmour(playerid,100);
	        startvar[4] = 1;
	        parktimer = SetTimer("StartParkour", 31000, 0);
			CountTimerParkour = SetTimer("CountTillParkour", 999, 1);
            CMDMessageToAdmins(playerid,"RLEVENTOS");
            CountAmountParkour = 30;
			if(ArenaP1==1)
			{
            new r = random(sizeof(PARKRANDOM1));
			SetPlayerPos(playerid, PARKRANDOM1[r][0], PARKRANDOM1[r][1], PARKRANDOM1[r][2]);
			SetPlayerFacingAngle(playerid,0.0000);
			InterpolateCameraPos(playerid, -1099.375488, 1532.766357, 627.256896, -979.026733, 1621.094604, 649.643432, 6000);
			InterpolateCameraLookAt(playerid, -1102.870483, 1529.946899, 625.057739, -982.898315, 1621.134277, 646.479736, 8000);
			ParkPick1 = CreatePickup(19058, 3, -1105.5436,1527.5442,623.0923, 7);
			}
			else if(ArenaP2==1)
			{
            new r = random(sizeof(PARKRANDOM2));
			SetPlayerPos(playerid, PARKRANDOM2[r][0], PARKRANDOM2[r][1],PARKRANDOM2[r][2]);
			SetPlayerFacingAngle(playerid,0.0000);
			InterpolateCameraPos(playerid, 2087.2554, -2775.8982, 925.8693, 2097.1636, -2769.1775, 920.7702, 6666);
			InterpolateCameraLookAt(playerid, 2087.7671, -2776.7534, 925.5745, 2097.9282, -2768.5361, 920.3753, 6666);
			ParkPick2 = CreatePickup(19057, 3, 2024.1927, -2930.1096, 878.0489, 7);
			}
            foreach(Player, i)
			{
            StopAudioStreamForPlayer(i);
			PlayAudioStreamForPlayer(i, "http://www.dropbox.com/s/nfd20yquivorz7d/Evento%20Park.mp3?dl=1");
			}
			return 1;
		}
		else if(parkon == 1)
		{
	        PlayerInfo[playerid][PlayerinParkour] = 1;
	        TogglePlayerControllable(playerid, 0);
	        SetPlayerInterior(playerid,0);
	        SetPlayerVirtualWorld(playerid,7);
	        PlayerInfo[playerid][EnEvento] = 1;
         	parkrank++;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",parkrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
			if(ArenaP1==1)
			{
            new r = random(sizeof(PARKRANDOM1));
			SetPlayerPos(playerid, PARKRANDOM1[r][0], PARKRANDOM1[r][1], PARKRANDOM1[r][2]);
			SetPlayerFacingAngle(playerid,0.0000);
			InterpolateCameraPos(playerid, -237.0433, 2327.1907, 404.7755, -237.1524, 2328.1843, 404.5958, 3000);
			InterpolateCameraLookAt(playerid, -217.5649, 2370.6467, 396.9356, -216.5683, 2370.5635, 396.9210, 3000);
			}
			else if(ArenaP2==1)
			{
            new r = random(sizeof(PARKRANDOM2));
			SetPlayerPos(playerid, PARKRANDOM2[r][0], PARKRANDOM2[r][1],PARKRANDOM2[r][2]);
			SetPlayerFacingAngle(playerid,0.0000);
			InterpolateCameraPos(playerid, 2087.2554, -2775.8982, 925.8693, 2097.1636, -2769.1775, 920.7702, 6666);
			InterpolateCameraLookAt(playerid, 2087.7671, -2776.7534, 925.5745, 2097.9282, -2768.5361, 920.3753, 6666);
			}
	        ResetPlayerWeapons(playerid);
	        SetPlayerHealth(playerid,100);
	        SetPlayerArmour(playerid,100);
	        format(string2, sizeof(string2), "{FF0000}[Evento Parkour]: {FFFFFF}%s {00EEFF}ha entrado al Evento: {00FF00}Parkour!", pName(playerid));
			SendClientMessageToAll(0x33AA33AA,string2);
			GameTextForPlayer(playerid,"~b~Espera a que ~n~comienze!",4000,3);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00EEFF}|| Evento Parkour ||","{FF0000}Objetivo:\n\n{FFFFFF}Corre Hasta El Final De Este Mapeo Sin Caer Tratando De Saltar Lo Mas Alto\nQue Puedas Y Ganar.!", "Aceptar", "") ;
		}
		return 1;
		}

	if (strcmp(cmdtext,"/evlaberinto", true)==0)
    {
 	if(SBOX == 1 || SOP7 == 1 || GT == 1 || SSWAT == 1 || SHG == 1 || SRHINO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
	if(SEVENTO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
	if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Desactiva tu God!");
    ShowPlayerDialog(playerid,5199,DIALOG_STYLE_LIST,"Elige Mapa","Mapa 1","Elegir", "Cancelar");
    return 1;
    }

	if (strcmp(cmdtext,"/laberinto", true)==0)
    {
	    if(SLAB == 0) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}El evento no está Activado!");
        if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Desactiva tu God!");
        if(PlayerInfo[playerid][EnEvento] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya estás en el Evento!");
		if(EstaEnFly[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Desactiva el /fly antes de ir al evento!");
		if(SaltarMas[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Usa /supersaltosff (Para desactivar los supersaltos e ir al evento)!");
		if(labplaying == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya comenzó el Evento!");
        if(DBP_Stats[playerid] >= 0) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Tienes que salir del derby antes! (Pon /Derby2 para salir!)");
	    if(labon == 0)
	    {
            if(PlayerInfo[playerid][pAdmin] <2) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");}
	        labon = 1;
	        PlayerInfo[playerid][PlayerinLaberinto] = 1;
   	        PlayerInfo[playerid][EnEvento] = 1;
	        labrank = 1;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",parkrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
	        TogglePlayerControllable(playerid, 0);
	        SetPlayerInterior(playerid,0);
	        SetPlayerVirtualWorld(playerid,7);
	        SetPlayerPos(playerid,2496.479,-1678.357,6997.348);
	        ResetPlayerWeapons(playerid);
		    SendClientMessage(playerid,green,"[INFO]: Has activado el Evento de Laberinto!");
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00EEFF}|| Evento Laberinto ||","{FF0000}Objetivo:\n\n{FFFFFF}Logra Encontrar el Camino Correcto antes que\nlos Demas y Gana!", "Aceptar", "") ;
		    SetPlayerHealth(playerid,100);
	        SetPlayerArmour(playerid,100);
	        startvar[4] = 1;
	        labtimer = SetTimer("StartLaberinto", 31000, 0);
			CountTimerLaberinto = SetTimer("CountTillLaberinto", 999, 1);
            CMDMessageToAdmins(playerid,"RLEVENTOS");
            CountAmountLaberinto = 30;
			if(ArenaL1==1)
			{
	            new r = random(sizeof(LABRANDOM1));
				SetPlayerPos(playerid, LABRANDOM1[r][0], LABRANDOM1[r][1], LABRANDOM1[r][2]);
				SetPlayerFacingAngle(playerid, 0.0000);
				InterpolateCameraPos(playerid, 850.0402, -3057.4736, 14.0032, 849.6310, -3002.0342, 14.8837, 6000);
				InterpolateCameraLookAt(playerid, 850.0219, -3058.4707, 13.9382, 849.6384, -3003.0313, 14.7236, 6000);
				LabPick1 = CreatePickup(1550, 3, 850.0942, -3062.4497, 12.7479, 7);
			}
            foreach(Player, i)
			{
	            StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://www.dropbox.com/s/535cp34elzn101n/Evento%20Laberinto.mp3?dl=1");
			}
			return 1;
		}
		else if(labon == 1)
		{
	        PlayerInfo[playerid][PlayerinLaberinto] = 1;
	        TogglePlayerControllable(playerid, 0);
	        SetPlayerInterior(playerid,0);
	        SetPlayerVirtualWorld(playerid,7);
	        PlayerInfo[playerid][EnEvento] = 1;
         	labrank++;
			new strev[1000];
			format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",labrank);
			TextDrawSetString(ConcText,strev);
			TextDrawShowForAll(ConcText);
			if(ArenaL1==1)
			{
	            new r = random(sizeof(LABRANDOM1));
				SetPlayerPos(playerid, LABRANDOM1[r][0], LABRANDOM1[r][1], LABRANDOM1[r][2]);
				SetPlayerFacingAngle(playerid, 0.0000);
				InterpolateCameraPos(playerid, 850.0402, -3057.4736, 14.0032, 849.6310, -3002.0342, 14.8837, 6000);
				InterpolateCameraLookAt(playerid, 850.0219, -3058.4707, 13.9382, 849.6384, -3003.0313, 14.7236, 6000);
			}
	        ResetPlayerWeapons(playerid);
	        SetPlayerHealth(playerid,100);
	        SetPlayerArmour(playerid,100);
	        format(string2, sizeof(string2), "{FF0000}[Evento Laberinto]: {FFFFFF}%s {00EEFF}ha entrado al Evento del {00FF00}Laberinto!", pName(playerid));
			SendClientMessageToAll(0x33AA33AA,string2);
			GameTextForPlayer(playerid,"~b~Espera a que ~n~comienze!",4000,3);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00EEFF}|| Evento Laberinto ||","{FF0000}Objetivo:\n\n{FFFFFF}Logra Encontrar el Camino Correcto antes que\nlos Demas y Gana!", "Aceptar", "") ;
		}
		return 1;
		}

	 	if (strcmp(cmdtext,"/rleventos", true)==0)
		{
        if(PlayerInfo[playerid][pAdmin] <3) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}No tienes level");}
        if(SEVENTO == 1 || SBOX == 1 || SOP7 == 1 || GT == 1 || SSWAT == 1 || SHG == 1 || SRHINO == 1 || SDERBY == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
  		if(PlayerInfo[playerid][God] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Desactiva tu God!");
  		ShowPlayerDialog(playerid,5150,DIALOG_STYLE_LIST,"{FFFFFF}Revolucion {FF0000}Latina {00EEFF}FR",
	    "Supervivencia{00EEFF} [LISTO]\n\
		OP7{00EEFF} [LISTO]\n\
		Hunger Games{00EEFF} [LISTO]\n\
		No Te Mojes{00EEFF} [LISTO]\n\
		Revolucion{00EEFF} [LISTO]\n\
		Derby{00EEFF} [LISTO]\n\
		Rhino{00EEFF} [LISTO]\n\
		Parkour{00EEFF} [LISTO]\n\
		Zombie{00EEFF} [LISTO]\n\
		Laberinto{FF0000} [MAPA BUG]\n\
		Carrera{00EEFF} [LISTO]","Elegir","Cancelar");
        return 1;
        }

		if (strcmp(cmdtext,"/fineventosrl", true)==0)
    	{
            if(PlayerInfo[playerid][pAdmin] <3) { return SendClientMessage(playerid,COLOR_RED,"[ERROR]: {FFFFFF}No tienes level para usar este comando");}
            foreach(Player, i)
		    {
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinTdm] == 1)
				{
					PlayerInfo[i][PlayerinTdm] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SetPlayerColor(i,RandomColors[i]);
					SpawnPlayer(i);
					SetPlayerTeam(i, 255);
				}
			}
		    tdmplaying = 0;
		    tdmrank = 0;
		    tdmon = 0;
		    swatplaying = 0;
		    swatrank = 0;
		    swaton = 0;
		    KillTimer(swattimer);
		    ArenaSwat1 = 0;
		    SEVENTO = 0;
		    SSWAT = 0;
		    ArenaSwat2 = 0;
		    KillTimer(tdmtimer);
			KillTimer(CountTimerOP7);
		    SOP7 = 0;
		    SEVENTO = 0;
		    new stringd[120];
		    format(stringd,120,"[INFO]: {FFFFFF}El Administrador %s acabó los eventos!",PlayerName2(playerid));
		    SendClientMessageToAll(COLOR_RED,stringd);
		    RushChallenge = 0;
		    DeathSquare = 0;
		    Otro = 0;
            foreach(Player, i)
			{
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinHg] == 1)
				{
					PlayerInfo[i][PlayerinHg] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SetPlayerColor(i,RandomColors[i]);
					SpawnPlayer(i);
					SetPlayerTeam(i, 255);
				}
			}
		    hgplaying = 0;
		    hgrank = 0;
		    hgon = 0;
		    ArenaHG1 = 0;
		    ArenaHG2 = 0;
		    KillTimer(hgtimer);
        	KillTimer(CountTimerHg);
		    SHG = 0;
            foreach(Player, i)
			{
			    if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinSwat] == 1)
				{
					PlayerInfo[i][PlayerinSwat] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SetPlayerColor(i,RandomColors[i]);
					SpawnPlayer(i);
					SetPlayerTeam(i, 255);
				}
			}
		    swatplaying = 0;
		    swatrank = 0;
		    swaton = 0;
		    KillTimer(swattimer);
        	KillTimer(CountTimerSwat);
		    SSWAT = 0;
		    SEVENTO = 0;
		    ArenaSwat1 = 0;
		    ArenaSwat2 = 0;
        	foreach(Player, i)
		    {
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinZombie] == 1)
				{
					PlayerInfo[i][PlayerinZombie] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SetPlayerColor(i,RandomColors[i]);
					SpawnPlayer(i);
					SetPlayerTeam(i, 255);
				}
			}
		    zombieplaying = 0;
		    zombierank = 0;
		    zombieon = 0;
		    KillTimer(zombietimer);
			KillTimer(CountTimerZombie);
		    SZOMBIE = 0;
		    SEVENTO = 0;
		    ArenaZombie1 = 0;
		    ArenaZombie2 = 0;
			foreach(Player, i)
			{
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinParkour] == 1)
				{
					PlayerInfo[i][PlayerinParkour] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SetPlayerHealth(i,100);
					SpawnPlayer(i);
					TogglePlayerControllable(i, 1);
					SetCameraBehindPlayer(i);
				}
			}
			parkplaying = 0;
			parkrank = 0;
			parkon = 0;
			SPARK = 0;
			SEVENTO = 0;
			ArenaP1 = 0;
			ArenaP2 = 0;
			startvar[4] = 0;
			KillTimer(parktimer);
			KillTimer(CountTimerParkour);
			foreach(Player, i)
			{
				if (IsPlayerConnected(i) && PlayerInfo[i][PlayerinLaberinto] == 1)
				{
					PlayerInfo[i][PlayerinLaberinto] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SetPlayerHealth(i,100);
					SpawnPlayer(i);
					TogglePlayerControllable(i, 1);
					SetCameraBehindPlayer(i);
				}
			}
			labplaying = 0;
			labrank = 0;
			labon = 0;
			SLAB = 0;
			SEVENTO = 0;
			ArenaL1 = 0;
			startvar[4] = 0;
			KillTimer(labtimer);
			KillTimer(CountTimerLaberinto);
		    foreach(Player, i)
			{
			    if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinBox] == 1)
                {
					PlayerInfo[i][PlayerinBox] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SpawnPlayer(i);
				}
			}
		    boxplaying = 0;
		    boxrank = 0;
		    boxon = 0;
		    arenabox1 = 0;
		    arenabox2 = 0;
		    KillTimer(boxtimer);
        	KillTimer(CountTimerSurvival);
		    SBOX = 0;
		    SEVENTO = 0;
		    Pala = 0;
			Dildo = 0;
			Bate = 0;
			Golf = 0;
			Puno = 0;
			Nmm = 0;
			Desert = 0;
			Shotgun = 0;
			Spray = 0;
			foreach(Player, i)
			{
	  			if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinDerby] == 1)
				{
					PlayerInfo[i][PlayerinDerby] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SetPlayerColor(i,RandomColors[i]);
					CarDeleter(PlayerInfo[i][pCar]);
					SpawnPlayer(i);
					SetPlayerTeam(i, 255);
				}
			}
	  		derbyplaying = 0;
	  		derbyrank = 0;
	    	derbyon = 0;
	    	KillTimer(derbytimer);
	    	KillTimer(CountTimerDerby);
		    SDERBY = 0;
		    SEVENTO = 0;
		    ArenaDerby1 = 0;
		    ArenaDerby2 = 0;
		    foreach(Player, i)
			{
				if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinRhino] == 1)
                {
					PlayerInfo[i][PlayerinRhino] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SpawnPlayer(i);
				}
			}
		    rhinoplaying = 0;
		    rhinorank = 0;
		    rhinoon = 0;
		    KillTimer(rhinotimer);
        	KillTimer(CountTimerRhino);
		    SRHINO = 0;
		    ArenaRhino1 = 0;
		    ArenaRhino2 = 0;
			TextDrawHideForAll(Textdrawrace);
			TextDrawHideForAll(Textdrawrace2);
			TextDrawHideForAll(Textdrawrace3);
			TextDrawHideForAll(Textdrawrace4);
			TextDrawHideForAll(Textdrawrace5);
		    foreach(Player, i)
			{
				if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinGet] == 1)
                {
					PlayerInfo[i][PlayerinGet] = 0;
					PlayerInfo[i][EnEvento] = 0;
					SetPlayerVirtualWorld(i,0);
					SetPlayerInterior(i, 0);
					SetCameraBehindPlayer(i);
					SpawnPlayer(i);
                }
            }
			for(new i; i < MAX_SLOTS; i++)
		 	{
		 	    DestroyObject(Objects_[0][i]);
		 	    if(!VIEW_FROM_ABOVE)
		 	    DestroyObject(Objects_[1][i]);
		 	}
		 	inProgress = 0;
		 	GT = 0;
			Iter_Clear(_Objects);
			Iter_Clear(_Minigamer);
			KillTimer(uTimer);
			TextDrawHideForAll(ConcText);
			TextDrawHideForAll(GanoText);
			TextDrawHideForAll(GanoText2);
            KillTimer(CountTimer);
        	KillTimer(CountTimerSurvival);
        	KillTimer(CountTimerOP7);
        	KillTimer(CountTimerGET);
        	KillTimer(CountTimerHg);
        	KillTimer(CountTimerRhino);
        	KillTimer(CountTimerParkour);
        	KillTimer(CountTimerZombie);
        	KillTimer(CountTimerEvento);
	        return 1;
        }
//==============================================================================
	if(strcmp("/createzone", cmdtext, true, 10) == 0)
	{
     if(PlayerInfo[playerid][pAdmin] >= 3)
     {
		new file[100];
		if(creating == 0) ZONE_NUMBER++;
		if(zoneid == 0)
		{
			for(new i = 0; i < ZONE_NUMBER; i++)
	  		{
				format(file, sizeof(file), ZONE_FILE, i);
				if(!dini_Exists(file) && i != 0) zoneid = i;
			}
		}


		format(file, sizeof(file), ZONE_FILE, zoneid);

		if(creating == 0)
		{
   			dini_IntSet(CFG,"ZONE_NUMBER",ZONE_NUMBER);
			dini_Create(file);
			dini_IntSet(file, "ZONE_GANGID", 0);
			ZoneInfo[zoneid][ZONE_ID] = zoneid;
			ZoneInfo[zoneid][ZONE_GANGID] = 0;
			ZoneInfo[zoneid][ZONE_COLOR] = GREY;
			GetPlayerPos(playerid, x1, y1, z1);
			SendClientMessage(playerid, COLOR_ROJO, "[INFO]: Vuelva a ejecutar el Cmd en la esquina opuesta de la Zona");
			creating = 1;
		}
		else
		{
		    GetPlayerPos(playerid, x2, y2, z2);
		    if(x1 < x2)
			{
				dini_FloatSet(file, "ZONE_X1", x1);
				dini_FloatSet(file, "ZONE_X2", x2);
			}
			else
			{
				dini_FloatSet(file, "ZONE_X1", x2);
				dini_FloatSet(file, "ZONE_X2", x1);
			}
			if(y1 < y2)
			{
				dini_FloatSet(file, "ZONE_Y1", y1);
				dini_FloatSet(file, "ZONE_Y2", y2);
			}
			else
			{
				dini_FloatSet(file, "ZONE_Y1", y2);
				dini_FloatSet(file, "ZONE_Y2", y1);
			}
			ZoneInfo[zoneid][ZONE_X1] = dini_Float(file, "X1");
			ZoneInfo[zoneid][ZONE_Y1] = dini_Float(file, "Y1");
			ZoneInfo[zoneid][ZONE_X2] = dini_Float(file, "X2");
			ZoneInfo[zoneid][ZONE_Y2] = dini_Float(file, "Y2");
			ZoneInfo[zoneid][ZONE_GZID] = GangZoneCreate(x1, y1, x2, y2);
			GangZoneShowForAll(ZoneInfo[zoneid][ZONE_GZID], GREY);
			AddAreaCheck(ZoneInfo[zoneid][ZONE_X1], ZoneInfo[zoneid][ZONE_X2], ZoneInfo[zoneid][ZONE_Y1], ZoneInfo[zoneid][ZONE_Y2]);
			creating = 0;
			new string[30];
			format(string, sizeof(string), "[INFO]: GangZone Creada. ID: %d", zoneid);
			SendClientMessage(playerid, COLOR_ROJO, string);
			zoneid = 0;
		}
		return SendClientMessage(playerid, COLOR_ROJO, "Solo Admins");
		}
		return 1;
	}

    if (!strcmp(cmdtext, "/ck", true))
    {
    if(SCKill == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}El comando fue desactivado por un Administrador");
	if(PlayerInfo[playerid][PlayerinLaberinto] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este cmd aqui!");
    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(playerid,X,Y,Z);
    SetPlayerPos(playerid,X,Y,Z+3);
    SendClientMessage(playerid, yellow, "[INFO]: Escapastes de CarKill!");
	return 1;
	}

	if (!strcmp(cmdtext, "/interiores", true))
	{
	new string[2000];
	strcat(string, "24/7 1\n24/7 2\n24/7 3\n24/7 4\n24/7 5\n24/7 6\n");
	strcat(string, "Airport ticket desk\nAirport baggage reclaim\n");
	strcat(string, "Shamal\nAndromada\nAmmunation 1\nAmmunation 2\n");
	strcat(string, "Ammunation 3\nAmmunation 4\nAmmunation 5\n");
	strcat(string, "Ammunation booths\nAmmunation range\n");
	strcat(string, "Blastin fools hallway\nBudget inn motel room\n");
	strcat(string, "Jefferson motel\nOff track betting shop\n");
	strcat(string, "Sex shop\nMeat factory\nZero's RC shop\n{FF0000}>> Siguiente >>");
	ShowPlayerDialog(playerid, INTDIALOG, DIALOG_STYLE_LIST, "{ffb800}|| Interiores ||", string, "Seleccionar", "Cancelar");
	return 1;
	}

	if (!strcmp(cmdtext, "/interiores2", true))
	{
	new string[2000];
	strcat(string, "Dillimore gas station\nCatigula's basement\n");
	strcat(string, "FDC Janitors room\nWoozie's office\nBinco\n");
	strcat(string, "Didier sachs\nProlaps\nSuburban\nVictim\n");
	strcat(string, "Zip\nClub\nBar\nLil' probe inn\nJay's diner\n");
	strcat(string, "Gant bridge diner\nSecret valley diner\nWorld of coq\n");
	strcat(string, "Welcome pump\nBurger shot\nCluckin' bell\n");
	strcat(string, "Bell stacked pizza\nRusty browns donuts\nDenise room\n");
	strcat(string, "Katie room\n{FF0000}>> Siguiente >>");
	ShowPlayerDialog(playerid, INTDIALOG+1, DIALOG_STYLE_LIST, "{FFB800}|| Interiores 2 ||", string, "Seleccionar", "Cancelar");
	return 1;
	}

	if (!strcmp(cmdtext, "/interiores3", true))
	{
	new string[2000];
	strcat(string, "Michelle room\nBarbara room\nMillie room\n");
	strcat(string, "Sherman dam\nPlanning dept.\nArea 51\nLS gym\n");
	strcat(string, "SF gym\nLV gym\nB Dup's house\nB Dup's crack pad\n");
	strcat(string, "Cj's house\nMadd Doggs mansion\nOg Loc's house\n");
	strcat(string, "Ryders house\nSweet's house\nCrack factory\n");
	strcat(string, "Big spread ranch\nFanny batters\nStrip club\n");
	strcat(string, "Strip club private room\nUnnamed brothel\n");
	strcat(string, "Tiger skin brothel\nPleasure domes\n");
	strcat(string, "Liberty city outside\n{FF0000}>> Siguiente >>");
	ShowPlayerDialog(playerid, INTDIALOG+2, DIALOG_STYLE_LIST, "{FFB800}|| Interiores 3 ||", string, "Seleccionar", "Cancelar");
	return 1;
	}

	if (!strcmp(cmdtext, "/interiores4", true))
	{
	new string[2000];
	strcat(string, "Liberty city inside\nGang house\nColonel Furhberger's\n");
	strcat(string, "Crack den\nWarehouse 1\nWarehouse 2\nSweets garage\n");
	strcat(string, "Lil' probe inn toilet\nUnused safe house\n");
	strcat(string, "RC Battlefield\nBarber 1\nBarber 2\nBarber 3\n");
	strcat(string, "Tatoo parlour 1\nTatoo parlour 2\nTatoo parlour 3\n");
	strcat(string, "LS police HQ\nSF police HQ\nLV police HQ\nCar school\n");
	strcat(string, "8-Track\nBloodbowl\nDirt track\nKickstart\nVice stadium\n{FF0000}>> Siguiente >>");
	ShowPlayerDialog(playerid, INTDIALOG+3, DIALOG_STYLE_LIST, "{FFB800}|| Interiores 4 ||", string, "Seleccionar", "Cancelar");
	return 1;
	}

	if (!strcmp(cmdtext, "/interiores5", true))
	{
	new string[2000];
	strcat(string, "SF Garage\nLS Garage\nSF Bomb shop\nBlueberry warehouse\n");
	strcat(string, "LV Warehouse 1\nLV Warehouse 2 (hidden part)\nCatigula's hidden room\n");
	strcat(string, "Bank\nBank (behind desk)\nLS Atruim\nBike School");
	ShowPlayerDialog(playerid, INTDIALOG+4, DIALOG_STYLE_LIST, "{FFB800}|| Interiores 5 ||", string, "Seleccionar", "Cancelar");
	return 1;
	}

    if(!strcmp(cmdtext, "/vknockout", true))
    {
	if(PlayerInfo[playerid][pVip] >= 8)
	{
	if(Desmadre[playerid] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes Usar aqui este Comando!");
    if(vKnockOut[playerid] == 0)
    {
    vKnockOut[playerid] = 1;
    CMDMessageToVips(playerid,"VKNOCKOUT (ON)");
    SendClientMessage(playerid,yellow,"[INFO]: {FFFFFF}Knockout Activado, Puedes matar de UN DISPARO con Algunas Armas!");
    }
    else
    {
    vKnockOut[playerid] = 0;
    CMDMessageToVips(playerid,"VKNOCKOUT (OFF)");
    SendClientMessage(playerid,yellow,"[INFO]: {FFFFFF}Knockout Desactivado, Ya no puedes matar de UN DISPARO!");
    }
    }
	else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Vip Legendario para usar este Comando!");
	return 1;
	}

 	   if(!strcmp(cmdtext, "/vdcolor", true))
    {
		if(PlayerInfo[playerid][pVip] >= 9)
		{
		    if(ColorRandom[playerid] == 0)
		    {
				new RandomColor = random(9);
				if(RandomColor == 0)
				{
					SetPlayerColor(playerid, 0xFF0000FF); // Rojo
					SendClientMessage(playerid, red, "¡Info!: {FFFFFF}Has Activado el Modo Color Random. {00FF00}(Exclusivo para VIP DIOS!!)");
					ColorRandom[playerid] = 1;
					RC[playerid] = SetTimerEx("ColorVIP", 1, 1, "i", playerid);
					CMDMessageToVips(playerid,"VDCOLOR {00FF00}(ON)");
					return 1;
				}
				else if(RandomColor == 1)
				{
					SetPlayerColor(playerid, 0x00FF00FF); // Verde
					SendClientMessage(playerid, red, "¡Info!: {FFFFFF}Has Activado el Modo Color Random. {00FF00}(Exclusivo para VIP DIOS!!)");
					ColorRandom[playerid] = 1;
					RC[playerid] = SetTimerEx("ColorVIP", 1, 1, "i", playerid);
					CMDMessageToVips(playerid,"VDCOLOR {00FF00}(ON)");
					return 1;
				}
				else if(RandomColor == 2)
				{
					SetPlayerColor(playerid, 0x0000FFFF); // Azul
					SendClientMessage(playerid, red, "¡Info!: {FFFFFF}Has Activado el Modo Color Random. {00FF00}(Exclusivo para VIP DIOS!!)");
					ColorRandom[playerid] = 1;
					RC[playerid] = SetTimerEx("ColorVIP", 1, 1, "i", playerid);
					CMDMessageToVips(playerid,"VDCOLOR {00FF00}(ON)");
					return 1;
				}
   				else if(RandomColor == 3)
				{
					SetPlayerColor(playerid, 0xffff00ff); // Amarillo
					SendClientMessage(playerid, red, "¡Info!: {FFFFFF}Has Activado el Modo Color Random. {00FF00}(Exclusivo para VIP DIOS!!)");
					ColorRandom[playerid] = 1;
					RC[playerid] = SetTimerEx("ColorVIP", 1, 1, "i", playerid);
					CMDMessageToVips(playerid,"VDCOLOR {00FF00}(ON)");
					return 1;
     			}
     			else if(RandomColor == 4)
     			{
					SetPlayerColor(playerid, 0x00ffffff); // Celeste
					SendClientMessage(playerid, red, "¡Info!: {FFFFFF}Has Activado el Modo Color Random. {00FF00}(Exclusivo para VIP DIOS!!)");
					ColorRandom[playerid] = 1;
					RC[playerid] = SetTimerEx("ColorVIP", 1, 1, "i", playerid);
					CMDMessageToVips(playerid,"VDCOLOR {00FF00}(ON)");
					return 1;
     			}
     			else if(RandomColor == 5)
     			{
					SetPlayerColor(playerid, 0xffffffff); // Blanco
					SendClientMessage(playerid, red, "¡Info!: {FFFFFF}Has Activado el Modo Color Random. {00FF00}(Exclusivo para VIP DIOS!!)");
					ColorRandom[playerid] = 1;
					RC[playerid] = SetTimerEx("ColorVIP", 1, 1, "i", playerid);
					CMDMessageToVips(playerid,"VDCOLOR {00FF00}(ON)");
					return 1;
     			}
     			else if(RandomColor == 6)
     			{
					SetPlayerColor(playerid, 0x1C1C1Cff); // Negro
					SendClientMessage(playerid, red, "¡Info!: {FFFFFF}Has Activado el Modo Color Random. {00FF00}(Exclusivo para VIP DIOS!!)");
					ColorRandom[playerid] = 1;
					RC[playerid] = SetTimerEx("ColorVIP", 1, 1, "i", playerid);
					CMDMessageToVips(playerid,"VDCOLOR {00FF00}(ON)");
					return 1;
     			}
                else if(RandomColor == 7)
     			{
					SetPlayerColor(playerid, 0x999999ff); // Gris
					SendClientMessage(playerid, red, "¡Info!: {FFFFFF}Has Activado el Modo Color Random. {00FF00}(Exclusivo para VIP DIOS!!)");
					ColorRandom[playerid] = 1;
					RC[playerid] = SetTimerEx("ColorVIP", 1, 1, "i", playerid);
					CMDMessageToVips(playerid,"VDCOLOR {00FF00}(ON)");
					return 1;
     			}
     			else if(RandomColor == 8)
     			{
					SetPlayerColor(playerid, 0x8B4513FF); // Marron
					SendClientMessage(playerid, red, "¡Info!: {FFFFFF}Has Activado el Modo Color Random. {00FF00}(Exclusivo para VIP DIOS!!)");
					ColorRandom[playerid] = 1;
					RC[playerid] = SetTimerEx("ColorVIP", 1, 1, "i", playerid);
					CMDMessageToVips(playerid,"VDCOLOR {00FF00}(ON)");
					return 1;
     			}
			}
			else if(ColorRandom[playerid] == 1)
			{
				SetPlayerColor(playerid, 0x00FF00FF);
				SendClientMessage(playerid, red, "¡Info!: {FFFFFF}Has Desactivado el Modo Color Random. {00FF00}(Exclusivo para VIP DIOS!!)");
				ColorRandom[playerid] = 0;
				KillTimer(RC[playerid]);
				CMDMessageToVips(playerid,"VDCOLOR {FF0000}(OFF)");
   }
		} else return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}Necesitas ser Vip DIOS para usar este Comando!");
		return 1;
	}

    if (strcmp(cmdtext,"/reloj", true)==0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 7) {
        for(new i = 0; i < GetMaxPlayers(); i ++)
        {
        TogglePlayerClock(i,1);
        }
        CMDMessageToAdmins(playerid,"RELOJ");
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 7] para Usar este Comando!");
     return 1;
	 }

	 if (strcmp(cmdtext,"/sreloj", true)==0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 6) {
        for(new i = 0; i < GetMaxPlayers(); i ++)
        {
        TogglePlayerClock(i,0);
        }
        CMDMessageToAdmins(playerid,"SRELOJ");
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 6] para Usar este Comando!");
     return 1;
	 }


    if (strcmp(cmdtext,"/rangos", true)==0)
    {
	 SendClientMessage(playerid,red,"[INFO]: {FFFFFF}Los rangos están en construcción.");
/*	{
	new string[755];
	strcat(string, "{FFFFFF}>> *Rango Info* <<\n\n\n");
	strcat(string, "{FF0000}* {FF8801}Con -2000 exp {0328BB}Noob Pro\n");
	strcat(string, "{FF0000}* {FF8801}Con -300 exp {0328BB}Semi Noob\n");
	strcat(string, "{FF0000}* {FF8801}Con -10 exp {0328BB}Noob\n");
	strcat(string, "{FF0000}* {FF8801}Con -9 exp {0328BB}Novato\n");
	strcat(string, "{FF0000}* {FF8801}Con 51 exp {0328BB}Semi Novato\n");
	strcat(string, "{FF0000}* {FF8801}Con 101 exp {0328BB}Novato Pro\n");
	strcat(string, "{FF0000}* {FF8801}con 1001 exp {0328BB}Intermedio\n");
	strcat(string, "{FF0000}* {FF8801}Con 2001 exp {0328BB}Avanzado\n");
	strcat(string, "{FF0000}* {FF8801}Con 3001 exp {0328BB}Complejo\n");
	strcat(string, "{FF0000}* {FF8801}Con 4001 exp {0328BB}Sicario\n");
	strcat(string, "{FF0000}* {FF8801}Con 5001 exp {0328BB}Semi Pro\n");
	strcat(string, "{FF0000}* {FF8801}Con 6001 exp {0328BB}Pro\n");
	strcat(string, "{FF0000}* {FF8801}Con 7001 exp {0328BB}Pro Avanzado\n");
	strcat(string, "{FF0000}* {FF8801}Con 8001 exp {0328BB}Pro Gamer\n");
	strcat(string, "{FF0000}* {FF8801}Con 9001 exp {0328BB}Dios\n");
	ShowPlayerDialog(playerid,1, DIALOG_STYLE_MSGBOX, "{ffb800}|| Rangos ||", string, "Salir", "");
	}*/
	return 1;
	}

     //-------------------------
/*if(strcmp(cmdtext,"/privado",true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 8)
{
ShowPlayerDialog(playerid,755,DIALOG_STYLE_INPUT,"{ffffff}Sistema de Mensajes Privados","{00FFFF}Introduzca la ID del usuario:","Seguir","Cancelar");
}else SendClientMessage(playerid,0xFF0000C8,"[ERROR]: Necesitas ser Administrador Nivel 8 para este Comando");
return 1;
}*/

    if(strcmp(cmdtext,"/vcontrol",true) == 0)
	{
	if(PlayerInfo[playerid][pVip] >= 4)
		{
	    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
			ShowPlayerDialog(playerid, ControlCoche, DIALOG_STYLE_LIST, "Control Del Vehículo", "Luces\nPuertas (Lock/Unlock)\nMaletero\nCapo\nAlarma", "Aceptar", "Cancelar");
		}
		else
		{
		    SendClientMessage(playerid,0xF600FF,"[ERROR]: {FFFFFF}Tienes que estar en un vehículo para usar el comando!");
		}
		} else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Necesitas ser Player Platinum Para Usar Este Comando");
		return 1;
	}

    if(strcmp(cmdtext, "/insertar", true) == 0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 7) {
    ShowPlayerDialog(playerid, DIALOG_MUSIC, DIALOG_STYLE_INPUT, "|| Musica RL ||", "Inserte el Link de su Música.", "Insertar", "Salir");
    } else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
	return 1;
    }
 //* ============================================================================
      if(strcmp(cmdtext, "/bengala", true) == 0)
     {
     if(PlayerInfo[playerid][pVip] >= 5)
     {
     new Float:X,Float:Y,Float:Z;
     GetPlayerPos(playerid,X,Y,Z);
     OBengala[playerid] = CreateObject(354,X,Y,Z+2,0,0,0);
     MoveObject(OBengala[playerid],X,Y,Z+100,15);
     SetTimerEx("ChauBengala", 2700, 0,"d",playerid);
     SetTimerEx("ChauBengala3",2850, 0,"d",playerid);
	 SetTimerEx("ChauBengala2",2920, 0,"d",playerid);
     }else ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX,"     ", "{ff0000}Info: {ffffff}No eres Vip para poder usar este comando [Esmeralda]", "Ok", "");
    return 1;
}
//============================================================================//
    if(strcmp(cmdtext, "/bombac4", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    if(PlayerInfo[playerid][pVip] >= 1) {
        SendClientMessage(playerid, AZUL_OSCURO, "{FF0000}Comandos C4: {A4A4A4}/ponerc4 - /detonar - /comprarc4 - /verbombas - /terrorista.");
        } else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Necesitas ser Player Silver Para Usar Este Comando");
  }
		return 1;
	}
	if(strcmp(cmdtext,"/ponerc4", true) == 0 || strcmp(cmdtext,"/colocarbomba", true) == 0)
	{
		if(PlayerInfo[playerid][SpecType] != ADMIN_SPEC_TYPE_NONE) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}No puedes usar este comando cuando estás Spectando!");
        if(PlayerInfo[playerid][pVip] == 0)
		{
        SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Necesitas ser Player Silver Para Usar Este Comando");
        return 1;
	    	}

	    if(IsPlayerConnected(playerid))
	    {
	        if(IsPlayerInAnyVehicle(playerid))
	    	{
	       		SendClientMessage(playerid, GRIS, "Primero bájate del vehículo.");
	        	return 1;
	    	}
	    	if(CantidadBombas[playerid] == 0)
	   	 	{
	   		     SendClientMessage(playerid, GRIS, "No tienes ninguna bomba, cómpralo con /comprarc4.");
	   		     return 1;
	   		}
	   		if(Colocada[playerid] == 1)
	   		{
	   		    SendClientMessage(playerid, GRIS, "Solo puedes colocar una bomba a la vez.");
   		     	return 1;
			}
            new Float:X, Float:Y, Float:Z;
            GetPlayerPos(playerid,X,Y,Z);
	    	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
	    	CantidadBombas[playerid] -= 1;
			SetTimerEx("ColocarBomba",700,0,"d",playerid);
			CMDMessageToVips(playerid,"PONERC4");
			SendClientMessage(playerid, AZUL_OSCURO, "Usa /detonar para detonar la bomba.");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/detonar", true) == 0)
	{
	if(PlayerInfo[playerid][SpecType] != ADMIN_SPEC_TYPE_NONE) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}No puedes usar este comando cuando estás Spectando!");
	if(PlayerInfo[playerid][pVip] == 0)
		{
        SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Necesitas ser Player Silver Para Usar Este Comando");
        return 1;
	    	}
	    if(IsPlayerConnected(playerid))
	    {
	    	if(Colocada[playerid] == 0)
	   	 	{
	   		     SendClientMessage(playerid, GRIS, "No colocaste ninguna bomba, colócalo con /ponerc4.");
	   		     return 1;
	   		}
			SetTimerEx("PrenderExplosion",700,0,"d",playerid);
		}
		return 1;
	}
	if(strcmp(cmdtext, "/comprarc4", true) == 0)
	{
	if(PlayerInfo[playerid][pVip] == 0)
		{
        SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Necesitas ser Player Silver Para Usar Este Comando");
        return 1;
	    	}
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerMoney(playerid) > 30000) {
	        CantidadBombas[playerid] += 1;
	        GivePlayerMoney(playerid, -30000);
	        SendClientMessage(playerid, AZUL_OSCURO, "Has comprado una bomba. Te ha costado 30000$.");
	        SendClientMessage(playerid, AZUL_OSCURO, "Usa /ponerc4 para colocar la bomba.");
	        }
            else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $30000).");
		    }
		return 1;
	}

	if(strcmp(cmdtext, "/verbombas", true) == 0)
	{
	if(PlayerInfo[playerid][pVip] == 0)
		{
        SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Necesitas ser Player Silver Para Usar Este Comando");
        return 1;
	    	}
	    if(IsPlayerConnected(playerid))
	    {
	        format(string2,sizeof(string2),"Actualmente tienes %d bombas.", CantidadBombas[playerid]);
	        SendClientMessage(playerid, AZUL_OSCURO, string2);
		}
		return 1;
	}
	if(strcmp(cmdtext, "/terrorista", true) == 0)
	{
	if(PlayerInfo[playerid][SpecType] != ADMIN_SPEC_TYPE_NONE) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}No puedes usar este comando cuando estás Spectando!");
	if(PlayerInfo[playerid][pVip] == 0)
		{
        SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Necesitas ser Player Silver Para Usar Este Comando");
        return 1;
		}
		if(IsPlayerConnected(playerid))
	    {
	        if(CantidadBombas[playerid] <= 0)
	        {
	            SendClientMessage(playerid, GRIS, "No tienes ninguna bomba!");
	            return 1;
			}
			new Float:X, Float:Y, Float:Z;
    		GetPlayerPos(playerid,X,Y,Z);
			CreateExplosion(X,Y,Z,0,9999999);
			CreateExplosion(X,Y,Z,1,9999999);
			CreateExplosion(X,Y,Z,2,9999999);
			CreateExplosion(X,Y,Z,3,9999999);
			CreateExplosion(X,Y,Z,4,9999999);
			CreateExplosion(X,Y,Z,5,9999999);
			CreateExplosion(X,Y,Z,6,9999999);
			CreateExplosion(X,Y,Z,7,9999999);
			CreateExplosion(X,Y,Z,8,9999999);
			CreateExplosion(X,Y,Z,9,9999999);
			CreateExplosion(X,Y,Z,10,9999999);
			CreateExplosion(X,Y,Z,11,9999999);
			CreateExplosion(X,Y,Z,12,9999999);
			CreateExplosion(X,Y,Z,13,9999999);
			CantidadBombas[playerid] -= 1;
			CMDMessageToVips(playerid,"TERRORISTA");
			SendClientMessage(playerid, AZUL_OSCURO, "[INFO]: Te has suicidado con una bomba");
		}
		return 1;
	    }

    if(strcmp(cmdtext, "/go", true) == 0)
	{
		if(RaceStarted > 0)
		{
		TogglePlayerControllable(playerid, true);
		SendClientMessage(playerid, green, "¡Info!: Desbugeado de la Carrera Go Go Go!");
		SetCameraBehindPlayer(playerid);
		}
		else SendClientMessage(playerid, COLOR_ROJO, "¡Error!: {FFFFFF}No hay Carrera o debes esperar a q comienze la Carrera, tramposo P_P");
	    return 1;
	}
//======================= /teles x comandos =====================================
    if(strcmp(cmdtext, "/amor", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, -2796.7803,-1523.1437,139.2144);
		EnviarComandoTele(playerid,"Amor");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerTime(playerid,0,0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido al Lugar de los Novios :P");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}
	
	if(strcmp(cmdtext, "/24rl", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 255.9986, 1711.9020, -11.2200);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerTime(playerid,24,0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido Al Estudio De 24 RL");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}
    
	if(strcmp(cmdtext, "/grabar kroterevalue", true) == 0)
	{
    SendClientMessage(playerid, azulcito, "Para cerrar use /Cortar kroterevalue");
	MoveObject(Studio, 284.37650, 1724.41846, -13.32058, 3.5);
    return 1;
	}

	if(strcmp(cmdtext, "/cortar kroterevalue", true) == 0)
	{
    SendClientMessage(playerid, azulcito, "Para Abrir Use /Grabar kroterevalue");
	MoveObject(Studio, 284.37650, 1724.41846, -7.42440, 3.5);
    return 1;
	}

	if(strcmp(cmdtext, "/playa", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 2940.4685,-684.9366,6.7780);
		EnviarComandoTele(playerid,"Playa");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a la Playa!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

	if(strcmp(cmdtext, "/faro", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 154.1474,-1949.5466,47.8750);
		EnviarComandoTele(playerid,"Faro");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido al Faro!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

/*	if(strcmp(cmdtext, "/bob", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 595.6575,-1843.5199,5.6328);
		EnviarComandoTele(playerid,"Bob");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a Bob!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}*/

	if(strcmp(cmdtext, "/cantera", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 576.8824,725.6038,12.7927);
		EnviarComandoTele(playerid,"Cantera");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a la Cantera!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

	if(strcmp(cmdtext, "/presa", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, -730.9102, 2069.4465, 60.2861);
		EnviarComandoTele(playerid,"Presa");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a la Presa!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "¡Error!: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}
///=========== CMD MUSICA ================//
  if(strcmp("/mdetener",cmdtext,true,10)==0)
	{
         GameTextForPlayer(playerid, "~w~reproductor~n~~g~~h~~h~musical~n~~r~~h~apagado", 3500, 4);
         StopAudioStreamForPlayer(playerid);
	    SendClientMessage(playerid,COLOR_ROJO,"|INFO| La reproducción de musica se ha detenido.");
	     return 1;
	}

///=========== CMD MUSICA ================//
  if(strcmp("/musicas",cmdtext, true) == 0)
	{
if(PlayerInfo[playerid][Nivel] == 0) return SendClientMessage(playerid,red,"[ERROR]: No tienes nivel suficiente.");
 ShowPlayerDialog(playerid, 9000, DIALOG_STYLE_TABLIST_HEADERS, "{ffb800}Músicas RL:",
"Tipo músical\tPrecios\n\
Reggaeton\t1 nivel {FF0000}(por canción)\n\
Dubstep liviano\t1 nivel {FF0000}(por canción)\n\
Dubstep pesado\t1 nivel{FF0000} (por canción)\n\
Pop Asiatico\t1 nivel{FF0000} (por canción)\n\
Pop Américano\t1 nivel{FF0000} (por canción)\n\
Electrónicas\t1 nivel{FF0000} (por canción)\n\
Temas lentos\t1 nivel{FF0000} (por canción)\n\
Cumbia\t1 nivel{FF0000} (por canción)\n\
Los 80'\t{FF0000}Gratis",
"Seleccionar","Cancelar");

	     return 1;
	}
	
	  if(strcmp("/musicasrl",cmdtext, true) == 0)
	{
if(PlayerInfo[playerid][Nivel] == 0) return SendClientMessage(playerid,red,"[ERROR]: No tienes nivel suficiente.");
 ShowPlayerDialog(playerid, 9000, DIALOG_STYLE_TABLIST_HEADERS, "{ffb800}Músicas RL:",
"Tipo músical\tPrecios\n\
Reggaeton\t1 nivel {FF0000}(por canción)\n\
Dubstep liviano\t1 nivel {FF0000}(por canción)\n\
Dubstep pesado\t1 nivel{FF0000} (por canción)\n\
Pop Asiatico\t1 nivel{FF0000} (por canción)\n\
Pop Américano\t1 nivel{FF0000} (por canción)\n\
Electrónicas\t1 nivel{FF0000} (por canción)\n\
Temas lentos\t1 nivel{FF0000} (por canción)\n\
Cumbia\t1 nivel{FF0000} (por canción)\n\
Los 80'\t{FF0000}Gratis",
"Seleccionar","Cancelar");

	     return 1;
	}
//==============================================================================
	if(strcmp(cmdtext, "/colador", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 64.3926, -1818.9169, 282.1964);
		EnviarComandoTele(playerid,"Colador");
        ResetPlayerWeapons(playerid); //resetea armas
        TogglePlayerControllable(playerid,false); //define de congelar
        SetTimerEx("Descongelar", 4000, false, "d", playerid); //timer de descongelar
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		vKnockOut[playerid] = 0;
        GameTextForPlayer(playerid,"~b~Bienvenido A ~n~~w~Colador",4000,3);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido A Colador Disfruta!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}
	if(strcmp(cmdtext, "/colador2", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, -1427.6963, -213.3103, 508.1481);
		EnviarComandoTele(playerid,"Colador2");
        ResetPlayerWeapons(playerid); //resetea armas
        TogglePlayerControllable(playerid,false); //define de congelar
        SetTimerEx("Descongelar", 4000, false, "d", playerid); //timer de descongelar
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
        GameTextForPlayer(playerid,"~b~Bienvenido A ~n~~w~Colador",4000,3);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido A Colador Disfruta!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

    if(strcmp(cmdtext, "/avion", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 113.32227, 878.75372, 2097.49976);
		EnviarComandoTele(playerid,"Avion");
        ResetPlayerWeapons(playerid); //resetea armas
        TogglePlayerControllable(playerid,false); //define de congelar
        SetTimerEx("Descongelar", 4000, false, "d", playerid); //timer de descongelar
        SetPlayerTime(playerid,24,0);
		GivePlayerWeapon(playerid,46,300);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
        GameTextForPlayer(playerid,"~b~Bienvenido Al ~n~~w~Avion..",4000,3);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido Al Avion Disfruta Tu Salto!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}
	if(strcmp(cmdtext, "/cementerio", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 1142.9963,717.1409,10.8073);
		EnviarComandoTele(playerid,"Cementerio");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a l Cementerio!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

	    //para ir a ls
   	if(strcmp(cmdtext, "/ls", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
  		SetPlayerPos(playerid, 2493.9609,-1685.3671, 13.5114);
		EnviarComandoTele(playerid,"Ls");
        SetPlayerTime(playerid,24,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a Los Santos!");
		GameTextForPlayer(playerid,"~b~Bienvenido a ~n~~g~Los Santos",4000,3);
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
        return 1;
	}

	//para ir a sf
   	if(strcmp(cmdtext, "/sf", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, -1979.7108,266.9334,35.1719);
        EnviarComandoTele(playerid,"Sf");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a San Fierro!");
		GameTextForPlayer(playerid,"~b~Bienvenido a ~n~~g~San Fierro",4000,3);
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}
		//para ir al intro
   	if(strcmp(cmdtext, "/introkots", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, -3313.3594,-861.5363,4.2600);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a Pruebas!");
		GameTextForPlayer(playerid,"~b~Bienvenido a ~n~~r~Pruebas",4000,3);
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

	//para ir a lv
    if(strcmp(cmdtext, "/lv", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 2021.1387,1342.9297,10.8130);
		EnviarComandoTele(playerid,"Lv");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a Las Venturas!");
		GameTextForPlayer(playerid,"~b~Bienvenido a ~n~~g~Las Venturas",4000,3);
		SetPlayerTime(playerid,24,0);
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

    //para ir al aeropuerto abandonado
    if(strcmp(cmdtext, "/aa", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 405.8488,2453.2803,17.1893);
		EnviarComandoTele(playerid,"Aa");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido al Aereopuerto Abandonado!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

	//para ir a chilliad
    if(strcmp(cmdtext, "/chilliad", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, -2311.8855,-1651.2426,483.7031);
		EnviarComandoTele(playerid,"Chilliad");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a Chilliad!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

   //para ir al bosque
    if(strcmp(cmdtext, "/bosque", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, -1647.8252,-2242.6750,30.6235);
	    EnviarComandoTele(playerid,"Bosque");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido al Bosque!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}
	
		if(strcmp(cmdtext, "/jojo", true) == 0)
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)
	{
	SetPlayerInterior(playerid, 3);
	SetPlayerSkin(playerid, 246);
	SetPlayerPos(playerid,-2672.7668,1410.0636,907.5703);
	}
	else
	{
	SendClientMessage(playerid, COLOR_ROJO, "[ADVERTENCIA] Porfavor Llena tu vida antes de usar los TelePorts..");
	}
	return 1;
	}
	
	//para ir a party
    if(strcmp(cmdtext, "/party", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 1121.3503,-2628.1970,6.3928);
	    EnviarComandoTele(playerid,"Party");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a Party!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

	//para ir al aeropuerto de los santos
    if(strcmp(cmdtext, "/aerols", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 1543.5593,-2608.6963,13.5469);
		EnviarComandoTele(playerid,"Aerols");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido al Aereopuerto de LS, puedes hacer stunts aquí!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

   //para ir al aeropuerto de las venturas
    if(strcmp(cmdtext, "/aerolv", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 1315.3776,1263.9053,10.8203);
		EnviarComandoTele(playerid,"Aerolv");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido al Aereopuerto de LV!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

     //para ir al aeropuerto de san fierro
    if(strcmp(cmdtext, "/aerosf", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, -1439.9902,-117.8820,14.1484);
		EnviarComandoTele(playerid,"Aerosf");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido al Aereopuerto de SF!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

	if(strcmp(cmdtext, "/fiesta", true) == 0)
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)
	{
	SetPlayerInterior(playerid, 3);
	SetPlayerPos(playerid,-2672.7668,1410.0636,907.5703);
	EnviarComandoTele(playerid,"Fiesta");
	}
	else
	{
	SendClientMessage(playerid, COLOR_ROJO, "[ADVERTENCIA] Porfavor Llena tu vida antes de usar los TelePorts..");
	}
	return 1;
	}

	if(strcmp(cmdtext, "/tunsf", true) == 0)
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)
	{
	SetPlayerPos(playerid,-2712.8408,217.7281,5.2436);
	SetPlayerInterior(playerid, 0);
	}
	else
	{
	SendClientMessage(playerid, COLOR_ROJO, "[ADVERTENCIA] Porfavor Llena tu vida antes de usar los TelePorts..");
	}
	return 1;
	}
	
		if(strcmp(cmdtext, "/fantasma", true) == 0)
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)
	{
 	SetPlayerTime(playerid,0,0);
  	SetPlayerWeather(playerid,09);
  	PlayerPlaySound(playerid, 1142,-1308.16,2518.85,87.25);
	SetPlayerPos(playerid,-1308.16,2518.85,87.25);
	ResetPlayerWeapons(playerid);
	SetPlayerInterior(playerid, 0);
			SoloWW2[playerid]=1;
		InformacionL[playerid][PAR] = 1;
	SendClientMessage(playerid,COLOR_CYAN,"Si Eres Cobarde Largate Usando {FF0000}/Kill");
	}
	else
	{
	SendClientMessage(playerid, COLOR_ROJO, "[ADVERTENCIA] Porfavor Llena tu vida antes de usar los TelePorts.");
	}
	return 1;
	}

	if(!strcmp(cmdtext, "/granadadm", true))
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)

	{
		SoloWW2[playerid]=1;
		InformacionL[playerid][PAR] = 1;
		EnviarComando(playerid,"GranadaDm");
     	 ResetPlayerWeapons(playerid);
		SetPlayerRandomPositionGR(playerid);
        SetPlayerVirtualWorld(playerid, 1);
        SetPlayerInterior(playerid, 0);
        GivePlayerWeapon(playerid, 16, 9999);
        		SoloWW2[playerid]=1;
		InformacionL[playerid][PAR] = 1;
	}
	else
	{
	SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: Porfavor Llena tu vida antes de usar los TelePorts.");
	}
		return 1;
	}
	
	if(!strcmp(cmdtext, "/vercw", true))
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)
	{
		EnviarComando(playerid,"VerCw");
        ResetPlayerWeapons(playerid);
        SetPlayerVirtualWorld(playerid, 2);
        SetPlayerInterior(playerid, 16);
        		SoloWW2[playerid]=1;
		InformacionL[playerid][PAR] = 1;
       	new posiciones=random(5);
	if (posiciones==0) { SetPlayerPos(playerid,-1406.3411,1199.3746,1055.1438);}
	else if (posiciones==1) { SetPlayerPos(playerid,-1349.9916,1233.9791,1054.9437); }
	else if (posiciones==2) { SetPlayerPos(playerid,-1383.9631,1291.7140,1055.1438); }
	else if (posiciones==3) { SetPlayerPos(playerid,-1383.9631,1291.7140,1055.1438); }
	else if (posiciones==4) { SetPlayerPos(playerid,-1439.1622,1257.9940,1055.1438); }
	}
	else
	{
	SendClientMessage(playerid, COLOR_ROJO, "[ADVERTENCIA] Porfavor Llena tu vida antes de usar los TelePorts.");
	}
		return 1;
	}

	if(!strcmp(cmdtext, "/moto", true))
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)
	{
		EnviarComando(playerid,"Moto");
		SetPlayerPos(playerid, -1444.645507,-664.526000,1053.572998);
		ResetPlayerWeapons(playerid);
        SetPlayerVirtualWorld(playerid, 0);
        SetPlayerInterior(playerid, 4);
		InformacionL[playerid][PAR] = 1;
        }
	else
	{
	SendClientMessage(playerid, COLOR_ROJO, "[ADVERTENCIA] Porfavor Llena tu vida antes de usar los TelePorts.");
	}

		return 1;
	}

	if(!strcmp(cmdtext, "/motocross", true))
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)
	{
		EnviarComando(playerid,"Motocross");
		SetPlayerPos(playerid, -1465.268676,1557.868286,1052.531250);
		ResetPlayerWeapons(playerid);
        SetPlayerVirtualWorld(playerid, 0);
        SetPlayerInterior(playerid, 14);
		InformacionL[playerid][PAR] = 1;
        }
	else
	{
	SendClientMessage(playerid, COLOR_ROJO, "[ADVERTENCIA] Porfavor Llena tu vida antes de usar los TelePorts.");
	}
		return 1;
	}

	if(!strcmp(cmdtext, "/motocross2", true))
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)
	{
		EnviarComandoTele(playerid,"Motocross2");
		SetPlayerPos(playerid, -1401.829956,107.051300,1032.273437);
		ResetPlayerWeapons(playerid);
        SetPlayerVirtualWorld(playerid, 0);
        SetPlayerInterior(playerid, 1);
		InformacionL[playerid][PAR] = 1;
        }
	else
	{
	SendClientMessage(playerid, COLOR_ROJO, "[ADVERTENCIA] Porfavor Llena tu vida antes de usar los TelePorts.");
	}
		return 1;
	}
	
   //para ir al puente
    if(strcmp(cmdtext, "/puente", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, -1128.4757,865.4401,84.0078);
		EnviarComandoTele(playerid,"Puente");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido al Puente!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

   //para ir al edificio mas grande de SA
    if(strcmp(cmdtext, "/torre", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid,-4.49865,1.22553,2499.07837);
		EnviarComandoTele(playerid,"Torre");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido al Edificio mas Grande de SA!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

	//para ir al barcodm
    if(strcmp(cmdtext, "/barcodm", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, -2425.4854,1537.5695,26.0469);
		EnviarComandoTele(playerid,"Barcodm");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		vKnockOut[playerid] = 0;
		SoloWW2[playerid]=1;
		InformacionL[playerid][PAR] = 1;
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido al BarcoDM!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

	if(strcmp(cmdtext, "/boxdm", true) == 0)
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)
	{
	SetPlayerInterior(playerid, 5);
	ResetPlayerWeapons(playerid);
	SetPlayerSkin(playerid, 80);
	SetPlayerPos(playerid,762.0065,5.4993,1000.7112);
			SoloWW2[playerid]=1;
		InformacionL[playerid][PAR] = 1;
	EnviarComandoTele(playerid,"BoxDm");
	}
	else
	{
	SendClientMessage(playerid, COLOR_ROJO, "[ADVERTENCIA] Porfavor Llena tu vida antes de usar los TelePorts..");
	}
	return 1;
	}
	
		if(strcmp(cmdtext, "/libredm", true) == 0)
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)
	{
	EnviarComandoTele(playerid,"LibreDm");
	SetPlayerPos(playerid,-1189.2139,-1042.9415,129.2188);
	SetPlayerInterior(playerid, 0);
	}
	else
	{
	SendClientMessage(playerid, COLOR_ROJO, "[ADVERTENCIA] Porfavor Llena tu vida antes de usar los TelePorts..");
	}
	return 1;
	}
	//
	if(strcmp(cmdtext, "/superdm", true) == 0)
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)
	{
	EnviarComandoTele(playerid,"SuperDm");
	SetPlayerPos(playerid,230.7009,1404.5934,10.5859);
	SetPlayerInterior(playerid, 0);
	}
	else
	{
	SendClientMessage(playerid, COLOR_ROJO, "[ADVERTENCIA] Porfavor Llena tu vida antes de usar los TelePorts..");
	}
	return 1;
	}
	
	//para ir al vista
    if(strcmp(cmdtext, "/vista", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, -2865.6858,2600.1230,271.1722);
		EnviarComandoTele(playerid,"Vista");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a Vista!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

	if (strcmp("/lc", cmdtext, true) == 0)
	{
        new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
        SetPlayerPos(playerid, -799.2450,493.0715,1367.2328);
        SetPlayerInterior(playerid, 1);
        SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a la Liberty City!");
		GameTextForPlayer(playerid,"~b~Bienvenido a ~n~~g~Liberty City",4000,3);
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
        return 1;
	}

    if(strcmp(cmdtext, "/drift", true) == 0)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 2265.6292,1398.5432,42.4766);
		EnviarComandoTele(playerid,"Drift");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a Drift!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}
	//=============Duelos===========================================================

    if(strcmp(cmdtext, "/duelo1", true) == 0)
	{
	if(balason[playerid] == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva las balas explosivas! (/balase)");
     if(vKnockOut[playerid] == 1) return SendClientMessage(playerid, 0xFF0000FF, "[ERROR]: {FFFFFF}Sacate el /vknockout para Entrar a /duelo1!");
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 1387.4012,2160.6635,11.0234);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 2);
		vKnockOut[playerid] = 0;
		SoloWW2[playerid]=1;
		InformacionL[playerid][PAR] = 1;
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a Duelo1!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

    if(strcmp(cmdtext, "/duelo2", true) == 0)
	{
	if(balason[playerid] == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva las balas explosivas! (/balase)");
	    if(vKnockOut[playerid] == 1) return SendClientMessage(playerid, 0xFF0000FF, "[ERROR]: {FFFFFF}Sacate el /vknockout para Entrar a /duelo2!");
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, -1470.2188,334.4783,31.0797);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 2);
		vKnockOut[playerid] = 0;
		SoloWW2[playerid]=1;
		InformacionL[playerid][PAR] = 1;
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a Duelo2!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}

	if(strcmp(cmdtext, "/duelo3", true) == 0)
	{
	if(balason[playerid] == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva las balas explosivas! (/balase)");
	    if(vKnockOut[playerid] == 1) return SendClientMessage(playerid, 0xFF0000FF, "[ERROR]: {FFFFFF}Sacate el /vknockout para Entrar a /duelo3!");
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid, 1381.1492,5.5155,1000.9166);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 2);
		vKnockOut[playerid] = 0;
		SoloWW2[playerid]=1;
		InformacionL[playerid][PAR] = 1;
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a Duelo3!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
	    return 1;
	}
	
	   if(strcmp(cmdtext, "/Cine", true) == 0)
   {
       new Float:health;
	   GetPlayerHealth(playerid, health);
	   if(health > 70)
	   {
       SetPlayerPos(playerid,-1451.3860,-219.8163,1067.7859);
       SoloWW2[playerid]=1;
       InformacionL[playerid][PAR] = 1;
       EnviarComandoTele(playerid,"Cine");
       SetPlayerInterior(playerid, 7);//Nose pake esta esto si el interior sera 0 si o si en este caso, xd
       ResetPlayerWeapons(playerid);
       TogglePlayerControllable(playerid,false); //define de congelar
       SetTimerEx("Descongelar", 4000, false, "d", playerid); //timer de descongelar
       GameTextForPlayer(playerid,"~b~cargando objetos ~n~~r~ESTA PROHIBIDO EL USO DE ARMAS ~n~PARA MATAR AQUI!!",5000,3);//Mensaje al usuario
	   }
	   else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
       return 1;
   }

   if(strcmp(cmdtext, "/paracaidismo", true) == 0)
   {
       new Float:health;
	   GetPlayerHealth(playerid, health);
	   if(health > 70)
	   {
       SetPlayerPos(playerid,103.6566, 764.7642, 3049.3650);
       SoloWW2[playerid]=1;
       EnviarComandoTele(playerid,"Paracaidismo");
       SetPlayerInterior(playerid,0);//Nose pake esta esto si el interior sera 0 si o si en este caso, xd
       SetPlayerVirtualWorld(playerid,5);
       ResetPlayerWeapons(playerid);
       GivePlayerWeapon(playerid, 46, 1);
       InformacionL[playerid][PAR] = 1;
       TogglePlayerControllable(playerid,false); //define de congelar
       SetTimerEx("Descongelar", 4000, false, "d", playerid); //timer de descongelar
       GameTextForPlayer(playerid,"~b~cargando objetos ~n~~r~ESTA PROHIBIDO EL USO DE ARMAS ~n~PARA MATAR AQUI!!",5000,3);//Mensaje al usuario
       ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{ffb800}|| Paracaidismo ||","Objetivo:\n\nUsa el Paracaidas esquivando Objetos\ny llega al final!", "Aceptar", "") ;
	   }
	   else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
       return 1;
   }

   if(strcmp(cmdtext, "/paracaidismo2", true) == 0)
   {
       new Float:health;
	   GetPlayerHealth(playerid, health);
	   if(health > 70)
	   {
       SetPlayerPos(playerid,2261.4255, 2184.5413, 2997.8823);
       SoloWW2[playerid]=1;
       EnviarComandoTele(playerid,"Paracaidismo2");
       SetPlayerInterior(playerid,0);//Nose pake esta esto si el interior sera 0 si o si en este caso, xd
       SetPlayerVirtualWorld(playerid,3);
       ResetPlayerWeapons(playerid);
       GivePlayerWeapon(playerid, 46, 1);
       InformacionL[playerid][PAR] = 1;
       TogglePlayerControllable(playerid,false); //define de congelar
       SetTimerEx("Descongelar", 4000, false, "d", playerid); //timer de descongelar
       GameTextForPlayer(playerid,"~b~cargando objetos ~n~~r~ESTA PROHIBIDO EL USO DE ARMAS ~n~PARA MATAR AQUI!!",5000,3);//Mensaje al usuario
       ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{ffb800}|| Paracaidismo2||","Objetivo:\n\nUsa el Paracaidas esquivando Objetos\ny llega al final!", "Aceptar", "") ;
	   }
	   else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
       return 1;
   }

   if(strcmp(cmdtext, "/salto", true) == 0)
    {
        new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
       SetPlayerPos(playerid,1702.4701,493.4259,1740.8313);//Coordenadas del skin2964.
       EnviarComandoTele(playerid,"Salto");
       SetPlayerInterior(playerid,0);//Nose pake esta esto si el interior sera 0 si o si en este caso, xd
       SetPlayerVirtualWorld(playerid,0);
       ResetPlayerWeapons(playerid);
       GivePlayerWeapon(playerid, 46, 1);
       InformacionL[playerid][PAR] = 1;
       SoloWW2[playerid]=1;
       TogglePlayerControllable(playerid,false); //define de congelar
       SetTimerEx("Descongelar", 4000, false, "d", playerid); //timer de descongelar
       GameTextForPlayer(playerid,"~b~cargando objetos ~n~~r~ESTA PROHIBIDO EL USO DE ARMAS ~n~PARA MATAR AQUI!!",5000,3);//Mensaje al usuario
       }
	    else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
        return 1;
   }

   if(strcmp(cmdtext, "/salto2", true) == 0)
    {
        new Float:health;
		GetPlayerHealth(playerid, health);
		if(health > 70)
		{
       SetPlayerPos(playerid, 1000.6266, 2893.9263, 761.6495);//Coordenadas del skin2964.
       EnviarComandoTele(playerid,"Salto2");
       SetPlayerInterior(playerid,0);//Nose pake esta esto si el interior sera 0 si o si en este caso, xd
       SetPlayerVirtualWorld(playerid,0);
       ResetPlayerWeapons(playerid);
       GivePlayerWeapon(playerid, 46, 1);
       InformacionL[playerid][PAR] = 1;
       TogglePlayerControllable(playerid,false); //define de congelar
       SetTimerEx("Descongelar", 4000, false, "d", playerid); //timer de descongelar
       GameTextForPlayer(playerid,"~b~cargando objetos ~n~~r~ESTA PROHIBIDO EL USO DE ARMAS ~n~PARA MATAR AQUI!!",5000,3);//Mensaje al usuario
       }
	    else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
        return 1;
   }

     if(strcmp(cmdtext, "/stunt", true) == 0)
    {
        new Float:health;
        GetPlayerHealth(playerid, health);
		if(health > 70)
		{
       SetPlayerPos(playerid,-8.0172,2502.5562,16.4844);//Coordenadas del skin
       EnviarComandoTele(playerid,"Stunt");
       ResetPlayerWeapons(playerid); //resetea armas
       SetPlayerInterior(playerid,0);//Nose pake esta esto si el interior sera 0 si o si en este caso,
       SetPlayerVirtualWorld(playerid,0);//Este es para el mundo virtual ~ Aunke si no es necesario kitalo o añade // antes del set
       GameTextForPlayer(playerid,"~b~Bienvenido a stunt",4000,3);
       }
        else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
        return 1;
   }

	if(strcmp(cmdtext, "/zonaww", true) == 0)
	{
	if(balason[playerid] == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva las balas explosivas! (/balase)");
     if(vKnockOut[playerid] == 1) return SendClientMessage(playerid, 0xFF0000FF, "[ERROR]: {FFFFFF}Sacate el /vknockout para Entrar a /zonaww!");
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar Teles mientras estás Spectando!");
		if(health > 70)
		{
		new r = random(sizeof(SpawnZona));
		SetPlayerPos(playerid, SpawnZona[r][0], SpawnZona[r][1], SpawnZona[r][2]);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 5);
    	ResetPlayerWeapons(playerid);
    	GivePlayerWeapon(playerid, 24, 999);
     	GivePlayerWeapon(playerid, 27, 999);
    	GivePlayerWeapon(playerid, 29, 999);
    	GivePlayerWeapon(playerid, 31, 999);
    	GivePlayerWeapon(playerid, 34, 999);
    	GivePlayerWeapon(playerid,1,1);
        EnviarComandoDM(playerid,"Zonaww");
        vKnockOut[playerid] = 0;
        SoloWW2[playerid]=1;
        InformacionL[playerid][PAR] = 1;
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a Zona WW (Solo Pros)!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los Teleports!");
	    return 1;
	}

	if(strcmp(cmdtext, "/zonarw", true) == 0)
	{
        if(balason[playerid] == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva las balas explosivas! (/balase)");
	    if(vKnockOut[playerid] == 1) return SendClientMessage(playerid, 0xFF0000FF, "[ERROR]: {FFFFFF}Sacate el /vknockout para Entrar a /zonarw!");
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar Teles mientras estás Spectando!");
		if(health > 70)
		{
		new r = random(sizeof(SpawnZona));
		SetPlayerPos(playerid, SpawnZona[r][0], SpawnZona[r][1], SpawnZona[r][2]);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 6);
        ResetPlayerWeapons(playerid);
    	ResetPlayerWeapons(playerid);
    	GivePlayerWeapon(playerid, 8, 1);
    	GivePlayerWeapon(playerid, 28, 9999);
    	GivePlayerWeapon(playerid, 26, 9999);
	    GivePlayerWeapon(playerid, 22, 9999);
    	GivePlayerWeapon(playerid,1,1);
    	SoloWW2[playerid]=1;
        EnviarComandoDM(playerid,"Zonarw");
        InformacionL[playerid][PAR] = 1;
        vKnockOut[playerid] = 0;
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a Zona RW (Solo Pros)!");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los Teleports!");
	    return 1;
	}

	if(strcmp("/desmadre", cmdtext, true) == 0)
    {
        new Float:health;
		GetPlayerHealth(playerid,health);
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, 0xFFFF0050, "[INFO]: Baja De Tu Vehiculo e Intentalo De Nuevo");
		if(balason[playerid] == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva las balas explosivas! (/balase)");
		if(vKnockOut[playerid] == 1) return SendClientMessage(playerid, 0xFF0000FF, "[ERROR]: {FFFFFF}¡Sacate el /vknockout para Entrar a /desmadre!");
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar Teles mientras estás Spectando!");
		if(health >= 70)
		{
		new r = random(sizeof(DESMADRER));
		new PlayerName[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
		Minijuego[playerid] = 1;
		Desmadre[playerid] = 1;
		SoloWW2[playerid]=1;
	    RemovePlayerFromVehicle(playerid);
	    ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 24, 9999);
		GivePlayerWeapon(playerid, 25, 9999);
		GivePlayerWeapon(playerid, 34, 9999);
		SetPlayerPos(playerid, DESMADRER[r][0], DESMADRER[r][1], DESMADRER[r][2]);
		SetPlayerFacingAngle(playerid,random(9000));
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerInterior(playerid, 1);
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 0);
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a Desmadre!");
        EnviarComandoDM(playerid,"Desmadre");
}
		  else SendClientMessage(playerid, COLOR_ROJO, "¡Error!: {FFFFFF}Llena tu vida antes de usar los Teleports");
		return 1;
     }

	if(!strcmp(cmdtext, "/Puentedm", true))
	{
		new Float:health;
		GetPlayerHealth(playerid,health);
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar Teles mientras estás Spectando!");
		if(health >= 70)
		{
		ResetPlayerWeapons(playerid);
		SetPlayerPos(playerid, -1255.9338,955.4106,139.2734);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		GivePlayerWeapon(playerid, 24,999);
		GivePlayerWeapon(playerid, 27,999);
		GivePlayerWeapon(playerid, 31,999);
		vKnockOut[playerid] = 0;
		InformacionL[playerid][PAR] = 1;
        EnviarComandoDM(playerid,"Puentedm");
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a PuenteDM!");
		}
		else
		{
		SendClientMessage(playerid, 0xFFFF0050, "[ERROR]: {FFFFFF}Nesesitas tener la vida llena antes de usar los Teleports!");
		}
		return 1;
	}

	if(!strcmp(cmdtext, "/Torredm", true))
	{
		new Float:health;
		GetPlayerHealth(playerid,health);
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar Teles mientras estás Spectando!");
		if(health >= 70)
		{
		ResetPlayerWeapons(playerid);
		SetPlayerPos(playerid, 1655.4456,-1638.1978,83.7813);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		GivePlayerWeapon(playerid, 24,999);
		GivePlayerWeapon(playerid, 27,999);
		GivePlayerWeapon(playerid, 31,999);
		vKnockOut[playerid] = 0;
        EnviarComandoDM(playerid,"Torredm");
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a TorreDM!");
		}
		else
		{
		SendClientMessage(playerid, 0xFFFF0050, "[ERROR]: {FFFFFF}Nesesitas tener la vida llena antes de usar los Teleports!");
		}
		return 1;
	}

    	if(strcmp(cmdtext, "/dm", true) == 0)
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)
	{
	EnviarComando(playerid,"Dm");
	SetPlayerPos(playerid,2610.1179,2809.8440,10.4900);
	ResetPlayerWeapons(playerid);
	SetPlayerInterior(playerid, 0);
	GivePlayerWeapon(playerid, 30, 99999);
	GivePlayerWeapon(playerid, 24, 99999);
	GivePlayerWeapon(playerid, 26, 99999);
	GivePlayerWeapon(playerid, 32, 99999);
			SoloWW2[playerid]=1;
		InformacionL[playerid][PAR] = 1;
	}
	else
	{
	SendClientMessage(playerid, COLOR_ROJO, "[ADVERTENCIA] Porfavor Llena tu vida antes de usar los TelePorts..");
	}
	return 1;
	}
	
    if(strcmp(cmdtext, "/Sniperdm", true) == 0)
	{
	if(vKnockOut[playerid] == 1) return SendClientMessage(playerid, 0xFF0000FF, "[ERROR]: {FFFFFF}Sacate el /vknockout para Entrar a /sniperdm!");
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar Teles mientras estás Spectando!");
	if(health >= 20)
	{
	{
	if (IsPlayerInAnyVehicle(playerid)) return	SendClientMessage(playerid, COLOR_YELLOW, "[INFO]: Baja De Tu Vehiculo e Intentalo De Nuevo");
    }
	new State=GetPlayerState(playerid);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid, 5);
    ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid, 34, 250);
    EnviarComandoDM(playerid,"Sniperdm");
	if(State!=PLAYER_STATE_DRIVER)
	SetPlayerArmour(playerid,20); //le da 100 de Chaleco
	SetPlayerHealth(playerid,30); //le da 100 de Vida
	vKnockOut[playerid] = 0;
 		SoloWW2[playerid]=1;
		InformacionL[playerid][PAR] = 1;
    new Sniper=random(7);
	if (Sniper==0) { SetPlayerPos(playerid,1160.7454,2757.2871,10.8174);}
	else if (Sniper==1) { SetPlayerPos(playerid,1155.1489,2854.5640,10.8203);}
	else if (Sniper==2) { SetPlayerPos(playerid,1205.3546,2832.5010,10.1099);}
	else if (Sniper==3) { SetPlayerPos(playerid,1243.7709,2757.8757,10.8203);}
	else if (Sniper==4) { SetPlayerPos(playerid,1305.7267,2738.9290,10.8203);}
	else if (Sniper==5) { SetPlayerPos(playerid,1352.3816,2798.4878,10.2215);}
	else if (Sniper==6) { SetPlayerPos(playerid,1417.9429,2773.8118,10.8203);}
	SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a SniperDm!");
	}
	else
	{
    SendClientMessage(playerid, COLOR_ROJO, "{FF0000}[ERROR]: {FFFFFF}Llena tu Vida para usar los TelePorts");
	}
	return 1;
	}

    if(strcmp(cmdtext, "/dmteles", true)==0)
    {
    {
	    new string[2600];
		strcat(string, "\n{FF0000}* /zonaww: {FF8801}Demuestra lo pro que eres matando sin control");
		strcat(string, "\n{FF0000}* /zonarw: {FF8801}Destácate matando a Two Shoot (Si es q lo sabes e.e)");
		strcat(string, "\n{FF0000}* /Duelo1: {FF8801}Parecido al zona ww, pero mas abierto");
		strcat(string, "\n{FF0000}* /Duelo2: {FF8801}Parecido al zona rw, pero mas otro mundo");
		strcat(string, "\n{FF0000}* /Duelo3: {FF8801}Parecido al desmadre");
		strcat(string, "\n{FF0000}* /Minigun: {FF8801}Para los que les gusta matar con esta arma!");
		strcat(string, "\n{FF0000}* /Minigun2");
		strcat(string, "\n{FF0000}* /Minigun3");
	    strcat(string, "\n{FF0000}* /Rocket");
	    strcat(string, "\n{FF0000}* /Rocket2");
	    strcat(string, "\n{FF0000}* /DM");
	    strcat(string, "\n{FF0000}* /Mario: {FF8801}Este es sorpresa xD!");
	    strcat(string, "\n{FF0000}* /Counter {FF8801}Para amantes del counter strike :v!");
	    strcat(string, "\n{ff0000}* /Pro: {FF8801}Arena solo PRO´s!");
		strcat(string, "\n{FF0000}* /Desmadre: {FF8801}Aqui se demuestra quien sabe mas");
		strcat(string, "\n{FF0000}* /Eww: {FF8801}Zona de Duelos (Es como un 2do Desmadre)");
		strcat(string, "\n{FF0000}* /Puentedm: {FF8801}Cuidado y te caes de tan alto D:");
		strcat(string, "\n{FF0000}* /Colador: {FF8801}Vas a un colador DM");
		strcat(string, "\n{FF0000}* /Sniperdm: {FF8801}Zona De Franco Tiradores !");
		strcat(string, "\n{FF0000}* /barcodm: {FF8801}Para Ir a un Barco y Hacer DM.");
		strcat(string, "\n{FF0000}* /TorreDm: {FF8801}Duelos desde una pequeña torre circular");
		ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "|| Teleports de zonas Deathmatch ||",string,"Aceptar", "");
	}
    return 1;
    }

	if(!strcmp(cmdtext, "/pro", true))
    {
        if(balason[playerid] == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva las balas explosivas! (/balase)");
        if(vKnockOut[playerid] == 1) return SendClientMessage(playerid, 0xFF0000FF, "[ERROR]: {FFFFFF}Sacate el /vknockout para Entrar a /pro!");
		if (IsPlayerInAnyVehicle(playerid)) return	SendClientMessage(playerid, 0xFFFF0050, "[INFO]: Baja De Tu Vehiculo e Intentalo De Nuevo");
		new Float:health;
		GetPlayerHealth(playerid,health);
        if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar Teles mientras estás Spectando!");
		if(health >= 70)
		{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 24, 9999);
		GivePlayerWeapon(playerid, 34, 9999);
	    new pame[MAX_PLAYER_NAME];
        GetPlayerName(playerid, pame, sizeof(pame));
        EnviarComandoDM(playerid,"Pro");
		SetPlayerPos(playerid,-1399.1525, 1252.1205, 1040.1183);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerInterior(playerid, 16);
		vKnockOut[playerid] = 0;
		SoloWW2[playerid]=1;
		InformacionL[playerid][PAR] = 1;
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a PRO! (Nada de NOOBS)");
		}
		else
		{
		SendClientMessage(playerid, 0xFFFF0050, "[ERROR]: {FFFFFF}Nesesitas tener la vida llena antes de usar los Teleports!");
		}
		return 1;
     }

	if(!strcmp(cmdtext, "/eww", true))
	{
	    if(vKnockOut[playerid] == 1) return SendClientMessage(playerid, 0xFF0000FF, "[ERROR]: {FFFFFF}Sacate el /vknockout para Entrar a /eww!");
		if (IsPlayerInAnyVehicle(playerid)) return	SendClientMessage(playerid, 0xFFFF0050, "[INFO]: Baja De Tu Vehiculo e Intentalo De Nuevo");
		new Float:health;
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar Teles mientras estás Spectando!");
		GetPlayerHealth(playerid,health);
		if(health >= 70)
		{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 24, 9999);
		GivePlayerWeapon(playerid, 25, 9999);
		GivePlayerWeapon(playerid, 34, 9999);
	    new pame[MAX_PLAYER_NAME];
        GetPlayerName(playerid, pame, sizeof(pame));
		EnviarComandoDM(playerid,"/eww");
		SetPlayerPos(playerid, 1302.519897,-1.787510,1001.028259);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerInterior(playerid, 18);
		vKnockOut[playerid] = 0;
		SoloWW2[playerid]=1;
		InformacionL[playerid][PAR] = 1;
		SendClientMessage(playerid, COLOR_VERDE, "Bienvenido a Eww!");
		}
		else
		{
		SendClientMessage(playerid, 0xFFFF0050, "[ERROR]: {FFFFFF}Nesesitas tener la vida llena antes de usar los Teleports!");
		}
		return 1;
	}

/*//-- Parkour3
    if(strcmp(cmdtext, "/parkour3", true) == 0)
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 20)
	{
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerPos(playerid,-1008.9574,-2300.9363,13.0938);
	GameTextForPlayer(playerid,"~r~Bievenido Ha Parkour3",2500,1);
	format(string2, sizeof(string2), "{00FFFF}[Tele-Info]: {FFFFFF}%s {FFFF00}Se Ha Ido A: {FF0000}[/Parkour3]", PlayerName2(playerid));
	SendClientMessageToAll(COLOR_YELLOW, string2);
	}
	else
	{
 SendClientMessage(playerid, COLOR_YELLOW, "{FFFFFF};) ;) {FF0000}Zona_De_Conflicto: {ffff00}Llena tu Vida para usar los TelePorts");
	}
	return 1;
	}*/
	
/*
    if(strcmp(cmdtext, "/parkour2", true) == 0)
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)
	{
	EnviarComandoTele(playerid,"Parkour2");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid, 5);
	SetPlayerPos(playerid,1473.5057,-1333.6809,163.7188);
	SoloWW2[playerid]=1;
	InformacionL[playerid][PAR] = 1;
	GameTextForPlayer(playerid,"~r~Bievenido Ha Parkour2",2500,1);
	}
	else SendClientMessage(playerid, COLOR_YELLOW, "{FF0000}ERROR: {ffffff}Llena tu Vida para usar los TelePorts");
	return 1;
	}*/
	
	
	      if(strcmp(cmdtext, "/parkour", true) == 0)
   {
        new Float:health;
        GetPlayerHealth(playerid, health);
		if(health > 70)
		{
        SetPlayerPos(playerid,-1757.2894, 785.7177, 167.9095);//Coordenadas del skin
		EnviarComandoTele(playerid,"Parkour");
        ResetPlayerWeapons(playerid); //resetea armas
        SetPlayerInterior(playerid,0);//Nose pake esta esto si el interior sera 0 si o si en este caso,
        SetPlayerVirtualWorld(playerid,5);//Este es para el mundo virtual ~ Aunke si no es necesario kitalo o añade // antes del set
        GameTextForPlayer(playerid,"~b~Bienvenido a parkour ~n~~r~ESTA PROHIBIDO EL USO DE ARMAS ~n~PARA MATAR ACA",4000,3);
        InformacionL[playerid][PAR] = 1;
        }
        else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports");
        return 1;
   }

   if(strcmp(cmdtext, "/parkour2", true) == 0)
   {
        new Float:health;
        GetPlayerHealth(playerid, health);
		if(health > 70)
		{
		SetPlayerPos(playerid,2058.01, 2433.56, 165.67);//Coordenadas del skin
        EnviarComandoTele(playerid,"Parkour2");
        ResetPlayerWeapons(playerid); //resetea armas
        SetPlayerInterior(playerid,0);//Nose pake esta esto si el interior sera 0 si o si en este caso,
        SetPlayerVirtualWorld(playerid,5);//Este es para el mundo virtual ~ Aunke si no es necesario kitalo o añade // antes del set
        GameTextForPlayer(playerid,"~b~Bienvenido a parkour2 ~n~~r~ESTA PROHIBIDO EL USO DE ARMAS ~n~PARA MATAR ACA",4000,3);
        InformacionL[playerid][PAR] = 1;
        }
        else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los teleports.");
        return 1;
   }
   
   
    //-- /Area51
    if(strcmp(cmdtext, "/Area51", true) == 0)
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)
	{
	new cartype = GetPlayerVehicleID(playerid);
	new State=GetPlayerState(playerid);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid, 0);
	if(State!=PLAYER_STATE_DRIVER)
	SetPlayerPos(playerid,202.5257,1898.2958,17.6406);
	else if(IsPlayerInVehicle(playerid, cartype) == 1)
	SetVehiclePos(cartype,84.2868,1920.7418,17.7511);
	EnviarComandoTele(playerid,"Area51");
	SetVehicleZAngle(cartype,90.4065);
	GameTextForPlayer(playerid,"~r~Bienvenido al Area51",2500,1);
	}
	else SendClientMessage(playerid, COLOR_ROJO, "{FFFFFF}[ERROR]: {ffff00}Llena tu Vida para usar los TelePorts");
	return 1;
	}
    //-- jungla
    if(strcmp(cmdtext, "/Jungla", true) == 0)
	{
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 70)
	{
	{
	if (IsPlayerInAnyVehicle(playerid)) return	SendClientMessage(playerid, COLOR_YELLOW, "[INFO]: Baja De Tu Vehiculo e Intentalo De Nuevo");
    }
	new State=GetPlayerState(playerid);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid, 0);
	if(State!=PLAYER_STATE_DRIVER)
	SetPlayerPos(playerid,-497.0009, 4311.9834, 107.9459);
	EnviarComandoTele(playerid,"Jungla");
	ResetPlayerWeapons(playerid); //resetea armas
	InformacionL[playerid][PAR] = 1;
	SoloWW2[playerid]=1;
	GameTextForPlayer(playerid,"~b~Bienvenido a jungla",2500,1);
	}
	else SendClientMessage(playerid, COLOR_ROJO, "{FFFFFF}[ERROR]: {ffff00}Llena tu Vida para usar los TelePorts");
	return 1;
    }

   if(strcmp(cmdtext, "/etest", true) == 0)
   {
        if(PlayerInfo[playerid][pAdmin] >= 3)
        {
            RespuestaConcurso = MINIMUM_VALUE + random(MAXIMUM_VALUE-MINIMUM_VALUE);
            format(string2,sizeof string2,"[REACCIÓN TEST]: {FFFFFF}El primer usuario que escriba {FFFFFF}%d {00FF00}ganará $%d {FF0000}[Administradores no participan]",RespuestaConcurso,PREMIO_CONCURSO);
            SendClientMessageToAll(COLOR_AMARILLO,string2);
   		}
   		return 1;
   }
    /*============================================================================*/
	if(strcmp(cmdtext, "/cmds", true) == 0 || strcmp(cmdtext, "/comandos", true) == 0)
    {
    {
    AntiFlood[playerid] = 0;
    new string[480];
	strcat(string, "{0700D7}Comandos De Auto:\n");
	strcat(string, "\n{0700D7}* /neones: {FFFFFF}Para Agregar un Neon a tu Auto. (próximamente)");
	strcat(string, "\n{0700D7}* /autos: {FFFFFF}Para Obtener un Vehículo.");
	strcat(string, "\n{0700D7}* /luces: {FFFFFF}Para Agregar una Luz a tu Auto.");
	strcat(string, "\n{0700D7}* /radio: {FFFFFF}Para Activar La Radio");
	strcat(string, "\n{0700D7}* /mdetener: {FFFFFF}Detenés todo tipo de música que esté prendida. (hasta la radio)");
	strcat(string, "\n{0700D7}* /tunear: {FFFFFF}Para Tunear un Auto (Sólo Vip)");
	strcat(string, "\n{0700D7}* /vcontrol: {FFFFFF}Para Modificar un Auto (Sólo Vip)");
	ShowPlayerDialog(playerid, CMD, DIALOG_STYLE_MSGBOX, "{FFFFFF}|| Comandos ||",string,"Información", "");
	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
    }

    if(strcmp(cmdtext,"/cmds1", true)==0)
    {
	{
	new string[1100];
	strcat(string, "{0700D7}Comandos De Información:\n");
    strcat(string, "\n{0700D7}* /listavip: {FFFFFF}Para ver la Lista de vips conectados.");
    strcat(string, "\n{0700D7}* /admins: {FFFFFF}Para ver la lista de admins conectados. (sólo con 150 de score o más)");
	//strcat(string, "\n{0700D7}* /staff: {FFFFFF}Para ver los miembros del staff.");
	strcat(string, "\n{0700D7}* /paginas: {FFFFFF}Para ver las páginas del servidor.");
	strcat(string, "\n{0700D7}* /rangos: {FFFFFF}Para ver la lista de rangos.");
	strcat(string, "\n{0700D7}* /ayuda: {FFFFFF}Para ver la Ayuda del Servidor.");
    strcat(string, "\n{0700D7}* /creditos: {FFFFFF}Para ver los créditos del servidor.");
    strcat(string, "\n{0700D7}* /reglas: {FFFFFF}Para ver las reglas del servidor.");
    strcat(string, "\n{0700D7}* /sampinfo: {FFFFFF}Información todo sobre SA-MP.");
	strcat(string, "\n{0700D7}* Cmds Vips: {FFFFFF}/silver, /gold, /premium, /platinum, /esmeralda,");
	strcat(string, "\n{0700D7}* {FFFFFF}/diamond, /extremo, /legendario, /dios");
    ShowPlayerDialog(playerid, CMD+1, DIALOG_STYLE_MSGBOX, "{FFFFFF}|| Informacion ||", string, "Usuario", "");
	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
	}

	if (strcmp(cmdtext,"/cmds2", true)==0)
    {
	{
	AntiFlood[playerid] = 0;
	new string[1450];
	strcat(string, "{FF0000}Comandos De Usuario:\n");
	strcat(string, "\n{FF0000}* /acciones: {FFFFFF}Para ver la lista de Animaciones.");
	strcat(string, "\n{FF0000}* /colores: {FFFFFF}Para cambiar el color de tu Nick.");
    strcat(string, "\n{FF0000}* /mono: {FFFFFF}Para Regresar a la Selección de Skin.");
    strcat(string, "\n{FF0000}* /ck: {FFFFFF}Para Escapar del CarKill.");
    strcat(string, "\n{FF0000}* /Sacart {FFFFFF}Para Sacar A Todos De Tu Auto!");
    strcat(string, "\n{FF0000}* /voz: {FFFFFF}Para Reproducir un Texto Tipo Loquendo.");
    strcat(string, "\n{FF0000}* /afk /salirafk: {FFFFFF}Para Pausearte o Despausearte.");
    strcat(string, "\n{FF0000}* /dia /noche: {FFFFFF}Para Cambiar el Tiempo a Día o Noche.");
    strcat(string, "\n{FF0000}* /tiempo: {FFFFFF}Para Cambiar el Tiempo o Clima.");
	strcat(string, "\n{FF0000}* /radio: {FFFFFF}Para Escuchar radio.");
	strcat(string, "\n{FF0000}* /texto: {FFFFFF}Para Activar/desactivar el Texto del Servidor.");
	strcat(string, "\n{FF0000}* /pm: {FFFFFF}Para Enviar un Mensaje Privado a un Jugador.");
	strcat(string, "\n{FF0000}* /desbug: {FFFFFF}Para Desbugearte.");
	strcat(string, "\n{FF0000}* /kill: {FFFFFF}Para Matarte Solito.");
    strcat(string, "\n{FF0000}* /drogas: {FFFFFF}Para ver la Lista de las Drogas y Drogarte.");
    strcat(string, "\n{FF0000}* /items: {FFFFFF}Para Agregar un Objeto a tu Skin.");
    strcat(string, "\n{FF0000}* /skin: {FFFFFF}Para Cambiar de Skin.");
	strcat(string, "\n{FF0000}* /peleas: {FFFFFF}Para Cambiar un Estilo de Pelea.");
	strcat(string, "\n{FF0000}* /caminar: {FFFFFF}Para Cambiar el tipo de Caminar del Skin.");
    strcat(string, "\n{FF0000}* /desarmarme: {FFFFFF}Para Desarmarte.");
    ShowPlayerDialog(playerid, CMD+2, DIALOG_STYLE_MSGBOX, "{FFFFFF}|| Usuarios ||", string, "Miselanios", "");
	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
	}

	if (strcmp(cmdtext,"/cmds3", true)==0)
    {
	{
	AntiFlood[playerid] = 0;
	new string[1200];
	strcat(string, "{FFFF00}Comandos Misceláneos:\n");
    strcat(string, "\n{29FF0D}* /amo_a_carlosxp /amo_a_samir /amo_a_fran /amo_al_server /amo_a_dark: {FFFFFF}Sólo si los Amas :3");
    strcat(string, "\n{29FF0D}* /rw, /ww: {FFFFFF}Comprar un Pack de Armas Rápidas o Lentas.");
    strcat(string, "\n{29FF0D}* /armas: {FFFFFF}Para ver la lista de Armas.");
	strcat(string, "\n{29FF0D}* /teles: {FFFFFF}Para ver la lista de Teleports.");
    strcat(string, "\n{29FF0D}* /conteo: {FFFFFF}Para Iniciar un Conteo.");
	strcat(string, "\n{29FF0D}* /hola: {FFFFFF}Para Saludar a Todos.");
    strcat(string, "\n{29FF0D}* /adios: {FFFFFF}Para Despedirte de Todos.");
	strcat(string, "\n{29FF0D}* /lol: {FFFFFF}Para Reirte.");
	strcat(string, "\n{29FF0D}* /reportar: {FFFFFF}Para Reportar a un Jugador.");
	strcat(string, "\n{29FF0D}* /bombac4: {FFFFFF}Para Comprar una Bomba y Explotarlo (Solo Vip)");
    strcat(string, "\n{29FF0D}* /dardinero: {FFFFFF}Para Pasar Dinero a Otro Jugador.");
	strcat(string, "\n{29FF0D}* /bloquear: {FFFFFF}Para que no se Teletransporten hacia Ti.");
    strcat(string, "\n{29FF0D}* /ir: {FFFFFF}Para Ir a un Jugador Desbloqueado.");
	strcat(string, "\n{29FF0D}* /minijuegos: {FFFFFF}Para ir a un Minijuego.");
	strcat(string, "\n{29FF0D}* /pais [ID]: {FFFFFF}Para ver El País de un Player.");
	strcat(string, "\n{29FF0D}* /duelo [invitat-ver]: {FFFFFF}Para Hacer un Duelo o Ver Uno.");
    ShowPlayerDialog(playerid, CMD+3, DIALOG_STYLE_MSGBOX, "{FFFFFF}|| Miseláneos ||", string, "Teles", "");
	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
	}

	if (strcmp(cmdtext,"/cmds4", true)==0)
    {
	{
	AntiFlood[playerid] = 0;
	new string[1700];
	strcat(string, "{FF0000}Comandos de Teletrasportación:\n");
	strcat(string, "\n{FF0000}* /interiores: {FFFFFF}Para ir a algún Interior.");
    strcat(string, "\n{FF0000}* /parkour: {FFFFFF}Para Hacer Parkour (No Kills)");
    strcat(string, "\n{FF0000}* /salto: {FFFFFF}Para Ir de Picada en Vehículo (No Kills)");
    strcat(string, "\n{FF0000}* /stunt: {FFFFFF}Para Hacer Stunts.");
	strcat(string, "\n{FF0000}* /ls: {FFFFFF}Para Ir a Los Santos.");
    strcat(string, "\n{FF0000}* /lv: {FFFFFF}Para Ir a Las Venturas.");
	strcat(string, "\n{FF0000}* /sf: {FFFFFF}Para Ir a San Fierro.");
    strcat(string, "\n{FF0000}* /aa: {FFFFFF}Para Ir AL Aeropuerto Abandonado.");
	strcat(string, "\n{FF0000}* /bosque: {FFFFFF}Para Ir al Bosque.");
    strcat(string, "\n{FF0000}* /chilliad: {FFFFFF}Para Ir al Monte Chilliad.");
	strcat(string, "\n{FF0000}* /cantera: {FFFFFF}Para Ir a la Cantera. ");
	strcat(string, "\n{FF0000}* /puente: {FFFFFF}Para Ir al Puente Rojo.");
	strcat(string, "\n{FF0000}* /aerols: {FFFFFF}Para Ir al Aeropuerto de LS.");
	strcat(string, "\n{FF0000}* /aerolv: {FFFFFF}Para Ir al Aeropuerto de LV.");
	strcat(string, "\n{FF0000}* /aerosf: {FFFFFF}Para Ir al Aeropuerto de SF.");
	strcat(string, "\n{FF0000}* /drift: {FFFFFF}Para Ir a un Lugar a Drifear.");
	strcat(string, "\n{FF0000}* /vista: {FFFFFF}Para Ir a un Lugar Alto.");
	strcat(string, "\n{FF0000}* /barcodm: {FFFFFF}Para Ir a un Barco y Hacer DM.");
	strcat(string, "\n{FF0000}* /24RL: {FFFFFF}Para Ir al Estudio De Grabacion Del Servidor");
	strcat(string, "\n{FF0000}* /faro: {FFFFFF}Para Ir a un Faro.");
	strcat(string, "\n{FF0000}* /party: {FFFFFF}Para Ir a la fiesta.");
	strcat(string, "\n{FF0000}* /amor: {FFFFFF}Para Ir al Lugar de los Novios :$");
	strcat(string, "\n{FF0000}* /playa: {FFFFFF}Para Ir a una Playa.");
	strcat(string, "\n{FF0000}* /duelo1 2 y 3: {FFFFFF}Para Ir a una Zona de Duelo en otro Mundo.");
    ShowPlayerDialog(playerid, CMD+4, DIALOG_STYLE_MSGBOX, "{FFFFFF}|| Teletrasportación ||", string, "Cuenta", "");
	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
 	}
	return 1;
	}

	if (strcmp(cmdtext,"/cmds5", true)==0)
    {
	{
	AntiFlood[playerid] = 0;
	new string[550];
	strcat(string, "{29FF0D}Comandos de Cuenta:\n");
    strcat(string, "\n{29FF0D}* /stats: {FFFFFF}Para ver Tus Estadísticas (Score, Nivel, Exp, ETC)");
    strcat(string, "\n{29FF0D}* /nuevapass: {FFFFFF}Para Cambiar tu Pass o Contraseña.");
    strcat(string, "\n{29FF0D}* /nombre: {FFFFFF}Para Cambiar tu NIck/Nombre y pasar todos tus Datos en él.");
    strcat(string, "\n{29FF0D}* /top: {FFFFFF}Para Ver el Top De Score de los Players Online.");
	strcat(string, "\n\n{29FF0D}| Reseteo de Datos |");
	strcat(string, "\n{29FF0D}* /resetstats: {FFFFFF}Para Resetear tus Kills (Asesinatos), Deaths (Muertes) y Experiencia.");
	strcat(string, "\n{29FF0D}* /resetnivel: {FFFFFF}Para Resetear tu Nivel y dejarlo en 0.");
    ShowPlayerDialog(playerid, CMD+5, DIALOG_STYLE_MSGBOX, "{FFFFFF}|| Cuentas ||", string, "Reglas", "");
	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
	}

	if (strcmp(cmdtext,"/cmds6", true)==0)
	{
	{
	new string[1090];
	strcat(string, "\n{0700D7}1. {FFFFFF}Prohibido usar hacks|cheats|cleos que den beneficios.");
	strcat(string, "\n{0700D7}2. {FFFFFF}Prohibido hacer SPAM|Flood.");
	strcat(string, "\n{0700D7}3. {FFFFFF}Cualquier insulto que genere peleas, será {FFFFFF}muteado. (Está permitido insultos en broma).");
	strcat(string, "\n{0700D7}4. {FFFFFF}Prohibido hacer SK (Spawn Kill).");
	strcat(string, "\n{0700D7}5. {FFFFFF}Prohibido hacer CK (Car Kill).");
	strcat(string, "\n{0700D7}6. {FFFFFF}Prohibido hacer DB (Drive By).");
	strcat(string, "\n{0700D7}7. {FFFFFF}Prohibido hacer NA (Noob Abused).");
	strcat(string, "\n{0700D7}8. {FFFFFF}Prohibido matar a un admin en evento.");
	strcat(string, "\n{0700D7}9. {FFFFFF}Prohibido abusar de CMDS o Bugs.");
	strcat(string, "\n{0700D7}10. {FFFFFF}Prohibido evadir Jail|Mute|Ban.");
	strcat(string, "\n{0700D7}11. {FFFFFF}Prohibido evadir Kill.");
	strcat(string, "\n{0700D7}12. {FFFFFF}Prohibido pedir Admin|Admin Temp.");
	strcat(string, "\n{0700D7}13. {FFFFFF}Prohibido pedir Score|Cash|Armas.");
	strcat(string, "\n\n{0700D7}Recuerda que cualquier incumplimiento de las {FF0000}Reglas");
	strcat(string, "\n{0700D7}Puede ser Sancionada.");
	ShowPlayerDialog(playerid, CMD+6, DIALOG_STYLE_MSGBOX, "{0700D7}|| Reglas ||", string, "VIP", "");
	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
	}
	if(strcmp(cmdtext,"/cmds7", true)==0)
    {
	{
	new string[1000];
	strcat(string, "{00EEFF}Información Vip\n");
    strcat(string, "\n|Vips| {FFFFFF}Para ser vip necesitas tener el score requerido.");
    strcat(string, "\nAl llegar al score determinado deberás pedir que un administrador te de el VIP.");
    strcat(string, "\nRecuerda que puedes conseguir VIP en eventos, asesinando, etc.");
    strcat(string, "\n{FF0000}* Silver: {FFFFFF}1.000 de score.");
	strcat(string, "\n{FF0000}* Gold: {FFFFFF}3.500 de score.");
	strcat(string, "\n{FF0000}* Premium: {FFFFFF}5.000 de score.");
	strcat(string, "\n{FF0000}* Platinum: {FFFFFF}10.000 de Score.");
	strcat(string, "\n{FF0000}* Esmeralda: {FFFFFF}15.000 de score.");
	strcat(string, "\n{FF0000}* Diamond: {FFFFFF}20.000 de score.");
	strcat(string, "\n{FF0000}* Extremo: {FFFFFF}30.000 de score.");
	strcat(string, "\n{FF0000}* Legendario: {FFFFFF}75.000 de score");
	strcat(string, "\n{FF0000}* Dios: {FFFFFF}13 dolares x paypal.");
	strcat(string, "\n{FF0000}* Vip DIOS Tienda: http://www.axone12.esy.es/informacionrl/");
    strcat(string, "\n{FF0000}|VIP| {FFFFFF}Cada 5 minutos sumas +1 Nivel.");
    strcat(string, "\nPara ver tus niveles usa {FF0000}/Stats\n{FFFFFF}También usa {FF0000}/CmdsVip");
    ShowPlayerDialog(playerid, CMD+7, DIALOG_STYLE_MSGBOX, "{FFFFFF}|| VIPS ||", string, "Chat", "");
	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
	}

	if (strcmp(cmdtext,"/cmds8", true)==0)
    {
	{
	AntiFlood[playerid] = 0;
	new string[390];
	strcat(string, "{056C0E}Información de los Canales Chat:\n");
    strcat(string, "\n{056C0E}* Canal Clan (!): {FFFFFF}Para Chatear con los de tu Clan.");
	strcat(string, "\n{056C0E}* Canal Vip ($): {FFFFFF}Para Chatear con los Vips.");
    strcat(string, "\n\n{056C0E}Sólo puedes Chatear en los Canales si formas parte del Grupo.");
    ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{FFFFFF}|| CHAT ||", string, "Cerrar", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
	}
    /*============================================================================*/
    /*if (strcmp(cmdtext,"/staff", true)==0)
    {
	{
	AntiFlood[playerid] = 0;
	new string[1000];
	strcat(string, "\n{FF0000}* Dueños Del Server [Nivel 10]:");
    strcat(string, "\n{FFFFFF}» [PFP]Scarface(Jefe) - [StaffRL]Renato._ - Sr.[F]ran\n");
	strcat(string, "\n{FF0000}* Encargados/as del Server [Nivel 9]:");
	strcat(string, "\n{FFFFFF}» x[Exo_K]XHolandaXx - [P]ower[P]oint\n» [$]asuke_.[L]\n");
	strcat(string, "\n{00FF00}* Administradores Profesionales [Nivel 8]:");
	strcat(string, "\n{FFFFFF}» [S]tive[N]._. - [G]eovani.\n");
	strcat(string, "\n{00FF00}* Administradores Masters [Nivel 7]:");
	strcat(string, "\n{FFFFFF}» Black$pace - NightMare[NA]\n");
	strcat(string, "\n{00FF00}* Administradores Intermedios [Nivel 6]:");
	strcat(string, "\n{FFFFFF}» Vacío.\n");
	strcat(string, "\n{00FF00}* Administradores Principiantes [Nivel 5]:");
	strcat(string, "\n{FFFFFF}» [L]OL - Na[T]alia\n");
	strcat(string, "\n{0000FF}* Operadores Profesionales [Nivel 4]:");
	strcat(string, "\n{FFFFFF}» [T]h3[B]00st._ - lzlFranklzl\n");
	strcat(string, "\n{0000FF}* Operadores Masters [Nivel 3]:");
	strcat(string, "\n{FFFFFF}» [S]tri[K]e - .Jeral[Jm] - [S]in[P]ieDaD\n");
	strcat(string, "\n{0000FF}* Operadores Intermedios [Nivel 2]:");
	strcat(string, "\n{FFFFFF}» Vacío\n");
	strcat(string, "\n{0000FF}* Operadores Principiantes [Nivel 1]:");
	strcat(string, "\n{FFFFFF}» Vacío\n");
	ShowPlayerDialog(playerid, STAFF, DIALOG_STYLE_MSGBOX, "{0000FF}|| Staff Lista ||",string,"Aceptar", "");
	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
	}*/
    /*============================================================================*/
    if (strcmp(cmdtext,"/paginas", true)==0)
    {
	{
	AntiFlood[playerid] = 0;
	new string[1000];
	strcat(string, "{0000FF}* Página de facebook:\n");
	strcat(string, "{FFFFFF}» https://www.facebook.com/groups/GameZoneFree/\n\n");
	strcat(string, "{FF0000}* Foro del servidor:\n");
	strcat(string, "{FFFFFF}» www.axone12.zz.mu/RevolucionLatina/\n\n");
	strcat(string, "{00FF00}* Página de la Comunidad aXone12:\n");
	strcat(string, "{FFFFFF}» https://www.facebook.com/Axone12/\n\n");
	ShowPlayerDialog(playerid, STAFF, DIALOG_STYLE_MSGBOX, "{0000FF}|| Paginas ||",string,"Aceptar", "");
	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
	}
	/*============================================================================*/
	if (strcmp(cmdtext,"/postulaciones", true)==0)
    {
	{
	AntiFlood[playerid] = 0;
	new string[1000];
	strcat(string, "{0700D7}» {FFFFFF}Las postulaciones están actualmente {FF0000}cerradas. \n");
	strcat(string, "{0700D7}» {FFFFFF}Para estar atento a ver cuando abren mira {29FF0D}/paginas.\n\n");
	strcat(string, "{0700D7}» {FFFFFF}Para poder ser miembro de la administración deberás tener o superar los 13 años de edad.\n");
	strcat(string, "{0700D7}» {FFFFFF}No tener antecedentes por hacks (sea el que sea).\n\n");
	strcat(string, "{0700D7}» {FFFFFF}Ser activo en el servidor y mostrar madurez/seriedad.\n");
	strcat(string, "{0700D7}» {FFFFFF}Usar la experiencia y ser paciente, si no quedas volver a intentarlo mejorando de los errores.\n\n");
	ShowPlayerDialog(playerid, STAFF, DIALOG_STYLE_MSGBOX, "{0000FF}|| Postulaciones administrativas ||",string,"Aceptar", "");
	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
	}
    /*============================================================================*/
    if(strcmp(cmdtext,"/creditos", true)==0)
    {
	{
	new string[1840];
	strcat(string, "{00aeff}Dueños del Server:\n{00FF00}* Sr.[F]ran \n* Scarface \n* Carlosxp \n* Renato._\n\n");
	strcat(string, "{00aeff}Encargado del Server:\n{00FF00}* _DeadCandy_\n\n");
	strcat(string, "{00aeff}Scripteado por:\n{00FF00}*  Carlosxp.\n\n");
	strcat(string, "{00aeff}Pago Del Host:\n{00FF00}* Scarface\n\n");
	strcat(string, "{00aeff}{00aeff}Mapeado por: \n* DeadCandy \n* Sr.[F]ran \n* Carlosxp \n* [D]ead[P]ool\n\n");
	strcat(string, "{00aeff}Mapper Actual:\n{00FF00}* _DeadCandy_ * _[D]ead[P]ool_");
	ShowPlayerDialog(playerid, CDTS, DIALOG_STYLE_MSGBOX, "{ffb800}|| Créditos Revolucion Latina Freeroam ORIGINAL||", string, "Sig", "");
	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
	}

    if(strcmp(cmdtext,"/creditos1", true)==0)
    {
	{
	new string[1540];
	strcat(string, "{00aeff}FilterScripts y Sistemas:\n");
	strcat(string, "{FF0000}* Car Spawner: {FFFFFF}por iywe.\n");
	strcat(string, "{FF3700}* Sistema de Neones: {00FF00}Basado en el sistema de Hunterbot. \n");
	strcat(string, "{FF0000}* Sistema de Duelos: {FFFFFF}por [SOB]Chris\n");
	strcat(string, "{FF0000}* Script de Bombac4: {FFFFFF}por irinel1996\n");
	strcat(string, "{FF0000}* Sistema de Clanes: {FFFFFF}por Armero04\n");
	strcat(string, "{FF0000}* Sistema de Carreras: {FFFFFF}por RyDer\n");
	strcat(string, "{FF0000}* Interfaz: {FFFFFF}por Francisco Aldao & Renato Martinez.\n");
    strcat(string, "{FF3700}* Sistema VIP Renovado: {00FF00}por Carlosxp.\n");
    strcat(string, "{FF0000}* Sistema De Transformes: {FFFFFF}Basado en el sistema de Shiny_David. \n");
	strcat(string, "{FF3700}* Sistema de Clanes y Zonas: {00FF00}por MWayne155.\n");
	strcat(string, "{FF0000}* Sistema de Paises: {FFFFFF}por Whitetiger. \n");
    strcat(string, "{FF0000}* Sistema De Propiedades: {FFFFFF}por [A]D0KIN[G]\n");
    strcat(string, "{FF0000}* Chats del servidor (Admin, VIP, etc.): {FFFFFF}por LethaL & mejorado por Carlosxp.\n");
	strcat(string, "{FF0000}* Sistema de Eventos: {FFFFFF}por Carlosxp, Sr.[F]ran y ayuda de _DeadCandy_.\n\n");
	strcat(string, "{FF0000}* Sistema Admin (ladmin): {FFFFFF}por LethaL \n Traducido y mejorado por Carlosxp.\n\n");
	strcat(string, "{FF0000}            © Copyright Revolucion Latina 2013 - 2015");
	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{ffb800}|| Créditos Revolucion Latina ORIGINAL||", string, "Ok", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
	}
    /*============================================================================*/
     if (strcmp(cmdtext,"/ayuda1", true)==0)
    {
	{
	new string[1300];
	strcat(string, "{FF8801}» Servidor tipo {FF0000}'FreeRoam' {FF8801}en cual tú debes:\n\n\n");
	strcat(string, "{FF0000}* {FFFFFF}Hacer lo que te plazca, cumpliendo con las reglas ya definidas.\n\n");
	strcat(string, "{FF0000}* {FFFFFF}Reportar a un jugador si no cumple las reglas con {FF0000}/Reportar ID Razón.\n\n");
	strcat(string, "{FF0000}* {FFFFFF}No pidas Admin por que se te ignorará y hasta {FF0000}recibir advertencias.\n\n");
	strcat(string, "{FF0000}* {FFFFFF}Si ves algún bug postea el bug en el foro en la sección correspondiente. {29FF0D}(/paginas)\n\n");
	strcat(string, "{FF0000}* {FFFFFF}Usa {29FF0D}/cmds{FFFFFF}, para ver que comandos hay disponible.\n\n");
	strcat(string, "{FF0000}* {FFFFFF}Si llegas a ser baneado, puedes pedir tu Desban en el foro en la sección correspondiente con sus pruebas.\n\n");
	strcat(string, "{FF0000}* {FFFFFF}Está permitido el Bug de armas {29FF0D}(Two Bug Shoot, Slide Bug y C-Bug).\n\n");
	strcat(string, "{FF0000}* {FFFFFF}¡No pongas signos raros o dejar espacios en tu Nick al usar el cmd /nombre por que {FF0000}perderás tu cuenta!\n\n");
	strcat(string, "{FF0000}* {FFFFFF}Sistema de Nivel, cada 5 minutos subes un nivel.\n\n");
	strcat(string, "{FF0000}* {FFFFFF}Sistema de Duelos, usa el comando /duelo [invitar/ver]\n\n\n");
	strcat(string, "{FFFFFF} En el caso que tengas dudas contacta a un Administrador {29FF0D}(/solicitar).");
	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{29FF0D}|| Ayuda ||", string, "OK", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
	}
    /*============================================================================*/
    if(strcmp(cmdtext,"/ayuda", true)==0)
    {
		if(!udb_Exists(PlayerName2(playerid))) return SendClientMessage(playerid, COLOR_GREEN, "[ERROR]: {FFFFFF}Usted Debe Estar Registrado {0000FF}(/register)");
  		ShowPlayerDialog(playerid,6061,DIALOG_STYLE_LIST,"{FF0000}Revolucion {FFFFFF}Latina","{00FF00}Ayuda\n{00EEFF}Comandos\n{FF0000}Reglas\n{FF8801}Armas\n{C3D5DF}Teles\n{FF0000}DmTeles\n{FDFF37}Autos\n{FFFFFF}Admins On\n{00EEFF}Vips On\n{FF8801}Info Samp\n{33CCFF}Minijuegos","Elegir","Cancelar");
  		PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
        return 1;
    }
    //===============================================================================
	if (strcmp(cmdtext,"/reglas", true)==0)
	{
	{
	new string[1000];
	strcat(string, "\n{FF0000}1. {FFFFFF}Prohibido Usar Hacks|Cheats para Su Beneficio.");
	strcat(string, "\n{FF0000}2. {FFFFFF}Prohibido hacer SPAM|Flood.");
	strcat(string, "\n{FF0000}3. {FFFFFF}Cualquier insulto que genere peleas, será muteado.");
	strcat(string, "\n{FF0000}4. {FFFFFF}Prohibido hacer SK (Spawn Kill).");
	strcat(string, "\n{FF0000}5. {FFFFFF}Prohibido hacer CK (Car Kill).");
	strcat(string, "\n{FF0000}6. {FFFFFF}Prohibido hacer DB (Drive By).");
	strcat(string, "\n{FF0000}7. {FFFFFF}Prohibido hacer NA (Noob Abused).");
	strcat(string, "\n{FF0000}8. {FFFFFF}Prohibido matar a un admin en evento.");
	strcat(string, "\n{FF0000}9. {FFFFFF}Prohibido abusar de CMDS o Bugs.");
	strcat(string, "\n{FF0000}10. {FFFFFF}Prohibido evadir Jail|Mute|Ban.");
	strcat(string, "\n{FF0000}11. {FFFFFF}Prohibido evadir Kill.");
	strcat(string, "\n{FF0000}12. {FFFFFF}Prohibido pedir Admin|Admin Temp.");
	strcat(string, "\n{FF0000}13. {FFFFFF}Prohibido pedir Score|Cash|Armas.");
	strcat(string, "\n\n{00FF00}Recuerda que cualquier incumplimiento de las {FF0000}Reglas");
	strcat(string, "\n{00FF00}Puede ser Sancionada.");
	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{ffb800}|| Reglas ||", string, "OK", "");
	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
	}
//==============================================Reglas Vip dios===============
	if (strcmp(cmdtext,"/reglasvd", true)==0)
	{
	{
	if(PlayerInfo[playerid][pVip] == 9) return SendClientMessage(playerid, red, "[ERROR]: Debes ser VIP DIOS para leer las reglas.");
	new string[2000];
	strcat(string, "\n{FF0000}1. {FFFFFF}El comando /vgod solo se utilizará sin armas y sin matar a otros usuarios");
	strcat(string, "\n{FF0000} {FFFFFF}* No se usará para evadir kill, los administradores tendran todo el derecho\n de quitarte las armas o darte una advertencia si abusas de este comando.\n");
	strcat(string, "\n{FF0000}2. {FFFFFF}El comando /vknockout no se usará para hacer SK(Spawn Kill) \n o podrias recibir jail de parte de un admin.\n");
	strcat(string, "\n{FF0000}3. {FFFFFF}El Abuso que se cometa con el comando /vgoto será sancionado con jail");
	strcat(string, "\n{FF0000} {FFFFFF}no debe usarse para ir a matar a otros usuarios.\n");
	strcat(string, "\n{FF0000}4. {FFFFFF}Los comandos /loquendo y /loquenda sólo serán usados para anuncios.");
	strcat(string, "\n{FF0000} {FFFFFF}*No debe contener alguna groseria, palabras obcenas o insultos a otros usuarios.\n");
	strcat(string, "\n\n{FF0000} NOTA:\n* Toma en cuenta otras posibles sanciones que los administradores hagan sobre tu vip.\n");
	strcat(string, "\n{FF0000}* Si no estas de acuerdo con la sanción reporta al admin que te removió el vip, no olvides tener pruebas");
    strcat(string, "\n{FF0000} (Fotos, Videos)... \n\n * No se aceptarán excusas, ni el apoyo de testigos si no se tiene alguna prueba antes dicha.");
    strcat(string, "\n\n{FF0000}* Disfruta de tu vip Dios, ¡¡¡sin abusar!!!");
	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{ffb800}|| Reglas Vip Dios||", string, "OK", "");
	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
	}
    /*============================================================================*/
    if (strcmp(cmdtext, "/teles", true)==0)
    {
 	{
    new string[1600];
	strcat(string, "\n{FF0000}* /parkour: {FFFFFF}Para Hacer Parkour (No Kills)");
	strcat(string, "\n{FF0000}* /parkour2: {FFFFFF}Para Hacer Parkour (No Kills)");
	strcat(string, "\n{FF0000}* /salto: {FFFFFF}Para Ir de Picada en Vehículo (No Kills)");
	strcat(string, "\n{FF0000}* /presa: {FFFFFF}Para Ir a una Represa");
    strcat(string, "\n{FF0000}* /stunt: {FFFFFF}Para Hacer Stunts.");
	strcat(string, "\n{FF0000}* /ls: {FFFFFF}Para Ir a Los Santos. \n{FF0000}* /lv: {FFFFFF}Para Ir a Las Venturas.");
	strcat(string, "\n{FF0000}* /sf: {FFFFFF}Para Ir a San Fierro. \n{FF0000}* /aa: {FFFFFF}Para Ir AL Aeropuerto Abandonado.");
	strcat(string, "\n{FF0000}* /bosque: {FFFFFF}Para Ir al Bosque. \n{FF0000}* /chilliad: {FFFFFF}Para Ir al Monte Chilliad.");
	strcat(string, "\n{FF0000}* /cantera: {FFFFFF}Para Ir a la Cantera. \n{FF0000}* /puente: {FFFFFF}Para Ir al Puente Rojo.");
	strcat(string, "\n{FF0000}* /aerols: {FFFFFF}Para Ir al Aeropuerto de LS. \n{FF0000}* /aerolv: {FFFFFF}Para Ir al Aeropuerto de LV.");
	strcat(string, "\n{FF0000}* /aerosf: {FFFFFF}Para Ir al Aeropuerto de SF.");
	strcat(string, "\n{FF0000}* /drift: {FFFFFF}Para Ir a un Lugar a Drifear.");
	strcat(string, "\n{FF0000}* /vista: {FFFFFF}Para Ir a un Lugar Alto. \n{FF0000}* /barcodm: Para Ir a un Barco y Hacer DM.");
	strcat(string, "\n{FF0000}* /faro: {FFFFFF}Para Ir a un Faro.");
	strcat(string, "\n{FF0000}* /party: {FFFFFF}Para Ir una fiesta.");
	strcat(string, "\n{FF0000}* /amor: {FFFFFF}Para Ir al Lugar de los Novios :$");
	strcat(string, "\n{FF0000}* /playa: {FFFFFF}Para Ir a una Playa. \n{FF0000}* /duelo1 2 y 3: {FFFFFF}Para Ir a una Zona de Duelo en otro Mundo.");
	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{FFFFFF}|| Teles ||",string,"Aceptar", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	}
	return 1;
    }
    /*============================================================================*/
    if (strcmp(cmdtext, "/acciones", true)==0)
    {
 	{
    new string[1000];
    strcat(string, "{00FF00}* SI la Acción no se ejecuta vuelva a ingresar el Comando nuevamente.\n");
	strcat(string, "\n{00EEFF}* /si, /no, /rendirse, /borracho, /mmm, /servir, /servirse.");
	strcat(string, "\n{FFFFFF}* /bomba, /arrestar, /jaja, /sapiar, /asiento, /asiento2.");
	strcat(string, "\n{00EEFF}* /amenazar, /agredido, /herido, /rodar, /llorar, /quepa.");
	strcat(string, "\n{FFFFFF}* /encender, /vigilar, /recostarse, /saludo1 2 3 y 4.");
	strcat(string, "\n{00EEFF}* /palmada, /agonizar, /traficar, /beso, /crack, /detener1.");
	strcat(string, "\n{FFFFFF}* /beber, /hablar, /sucidio, /sanar, /wooo.");
	strcat(string, "\n{00EEFF}* /cubrirse, /vomitar, /comer, /despedirse, /dormir, /alzar.");
	strcat(string, "\n{FFFFFF}* /strip[1-20], /echarse, /asientosexi, /skate1 2 y 3, /superpatada.");
	strcat(string, "\n{00EEFF}* /patada, /danzar[0-12], /fumar2, fumar3, /llamar, /recoger.");
	strcat(string, "\n{FFFFFF}* /asustado, /taxi, /adolorido, /seacabo, /fuerza, /quepasa.");
	strcat(string, "\n{00EEFF}* /fumar, /sentarse, /fokear, /piquero, /rapear, /taichi, /boxear.");
	strcat(string, "\n{FFFFFF}* /choriso, /gaviota, /mujer, /cansado, /asco, /comodo.");
	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{FFFFFF}|| Acciones ||",string,"Aceptar", "");
	}
	return 1;
    }
   /*============================================================================*/
	/*============================================================================*/
	if (strcmp(cmdtext,"/sampinfo", true)==0)
    {
    ShowPlayerDialog(playerid,INFO,DIALOG_STYLE_LIST, "{FFFFFF}|| Categoría ||", "SA-MP\nArmas\nBugs de Armas\nFrases que se usan en Samp\nFunciones en Samp\nMiscelánea", "Seleccionar","Cancelar");
    return 1;
    }
    /*============================================================================*/
    if(!strcmp(cmdtext, "/colores", true))
    {
       ShowPlayerDialog(playerid,5000,DIALOG_STYLE_LIST,"{FFFFFF}Colores","{FF0000}Rojos\r\n{FF8000}Naranjas\r\n{964B00}Marrones\r\n{00FF00}Amarillos\r\n{00FF00}Verdes\r\n{00FFFF}Azules Claros\r\n{0000FF}Azules Oscuros\r\n{8B00FF}Violetas\r\n{FF00FF}Rosas\r\n{FFFFFF}Blanco\r\n{000000}Negro\r\n{808080}Grises","Elegir", "Cancelar");
       PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
       return 1;
       }

	if(strcmp(cmdtext, "/rojo", true) == 0)
	{
	SetPlayerColor(playerid, COLOR_ROJO);
	SendClientMessage(playerid,COLOR_ROJO,"[INFO]: Has seleccionado tu color a Rojo");
	return 1;
	}

	if(strcmp(cmdtext, "/gris", true) == 0)
	{
	SetPlayerColor(playerid, COLOR_GRIS);
	SendClientMessage(playerid,COLOR_GRIS,"[INFO]: Has seleccionado tu color a Gris");
	return 1;
	}

	if(strcmp(cmdtext, "/azul", true) == 0)
	{
	SetPlayerColor(playerid, COLOR_AZUL);
	SendClientMessage(playerid,COLOR_AZUL,"[INFO]: Has seleccionado tu color a Azul");
	return 1;
	}

	if(strcmp(cmdtext, "/naranja", true) == 0)
	{
	SetPlayerColor(playerid, COLOR_NARANJA);
	SendClientMessage(playerid,COLOR_NARANJA,"[INFO]: Has seleccionado tu color a Naranja");
	return 1;
	}

	if(strcmp(cmdtext, "/amarillo", true) == 0)
	{
	SetPlayerColor(playerid, COLOR_AMARILLO);
	SendClientMessage(playerid,COLOR_AMARILLO,"[INFO]: Has seleccionado tu color a Amarillo");
	return 1;
	}

	if(strcmp(cmdtext,"/violeta",true)==0)
	{
	SetPlayerColor(playerid,COLOR_VIOLETA);
	SendClientMessage(playerid,COLOR_VIOLETA,"[INFO]: Has seleccionado tu color a Violeta");
	return 1;
	}

	if(strcmp(cmdtext, "/negro", true) == 0)
	{
	SetPlayerColor(playerid,COLOR_NEGRO);
	SendClientMessage(playerid,COLOR_NEGRO,"[INFO]: Has seleccionado tu color a Negro");
	return 1;
	}

	if(strcmp(cmdtext, "/blanco", true) == 0)
	{
	SetPlayerColor(playerid, COLOR_BLANCO);
	SendClientMessage(playerid,COLOR_BLANCO,"[INFO]: Has seleccionado tu color a Blanco");
	return 1;
	}

	if(strcmp(cmdtext, "/rosado", true) == 0)
	{
	SetPlayerColor(playerid,COLOR_ROSA);
	SendClientMessage(playerid,COLOR_ROSA,"[INFO]: Has seleccionado tu color a Rosa");
	return 1;
	}

	if(strcmp(cmdtext,"/azulclaro",true)==0)
	{
	SetPlayerColor(playerid,COLOR_AZULCLARO);
	SendClientMessage(playerid,COLOR_AZULCLARO,"[INFO]: Has seleccionado tu color a Azul Claro");
	return 1;
	}

	if(strcmp(cmdtext,"/verde",true)==0)
	{
	SetPlayerColor(playerid,COLOR_VERDE);
    SendClientMessage(playerid,COLOR_VERDE,"[INFO]: Has seleccionado tu color a Verde");
	return 1;
	}

	if(strcmp(cmdtext,"/verdeclaro",true)==0)
	{
	SetPlayerColor(playerid,COLOR_VERDECLARO);
	SendClientMessage(playerid,COLOR_VERDECLARO,"[INFO]: Has seleccionado tu color a Verde Claro");
	return 1;
	}

	if(strcmp(cmdtext, "/celeste", true) == 0)
	{
	SetPlayerColor(playerid, COLOR_CELESTE);
	SendClientMessage(playerid,COLOR_CELESTE,"[INFO]: Has seleccionado tu color a Celeste");
	return 1;
	}

	if(strcmp(cmdtext, "/agua",true)==0)
	{
	SetPlayerColor(playerid,COLOR_AGUA);
	SendClientMessage(playerid,COLOR_AGUA,"[INFO]: Has seleccionado tu color a Agua");
	return 1;
	}

	if(strcmp(cmdtext,"/azuloscuro",true)==0)
	{
	SetPlayerColor(playerid,COLOR_DARKBLUE);
	SendClientMessage(playerid,COLOR_DARKBLUE,"[INFO]: Has seleccionado tu color a Azul Oscuro");
	return 1;
	}

	if(strcmp(cmdtext, "/cafe",true)==0)
	{
	SetPlayerColor(playerid,COLOR_BROWN);
	SendClientMessage(playerid,COLOR_BROWN,"[INFO]: Has seleccionado tu color a Café");
	return 1;
	}

	if(strcmp(cmdtext, "/rojooscuro",true)==0)
	{
	SetPlayerColor(playerid,COLOR_DARKRED);
	SendClientMessage(playerid,COLOR_DARKRED,"[INFO]: Has seleccionado tu color a Rojo Oscuro");
	return 1;
	}
//===============================================================================
//===============================================================================
//============== Acciones ==============================
	// HANDSUP
    if(strcmp(cmdtext, "/rendirse", true) == 0) {
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
    return 1;
    }
    }
    // Drunk
    if(strcmp(cmdtext, "/borracho", true) == 0) {
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
    ApplyAnimation(playerid,"PED", "WALK_DRUNK",4.0,1,1,1,1,500);
    SendClientMessage(playerid, 0x339900AA, "borrachin");
    return 1;
    }
    }
if(strcmp("/bomba", cmdtext, true) == 0){ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);return 1;}
if(strcmp("/arrestar", cmdtext, true) == 0){ApplyAnimation( playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1,500);SendClientMessage(playerid, 0x339900AA, "Quieto");return 1;}
if(strcmp("/jaja", cmdtext, true) == 0){ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0,0);SendClientMessage(playerid, 0x339900AA, "Jajajaja");return 1;}
if(strcmp("/sapiar", cmdtext, true) == 0){ApplyAnimation(playerid,"PED","roadcross_female",4.1,0,0,0,0,0);SendClientMessage(playerid, 0x339900AA, "Sapiando");return 1;}
if(strcmp("/amenazar", cmdtext, true) == 0){ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 1,500); SendClientMessage(playerid, 0x339900AA, "Pasa las moneas");return 1;}
if(strcmp("/paja", cmdtext, true) == 0){ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0, 1, 0, 0, 1, 0);SendClientMessage(playerid, 0x339900AA, "te recomiendo /irsecortao");return 1;}
if(strcmp("/irsecortao", cmdtext, true) == 0){ApplyAnimation(playerid, "PAULNMAC", "wank_out", 4.0, 0, 0, 0, 0, 0);SendClientMessage(playerid, 0x339900AA, "Te fuiste cortao");return 1;}
if(strcmp("/agredido", cmdtext, true) == 0){ApplyAnimation(playerid, "POLICE", "crm_drgbst_01", 4.0, 0, 0, 0, 1, 0);SendClientMessage(playerid, 0x339900AA, "para continuar /levantarse");return 1;}
if(strcmp("/herido", cmdtext, true) == 0){ApplyAnimation(playerid, "SWEET", "LaFin_Sweet", 4.0, 0, 1, 1, 1, 0);SendClientMessage(playerid, 0x339900AA, "para continuar /agonizar");return 1;}
if(strcmp("/encender", cmdtext, true) == 0){ApplyAnimation(playerid, "SMOKING", "M_smk_in", 4.000000, 0, 0, 1, 1, 0);SendClientMessage(playerid, 0x339900AA, "para continuar /inhalar o /apagar");return 1;}
if(strcmp("/inhalar", cmdtext, true) == 0){ApplyAnimation(playerid, "SMOKING", "M_smk_drag", 4.000000, 1, 0, 0, 0, -1);SendClientMessage(playerid, 0x339900AA, "para continuar /apagar");return 1;}
if(strcmp("/apagar", cmdtext, true) == 0){ApplyAnimation(playerid, "SMOKING", "M_smk_out", 4.000000, 0, 1, 1, 0, 0);return 1;}
if(strcmp("/vigilar", cmdtext, true) == 0){ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 1, 1, 1, 0, 4000);return 1;}
if(strcmp("/recostarse", cmdtext, true) == 0){ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_in", 4.0, 0, 0, 0, 1, 0);SendClientMessage(playerid, 0x339900AA, "para continuar /pararse");return 1;}
if(strcmp("/pararse", cmdtext, true) == 0){ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_out", 4.0, 0, 0, 0, 0, 0);return 1;}
if(strcmp("/cubrirse", cmdtext, true) == 0){ApplyAnimation(playerid, "ped", "cower", 4.0, 1, 0, 0, 0, 0);SendClientMessage(playerid, 0x339900AA, "para continuar /pararse");return 1;}
if(strcmp("/vomitar", cmdtext, true) == 0){ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);SendClientMessage(playerid, 0x339900AA, "buaaaaajjj");return 1;}
if(strcmp("/comer", cmdtext, true) == 0){ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);return 1;}
if(strcmp("/chao", cmdtext, true) == 0){ApplyAnimation(playerid, "KISSING", "BD_GF_Wave", 3.0, 0, 0, 0, 0, 0);SendClientMessage(playerid, 0x339900AA, "chao");return 1;}
if(strcmp("/palmada", cmdtext, true) == 0){ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);SendClientMessage(playerid, 0x339900AA, "su palmadita");return 1;}
if(strcmp("/agonizar", cmdtext, true) == 0){ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0);SendClientMessage(playerid, 0x339900AA, "para continuar /levantarse");return 1;}
if(strcmp("/levantarse", cmdtext, true) == 0){ApplyAnimation(playerid, "ped", "getup_front", 4.000000, 0, 0, 0, 0, 0);return 1;}
if(strcmp("/traficar", cmdtext, true) == 0){ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0);SendClientMessage(playerid, 0x339900AA, "pasando y pasando");return 1;}
if(strcmp("/beso", cmdtext, true) == 0){ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 4.0, 0, 0, 0, 0, 0);return 1;}
if(strcmp("/crack", cmdtext, true) == 0){ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 0, 0, 0, 1, 0);SendClientMessage(playerid, 0x339900AA, "para continuar /levantarse");return 1;}
if(strcmp("/fumar", cmdtext, true) == 0){SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);return 1;}
if(strcmp("/sentarse", cmdtext, true) == 0){ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_in", 4.000000, 0, 1, 1, 1, 0);SendClientMessage(playerid, 0x339900AA, "para continuar /pararse");return 1;}
if(strcmp("/pararse", cmdtext, true) == 0){ApplyAnimation(playerid, "ped", "SEAT_up", 4.000000, 0, 1, 1, 1, 0);return 1;}
if(strcmp("/fokear", cmdtext, true) == 0){ApplyAnimation( playerid,"ped", "fucku", 4.0, 0, 1, 1, 1, 1 );SendClientMessage(playerid, 0x339900AA, "que te pasa ql?");return 1;}
if(strcmp("/si", cmdtext, true) == 0){ApplyAnimation(playerid, "GANGS", "Invite_Yes", 4.0, 0, 0, 0, 0, 0);SendClientMessage(playerid, 0x339900AA, "si");return 1;}
if(strcmp("/no", cmdtext, true) == 0){ApplyAnimation(playerid, "GANGS", "Invite_No", 4.0, 0, 0, 0, 0, 0);SendClientMessage(playerid, 0x339900AA, "no");return 1;}
if(strcmp("/llamar", cmdtext, true) == 0){ApplyAnimation(playerid, "ped", "phone_in", 4.000000, 0, 0, 0, 1, 4000);SendClientMessage(playerid, 0x339900AA, "para continuar /colgar");SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);return 1;}
if(strcmp("/contestar", cmdtext, true) == 0){ApplyAnimation(playerid, "ped", "phone_in", 4.000000, 0, 0, 0, 1, 4000); SendClientMessage(playerid, 0x339900AA, "para continuar /colgar");SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);return 1;}
if(strcmp("/colgar", cmdtext, true) == 0){ApplyAnimation(playerid, "ped", "phone_out", 4.000000, 0, 1, 1, 0, 0);return 1;}
if(strcmp("/piquero", cmdtext, true) == 0){ApplyAnimation(playerid, "DAM_JUMP", "DAM_Launch", 4.0, 0, 1, 1, 1, 1); return 1;}
if(strcmp("/taichi", cmdtext, true) == 0){ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop",  4.1,7,5,1,1,1); SendClientMessage(playerid, 0x339900AA, "siente el flujo");return 1;}
if(strcmp("/beber", cmdtext, true) == 0){ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000);return 1;}
if(strcmp("/pagar", cmdtext, true) == 0){ApplyAnimation(playerid, "DEALER", "shop_pay", 4.000000, 0, 1, 1, 0, 0);return 1;}
if(strcmp("/boxear", cmdtext, true) == 0){ApplyAnimation(playerid, "GYMNASIUM", "gym_shadowbox",  4.1,7,5,1,1,1);return 1;}
if(strcmp("/pelea", cmdtext, true) == 0){ApplyAnimation(playerid, "ped", "FIGHTIDLE", 4.000000, 0, 1, 1, 1, 1);SendClientMessage(playerid, 0x339900AA, "para continuar /boxear");return 1;}
if(strcmp("/recoger", cmdtext, true) == 0){ApplyAnimation(playerid, "BSKTBALL", "BBALL_pickup", 4.000000, 0, 1, 1, 1, 1);SendClientMessage(playerid, 0x339900AA, "para continuar /botear");return 1;}
if(strcmp("/botear", cmdtext, true) == 0){ApplyAnimation(playerid, "BSKTBALL", "BBALL_walk", 4.000000, 1, 1, 1, 1, 500);SendClientMessage(playerid, 0x339900AA, "para continuar /clavarse 0 /lanzar");return 1;}
if(strcmp("/clavarse", cmdtext, true) == 0){ApplyAnimation(playerid, "BSKTBALL", "BBALL_def_jump_shot", 4.0, 0, 1, 1, 1, 500);return 1;}
if(strcmp("/lanzar", cmdtext, true) == 0){ApplyAnimation(playerid, "BSKTBALL", "BBALL_Jump_Shot", 4.0, 0, 1, 1, 1, 500);return 1;}
if(strcmp("/asiento", cmdtext, true) == 0){ApplyAnimation(playerid, "ped", "SEAT_down", 4.000000, 0, 0, 0, 1, 0);SendClientMessage(playerid, 0x339900AA, "para continuar /depie");return 1;}
if(strcmp("/depie", cmdtext, true) == 0){ApplyAnimation(playerid, "ped", "SEAT_up", 4.000000, 0, 0, 1, 0, 0);return 1;}
if(strcmp("/servirse", cmdtext, true) == 0){ApplyAnimation(playerid,"BAR","Barcustom_get",4.1,0,0,0,0,0);return 1;}
if(strcmp("/servir", cmdtext, true) == 0){ApplyAnimation(playerid,"BAR","Barserve_give",4.1,0,0,0,0,0);return 1;}
if(strcmp("/asiento2", cmdtext, true) == 0){ApplyAnimation(playerid,"Attractors","Stepsit_in",4.1,0,0,0,1,0);SendClientMessage(playerid, 0x339900AA, "para continuar /depie2");return 1;}
if(strcmp("/depie2", cmdtext, true) == 0){ApplyAnimation(playerid,"Attractors","Stepsit_out",4.1,0,0,0,0,0);return 1;}
if(strcmp("/mmm", cmdtext, true) == 0){ApplyAnimation(playerid,"COP_AMBIENT","Coplook_think",4.1,0,0,0,0,0);return 1;}
if(strcmp("/rodar", cmdtext, true) == 0){ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Lnd_Roll",4.1,0,1,1,1,0);SendClientMessage(playerid, 0x339900AA, "para continuar /levantarse");return 1;}
if(strcmp("/saludo1", cmdtext, true) == 0){ApplyAnimation(playerid,"GANGS","hndshkaa",4.1,0,0,0,0,0);return 1;}
if(strcmp("/saludo2", cmdtext, true) == 0){ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,0,0,0,0);return 1;}
if(strcmp("/saludo3", cmdtext, true) == 0){ApplyAnimation(playerid,"GANGS","hndshkca",4.1,0,0,0,0,0);return 1;}
if(strcmp("/saludo4", cmdtext, true) == 0){ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);return 1;}
if(strcmp("/sanar", cmdtext, true) == 0){ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0);return 1;}
if(strcmp("/llorar", cmdtext, true) == 0){ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,0,0,0,0,0);return 1;}
if(strcmp("/dormir", cmdtext, true) == 0){ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0);return 1;}
if(strcmp("/detener1", cmdtext, true) == 0){ApplyAnimation(playerid,"POLICE","CopTraf_Stop",4.1,0,0,0,0,0);return 1;}
if(strcmp("/rapear", cmdtext, true) == 0){ApplyAnimation(playerid,"RAPPING","RAP_B_Loop",4.0,1,0,0,0,8000);return 1;}
//=========================== acciones=cristo ==================================
//-------------------------------- strip ---------------------------------------
if(strcmp("/strip", cmdtext, true) == 0){SendClientMessage(playerid, 0xAA3333AA, "/strip[1-20]");return 1;}
if(strcmp("/strip1", cmdtext, true) == 0){ApplyAnimation(playerid,"CAR","flag_drop",4.1,0,1,1,1,1);return 1;}
if(strcmp("/strip2", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,7,5,1,1,1);return 1;}
if(strcmp("/strip3", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,7,5,1,1,1);return 1;}
if(strcmp("/strip4", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","PUN_LOOP",4.1,7,5,1,1,1);return 1;}
if(strcmp("/strip5", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","strip_A",4.1,7,5,1,1,1);return 1;}
if(strcmp("/strip6", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","strip_B",4.1,7,5,1,1,1);return 1;}
if(strcmp("/strip7", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","strip_C",4.1,7,5,1,1,1);return 1;}
if(strcmp("/strip8", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","strip_D",4.1,7,5,1,1,1);return 1;}
if(strcmp("/strip9", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","strip_E",4.1,7,5,1,1,1);return 1;}
if(strcmp("/strip10", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","strip_F",4.1,7,5,1,1,1);return 1;}
if(strcmp("/strip11", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","strip_G",4.1,7,5,1,1,1);return 1;}
if(strcmp("/strip12", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","STR_B2A",4.1,0,1,1,1,1);return 1;}
if(strcmp("/strip13", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","strip_E",4.1,7,5,1,1,1);return 1;}
if(strcmp("/strip14", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","STR_B2C",4.000000, 0, 1, 1, 1, 0);return 1;}
if(strcmp("/strip15", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","STR_C1",4.000000, 0, 1, 1, 1, 0);return 1;}
if(strcmp("/strip16", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","STR_C2",4.000000, 0, 1, 1, 1, 0);return 1;}
if(strcmp("/strip17", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","STR_C2B",4.1,7,5,1,1,1);return 1;}
if(strcmp("/strip18", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","STR_Loop_A",4.1,7,5,1,1,1);return 1;}
if(strcmp("/strip19", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","STR_Loop_C",4.1,7,5,1,1,1);return 1;}
if(strcmp("/strip20", cmdtext, true) == 0){ApplyAnimation(playerid,"STRIP","STR_Loop_B",4.1,7,5,1,1,1);return 1;}
//------------------------------ sentado ---------------------------------------
if(strcmp("/echarse", cmdtext, true) == 0){ApplyAnimation(playerid,"SUNBATHE","SitnWait_in_W",4.000000, 0, 0, 0, 1, 0);return 1;}
//------------------------------- puta -----------------------------------------
if(strcmp("/asientosexi", cmdtext, true) == 0){ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleA",4.000000, 0, 1, 1, 1, 0);SendClientMessage(playerid, 0x339900AA, "para continuar /pararse");return 1;}
//------------------------------ Skate -----------------------------------------
if(strcmp("/skate", cmdtext, true) == 0){SendClientMessage(playerid, 0xAA3333AA, "/skate 1 2 y 3");return 1;}
if(strcmp("/SKATE1", cmdtext, true) == 0){ApplyAnimation(playerid,"SKATE","skate_run",4.0,1,1,1,1,500);return 1;}
if(strcmp("/SKATE2", cmdtext, true) == 0){ApplyAnimation(playerid,"SKATE","skate_sprint",4.0,1,1,1,1,500);return 1;}
if(strcmp("/skate3", cmdtext, true) == 0){ApplyAnimation(playerid,"SKATE","skate_idle",4.0,1,1,1,1,500);return 1;}
//---------------------------- patada ------------------------------------------
if(strcmp("/patada", cmdtext, true) == 0){ApplyAnimation(playerid,"FIGHT_C","FightC_2",4.1,7,5,1,1,1);return 1;}
//------------------------------- dansa ----------------------------------------
if(strcmp("/danzar", cmdtext, true) == 0){SendClientMessage(playerid, 0xAA3333AA, "/danzar[0-12]");return 1;}
if(strcmp("/danzar0", cmdtext, true) == 0){ApplyAnimation(playerid,"DANCING","bd_clap",4.1,7,5,1,1,1);return 1;}
if(strcmp("/danzar1", cmdtext, true) == 0){ApplyAnimation(playerid,"DANCING","bd_clap1",4.1,7,5,1,1,1);return 1;}
if(strcmp("/danzar2", cmdtext, true) == 0){ApplyAnimation(playerid,"DANCING","dance_loop",4.1,7,5,1,1,1);return 1;}
if(strcmp("/danzar3", cmdtext, true) == 0){ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.1,7,5,1,1,1);return 1;}
if(strcmp("/danzar4", cmdtext, true) == 0){ApplyAnimation(playerid,"DANCING","DAN_Left_A",4.1,7,5,1,1,1);return 1;}
if(strcmp("/danzar5", cmdtext, true) == 0){ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.1,7,5,1,1,1);return 1;}
if(strcmp("/danzar6", cmdtext, true) == 0){ApplyAnimation(playerid,"DANCING","DAN_Right_A",4.1,7,5,1,1,1);return 1;}
if(strcmp("/danzar7", cmdtext, true) == 0){ApplyAnimation(playerid,"DANCING","DAN_Up_A",4.1,7,5,1,1,1);return 1;}
if(strcmp("/danzar8", cmdtext, true) == 0){ApplyAnimation(playerid,"DANCING","dnce_M_a",4.1,7,5,1,1,1);return 1;}
if(strcmp("/danzar9", cmdtext, true) == 0){ApplyAnimation(playerid,"DANCING","dnce_M_b",4.1,7,5,1,1,1);return 1;}
if(strcmp("/danzar10", cmdtext, true) == 0){ApplyAnimation(playerid,"DANCING","dnce_M_c",4.1,7,5,1,1,1);return 1;}
if(strcmp("/danzar11", cmdtext, true) == 0){ApplyAnimation(playerid,"DANCING","dnce_M_d",4.1,7,5,1,1,1);return 1;}
if(strcmp("/danzar12", cmdtext, true) == 0){ApplyAnimation(playerid,"DANCING","dnce_M_e",4.1,7,5,1,1,1);return 1;}
//------------------------------------------------------------------------------
if(strcmp("/fumar2", cmdtext, true) == 0){ApplyAnimation(playerid,"SMOKING","F_smklean_loop", 4.0, 1, 0, 0, 0, 0);return 1;}
if(strcmp("/fumar3", cmdtext, true) == 0){ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop", 4.0, 1, 0, 0, 0, 0);return 1;}
if(strcmp("/asustado", cmdtext, true) == 0){ApplyAnimation(playerid,"PED","handscower",4.1,0,1,1,1,1);return 1;}
if(strcmp("/taxi", cmdtext, true) == 0){ApplyAnimation(playerid,"PED","IDLE_taxi",4.1,0,1,1,1,1);return 1;}
if(strcmp("/adolorido", cmdtext, true) == 0){ApplyAnimation(playerid,"PED","KO_shot_stom",4.1,0,1,1,1,1);return 1;}
if(strcmp("/seacabo", cmdtext, true) == 0){ApplyAnimation(playerid,"PED","Shove_Partial",4.1,0,1,1,1,1);return 1;}
if(strcmp("/correr", cmdtext, true) == 0){ApplyAnimation(playerid,"PED","sprint_civi",4.0,1,1,1,1,500);return 1;}
if(strcmp("/fuerza", cmdtext, true) == 0){ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.1,0,1,1,1,1);return 1;}
if(strcmp("/choriso", cmdtext, true) == 0){ApplyAnimation(playerid,"PED","WALK_gang1",4.0,1,1,1,1,500);return 1;}
if(strcmp("/tullio", cmdtext, true) == 0){ApplyAnimation(playerid,"PED","WALK_old",4.0,1,1,1,1,500);return 1;}
if(strcmp("/mujer", cmdtext, true) == 0){ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,1,1,1,1,500);return 1;}
if(strcmp("/asco", cmdtext, true) == 0){ApplyAnimation(playerid,"FOOD","EAT_Vomit_SK",4.1,0,1,1,1,1);SendClientMessage(playerid, 0x339900AA, "guacala");return 1;}
if(strcmp("/quepa", cmdtext, true) == 0){ApplyAnimation(playerid,"GANGS","hndshkea",4.1,0,1,1,1,1);SendClientMessage(playerid, 0x339900AA, "Que te pasa loco");return 1;}
if(strcmp("/wooo", cmdtext, true) == 0){ApplyAnimation(playerid,"ON_LOOKERS","shout_02",4.1,7,5,1,1,1);SendClientMessage(playerid, 0x339900AA, "wooooo");return 1;}
if(strcmp("/quepasa", cmdtext, true) == 0){ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,1,1,1,1);SendClientMessage(playerid, 0x339900AA, "que pasa!!");return 1;}
if(strcmp("/alsar", cmdtext, true) == 0){ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,1,1,1,1);SendClientMessage(playerid, 0x339900AA, "que pasa!!");return 1;}
if(strcmp("/cansado", cmdtext, true) == 0){ApplyAnimation(playerid,"PED","WOMAN_runfatold",4.1,7,5,1,1,1);SendClientMessage(playerid, 0x339900AA, "haaa");return 1;}
if(strcmp("/superpatada", cmdtext, true) == 0){ApplyAnimation(playerid,"FIGHT_C","FightC_3",4.1,0,1,1,1,1);SendClientMessage(playerid, 0x339900AA, "haaa");return 1;}
if(strcmp("/comodo", cmdtext, true) == 0){ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.1,0,1,1,1,1);SendClientMessage(playerid, 0x339900AA, "estas comodo");return 1;}

    if(strcmp(cmdtext, "/hablar", true) == 0){
    ApplyAnimation(playerid,"PED","IDLE_chat",4.1,7,5,1,1,1);
    return 1;
    }
//___________________________________________________________________________________________
/////////////////////////////////////////fin acciones cristo///////////////////////////////////
//===============================================================================
//================= hola y neones ===========
     if(!strcmp(cmdtext, "/hola", true) || !strcmp(cmdtext, "/Holas", true))
     {
        if(Saludos[playerid] == 1) return SendClientMessage(playerid,0xFF0000FF, "[ERROR]: {FFFFFF}Tienes que esperar 1 minuto para volver a saludar!");
        {
        new stringhola[500];
	    TextDrawHideForAll(SaludoTexto);
	    TextDrawSetString(SaludoTexto,"");
	    TextDrawHideForAll(Z1);
        Saludos[playerid] = 1;
        GetPlayerName(playerid, nombre1, sizeof(nombre1));
	    format(stringhola, sizeof(stringhola), "%s~n~~w~Saluda a todos - Hola",nombre1);
        TextDrawSetString(SaludoTexto,stringhola);
        TextDrawShowForAll(SaludoTexto);
        TextDrawShowForAll(Z1);
        SetTimer("EliminarSaludo",6000,0);
        SetTimerEx("UsodeComando", 100000, false, "i", playerid);
        PlayerPlaySound(playerid, 1058 , 0.0, 0.0, 0.0);
        }
	    return 1;
	 }

    if(!strcmp(cmdtext, "/Adios", true) || !strcmp(cmdtext, "/Bye", true))
    {
        if (Saludos[playerid] == 1) return SendClientMessage(playerid,0xFF0000FF, "[ERROR]: {FFFFFF}Tienes que esperar 1 minuto para volver a saludar!");
        {
        new stringadios[500];
	    TextDrawHideForAll(DespedidaTexto);
	    TextDrawSetString(DespedidaTexto,"");
	    TextDrawHideForAll(Z3);
        Saludos[playerid]=1;
        GetPlayerName(playerid, nombre1, sizeof(nombre1));
	    format(stringadios, sizeof(stringadios), "%s~n~Se despide de todos - ~w~adios",nombre1);
        TextDrawSetString(DespedidaTexto,stringadios);
        TextDrawShowForAll(DespedidaTexto);
        TextDrawShowForAll(Z3);
        SetTimer("TimerAdios",6000,0);
        SetTimerEx("UsodeComando", 100000, false, "i", playerid);
        SetTimerEx("KickearPlayer", 50, false, "i", playerid);
        PlayerPlaySound(playerid, 1058 , 0.0, 0.0, 0.0);
        }
		return 1;
	}

     if(!strcmp(cmdtext, "/lol", true))
	 {
	 if(ListoT(playerid)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Debes Esperar 30 Segundos Para Volver A Usar Este Comando !");
     new name[MAX_PLAYERS];
     GetPlayerName(playerid, name, sizeof(name));
     format(string2, sizeof(string2), "** El jugador %s [%d] se ríe, {FFFFFF}¡LOL!", name, playerid);
	 SendClientMessageToAll(0x00FF0000, string2);
     UsarCMDT[playerid]=GetTickCount();
	 return 1;
	 }
	 
     if(!strcmp(cmdtext, "/gay", true))
	 {
	 if(ListoT(playerid)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Debes Esperar 30 Segundos Para Volver A Usar Este Comando !");
	 new NewName[MAX_PLAYER_NAME];
     format(NewName,sizeof(NewName),"[GAY]%s", pName(playerid));
	 SetPlayerName(playerid,NewName);
	 SetPlayerHealth(playerid,1.0);
	 SetPlayerArmour(playerid,0.0);
	 ResetPlayerWeapons(playerid);
	 GivePlayerWeapon(playerid,12,1);
	 SetPlayerSkin(playerid, 246);
	 SetPlayerColor(playerid,COLOR_PINK);
	 SetPlayerWeather(playerid,19);
	 GivePlayerMoney(playerid, -1000);
	 SetPlayerWantedLevel(playerid,6);
     format(string2, sizeof(string2), "{00FF00}[Informe del día]: {FE2E9A}El user {FFFFFF}%s {FE2E9A}salió del closet y se Declara Reyna Gay del Server! o.o", NewName);
	 SendClientMessageToAll(0x00FF0000, string2);
     SetPlayerAttachedObject( playerid, 0, 19086, 1, -0.607977, 0.066747, 0.039284, 269.240936, 320.122253, 0.000000, 1.000000, 1.000000, 1.000000 ); // minigun - LA MIA MINIGUN PENE
     GameTextForPlayer(playerid,"~y~]]~W~Que gay eres .-.~y~]]",2000,5);
     UsarCMDT[playerid]=GetTickCount();
	 return 1;
	 }

	if(strcmp(cmdtext, "/mono", true) == 0)
	{
	SetPlayerHealth(playerid, 0);
	ForceClassSelection(playerid);
	GameTextForPlayer(playerid,"~r~Ahora has ido en modo elegir skin~n~~w~puedes escoger otro skin",3000,3);
	return 1;
	}

		if(strcmp(cmdtext, "/amo_a_samir", true) == 0) {
	    if(ListoT(playerid)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Debes Esperar 30 Segundos Para Volver A Usar Este Comando !");
 		{
		new mensajes=random(6);
    	if(mensajes == 0) {format(string2, sizeof(string2), "%s ama a [PFP]Scarface(Jefe) y [PFP]Scarface(Jefe) dice: a huevo cabron", pname);}
    	if(mensajes == 1) {format(string2, sizeof(string2), "%s ama a [PFP]Scarface(Jefe) y [PFP]Scarface(Jefe) dice: jajaja niña", pname);}
    	if(mensajes == 2) {format(string2, sizeof(string2), "%s ama a [PFP]Scarface(Jefe) y [PFP]Scarface(Jefe) dice: no mames wey", pname);}
    	if(mensajes == 3) {format(string2, sizeof(string2), "%s ama a [PFP]Scarface(Jefe) y [PFP]Scarface(Jefe) dice: jotito xD", pname);}
    	if(mensajes == 4) {format(string2, sizeof(string2), "%s ama a [PFP]Scarface(Jefe) y [PFP]Scarface(Jefe) dice: we que gay lol", pname);}
    	if(mensajes == 5) {format(string2, sizeof(string2), "%s ama a [PFP]Scarface(Jefe) y [PFP]Scarface(Jefe) dice: No te voy a dar admi .-.", pname);}
        SendClientMessageToAll(COLOR_AMARILLO, string2);
		}
		UsarCMDT[playerid]=GetTickCount();
        return 1;
        }

		if(strcmp(cmdtext, "/amo_a_carlosxp", true) == 0) {
        if(ListoT(playerid)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Debes Esperar 30 Segundos Para Volver A Usar Este Comando !");
        {
    	new mensajes=random(6);
	    if(mensajes == 0) {format(string2, sizeof(string2), "** %s ama a Carlosxp y Carlosxp le dice: Emmm ¿intento de admin?", pname);}
    	if(mensajes == 1) {format(string2, sizeof(string2), "** %s ama a Carlosxp y Carlosxp le dice: Wut, /gay.", pname);}
    	if(mensajes == 2) {format(string2, sizeof(string2), "** %s ama a Carlosxp y Carlosxp le dice: Creo que ya me voy.", pname);}
    	if(mensajes == 3) {format(string2, sizeof(string2), "** %s ama a Carlosxp y Carlosxp le dice: Já, gayyyy!.", pname);}
    	if(mensajes == 4) {format(string2, sizeof(string2), "** %s ama a Carlosxp y Carlosxp le dice: :0 e-e  :P D: ¬¬", pname);}
    	if(mensajes == 5) {format(string2, sizeof(string2), "** %s ama a Carlosxp y Carlosxp le dice: Mi mamá me está llamando, nos vemos.", pname);}
        SendClientMessageToAll(COLOR_AMARILLO, string2);
		}
		UsarCMDT[playerid]=GetTickCount();
        return 1;
    	}
    	
        if(strcmp(cmdtext, "/amo_a_francisco", true) == 0) {
        if(ListoT(playerid)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Debes Esperar 30 Segundos Para Volver A Usar Este Comando !");
     	{
    	new mensajes=random(6);
	    if(mensajes == 0) {format(string2, sizeof(string2), "** %s ama a Sr.[F]ran y Sr.[F]ran le dice: GAY E-E", pname);}
    	if(mensajes == 1) {format(string2, sizeof(string2), "** %s ama a Sr.[F]ran y Sr.[F]ran le dice: Jajaja puto xd", pname);}
    	if(mensajes == 2) {format(string2, sizeof(string2), "** %s ama a Sr.[F]ran y Sr.[F]ran le dice: Jajaja que gente 7u7.", pname);}
    	if(mensajes == 3) {format(string2, sizeof(string2), "** %s ama a Sr.[F]ran y Sr.[F]ran le dice: Usa /gay, te queda bien.", pname);}
    	if(mensajes == 4) {format(string2, sizeof(string2), "** %s ama a Sr.[F]ran y Sr.[F]ran le dice: Ya tengo novia ¬¬", pname);}
    	if(mensajes == 5) {format(string2, sizeof(string2), "** %s ama a Sr.[F]ran y Sr.[F]ran le dice: Ahorita no joven.", pname);}
        SendClientMessageToAll(COLOR_AMARILLO, string2);
		}
		UsarCMDT[playerid]=GetTickCount();
        return 1;
    	}

    	if(strcmp(cmdtext, "/amo_al_server", true) == 0) {
        if(ListoT(playerid)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Debes Esperar 30 Segundos Para Volver A Usar Este Comando !");
     	{
    	new mensajes=random(6);
	    if(mensajes == 0) {format(string2, sizeof(string2), "%s ama a Revolucion Latina y Revolucion Latina dice: Mamame El Host CTM c:", pname);}
    	if(mensajes == 1) {format(string2, sizeof(string2), "%s ama a Revolucion Latina y Revolucion Latina dice: No pos me apago :v", pname);}
    	if(mensajes == 2) {format(string2, sizeof(string2), "%s ama a Revolucion Latina y Revolucion Latina dice: Muy gay te baneo :P", pname);}
    	if(mensajes == 3) {format(string2, sizeof(string2), "%s ama a Revolucion Latina y Revolucion Latina dice: Le dire al dueño .l.", pname);}
    	if(mensajes == 4) {format(string2, sizeof(string2), "%s ama a Revolucion Latina y Revolucion Latina dice: lal pos te muteo asi te callas", pname);}
    	if(mensajes == 5) {format(string2, sizeof(string2), "%s ama a Revolucion Latina y Revolucion Latina dice: Te daria admin.. pero no puedo Dx", pname);}
        SendClientMessageToAll(COLOR_AMARILLO, string2);
		}
		UsarCMDT[playerid]=GetTickCount();
        return 1;
    	}
   /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    if(strcmp("/neonazul", cmdtext, true, 10) == 0)
    {
    if(PlayerInfoH[playerid][Neon] == 0)
    {
    if(IsPlayerInAnyVehicle(playerid))
    {
    if(IsPlayerInInvalidNeonVehicle(playerid,GetPlayerVehicleID(playerid)))
    {
    SendClientMessage(playerid,Rojo,"[ERROR]: {FFFFFF}A Este auto No Se Le Puede Agregar Neon.");
    return 1;
    }
    SetPVarInt(playerid, "neon", 1),
    SetPVarInt(playerid, "neon6", 1);
    SetPVarInt(playerid, "11", CreateObject(18648,0,0,0,0,0,0));
    SetPVarInt(playerid, "12", CreateObject(18648,0,0,0,0,0,0));
    SetPVarInt(playerid, "11a", CreateObject(18648,0,0,0,0,0,0));
    SetPVarInt(playerid, "12a", CreateObject(18648,0,0,0,0,0,0));
    AttachObjectToVehicle(GetPVarInt(playerid, "11"), GetPlayerVehicleID(playerid), -0.909999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
    AttachObjectToVehicle(GetPVarInt(playerid, "12"), GetPlayerVehicleID(playerid), 0.914999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
    AttachObjectToVehicle(GetPVarInt(playerid, "11a"), GetPlayerVehicleID(playerid), 0.034999, 2.225003, -0.629999, 0.000000, 0.000000, -88.589958);
    AttachObjectToVehicle(GetPVarInt(playerid, "12a"), GetPlayerVehicleID(playerid), 0.034999, -2.034998, -0.629999, 0.000000, 0.000000, -88.589958);
    PlayerInfoH[playerid][Neon] = 1;
    PlayerInfoH[playerid][Lol] = 1;

    return SendClientMessage(playerid,Verde, "[INFO]: Has agregado a tu auto tubos de neon color azul");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Nesesitas estar en un auto para agregar neones");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Quita el neon actual para agregar otro");
    }
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    if(strcmp("/neonverde", cmdtext, true, 10) == 0)
    {
    if(PlayerInfoH[playerid][Neon] == 0)
    {
    if(IsPlayerInAnyVehicle(playerid))
    {
    if(IsPlayerInInvalidNeonVehicle(playerid,GetPlayerVehicleID(playerid)))
    {
    SendClientMessage(playerid,Rojo,"[ERROR]: {FFFFFF}A Este auto No Se Le Puede Agregar Neon.");
    return 1;
    }
    SetPVarInt(playerid, "neon", 1),
    SetPVarInt(playerid, "neon6", 1);
    SetPVarInt(playerid, "11", CreateObject(18649,0,0,0,0,0,0));
    SetPVarInt(playerid, "12", CreateObject(18649,0,0,0,0,0,0));
    SetPVarInt(playerid, "11a", CreateObject(18649,0,0,0,0,0,0));
    SetPVarInt(playerid, "12a", CreateObject(18649,0,0,0,0,0,0));
    AttachObjectToVehicle(GetPVarInt(playerid, "11"), GetPlayerVehicleID(playerid), -0.909999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
    AttachObjectToVehicle(GetPVarInt(playerid, "12"), GetPlayerVehicleID(playerid), 0.914999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
    AttachObjectToVehicle(GetPVarInt(playerid, "11a"), GetPlayerVehicleID(playerid), 0.034999, 2.225003, -0.629999, 0.000000, 0.000000, -88.589958);
    AttachObjectToVehicle(GetPVarInt(playerid, "12a"), GetPlayerVehicleID(playerid), 0.034999, -2.034998, -0.629999, 0.000000, 0.000000, -88.589958);
    PlayerInfoH[playerid][Neon] = 1;
    PlayerInfoH[playerid][Lol] = 1;

    return SendClientMessage(playerid,Verde, "[INFO]: Has agregado a tu auto tubos de neon color verde");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Nesesitas estar en un auto para agregar neones");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Quita el neon actual para agregar otro");
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    if(strcmp("/neonamarillo", cmdtext, true, 10) == 0)
    {
    if(PlayerInfoH[playerid][Neon] == 0)
    {
    if(IsPlayerInAnyVehicle(playerid))
    {
    if(IsPlayerInInvalidNeonVehicle(playerid,GetPlayerVehicleID(playerid)))
    {
    SendClientMessage(playerid,Rojo,"[ERROR]: {FFFFFF}A Este auto No Se Le Puede Agregar Neon.");
    return 1;
    }
    SetPVarInt(playerid, "neon", 1),
    SetPVarInt(playerid, "neon6", 1);
    SetPVarInt(playerid, "11", CreateObject(18650,0,0,0,0,0,0));
    SetPVarInt(playerid, "12", CreateObject(18650,0,0,0,0,0,0));
    SetPVarInt(playerid, "11a", CreateObject(18650,0,0,0,0,0,0));
    SetPVarInt(playerid, "12a", CreateObject(18650,0,0,0,0,0,0));
    AttachObjectToVehicle(GetPVarInt(playerid, "11"), GetPlayerVehicleID(playerid), -0.909999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
    AttachObjectToVehicle(GetPVarInt(playerid, "12"), GetPlayerVehicleID(playerid), 0.914999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
    AttachObjectToVehicle(GetPVarInt(playerid, "11a"), GetPlayerVehicleID(playerid), 0.034999, 2.225003, -0.629999, 0.000000, 0.000000, -88.589958);
    AttachObjectToVehicle(GetPVarInt(playerid, "12a"), GetPlayerVehicleID(playerid), 0.034999, -2.034998, -0.629999, 0.000000, 0.000000, -88.589958);
    PlayerInfoH[playerid][Neon] = 1;
    PlayerInfoH[playerid][Lol] = 1;

    return SendClientMessage(playerid,Verde, "[INFO]: Has agregado a tu auto tubos de neon color amarillo");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Nesesitas estar en un auto para agregar neones");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Quita el neon actual para agregar otro");
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    if(strcmp("/neonblanco", cmdtext, true, 10) == 0)
    {
    if(PlayerInfoH[playerid][Neon] == 0)
    {
    if(IsPlayerInAnyVehicle(playerid))
    {
    if(IsPlayerInInvalidNeonVehicle(playerid,GetPlayerVehicleID(playerid)))
    {
    SendClientMessage(playerid,Rojo,"[ERROR]: {FFFFFF}A Este auto No Se Le Puede Agregar Neon.");
    return 1;
    }
    SetPVarInt(playerid, "neon", 1),
    SetPVarInt(playerid, "neon6", 1);
    SetPVarInt(playerid, "11", CreateObject(18652,0,0,0,0,0,0));
    SetPVarInt(playerid, "12", CreateObject(18652,0,0,0,0,0,0));
    SetPVarInt(playerid, "11a", CreateObject(18652,0,0,0,0,0,0));
    SetPVarInt(playerid, "12a", CreateObject(18652,0,0,0,0,0,0));
    AttachObjectToVehicle(GetPVarInt(playerid, "11"), GetPlayerVehicleID(playerid), -0.909999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
    AttachObjectToVehicle(GetPVarInt(playerid, "12"), GetPlayerVehicleID(playerid), 0.914999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
    AttachObjectToVehicle(GetPVarInt(playerid, "11a"), GetPlayerVehicleID(playerid), 0.034999, 2.225003, -0.629999, 0.000000, 0.000000, -88.589958);
    AttachObjectToVehicle(GetPVarInt(playerid, "12a"), GetPlayerVehicleID(playerid), 0.034999, -2.034998, -0.629999, 0.000000, 0.000000, -88.589958);
    PlayerInfoH[playerid][Neon] = 1;
    PlayerInfoH[playerid][Lol] = 1;
    //
    return SendClientMessage(playerid,Verde, "[INFO]: Has agregado a tu auto tubos de neon color blanco");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Nesesitas estar en un auto para agregar neones");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Quita el neon actual para agregar otro");
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    if(strcmp("/neonrosa", cmdtext, true, 10) == 0)
    {
    if(PlayerInfoH[playerid][Neon] == 0)
    {
    if(IsPlayerInAnyVehicle(playerid))
    {
    if(IsPlayerInInvalidNeonVehicle(playerid,GetPlayerVehicleID(playerid)))
    {
    SendClientMessage(playerid,Rojo,"[ERROR]: {FFFFFF}A Este auto No Se Le Puede Agregar Neon.");
    return 1;
    }
    SetPVarInt(playerid, "neon", 1),
    SetPVarInt(playerid, "neon6", 1);
    SetPVarInt(playerid, "11", CreateObject(18651,0,0,0,0,0,0));
    SetPVarInt(playerid, "12", CreateObject(18651,0,0,0,0,0,0));
    SetPVarInt(playerid, "11a", CreateObject(18651,0,0,0,0,0,0));
    SetPVarInt(playerid, "12a", CreateObject(18651,0,0,0,0,0,0));
    AttachObjectToVehicle(GetPVarInt(playerid, "11"), GetPlayerVehicleID(playerid), -0.909999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
    AttachObjectToVehicle(GetPVarInt(playerid, "12"), GetPlayerVehicleID(playerid), 0.914999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
    AttachObjectToVehicle(GetPVarInt(playerid, "11a"), GetPlayerVehicleID(playerid), 0.034999, 2.225003, -0.629999, 0.000000, 0.000000, -88.589958);
    AttachObjectToVehicle(GetPVarInt(playerid, "12a"), GetPlayerVehicleID(playerid), 0.034999, -2.034998, -0.629999, 0.000000, 0.000000, -88.589958);
    PlayerInfoH[playerid][Neon] = 1;
    PlayerInfoH[playerid][Lol] = 1;
    //
    return SendClientMessage(playerid,Verde, "[INFO]: Has agregado a tu auto tubos de neon color rosa");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Nesesitas estar en un auto para agregar neones");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Quita el neon actual para agregar otro");
    }
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    if(strcmp("/neonrojo", cmdtext, true, 10) == 0)
    {
    if(PlayerInfoH[playerid][Neon] == 0)
    {
    if(IsPlayerInAnyVehicle(playerid))
    {
    if(IsPlayerInInvalidNeonVehicle(playerid,GetPlayerVehicleID(playerid)))
    {
    SendClientMessage(playerid,Rojo,"[ERROR]: {FFFFFF}A Este auto No Se Le Puede Agregar Neon.");
    return 1;
    }
    SetPVarInt(playerid, "neon", 1),
    SetPVarInt(playerid, "neon6", 1);
    SetPVarInt(playerid, "11", CreateObject(18647,0,0,0,0,0,0));
    SetPVarInt(playerid, "12", CreateObject(18647,0,0,0,0,0,0));
    SetPVarInt(playerid, "11a", CreateObject(18647,0,0,0,0,0,0));
    SetPVarInt(playerid, "12a", CreateObject(18647,0,0,0,0,0,0));
    AttachObjectToVehicle(GetPVarInt(playerid, "11"), GetPlayerVehicleID(playerid), -0.909999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
    AttachObjectToVehicle(GetPVarInt(playerid, "12"), GetPlayerVehicleID(playerid), 0.914999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
    AttachObjectToVehicle(GetPVarInt(playerid, "11a"), GetPlayerVehicleID(playerid), 0.034999, 2.225003, -0.629999, 0.000000, 0.000000, -88.589958);
    AttachObjectToVehicle(GetPVarInt(playerid, "12a"), GetPlayerVehicleID(playerid), 0.034999, -2.034998, -0.629999, 0.000000, 0.000000, -88.589958);
    PlayerInfoH[playerid][Neon] = 1;
    PlayerInfoH[playerid][Lol] = 1;

    return SendClientMessage(playerid,Verde, "[INFO]: Has agregado a tu auto tubos de neon color rojo");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Nesesitas estar en un auto para agregar neones");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Quita el neon actual para agregar otro");
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    if(strcmp("/luzazul", cmdtext, true, 10) == 0)
    {
    if(PlayerInfoH[playerid][Luz] == 0)
    {
    if(IsPlayerInAnyVehicle(playerid))
    {
    if(IsPlayerInInvalidLuzVehicle(playerid,GetPlayerVehicleID(playerid)))
    {
    SendClientMessage(playerid,Rojo,"[ERROR]: {FFFFFF}A este vehículo no le puedes agregar luces de color");
    return 1;
    }
    SetPVarInt(playerid, "luzazul1", 1);
    SetPVarInt(playerid, "luzazul2", 1);
    SetPVarInt(playerid, "azul1", CreateObject(19298,0,0,0,0,0,0));
    SetPVarInt(playerid, "azul2", CreateObject(19298,0,0,0,0,0,0));
    AttachObjectToVehicle(GetPVarInt(playerid, "azul1"), GetPlayerVehicleID(playerid), 0.679999, 3.315028, -0.234999, 0.000000, 0.000000, -88.589958);
    AttachObjectToVehicle(GetPVarInt(playerid, "azul2"), GetPlayerVehicleID(playerid), -0.729999, 3.315028, -0.234999, 0.000000, 0.000000, -88.589958);
    PlayerInfoH[playerid][Luz] = 1;
    PlayerInfoH[playerid][Lol] = 1;
    return SendClientMessage(playerid,Verde, "[INFO]: Has agregado a tu auto luces de color azul");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Nesesitas estar en un auto para agregar luces de color");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Quita la luz actual para agregar otra");
    }
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    if(strcmp("/luzverde", cmdtext, true, 10) == 0)
    {
    if(PlayerInfoH[playerid][Luz] == 0)
    {
    if(IsPlayerInAnyVehicle(playerid))
    {
    if(IsPlayerInInvalidLuzVehicle(playerid,GetPlayerVehicleID(playerid)))
    {
    SendClientMessage(playerid,Rojo,"[ERROR]: {FFFFFF}A este vehículo no le puedes agregar luces de color");
    return 1;
    }
    SetPVarInt(playerid, "luzazul1", 1);
    SetPVarInt(playerid, "luzazul2", 1);
    SetPVarInt(playerid, "azul1", CreateObject(19297,0,0,0,0,0,0));
    SetPVarInt(playerid, "azul2", CreateObject(19297,0,0,0,0,0,0));
    AttachObjectToVehicle(GetPVarInt(playerid, "azul1"), GetPlayerVehicleID(playerid), 0.679999, 3.315028, -0.234999, 0.000000, 0.000000, -88.589958);
    AttachObjectToVehicle(GetPVarInt(playerid, "azul2"), GetPlayerVehicleID(playerid), -0.729999, 3.315028, -0.234999, 0.000000, 0.000000, -88.589958);
    PlayerInfoH[playerid][Luz] = 1;
    PlayerInfoH[playerid][Lol] = 1;
    return SendClientMessage(playerid,Verde, "[INFO]: Has agregado a tu auto luces de color verde");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Nesesitas estar en un auto para agregar luces de color");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Quita la luz actual para agregar otra");
    }
    if(strcmp("/luzroja", cmdtext, true, 10) == 0)
    {
   if(PlayerInfoH[playerid][Luz] == 0)
    {
    if(IsPlayerInAnyVehicle(playerid))
    {
    if(IsPlayerInInvalidLuzVehicle(playerid,GetPlayerVehicleID(playerid)))
    {
    SendClientMessage(playerid,Rojo,"[ERROR]: {FFFFFF}A este vehículo no le puedes agregar luces de color");
    return 1;
    }
    SetPVarInt(playerid, "luzazul1", 1);
    SetPVarInt(playerid, "luzazul2", 1);
    SetPVarInt(playerid, "azul1", CreateObject(19296,0,0,0,0,0,0));
    SetPVarInt(playerid, "azul2", CreateObject(19296,0,0,0,0,0,0));
    AttachObjectToVehicle(GetPVarInt(playerid, "azul1"), GetPlayerVehicleID(playerid), 0.679999, 3.315028, -0.234999, 0.000000, 0.000000, -88.589958);
    AttachObjectToVehicle(GetPVarInt(playerid, "azul2"), GetPlayerVehicleID(playerid), -0.729999, 3.315028, -0.234999, 0.000000, 0.000000, -88.589958);
    PlayerInfoH[playerid][Luz] = 1;
    PlayerInfoH[playerid][Lol] = 1;
    return SendClientMessage(playerid,Verde, "[INFO]: Has agregado a tu auto luces de color roja");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Nesesitas estar en un auto para agregar luces de color");
    }
   return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Quita la luz actual para agregar otra");
    }
    if(strcmp("/luzblanca", cmdtext, true, 10) == 0)
    {
    if(PlayerInfoH[playerid][Luz] == 0)
    {
    if(IsPlayerInAnyVehicle(playerid))
    {
    if(IsPlayerInInvalidLuzVehicle(playerid,GetPlayerVehicleID(playerid)))
    {
    SendClientMessage(playerid,Rojo,"[ERROR]: {FFFFFF}A este vehículo no le puedes agregar luces de color");
    return 1;
    }
    SetPVarInt(playerid, "luzazul1", 1);
    SetPVarInt(playerid, "luzazul2", 1);
    SetPVarInt(playerid, "azul1", CreateObject(19295,0,0,0,0,0,0));
    SetPVarInt(playerid, "azul2", CreateObject(19295,0,0,0,0,0,0));
    AttachObjectToVehicle(GetPVarInt(playerid, "azul1"), GetPlayerVehicleID(playerid), 0.679999, 3.315028, -0.234999, 0.000000, 0.000000, -88.589958);
    AttachObjectToVehicle(GetPVarInt(playerid, "azul2"), GetPlayerVehicleID(playerid), -0.729999, 3.315028, -0.234999, 0.000000, 0.000000, -88.589958);
    PlayerInfoH[playerid][Luz] = 1;
    PlayerInfoH[playerid][Lol] = 1;
    return SendClientMessage(playerid,Verde, "[INFO]: Has agregado a tu auto luces de color blanco");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Nesesitas estar en un auto para agregar luces de color");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}Quita la luz actual para agregar otra");
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    if(strcmp("/quitarneon", cmdtext, true, 10) == 0)
    {
    if(PlayerInfoH[playerid][Neon] == 1)
    {
    DestroyObject(GetPVarInt(playerid, "11"));
    DestroyObject(GetPVarInt(playerid, "12"));
    DeletePVar(playerid, "neon");
    DeletePVar(playerid, "neon");
    DeletePVar(playerid, "neon6");
    DeletePVar(playerid, "neon6");
    DestroyObject(GetPVarInt(playerid, "11a"));
    DestroyObject(GetPVarInt(playerid, "12a"));
    PlayerInfoH[playerid][Neon] = 0;
    PlayerInfoH[playerid][Lol] = 0;
    return SendClientMessage(playerid,Rojo, "[INFO]: Has removido los tubos de neon de tu auto");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}No has agregado ningun neon");
    }
    ////////////////////////////////////////////////////////////
    if(strcmp("/quitarluz", cmdtext, true, 10) == 0)
    {
    if(PlayerInfoH[playerid][Luz] == 1)
    {
    DeletePVar(playerid, "luzazul1");
    DeletePVar(playerid, "luzazul2");
    DestroyObject(GetPVarInt(playerid, "azul1"));
    DestroyObject(GetPVarInt(playerid, "azul2"));
    PlayerInfoH[playerid][Luz] = 0;
    PlayerInfoH[playerid][Lol] = 0;
    return SendClientMessage(playerid,Rojo, "[INFO]: Has removido las luces de color de tu auto");
    }
    return SendClientMessage(playerid,Rojo, "[ERROR]: {FFFFFF}No has agregado ninguna luz de color a tu auto");
    }
    
    
    if(strcmp("/noche", cmdtext, true, 10) == 0)
    {
    SetPlayerTime(playerid,0,0);
    SendClientMessage(playerid,Azul, "[INFO]: Has cambiado el tiempo de Noche!");
    return 1;
    }
    
    if(strcmp("/noche", cmdtext, true, 10) == 0)
    {
    SetPlayerTime(playerid,0,0);
    SendClientMessage(playerid,Azul, "[INFO]: Has cambiado el tiempo de Noche!");
    return 1;
    }
    if(strcmp("/dia", cmdtext, true, 10) == 0 || strcmp(cmdtext, "/día", true, 10) == 0)
    {
	SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}En el mes de Hallowen no púedes poner el tiempo de día.");
    /*SetPlayerTime(playerid,0,0);
    SendClientMessage(playerid,Azul, "[INFO]: Has cambiado el tiempo de Día!");*/
    return 1;
    }

	new cmd[256], string[128], tmp[256], idx;
	cmd = strtok(cmdtext, idx);
 		dcmd(register,8,cmdtext);
 		dcmd(registrarme,11,cmdtext);
  		dcmd(registro,8,cmdtext);
 		dcmd(login,5,cmdtext);
	  	dcmd(nuevapass,9,cmdtext);
	  	dcmd(setpass,7,cmdtext);
	  	#if defined USE_STATS
			dcmd(stats,5,cmdtext);
			dcmd(pais,4,cmdtext);
			dcmd(resetstats,10,cmdtext);
			dcmd(resettime,9,cmdtext);
			dcmd(resetnivel,10,cmdtext);
		#endif

	dcmd(afks,4,cmdtext);
	dcmd(eventos,7,cmdtext);
	dcmd(pregunta,8,cmdtext);
	dcmd(traeradmins,11,cmdtext);
	dcmd(darnitro,8,cmdtext);
	dcmd(responder,9,cmdtext);
	dcmd(reportar,8,cmdtext);
	dcmd(re,2,cmdtext);
	dcmd(report,6,cmdtext);
	dcmd(solicitar,9,cmdtext);
	dcmd(reportes,8,cmdtext);
	dcmd(asignardj,9,cmdtext);

    //================ [ Read Comamands ] ===========================//
	if(ServerInfo[ReadCmds] == 1)
	{
		format(string, sizeof(string), "» Cmd: %s [%d] %s", pName(playerid),playerid,cmdtext); SaveToFile("TypedCommandsLog",string);
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				if( (PlayerInfo[i][pAdmin] > PlayerInfo[playerid][pAdmin]) && (PlayerInfo[i][pAdmin] > 2) && (i != playerid) ) {
					SendClientMessage(i, grey, string);
				}
			}
		}
	}
    // permitido estando en carrera
	dcmd(announce,8,cmdtext);
    dcmd(announce2,9,cmdtext);
    dcmd(anunciovip,10,cmdtext);
    dcmd(asay,4,cmdtext);
    dcmd(vsay,4,cmdtext);
   	dcmd(vchat,5,cmdtext);
	dcmd(cchat,5,cmdtext);
	dcmd(rchat,5,cmdtext);
	dcmd(sachat,6,cmdtext);
	dcmd(fchat,5,cmdtext);
	dcmd(cevento,7,cmdtext);
    dcmd(schat,5,cmdtext);
    dcmd(decir,5,cmdtext);
    dcmd(spawn,5,cmdtext);
    dcmd(carcolor,8,cmdtext);
  	//dcmd(balason,7,cmdtext);
	//dcmd(balasoff,8,cmdtext);
	dcmd(startrace,9,cmdtext);
  	dcmd(unirme,6,cmdtext);
  	dcmd(salir,5,cmdtext);
  	dcmd(stoprace,8,cmdtext);
  	dcmd(racenames,9,cmdtext);
  	dcmd(flip,4,cmdtext);
  	dcmd(s,1,cmdtext);
	dcmd(g,1,cmdtext);
	if(Joined[playerid] == true) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}No puedes usar comandos estando en la Carrera!");
    dcmd(duelo,5,cmdtext);
	dcmd(noduelo,7,cmdtext);
   	dcmd(siduelo,7,cmdtext);


	// Drogas
    dcmd(drogas,6,cmdtext);
    dcmd(marihuana,9,cmdtext);
    dcmd(heroina,7,cmdtext);
    dcmd(cocaina,7,cmdtext);
    dcmd(extasis,7,cmdtext);
    dcmd(lsd,3,cmdtext);
    dcmd(metanfetamina,13,cmdtext);

	//-= Spectate Commands =-//
	#if defined ENABLE_SPEC
	dcmd(spec,4,cmdtext);
	dcmd(specoff,7,cmdtext);
	dcmd(vspec,5,cmdtext);
	dcmd(vspecoff,8,cmdtext);
	#endif

	//-= Chat Commands =-//
	dcmd(cadmin,6,cmdtext);
	dcmd(ecadmin,7,cmdtext);
	dcmd(schat,5,cmdtext);
	dcmd(sconteo,7,cmdtext);
	dcmd(borrarchat,10,cmdtext);
	dcmd(bc,2,cmdtext);
	dcmd(borrartodochat,14,cmdtext);
	dcmd(btc,3,cmdtext);
	dcmd(pm,2,cmdtext);
	dcmd(mpa,3,cmdtext);
	dcmd(sck,3,cmdtext);
	dcmd(sclan,5,cmdtext);

	//-= Admin special =-//
	dcmd(guardarskin,11,cmdtext);
	dcmd(usarskin,8,cmdtext);
	dcmd(nousarskin,10,cmdtext);
	
	//-= Vehicle Commands =-//
	dcmd(bauto,5,cmdtext);
	dcmd(lockcar,7,cmdtext);
	dcmd(unlockcar,9,cmdtext);
	dcmd(carvida,7,cmdtext);
	dcmd(car,3,cmdtext);
	dcmd(vcar,4,cmdtext);
	dcmd(vtransf,7,cmdtext);
//	dcmd(vtransf2,8,cmdtext);
//	dcmd(vtransf3,8,cmdtext);
//	dcmd(vtransf4,8,cmdtext);
//	dcmd(vtransf5,8,cmdtext);
    //dcmd(repair,6,cmdtext);
    dcmd(ltune,5,cmdtext);
    dcmd(lauto,5,cmdtext);
    dcmd(lmoto,5,cmdtext);
    dcmd(lheli,5,cmdtext);
	dcmd(lbote,5,cmdtext);
    //dcmd(lnos,4,cmdtext);
    dcmd(lavion,6,cmdtext);
    dcmd(ltc,3,cmdtext);
    dcmd(fix,3,cmdtext);
	dcmd(porno,5,cmdtext);
    //-= Playerid Commands =-//
    //dcmd(anticheat,9,cmdtext);
    dcmd(svotekick,9,cmdtext);
    //dcmd(svwarn,6,cmdtext);
    dcmd(cvotekick,9,cmdtext);
    dcmd(votekick,8,cmdtext);
    dcmd(vote,4,cmdtext);
    dcmd(conteo,6,cmdtext);
    dcmd(rvida,5,cmdtext);
    dcmd(rchaleco,8,cmdtext);
    dcmd(crash,5,cmdtext);
	dcmd(ip,2,cmdtext);
	dcmd(force,5,cmdtext);
	dcmd(burn,4,cmdtext);
	dcmd(spawnplayer,11,cmdtext);
	dcmd(desarmar,8,cmdtext);
	dcmd(sacar,5,cmdtext);
	dcmd(redinero,8,cmdtext);
	dcmd(sredinero,9,cmdtext);
	dcmd(setmundo,8,cmdtext);
	dcmd(setinterior,11,cmdtext);
    dcmd(ubound,6,cmdtext);
	dcmd(setbusqueda,11,cmdtext);
	dcmd(setcolor,8,cmdtext);
	dcmd(setname,7,cmdtext);
	dcmd(setskin,7,cmdtext);
	dcmd(setscore,8,cmdtext);
//	dcmd(setdueloslose,13,cmdtext);
	dcmd(darscore,8,cmdtext);
	dcmd(setmuerte,9,cmdtext);
	dcmd(darmuerte,9,cmdtext);
	dcmd(setex,5,cmdtext);
	dcmd(setnivel,8,cmdtext);
	dcmd(darnivel,8,cmdtext);
	dcmd(recompensa,10,cmdtext);
	dcmd(eusers,6,cmdtext);
	dcmd(recompensas,11,cmdtext);
	dcmd(usersurvival,12,cmdtext);
	dcmd(userop7,7,cmdtext);
	dcmd(userhg,6,cmdtext);
	dcmd(userswat,8,cmdtext);
	dcmd(usernotemojes,13,cmdtext);
	dcmd(setcash,7,cmdtext);
	dcmd(darax,5,cmdtext);
	dcmd(setvida,7,cmdtext);
	dcmd(setchaleco,10,cmdtext);
	dcmd(dararma,7,cmdtext);
	dcmd(darcash,7,cmdtext);
	dcmd(warp,4,cmdtext);
	dcmd(teleplayer,10,cmdtext);
	dcmd(goto,4,cmdtext);
	dcmd(vgoto,5,cmdtext);
    dcmd(get,3,cmdtext);
    dcmd(setvip,6,cmdtext);
    dcmd(darlevel,8,cmdtext);
    dcmd(settiempo,9,cmdtext);
    dcmd(tnegra,6,cmdtext);
    dcmd(darleveltemp,12,cmdtext);
    dcmd(fu,2,cmdtext);
    //dcmd(vwarn,5,cmdtext);
    //dcmd(vquitarwarn,11,cmdtext);
    dcmd(warn,4,cmdtext);
    dcmd(quitarwarn,10,cmdtext);
    dcmd(tamarilla,9,cmdtext);
    dcmd(quitartamarilla,15,cmdtext);
    dcmd(kick,4,cmdtext);
    dcmd(setkicks,8,cmdtext);
    dcmd(ban,3,cmdtext);
    //dcmd(relogear,8,cmdtext);
    dcmd(banip,5,cmdtext);
    dcmd(unbanip,7,cmdtext);

    //dcmd(test,4,cmdtext);
    //dcmd(untest,6,cmdtext);

    dcmd(rban,4,cmdtext);
    dcmd(slap,4,cmdtext);
    dcmd(explotar,8,cmdtext);
    dcmd(jail,4,cmdtext);
    dcmd(unjail,6,cmdtext);
    dcmd(encarcelados,12,cmdtext);
    dcmd(respawncars,11,cmdtext);
    dcmd(congelar,8,cmdtext);
    dcmd(descongelar,11,cmdtext);
    dcmd(congelados,10,cmdtext);
    dcmd(mute,4,cmdtext);
    dcmd(unmute,6,cmdtext);
    dcmd(muteados,8,cmdtext);
    dcmd(akill,5,cmdtext);
    dcmd(weaps,5,cmdtext);
    dcmd(screen,6,cmdtext);
    dcmd(vscreen,7,cmdtext);
    dcmd(lgoto,5,cmdtext);
    dcmd(aka,3,cmdtext);
    dcmd(adminreglas,11,cmdtext);
    dcmd(autosrc,7,cmdtext);
    dcmd(loquendo,8,cmdtext);
    dcmd(loquenda,8,cmdtext);

	//-= /All Commands =-//
    dcmd(getall,6,cmdtext);
	dcmd(vidaall,7,cmdtext);
	dcmd(chalecoall,10,cmdtext);
	dcmd(healall,7,cmdtext);
	dcmd(darallvida,10,cmdtext);
	dcmd(armourall,9,cmdtext);
	dcmd(darallchaleco,13,cmdtext);
	dcmd(muteall,7,cmdtext);
	dcmd(unmuteall,9,cmdtext);
	dcmd(killall,7,cmdtext);
	//dcmd(getall,6,cmdtext);
	dcmd(spawnall,8,cmdtext);
	dcmd(congelarall,11,cmdtext);
	dcmd(descongelarall,14,cmdtext);
	dcmd(explotarall,11,cmdtext);
	//dcmd(kickall,7,cmdtext);
	dcmd(slapall,7,cmdtext);
	dcmd(sacarall,8,cmdtext);
	dcmd(desarmarall,11,cmdtext);
	dcmd(setallskin,10,cmdtext);
    dcmd(setallbusqueda,14,cmdtext);
	dcmd(setallmundo,11,cmdtext);
	dcmd(setallscore,11,cmdtext);
	dcmd(darallscore,11,cmdtext);
	dcmd(setallnivel,11,cmdtext);
	dcmd(darallnivel,11,cmdtext);
	dcmd(setallcash,10,cmdtext);
	dcmd(darallcash,10,cmdtext);
	dcmd(darallarmas,11,cmdtext);

    //-= No params =-//
    dcmd(lammo,5,cmdtext);
    dcmd(god,3,cmdtext);
    dcmd(godcar,6,cmdtext);
    dcmd(vgod,4,cmdtext);
    dcmd(sgod,4,cmdtext);
    dcmd(die,3,cmdtext);
    dcmd(jetpack,7,cmdtext);
    dcmd(admins,6,cmdtext);
    dcmd(listavip,8,cmdtext);
    dcmd(vips,4,cmdtext);
    dcmd(zonavip2,8,cmdtext);
    dcmd(vflip,5,cmdtext);
    dcmd(esposar,7,cmdtext);
    dcmd(quitaresposas,13,cmdtext);
    dcmd(hide,4,cmdtext);
    dcmd(unhide,6,cmdtext);
    dcmd(luces,5,cmdtext);
    dcmd(neones,6,cmdtext);

	//-= Config =-//
    dcmd(disable,7,cmdtext);
    dcmd(enable,6,cmdtext);
    dcmd(setping,7,cmdtext);
	dcmd(setgravity,10,cmdtext);
    dcmd(uconfig,7,cmdtext);
    dcmd(lconfig,7,cmdtext);
    dcmd(forbidname,10,cmdtext);
    dcmd(forbidword,10,cmdtext);

	//-= Misc =-//
	dcmd(level1,6,cmdtext);
	dcmd(level2,6,cmdtext);
	dcmd(level3,6,cmdtext);
	dcmd(level4,6,cmdtext);
	dcmd(level5,6,cmdtext);
	dcmd(level6,6,cmdtext);
	dcmd(level7,6,cmdtext);
	dcmd(level8,6,cmdtext);
	dcmd(level9,6,cmdtext);
	dcmd(level10,7,cmdtext);
 	dcmd(lcredits,8,cmdtext);
 	dcmd(serverinfo,10,cmdtext);
    dcmd(getid,5,cmdtext);
	dcmd(getinfo,7,cmdtext);
    dcmd(laston,6,cmdtext);
    dcmd(lconteo,7,cmdtext);
	dcmd(password,8,cmdtext);
	dcmd(lockserver,10,cmdtext);
	dcmd(unlockserver,12,cmdtext);
    dcmd(adminarea,9,cmdtext);
    dcmd(zonavip,7,cmdtext);
    dcmd(ricos,5,cmdtext);
    dcmd(miniguns,8,cmdtext);
    dcmd(rockets,7,cmdtext);
    dcmd(botcheck,8,cmdtext);
    dcmd(pickup,6,cmdtext);
    dcmd(mover,5,cmdtext);
    dcmd(moverplayer,11,cmdtext);
    dcmd(bici,4,cmdtext);
    dcmd(vida,4,cmdtext);
    dcmd(chaleco,7,cmdtext);
    dcmd(vidaychaleco,12,cmdtext);
    dcmd(vjetpack,8,cmdtext);
    dcmd(invisible,9,cmdtext);
    dcmd(visible,7,cmdtext);
    dcmd(autostun,8,cmdtext);
    dcmd(unban,5,cmdtext);
    dcmd(nunban,6,cmdtext);
    dcmd(nban,4,cmdtext);
    dcmd(nombre,6,cmdtext);
    dcmd(snombre,7,cmdtext);

    #if defined ENABLE_FAKE_CMDS
	dcmd(fakedeath,9,cmdtext);
	dcmd(fakechat,8,cmdtext);
	dcmd(fakecmd,7,cmdtext);
	#endif

	//-= Menu Commands =-//
    #if defined USE_MENUS
    dcmd(lmenu,5,cmdtext);
    dcmd(ltele,5,cmdtext);
    dcmd(lvehicle,8,cmdtext);
    dcmd(lweapons,8,cmdtext);
    dcmd(lweather,8,cmdtext);
    dcmd(ltime,5,cmdtext);
    #endif

	if(strcmp(cmdtext, "/AyudaPropiedades", true)==0 || strcmp(cmdtext, "/PropiedadesAyuda", true)==0)
	{
		if(PlayerInfo[playerid][Nivel] >= 100) {
	    SendClientMessage(playerid, 0x6699FFAA, "{00FF00}|=========================================================|");
	    new str[128];
	    SendClientMessage(playerid, 0x6699FFAA, "Property-Related Cmds:");
	    #if ENABLE_LOGIN_SYSTEM == 1
	    format(str, 128, "{0ED59C}|-:-|{C50404}Error{0ED59C}|-:-|{098BEE}: No te encuentras registrado, usa /Registrar [Contraseña] (%s)", REGISTRAR_COMMAND);
	    SendClientMessage(playerid, 0x66CCFFAA, str);
	    format(str, 128, "{0ED59C}|-:-|{C50404}Error{0ED59C}|-:-|{098BEE}: No haz ingreaso a tú cuenta, usa /logear [Contraseña] (%s)", ENTRAR_COMMAND);
	    SendClientMessage(playerid, 0x66CCFFAA, str);
		#endif
	    SendClientMessage(playerid, 0x66CCFFAA, "/CPropiedad o /ComprarPropiedad ==>> Para comprar propiedades");
	    SendClientMessage(playerid, 0x66CCFFAA, "/VenderPropiedad o /VenderPropie  ==>> Para vender unas de tus propiedades");
	    SendClientMessage(playerid, 0x66CCFFAA, "/MisPropiedades o /MisPropie  ==>> Para ver tus propiedades");
	    if(PlayerInfo[playerid][pAdmin] >= 10)
	    {
		    SendClientMessage(playerid, 0xFF0000FF, "* {FFFFFF}Comandos Admins:");
	        SendClientMessage(playerid, 0x66CCFFAA, "/AdminVP {00FF00}= {FFFFFF}Vender una Propiedad sin ser el Dueño!");
	        SendClientMessage(playerid, 0x66CCFFAA, "/VenderTodasPropiedades {00FF00}= {FFFFFF}Vender Todas las Propiedades!");
		}
	    SendClientMessage(playerid, 0x6699FFAA, "{00FF00}|=========================================================|");
        } else return SendClientMessage(playerid,red,"{0ED59C}|-:-|{C50404}Error{0ED59C}|-:-|{098BEE}: ¡Se necesita 100 de nivel o más para usar el comando!.");
	    return 1;
	}

	if(strcmp(cmdtext, "/Cpropiedad", true)==0 || strcmp(cmdtext, "/ComprarPropiedad", true)==0)
	{
		if(PlayerInfo[playerid][Nivel] >=100)
		{
		    new str[128];
			#if ENABLE_LOGIN_SYSTEM == 1
			if(Logged[playerid] == 0)
			{
			    format(str, 128, "[ERROR]: Tienes que iniciar sesión para poder comprar o vender propiedades. Use: {FFFFFF}%s", ENTRAR_COMMAND);
				SendClientMessage(playerid, 0xFF0000AA, str);
				return 1;
			}
			#endif

			new propid = IsPlayerNearProperty(playerid);

			if(propid == -1)
			{
				SendClientMessage(playerid, -1, "[ERROR]: Usted no está lo suficientemente cerca de una propiedad!");
				return 1;
			}
			if(PlayerProps[playerid] == MAX_PROPERTIES_PER_PLAYER)
		    {
				format(str, 128, "[ERROR]: {F20000}Ya tiene {00FF00}%d {F20000}propiedades, Usted no puede comprar más propiedades.", PlayerProps[playerid]);
				SendClientMessage(playerid, 0xFF0000AA, str);
				return 1;
			}
			if(PropInfo[propid][PropIsBought] == 1)
			{
				new ownerid = GetPlayerID(PropInfo[propid][PropOwner]);
				if(ownerid == playerid)
				{
				    SendClientMessage(playerid, 0xFF0000AA,"[ERROR]: {FFFFFF}Ya tienes esta Propiedad!");
				    return 1;
				}
				else
				{
				    SendClientMessage(playerid, 0xFF0000AA,"[ERROR]: {FFFFFF}Esta propiedad ya tiene dueño!");
				    return 1;
				}
			}
			if(GetPlayerMoney(playerid) < PropInfo[propid][PropValue])
			{
			    format(str, 128, "[ERROR]: {f20000}Usted no tiene suficiente dinero! Necesita {00FF00}$%d!", PropInfo[propid][PropValue]);
			    SendClientMessage(playerid, 0xFF0000AA, str);
			    return 1;
			}
			GetPlayerName(playerid, pname, sizeof(pname));
			if(strfind(pname, "[GAY]", true) != -1 || strfind(pname, "[NOOB]", true) != -1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes comprar una Propiedad con el [GAY] o [NOOB] en tu Nick!");
			if(PropInfo[propid][PropIsBought])
			{
				new ownerid = GetPlayerID(PropInfo[propid][PropOwner]);
			    format(str, 128, "[INFO]: {00FF00}%s {F20000}ha comprado su propiedad {00FF00}\"%s\". {F20000}Usted recibió el 50% de su valor {00FF00}($%d)", pname, PropInfo[propid][PropName], (PropInfo[propid][PropValue]/2));
				GivePlayerMoney(ownerid, (PropInfo[propid][PropValue]/2));
				SendClientMessage(ownerid, 0xFFFF00AA, str);
			}
			PropInfo[propid][PropOwner] = pname;
			PropInfo[propid][PropIsBought] = 1;
			EarningsForPlayer[playerid] += PropInfo[propid][PropEarning];
	        GivePlayerMoney(playerid, (0-PropInfo[propid][PropValue]));
			format(str, 128, "[INFO]: Usted ha comprado la propiedad {00FF00}\"%s\" {FFFFFF}de {00FF00}$%d", PropInfo[propid][PropName], PropInfo[propid][PropValue]);
	        SendClientMessage(playerid, -1, str);
	        format(str, 128, "[INFO]: %s {00FF00}ha comprado la propiedad {FFFFFF}\"%s\".", pname, PropInfo[propid][PropName]);
	        SendClientMessageToAllEx(playerid, -1, str);
	        PlayerProps[playerid]++;
	        SaveProperties();
        }
		else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Tienes que tener 100 niveles para usar este Comando!");
		return 1;
	}

	if(strcmp(cmdtext, "/VenderPropiedad", true) == 0 || strcmp(cmdtext, "/Vpropiedad", true) == 0)
	{
		if(PlayerInfo[playerid][Nivel] >= 100)
		{
		    new str[128];
		    #if ENABLE_LOGIN_SYSTEM == 1
			if(Logged[playerid] == 0)
			{
			    format(str, 128, "[ERROR]: {FFFFFF}Tienes que iniciar sesión para poder comprar o vender propiedades!");
				SendClientMessage(playerid, 0xFF0000AA, str);
				return 1;
			}
			#endif
			new propid = IsPlayerNearProperty(playerid);
			if(propid == -1)
			{
				SendClientMessage(playerid, 0xFF0000AA, "[ERROR]: {FFFFFF}Usted no está lo suficientemente cerca de la propiedad!");
				return 1;
			}
			if(PropInfo[propid][PropIsBought] == 1)
			{
			    new playername3[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playername3, sizeof(playername3));
				if(!strcmp(PropInfo[propid][PropOwner],playername3,true))
				{
					GetPlayerName(playerid, pname, sizeof(pname));
     				format(PropInfo[propid][PropOwner], MAX_PLAYER_NAME, "En Venta");
					PropInfo[propid][PropIsBought] = 0;
     				GivePlayerMoney(playerid, (PropInfo[propid][PropValue]/2));
					format(str, 128, "[INFO]: Usted ha vendido su propiedad {00FF00}\"%s\" {FFFFFF}De 50% de su valor: {00FF00}$%d!", PropInfo[propid][PropName], PropInfo[propid][PropValue]/2);
			        SendClientMessage(playerid, -1, str);
					format(str, 128, "[INFO]: %s {00FF00}ha vendido la propiedad {FFFFFF}\"%s\".", pname, PropInfo[propid][PropName]);
			        SendClientMessageToAllEx(playerid, -1, str);
			        PlayerProps[playerid]--;
			        EarningsForPlayer[playerid] -= PropInfo[propid][PropEarning];
			        SaveProperties();
				}
				else
				{
				    SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Tu no eres el dueño de esta propiedad!");
				    return 1;
				}
			}
		}
		else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Tienes que tener 100 niveles o más para usar este Comando!");
		return 1;
	}

    if(strcmp(cmdtext, "/MisPropiedades", true) == 0 || strcmp(cmdtext, "/MisPropie", true) == 0)
	{
		if(PlayerInfo[playerid][Nivel] >= 100) {
	    new str[128], ownerid;
	    #if ENABLE_LOGIN_SYSTEM == 1
		if(Logged[playerid] == 0)
		{
		    format(str, 128, "[ERROR]: {FFFFFF}Tienes que iniciar sesión para poder comprar o vender propiedades!");
			SendClientMessage(playerid, 0xFF0000AA, str);
			return 1;
		}
		#endif
	    if(PlayerProps[playerid] == 0)
	    {
	        SendClientMessage(playerid, 0xFF0000AA, "[ERROR]: {FFFFFF}Tu no eres el dueño de ninguna propiedad!");
	        return 1;
		}
		format(str, 128, "|============ Sus %d Propiedades: =============|", PlayerProps[playerid]);
	    SendClientMessage(playerid, 0x99FF66AA, str);
		for(new propid; propid < PropertiesAmount; propid++)
		{
			if(PropInfo[propid][PropIsBought] == 1)
			{
                ownerid = GetPlayerID(PropInfo[propid][PropOwner]);
				if(ownerid == playerid)
				{
 					format(str, 128, "{00FF00}\"%s\"   {FFFFFF}Valor: $%d  -  {F20000}Ganancias: $%d", PropInfo[propid][PropName], PropInfo[propid][PropValue], PropInfo[propid][PropEarning]);
 					SendClientMessage(playerid, 0x99FF66AA, str);
				}
			}
		}
		SendClientMessage(playerid, 0x99FF66AA, "|============================================|");
        } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Tienes que tener 100 niveles para usar este Comando!");
		return 1;
	}

	if(strcmp(cmdtext, "/AdminVP", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 9)
		{
		    new str[128];
		    #if ENABLE_LOGIN_SYSTEM == 1
			if(Logged[playerid] == 0)
			{
			    format(str, 128, "[ERROR]: {FFFFFF}Tienes que iniciar sesión para poder comprar o vender propiedades!");
				SendClientMessage(playerid, 0xFF0000AA, str);
				return 1;
			}
			#endif
			new propid = IsPlayerNearProperty(playerid);
			if(propid == -1)
			{
				SendClientMessage(playerid, 0xFF0000AA, "[ERROR]: {FFFFFF}Usted no está lo suficientemente cerca de la propiedad!");
				return 1;
			}
			if(PropInfo[propid][PropIsBought] == 1)
			{
				GetPlayerName(playerid, pname, sizeof(pname));
				format(PropInfo[propid][PropOwner], MAX_PLAYER_NAME, "En Venta");
				PropInfo[propid][PropIsBought] = 0;
				GivePlayerMoney(playerid, (PropInfo[propid][PropValue]/2));
				format(str, 128, "[INFO]: Usted ha vendido su propiedad {00FF00}\"%s\" {FFFFFF}De 50% de su valor: {00FF00}$%d!", PropInfo[propid][PropName], PropInfo[propid][PropValue]/2);
		        SendClientMessage(playerid, -1, str);
				format(str, 128, "[INFO]: %s {00FF00}ha vendido la propiedad {FFFFFF}\"%s\".", pname, PropInfo[propid][PropName]);
		        SendClientMessageToAllEx(playerid, -1, str);
		        PlayerProps[playerid]--;
		        EarningsForPlayer[playerid] -= PropInfo[propid][PropEarning];
		        SaveProperties();
			}
		}
		else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Dueño [Lvl 10] para Usar este Comando!");
		return 1;
	}

	if(strcmp(cmdtext, "/VenderTodasPropiedades", true)==0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 10)
	    {
	        for(new propid; propid<PropertiesAmount; propid++)
	        {
	            format(PropInfo[propid][PropOwner], MAX_PLAYER_NAME, "En Venta");
	            PropInfo[propid][PropIsBought] = 0;
			}
			for(new i; i<MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        PlayerProps[i] = 0;
				}
			}
			new str[128];
	        SaveProperties();
			GetPlayerName(playerid, pname, 24);
			format(str, 128, "[INFO]: {00FF00}El Administrador {FFFFFF}%s {00FF00}ha establecido todas las propiedades", pname);
			SendClientMessageToAll(0xFFCC66AA, str);
        } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Dueño [Lvl 10] para Usar este Comando!");
		return 1;
	}

    if(strcmp("/nopm", cmd, true) == 0)
	{
	if(ADpm[playerid] == 0)
	{
    ADpm[playerid] = 1;
	SendClientMessage(playerid,red,"[INFO]: Has desactivado el recibo de PM");
	SendClientMessage(playerid,yellow,"[PM]: Actívalos de nuevo con /sipm");
 }
 else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya tienes el PM bloqueado!.");
	return 1;
	}

    if(strcmp("/sipm", cmd, true) == 0)
	{
	if(ADpm[playerid] == 1)
    {
    ADpm[playerid] = 0;
	SendClientMessage(playerid,red,"[INFO]: Has permitido el recibo de PM");
	}
	else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Ya tienes el PM desbloqueado!.");
	return 1;
	}

//-- SacarT
    if(strcmp(cmdtext, "/SacarT", true) == 0)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, 0xFF0000AA, "[Error]: Debes estar en un Vehículo.");
			return 1;
		}
		if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
		{
				SendClientMessage(playerid, 0xFF0000AA, "Aviso: El conductor a Removido a todos del vehículo.");
    			return 1;
		}
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new carrrrid = GetPlayerVehicleID(playerid);
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && IsPlayerInVehicle(i,carrrrid) && GetPlayerState(i) == PLAYER_STATE_PASSENGER)
				{
					RemovePlayerFromVehicle(i);
					SendClientMessage(i, Amarillo, "Has sido Removido del auto por el conductor.");
				}
			}
		}
		return 1;
	}
//============================================================================
	if(strcmp(cmd, "/fly", true) == 0)
	{
	if(PlayerInfo[playerid][PlayerinParkour] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este cmd aqui!");
	if(PlayerInfo[playerid][PlayerinLaberinto] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este cmd aqui!");
	if(PlayerInfo[playerid][PlayerinDerby] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este cmd aqui!");
	if(PlayerInfo[playerid][PlayerinRhino] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este cmd aqui!");
	if(PlayerInfo[playerid][PlayerinZombie] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este cmd aqui!");
    if(PlayerInfo[playerid][PlayerinHg] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este cmd aqui!");
    if(PlayerInfo[playerid][EnEvento] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No puedes usar este cmd aqui!");
	 if(PlayerInfo[playerid][pVip] >= 6)
 	{
 	if(EstaEnFly[playerid]==0){
	    StartFly(playerid);
	    EstaEnFly[playerid] = 1;
	    CMDMessageToVips(playerid,"FLY (ON)");
	    return 1;
  	}
 	if(EstaEnFly[playerid]==1){
	    StopFly(playerid);
	    EstaEnFly[playerid] = 0;
	    CMDMessageToVips(playerid,"FLY (OFF)");
	    return 1;
  	}
  	}
  	else SendClientMessage(playerid, COLOR_YELLOW,"No Eres Usuario Vip Nivel Diamond");
	    return 1;
	}

//__________________DIOS______________________________________________________________//

    if(strcmp(cmdtext, "/dios", true) == 0)
	{
    new string91[1500];
    strcat(string91, "{00aeff}+ Comandos Silver, Gold, Premium, Platinum, Esmeralda, Diamond.\n");
    strcat(string91, "{00aeff}+ Extremo y Legendario.\n");   
    strcat(string91, "{00aeff}/reglasvd:{FFFFFF} Es escencial que las sepas para no ser castigado.\n");
    strcat(string91, "{00aeff}/cazul:{FFFFFF} Para hablar en el chat en color azul.\n");
    strcat(string91, "{00aeff}/crojo:{FFFFFF} Para hablar en el chat en color rojo.\n");
    strcat(string91, "{00aeff}/camarillo:{FFFFFF} Para hablar en el chat en color amarillo.\n");
    strcat(string91, "{00aeff}/vgod:{FFFFFF} Te pones la vida inmortal.(No puedes matar ni portar armas)\n");
    strcat(string91, "{00aeff}/vknockout:{FFFFFF} Para matar de un disparo con todas las armas.\n");
    strcat(string91, "{00aeff}/vgoto:{FFFFFF} Para ir hacia un Jugador Determinado. (NO ABUSAR)\n");
    strcat(string91, "{00aeff}/fireshoot:{FFFFFF} Para disparar misiles con tu auto.\n");
    strcat(string91, "{00aeff}/vdcolor:{FFFFFF} Para ponerte Multicolor.\n");
    //strcat(string91, "{00aeff}/startrace:{FFFFFF} Para iniciar una carrera.\n");
    //strcat(string91, "{00aeff}/stoprace:{FFFFFF} Para detener una carrera.\n");
    //strcat(string91, "{00aeff}/racenames:{FFFFFF} Para ver los nombres de las carreras.\n");
    strcat(string91, "{00aeff}/rc:{FFFFFF} Para poner tu auto arcoiris (/nrc para apagarlo).\n");
    strcat(string91, "{00aeff}/loquendo:{FFFFFF} Para hablar con voz de hombre.\n");
    strcat(string91, "{00aeff}/loquenda:{FFFFFF} Para hablar con voz de mujer.\n");
    strcat(string91, "{00aeff}*Tip: {FFFFFF}Puedes matar de 1 tiro con cualquier Arma.\n");
    strcat(string91, "{00aeff}*Tip: {FFFFFF}Puedes telestransportarte con el marcador del mapa.\n");
    ShowPlayerDialog(playerid, CMDSVIP+8, DIALOG_STYLE_MSGBOX, " {ffb800}Comandos Vip DIOS", string91, "Cerrar", "");
	return 1;
    }
//__________________LEGENDARIO______________________________________________________________//

    if(strcmp(cmdtext, "/legendario", true) == 0)
	{
    new string91[1090];
    strcat(string91, "{00aeff}+ Comandos Silver, Gold, Premium, Platinum, Esmeralda, Diamond,\n");
    strcat(string91, "{00aeff}+ y Extremo.\n");
    strcat(string91, "{00aeff}/velocidad:{FFFFFF} Tu coche aumenta la velocidad apretando clic.\n");
    strcat(string91, "{00aeff}/sayayin:{FFFFFF} Para ser un sayayin xD.\n");
    strcat(string91, "{00aeff}/regenerar:{FFFFFF} Para regenerar la vida y el chaleco.\n");
    strcat(string91, "{00aeff}/vsay:{FFFFFF} Hablas en el chat como Vip.(SI ABUSAS TE BAJO EL VIP)\n");
    //strcat(string91, "{00aeff}/vwarn: {FFFFFF}Darle una Advertencia a determinado user.(SI ABUSAS TE BAJO EL VIP)\n");
    //strcat(string91, "{00aeff}/vquitarwarn: {FFFFFF}Le quitas una Advertencia a determinado user.(NO ABUSAR)\n");
    strcat(string91, "{00aeff}/mguerra:{FFFFFF} Para ponerte el modo guerra, con minigun y tanque.\n");
    strcat(string91, "{00aeff}/vknockout:{FFFFFF} Para matar con Algunas Armas.\n");
    strcat(string91, "{00aeff}*Tip: {FFFFFF}Puedes matar de 1 tiro con Sniper, Desert y Rifle.\n");
    ShowPlayerDialog(playerid, CMDSVIP+7, DIALOG_STYLE_MSGBOX, " {ffb800}Comandos Vip LEGENDARIO", string91, "Dios", "");
	return 1;
    }

//__________________EXTREMO______________________________________________________________//

    if(strcmp(cmdtext, "/extremo", true) == 0)
	{
    new string91[1030];
    strcat(string91, "{00aeff}+ Comandos Silver, Gold, Premium, Platinum, Esmeralda y Diamond.\n");
    strcat(string91, "{00aeff}/tienda: {FFFFFF}Tienda Exclusiva para comprarte armas, autos, etc.\n");
    strcat(string91, "{00aeff}/anunciovip: {FFFFFF}Pones un Texto a todo el servidor.(NO ABUSAR)\n");
    strcat(string91, "{00aeff}/infibalas: {FFFFFF}Te pones la municion infinita.\n");
    strcat(string91, "{00aeff}/balase: {FFFFFF} Para activar/desactivas las balas explosivas.\n");
    ShowPlayerDialog(playerid, CMDSVIP+6, DIALOG_STYLE_MSGBOX, " {ffb800}Comandos Vip EXTREMO", string91, "Legendario", "");
	return 1;
    }

//__________________DIAMOND______________________________________________________________//

    if(strcmp(cmdtext, "/diamond", true) == 0)
	{
    new string91[1600];
    strcat(string91, "{00aeff}+ Comandos Silver, Gold, Premium, Platinum y Esmeralda.\n");
    strcat(string91, "{00aeff}/startrace /stoprace:{FFFFFF} Para Iniciar o Parar una Carrera.\n");
    strcat(string91, "{00aeff}/vcar:{FFFFFF} Para sacar un Auto.\n");
    strcat(string91, "{00aeff}/reportes:{FFFFFF} Para ver la Lista de Reportes.\n");
    strcat(string91, "{00aeff}/mover:{FFFFFF} Para moverte arriba, abajo, izquieda o derecha.\n");
    strcat(string91, "{00aeff}/fly:{FFFFFF} Para volar por todo SA.\n");
    strcat(string91, "{00aeff}/vspec:{FFFFFF} Para vigilar a un jugador.\n");
    strcat(string91, "{00aeff}/ricos:{FFFFFF} Para ver la Lista de Ricos.\n");
    strcat(string91, "{00aeff}/cpropiedad:{FFFFFF} Para Comprar una Propiedad (100 niveles).\n");
    strcat(string91, "{00aeff}/vpropiedad:{FFFFFF} Para Vender una Propiedad. (100 niveles)\n");
    ShowPlayerDialog(playerid, CMDSVIP+5, DIALOG_STYLE_MSGBOX, " {ffb800}Comandos Vip DIAMOND", string91, "Extremo", "");
	return 1;
    }

//__________________ESMERALDA______________________________________________________________//

    if(strcmp(cmdtext, "/esmeralda", true) == 0)
	{
    new string91[1500];
    strcat(string91, "{00aeff}+ Comandos Silver, Gold, Premium y Platinum.\n");
    strcat(string91, "{00aeff}/supersaltos: {FFFFFF} Para dar saltos gigantes.\n");
    strcat(string91, "{00aeff}/msaltos {FFFFFF} Para ajustar a tu gusto los /supersaltos.\n");
    strcat(string91, "{00aeff}{FFFFFF}Y Para desactivar los supersaltos usa: /Supersaltosoff.\n");
    strcat(string91, "{00aeff}[Info]: {FFFFFF} (Car Spawner de transformers).\n");
    strcat(string91, "{00aeff}/vtransf {FFFFFF} (Para usar al transformer: 'Bumblebee').\n");
    strcat(string91, "{00aeff}/bengala: {FFFFFF} Para lanzar una bengala al aire.\n");
    /*  strcat(string91, "{00aeff} - {FF8000}Informacion Sobre los Fuegos Artificiales - {ffffff}/FwAyuda\n\n");
    strcat(string91, "{00aeff}/fwspawn {FFFFFF}- Crear un fuego artificial\n\n");
    strcat(string91, "{00aeff}/fwfire {FFFFFF}- Activar 1 fuego artificial\n\n");
	strcat(string91, "{00aeff}/fwfireall {FFFFFF}- Activar todos los fuegos\n\n");
    strcat(string91, "{00aeff}/fwkill {FFFFFF}- Borrar 1 fuego artificial\n\n");
	strcat(string91, "{00aeff}/fwkillall {FFFFFF}- Borrar todos los fuegos\n\n");
	strcat(string91, "{00aeff}/fwguardar {FFFFFF}- Guardar la posición de los fuegos\n\n");
	strcat(string91, "{00aeff}/fwcargar {FFFFFF}- Cargar los fuegos\n\n");
	strcat(string91, "{00aeff}/fwnoche {FFFFFF}- Cambiar el Clima\n\n\n");*/
    ShowPlayerDialog(playerid, CMDSVIP+4, DIALOG_STYLE_MSGBOX, " {ffb800}Comandos Vip ESMERALDA", string91, "Diamond", "");
    return 1;
    }
//__________________PLATINUM______________________________________________________________//

    if(strcmp(cmdtext, "/platinum", true) == 0)
	{
    new string91[1000];
    strcat(string91, "{00aeff}+ Comandos Silver, Gold y Premium.\n");
    strcat(string91, "{00aeff}/ip:{FFFFFF} Para Ver la IP de un Player.\n");
    strcat(string91, "{00aeff}/vidaychaleco:{FFFFFF} Para recargarte la vida y el chaleco.\n");
    strcat(string91, "{00aeff}/vscreen:{FFFFFF} Para mandar un msj de Pantalla a un Player.\n");
    strcat(string91, "{00aeff}/votekick:{FFFFFF} Para Kickear a un Player.\n");
    strcat(string91, "{00aeff}/vcontrol:{FFFFFF} Para Controlar tu Auto.\n");
    ShowPlayerDialog(playerid, CMDSVIP+3, DIALOG_STYLE_MSGBOX, " {ffb800}Comandos Vip PLATINUM", string91, "Diamond", "");
    return 1;
    }

//__________________PREMIUM______________________________________________________________//

    if(strcmp(cmdtext, "/premium", true) == 0)
	{
    new string91[1000];
    strcat(string91, "{00aeff}+ Comandos Silver y Gold.\n");
    strcat(string91, "{00aeff}/vida:{FFFFFF} Para recargarte la vida.\n");
    strcat(string91, "{00aeff}/chaleco:{FFFFFF} Para recargarte el chaleco.\n");
    strcat(string91, "{00aeff}/vjetpack:{FFFFFF} Para sacar un jetpack.\n");
    strcat(string91, "{00aeff}/saltarauto:{FFFFFF} Para saltar con tu coche. (con Ctrl)");
    ShowPlayerDialog(playerid, CMDSVIP+2, DIALOG_STYLE_MSGBOX, " {ffb800}Comandos Vip PREMIUM", string91, "Platinum", "");
    return 1;
    }

//__________________GOLD__________________________________________________________________//

    if(strcmp(cmdtext, "/gold", true) == 0)
	{
    new string91[1000];
    strcat(string91, "{00aeff}+ Comandos Silver.\n");
    strcat(string91, "{00aeff}/bici:{FFFFFF} Para saltar alto en una bici.\n");
    strcat(string91, "{00aeff}/ltune:{FFFFFF} Para tunear un auto.\n");
    strcat(string91, "{00aeff}/vflip:{FFFFFF} Para voltear un auto.\n");
    strcat(string91, "{00aeff}/porno:{FFFFFF} Sólo si Eres Mayor xD.\n");
    strcat(string91, "{00aeff}/bauto:{FFFFFF} Para destruir un auto.\n");
	ShowPlayerDialog(playerid, CMDSVIP+1, DIALOG_STYLE_MSGBOX, " {ffb800}Comandos Vip GOLD", string91, "Premium", "");
    return 1;
    }
//__________________Silver__________________________________________________________________//

    if(strcmp(cmdtext, "/silver", true) == 0)
	{
    new string91[1200];
    strcat(string91, "{00aeff}/S /G:{FFFFFF} Guardar/Cargar una posición.\n{00aeff}/autostun:{FFFFFF} Menú de autos tuneados.\n{00aeff}/autosRC:{FFFFFF} Auto RC.\n{00aeff}/ZonaVip y /ZonaVip2:{FFFFFF} Ir a un zona especialmente para ustedes.\n{00aeff}/fix:{FFFFFF} Para reparar el coche.\n");
    strcat(string91, "{00aeff}/tunear:{FFFFFF} Tunear auto.\n{00aeff}/invisible /visible:{FFFFFF} Para ocultarte o no del mapa.\n{00aeff}/bombac4:{FFFFFF} Para Comprar una Bomba y Explotarla.\n{00aeff}/Armaspesada:{FFFFFF} Para comprar armas pesadas.\n{00aeff}/decir:{FFFFFF} Chat Exclusivo para Vips como el Asay.");
    ShowPlayerDialog(playerid, CMDSVIP, DIALOG_STYLE_MSGBOX, "{ffb800}Comandos Vip SILVER", string91, "Gold", "");
    return 1;
    }
///_____________________________________________________________________________________
    if(strcmp(cmd, "/dardinero", true) == 0) {
    new playermoney;
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new giveplayerid, moneys;
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
    SendClientMessage(playerid, COLOR_INFO, "[USA]: /dardinero [id] [monto]");
	return 1;
	}
	giveplayerid = strval(tmp);
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp)) {
	SendClientMessage(playerid, COLOR_INFO, "[USA]: /dardinero [id] [monto]");
	return 1;
	}
 	moneys = strval(tmp);
	if (IsPlayerConnected(giveplayerid)) {
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	GetPlayerName(playerid, sendername, sizeof(sendername));
	playermoney = GetPlayerMoney(playerid);
    if (moneys > 0 && playermoney >= moneys && moneys < 100001) {
	GivePlayerMoney(playerid, (0 - moneys));
	GivePlayerMoney(giveplayerid, moneys);
	format(string, sizeof(string), "[MENSAJE]: Has enviado a %s [%d], $%d.", giveplayer,giveplayerid, moneys);
	SendClientMessage(playerid, naranja, string);
	format(string, sizeof(string), "[MENSAJE]: Has recibido $%d de %s [%d]", moneys, sendername, playerid);
	SendClientMessage(giveplayerid, naranja, string);
	}
	else {
    SendClientMessage(playerid, COLOR_ERROR, "[ERROR]: {FFFFFF}Cantidad de dinero inválida (sólo puedes enviar hasta 100000), o no tienes suficiente dinero.");
    }
    }else {
	format(string, sizeof(string), "[INFO]: %d este jugador no está conectado.", giveplayerid);
	SendClientMessage(playerid, COLOR_INFO, string);
	}
	return 1;
	}
//============================================================================//
if (strcmp("/bloquear", cmdtext, true, 10) == 0)
    {
    if(Informacion[playerid][Bloqueado] == 0)
    {
    SendClientMessage(playerid, COLOR_WHITE, "Bloqueado, ahora no pueden teletransportarse hacia ti.");
    Informacion[playerid][Bloqueado] = 1;
   return 1;
   }
   else return SendClientMessage(playerid, COLOR_RED, "[ERROR]: {FFFFFF}Ya estás bloqueado, usa /desbloquear para que puedan teletransportarse hacia ti.");
    }
   if (strcmp("/desbloquear", cmdtext, true, 10) == 0)
    {
    if(Informacion[playerid][Bloqueado] == 1)
    {
    SendClientMessage(playerid, COLOR_WHITE, "Desbloqueado, ahora si pueden teletransportarse hacia ti.");
    Informacion[playerid][Bloqueado] = 0;
    return 1;
    }
    else return SendClientMessage(playerid, COLOR_RED, "[ERROR]: {FFFFFF}Ya estás desbloqueado, usa /bloquear para bloquear la teletransportación.");
    }
    if (strcmp("/ir", cmd, true, 10) == 0)
    {
    if(cmdflood(playerid)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No hagas flood de comandos!");
    new jugador;
    tmp = strtok(cmdtext, idx);
    jugador = strval(tmp);
    if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_RED, "[Error] [USA]: /ir [ID del jugador]");
    if (strval(tmp) == playerid) return SendClientMessage(playerid, COLOR_RED, "[ERROR]: {FFFFFF}No puedes teletransportarte hacia ti mismo.");
    if(!IsPlayerInAnyVehicle(playerid))
    {
    if (IsPlayerConnected(jugador))
    {
    if(Informacion[jugador][Bloqueado] == 0)
    {
    new Float:x, Float:y, Float:z;
    GetPlayerPos(jugador, x, y, z);
    TeleportPlayer(playerid, x + 2, y, z);
    new name[MAX_PLAYERS];
    GetPlayerName(playerid, name, sizeof(name));
    CMDMessageToVips(playerid,"IR");
    format(string, sizeof(string), "[INFO]: El player %s se ha teletransportado hacia ti", name);
    SendClientMessage(jugador,0x8FFF00FF,string);
    floodcmd[playerid]=GetTickCount();
    return 1;
   }
    else return SendClientMessage(playerid, COLOR_RED, "[ERROR]: {FFFFFF}El jugador prohibió que se transporten a él.");
    }
    else return SendClientMessage(playerid, COLOR_RED, "[ERROR]: {FFFFFF}ID no encontrada");
    }
    else return SendClientMessage(playerid, COLOR_RED, "[ERROR]: {FFFFFF}No puedes teletransportarte en un Vehículo.");
    }


if(strcmp(cmdtext,"/supersaltos",true)==0)
{
	if(PlayerInfo[playerid][pVip] >= 5)
	{
	if(SaltarMas[playerid] == 0)
	{
		SaltarMas[playerid] = 1;
		Saltos[playerid] = 0;
		SendClientMessage(playerid, COLOR_VERDE, "[Info]: has activado los supersaltos. Usa /supersaltosoff para desactivarlo.");
	}
	else
	{
		SaltarMas[playerid] = 0;
		Saltos[playerid] = 0;
		SendClientMessage(playerid, COLOR_ROJO, "[Info]: supersaltos desactivado.");
	}
	}
	return 1;
}

if(strcmp(cmd,"/msaltos",true)==0 || strcmp(cmd,"/metros",true)==0)
{
	if(PlayerInfo[playerid][pVip] >= 5)
	{
		new temporal[256],dmajust[256];
		temporal = strtok(cmdtext,idx);

		if(!strlen(temporal))
		return SendClientMessage(playerid,COLOR_YELLOW,"[Uso]: /metros [2-100000000000].");

		if(strval(temporal) < 2)
		return SendClientMessage(playerid,COLOR_YELLOW,"[Error]: Los metros minimos son 2.");

		MAXIMOS_METROS = strval(temporal);
		format(dmajust,256,"Metros máximos de /supersaltos establecidos en %d.",strval(temporal));
		SendClientMessage(playerid,COLOR_YELLOW,dmajust);
	}
	else return SendClientMessage(playerid,COLOR_RED,"[Error]: Debes ser vip Esmeralda para usar este comando");
	return 1;
}

if(strcmp(cmdtext,"/supersaltosoff",true)==0)
{
	if(PlayerInfo[playerid][pVip] >= 5)
	{
	if(SaltarMas[playerid] == 1)
	{
		SaltarMas[playerid] = 0;
		Saltos[playerid] = 0;
	{
		SendClientMessage(playerid, COLOR_ROJO, "[Info]: supersaltos desactivado.");
	}
	}
	}
	return 1;
}
//========================= [ Car Commands ]====================================
if (strcmp("/tunear", cmdtext, true, 10) == 0)
	{
		if (IsPlayerInAnyVehicle(playerid))
        {
        if(PlayerInfo[playerid][pVip] >= 1) {
        ShowPlayerDialog(playerid, Tuning, DIALOG_STYLE_LIST, "Menu Tuning v3.0", "Ruedas\nColores\nPaintjobs\nNitro\nHidraulicos\nSideskirts\nTubos De Escape", "Seleccionar", "Cancelar");
        }
 	    else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Necesitas ser Player Silver Para Usar Este Comando");
 	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Debes estar en un vehículo");
		return 1;
}

if (strcmp("/armaspesada", cmdtext, true) == 0)
{
if(PlayerInfo[playerid][pVip] >= 1)
{
if(YaUsoPesada[playerid] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Tienes que esperar 5 Minutos antes de Volver a usar este Comando!");
ShowPlayerDialog(playerid, ARMA, DIALOG_STYLE_TABLIST_HEADERS, "Armas Pesadas",
"Armas\tPrecio\tMunicion\n\
Granadas\t$20000\t10\n\
Molotov\t$20000\t10\n\
RPG(Bazoka)\t$50000\t10\n\
HS Rocket\t$70000\t10\n\
Lanzallamas\t$30000\t200\n\
Minigun\t$30000\t100\n\
Bombas Control\t$40000\t10",
"Seleccionar","Cancelar");
}
else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Necesitas ser Player Silver Para Usar Este Comando");
return 1;
}

	if(strcmp(cmdtext, "/ltunedcar2", true)==0 || strcmp(cmdtext, "/ltc2", true)==0)	{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToAdmins(playerid,"LTunedCar");	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
		SetVehicleNumberPlate(LVehicleIDt, "RL 2015");
		AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
	    AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,1);
	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = LVehicleIDt;
		}
	} else SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar3", true)==0 || strcmp(cmdtext, "/ltc3", true)==0)	{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToAdmins(playerid,"LTunedCar");	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
		SetVehicleNumberPlate(LVehicleIDt, "RL 2015");
	    AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,2);
	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = LVehicleIDt;
		}
	} else SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar4", true)==0 || strcmp(cmdtext, "/ltc4", true)==0)	{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(559,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToAdmins(playerid,"LTunedCar");
		SetVehicleNumberPlate(carid, "RL 2015");
    	AddVehicleComponent(carid,1065);    AddVehicleComponent(carid,1067);    AddVehicleComponent(carid,1162); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073);	ChangeVehiclePaintjob(carid,1);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar5", true)==0 || strcmp(cmdtext, "/ltc5", true)==0)	{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(565,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToAdmins(playerid,"LTunedCar");
		SetVehicleNumberPlate(carid, "RL 2015");
	    AddVehicleComponent(carid,1046); AddVehicleComponent(carid,1049); AddVehicleComponent(carid,1053); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar6", true)==0 || strcmp(cmdtext, "/ltc6", true)==0)	{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(558,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToAdmins(playerid,"LTunedCar");
		SetVehicleNumberPlate(carid, "RL 2015");
    	AddVehicleComponent(carid,1088); AddVehicleComponent(carid,1092); AddVehicleComponent(carid,1139); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
 	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar7", true)==0 || strcmp(cmdtext, "/ltc7", true)==0)	{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(561,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToAdmins(playerid,"LTunedCar");
		SetVehicleNumberPlate(carid, "RL 2015");
    	AddVehicleComponent(carid,1055); AddVehicleComponent(carid,1058); AddVehicleComponent(carid,1064); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar8", true)==0 || strcmp(cmdtext, "/ltc8", true)==0)	{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(562,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToAdmins(playerid,"LTunedCar");
		SetVehicleNumberPlate(carid, "RL 2015");
	    AddVehicleComponent(carid,1034); AddVehicleComponent(carid,1038); AddVehicleComponent(carid,1147); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar9", true)==0 || strcmp(cmdtext, "/ltc9", true)==0)	{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(567,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToAdmins(playerid,"LTunedCar");
		SetVehicleNumberPlate(carid, "RL 2015");
	    AddVehicleComponent(carid,1102); AddVehicleComponent(carid,1129); AddVehicleComponent(carid,1133); AddVehicleComponent(carid,1186); AddVehicleComponent(carid,1188); ChangeVehiclePaintjob(carid,1); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1085); AddVehicleComponent(carid,1087); AddVehicleComponent(carid,1086);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar10", true)==0 || strcmp(cmdtext, "/ltc10", true)==0)	{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(558,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToAdmins(playerid,"LTunedCar");
		SetVehicleNumberPlate(carid, "RL 2015");
   		AddVehicleComponent(carid,1092); AddVehicleComponent(carid,1166); AddVehicleComponent(carid,1165); AddVehicleComponent(carid,1090);
	    AddVehicleComponent(carid,1094); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1087); AddVehicleComponent(carid,1163);//SPOILER
	    AddVehicleComponent(carid,1091); ChangeVehiclePaintjob(carid,2);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar11", true)==0 || strcmp(cmdtext, "/ltc11", true)==0)	{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
		} else {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(557,X,Y,Z,Angle,1,1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToAdmins(playerid,"LTunedCar");
		SetVehicleNumberPlate(carid, "RL 2015");
		AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1081);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar12", true)==0 || strcmp(cmdtext, "/ltc12", true)==0)	{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(535,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToAdmins(playerid,"LTunedCar");
		SetVehicleNumberPlate(carid, "RL 2015");
		ChangeVehiclePaintjob(carid,1); AddVehicleComponent(carid,1109); AddVehicleComponent(carid,1115); AddVehicleComponent(carid,1117); AddVehicleComponent(carid,1073); AddVehicleComponent(carid,1010);
	    AddVehicleComponent(carid,1087); AddVehicleComponent(carid,1114); AddVehicleComponent(carid,1081); AddVehicleComponent(carid,1119); AddVehicleComponent(carid,1121);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar13", true)==0 || strcmp(cmdtext, "/ltc13", true)==0)	{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
		else {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(562,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToAdmins(playerid,"LTunedCar");
		SetVehicleNumberPlate(carid, "RL 2015");
  		AddVehicleComponent(carid,1034); AddVehicleComponent(carid,1038); AddVehicleComponent(carid,1147);
		AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,0);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmd, "/lp", true) == 0)	{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if (GetPlayerState(playerid) == 2)
		{
		new VehicleID = GetPlayerVehicleID(playerid), LModel = GetVehicleModel(VehicleID);
        switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586, 449: return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}You can not tune this vehicle"); }
		new str[128], Float:pos[3];	format(str, sizeof(str), "%s", cmdtext[2]);
		SetVehicleNumberPlate(VehicleID, str);
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);	SetPlayerPos(playerid, pos[0]+1, pos[1], pos[2]);
		SetVehicleToRespawn(VehicleID); SetVehiclePos(VehicleID, pos[0], pos[1], pos[2]);
		SetTimerEx("TuneLCar",4000,0,"d",VehicleID);    PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
		SendClientMessage(playerid, blue, "You have changed your licence plate");   CMDMessageToAdmins(playerid,"LP");
		} else {
		SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}You have to be the driver of a vehicle to change its licence plate");	}
	} else	{
  	SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!"); }
	return 1;	}

//------------------------------------------------------------------------------
 	if(strcmp(cmd, "/spam", true) == 0)	{
		if(PlayerInfo[playerid][pAdmin] >= 9) {
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, red, "USO: /spam [Color] [Texto]");
				SendClientMessage(playerid, red, "Colores: 0=negro 1=blanco 2=rojo 3=naranja 4=amarillo 5=verde 6=azul 7=purpura 8=marron 9=rosa") &&
		        SendClientMessage(playerid, orange, "[Función]: Hacer Flood en el Chat!");
				return 1;
			}
			new Colour = strval(tmp);
			if(Colour > 9 ) return SendClientMessage(playerid, red, "Colores: 0=negro 1=blanco 2=rojo 3=naranja 4=amarillo 5=verde 6=azul 7=purpura 8=marron 9=rosa") &&
		    SendClientMessage(playerid, orange, "[Función]: Hacer Flood en el Chat!");
			tmp = strtok(cmdtext, idx);

			format(string,sizeof(string),"%s",cmdtext[8]);

	        if(Colour == 0) 	 for(new i; i < 50; i++) SendClientMessageToAll(black,string);
	        else if(Colour == 1) for(new i; i < 50; i++) SendClientMessageToAll(COLOR_WHITE,string);
	        else if(Colour == 2) for(new i; i < 50; i++) SendClientMessageToAll(red,string);
	        else if(Colour == 3) for(new i; i < 50; i++) SendClientMessageToAll(orange,string);
	        else if(Colour == 4) for(new i; i < 50; i++) SendClientMessageToAll(yellow,string);
	        else if(Colour == 5) for(new i; i < 50; i++) SendClientMessageToAll(COLOR_GREEN1,string);
	        else if(Colour == 6) for(new i; i < 50; i++) SendClientMessageToAll(COLOR_BLUE,string);
	        else if(Colour == 7) for(new i; i < 50; i++) SendClientMessageToAll(COLOR_PURPLE,string);
	        else if(Colour == 8) for(new i; i < 50; i++) SendClientMessageToAll(COLOR_BROWN,string);
	        else if(Colour == 9) for(new i; i < 50; i++) SendClientMessageToAll(COLOR_PINK,string);
			return 1;
		} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Co-Manager [Lvl 9] para Usar este Comando!");
	}

	if(strcmp(cmd, "/AdminON", true) == 0)
	{
    if(PlayerInfo[playerid][pAdmin] >= 1)
  	{
    if(AdminOn[playerid] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Ya estás en Modo {FF0000}ON-Duty{FFFFFF}, si quieres ponerte Off Duty usa '{29FF0D}/AdminOff{FFFFFF}'!");
    new nombrejugador[MAX_PLAYER_NAME];
    new String17[500];
  	GetPlayerName(playerid, nombrejugador, sizeof(nombrejugador));
	ResetPlayerWeapons(playerid);
    format(string2,sizeof(string2),"[INFO]: ¡{29FF0D}%s{FFFFFF} activó {FF0000}On-Duty{FFFFFF} y está en servicio administrativo!",nombrejugador);
    SendClientMessageToAll(0x00FF00FF, string2);
    SendClientMessage(playerid, 0xFF0000FF, "<!> Te pusistes ON-Duty");
   	format(String17,sizeof(String17),"_~n~_~n~_~n~~w~%s ~n~~g~¡esta Administrando!",nombrejugador);
    PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
    GameTextForAll(String17, 4000, 6);
    PlayerInfo[playerid][God] = 1;
    SetPlayerHealth(playerid,100000);
    SetPlayerArmour(playerid,100000);
	AdminOn[playerid] = 1;
	}else return SendClientMessage(playerid, 0xFF0000FF, "[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
   	return 1;
	}

	if(strcmp(cmd, "/AdminOFF", true) == 0)
	{
    if(PlayerInfo[playerid][pAdmin] >= 1)
  	{
    if(AdminOn[playerid] == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Ya estás en Modo {FF0000}OFF-Duty{FFFFFF}, si quieres ponerte On Duty usa '{29FF0D}/AdminOn{FFFFFF}'!");
  	new nombrejugador[MAX_PLAYER_NAME];
    new String17[500];
    GetPlayerName(playerid, nombrejugador, sizeof(nombrejugador));
    format(string2,sizeof(string2),"[INFO]: ¡{29FF0D}%s{FFFFFF} se puso {FF0000}Off-Duty{FFFFFF} y dejó el servicio administrativo!",nombrejugador);
    SendClientMessageToAll(0x00FF00FF, string2);
    SendClientMessage(playerid, 0xFF0000FF, "<!> Te pusistes OFF-Duty");
	format(String17,sizeof(String17),"_~n~_~n~_~n~~w~%s ~n~~r~¡dejo De administrar!",nombrejugador);
    GameTextForAll(String17, 4000, 6);
    ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid,24,300);
	GivePlayerWeapon(playerid,26,300);
	GivePlayerWeapon(playerid,31,300);
	GivePlayerWeapon(playerid,32,300);
	GivePlayerWeapon(playerid,34,300);
	GivePlayerWeapon(playerid,16,1);
	GivePlayerWeapon(playerid,4,1);
	GivePlayerWeapon(playerid,14,1);
	GivePlayerWeapon(playerid,1,1);
    PlayerInfo[playerid][God] = 0;
    SetPlayerHealth(playerid,100);
    SetPlayerArmour(playerid,100);
	AdminOn[playerid] = 0;
	}else return SendClientMessage(playerid, 0xFF0000FF, "[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 1] para Usar este Comando!");
   	return 1;
	}
//===//
if(strcmp(cmd, "/bantemp", true) == 0)
{
new name[MAX_PLAYER_NAME];
new giveplayer[MAX_PLAYER_NAME];
new giveplayerid;

if(PlayerInfo[playerid][pAdmin] >= 7)
{
tmp = strtok(cmdtext,idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, red, "[Uso]: /bantemp [ID] [Dias] [Razón]");
SendClientMessage(playerid, red, "Funcion: Banea temporalmente a un jugador en el servidor por dias especificados");
return 1;
}
giveplayerid = ReturnUser(tmp);
if(IsPlayerConnected(giveplayerid))
{
tmp = strtok(cmdtext, idx);
if (!strlen(tmp))
{
SendClientMessage(playerid, red, "[Uso]: /bantemp [ID] [Dias] [Razón]");
SendClientMessage(playerid, red, "Funcion: Banea temporalmente a un jugador en el servidor por dias especificados");
return 1;
}
new days = strval(tmp);
if(!IsNumeric(tmp))
return SendClientMessage(playerid, red, "ERROR: Día inválido Solo Usa Numeros");

if(strval(tmp) <= 0 || strval(tmp) > 1000)
return SendClientMessage(playerid, red, "[ERROR]: Día inválido! (1-1000)");

new reason[528];
reason = strtok2(cmdtext,idx);
if (!strlen(reason))
return SendClientMessage(playerid, red, "[ERROR]: Razón no especificada");

if (strlen(reason) <= 0 || strlen(reason) > 100)
return SendClientMessage(playerid, red, "[ERROR]: Usa una razón más corta");

new ip[15];
GetPlayerIp(giveplayerid,ip,15);
GetPlayerName(playerid, name, sizeof name);
GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
new File:tempban = fopen("ladmin/config/TempBans.ban", io_append);
if (tempban)
{
new year,month,day;
getdate(year, month, day);
day += days;
if (IsMonth31(month))
{
if (day > 31)
{
month += 1;
if (month > 12)
{
year += 1;
while(day > 31) day -= 31;
}
else while(day > 31) day -= 31;
}
}
else if (!IsMonth31(month))
{
if (day > 30)
{
month += 1;
if (month > 12)
{
year += 1;
while(day > 30) day -= 30;
}
else while(day > 30) day -= 30;
}
}
else if (!IsMonth31(month) && IsMonth29(year) && month == 2)
{
if (day > 29)
{
month += 1;
if (month > 12)
{
year += 1;
while(day > 29) day -= 29;
}
else while(day > 29) day -= 29;
}
}
else if (!IsMonth31(month) && !IsMonth29(year) && month == 2)
{
if (day > 28)
{
month += 1;
if (month > 12)
{
year += 1;
while(day > 28) day -= 28;
}
else while(day > 28) day -= 28;
}
}
format(string, sizeof string, "%d|%d|%d|%s ", day, month, year, ip);
fwrite(tempban, string);
fclose(tempban);
}
CMDMessageToAdmins(playerid,"BANTEMP");
format(string,128,"El Administrador %s Baneo Temporalmente a %s Por %d Dia(s) [Razon: %s]",name,giveplayer,days,reason);
SendClientMessageToAll(red,string);
Kick(giveplayerid);

format(string, sizeof string, "El Administrador %s Baneo Temporalmente a %s por %d Dia(s) Razon: %s",name,giveplayer,days,reason);
SaveIn("TempBansLog",string);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"Nesesitas ser administrador nivel 7 para este comando");
}
}
else return SendClientMessage(playerid,0xFF0000AA,"Nesesitas ser administrador nivel 7 para este comando");
return true;
}
//------------------------------------------------------------------------------
 	if(strcmp(cmd, "/write", true) == 0) {
	if(PlayerInfo[playerid][pAdmin] >= 5) {
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid, red, "[USA]: /write [Colour] [Text]");
			return SendClientMessage(playerid, red, "Colours: 0=black 1=white 2=red 3=orange 4=yellow 5=green 6=blue 7=purple 8=brown 9=pink") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar en el Chat con Colores!");
	 	}
		new Colour;
		Colour = strval(tmp);
		if(Colour > 9 )	{
			SendClientMessage(playerid, red, "[USA]: /write [Colour] [Text]");
			return SendClientMessage(playerid, red, "Colours: 0=black 1=white 2=red 3=orange 4=yellow 5=green 6=blue 7=purple 8=brown 9=pink") &&
		SendClientMessage(playerid, orange, "[Función]: Hablar en el Chat con Colores!");
		}
		tmp = strtok(cmdtext, idx);

        CMDMessageToAdmins(playerid,"WRITE");
        if(Colour == 0) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(black,string); return 1;	}
        else if(Colour == 1) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_WHITE,string); return 1;	}
        else if(Colour == 2) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(red,string); return 1;	}
        else if(Colour == 3) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(orange,string); return 1;	}
        else if(Colour == 4) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(yellow,string); return 1;	}
        else if(Colour == 5) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_GREEN1,string); return 1;	}
        else if(Colour == 6) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_BLUE,string); return 1;	}
        else if(Colour == 7) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_PURPLE,string); return 1;	}
        else if(Colour == 8) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_BROWN,string); return 1;	}
        else if(Colour == 9) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_PINK,string); return 1;	}
        return 1;
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 5] para Usar este Comando!");
	}

//========================= BANCO ========= COMANDOS ===========================
	if (strcmp("/depositar", cmdtext, true, 7) == 0)
	{
    if(PlayerInfo[playerid][LoggedIn] == 1)
	{
        new name0[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name0, sizeof(name0));
		format(string2, sizeof string2, "[CUENTA]: %s\n\nPonga la cantidad de dinero que quiere depositar en el banco:", name0);
		ShowPlayerDialog(playerid, 2000, DIALOG_STYLE_INPUT, "Sistema de Banco", string2, "Depositar", "Cancelar");
		return 1;
	}
	else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}No Estás Logueado! Para Hacer Uso Del Banco USA: /Login Password");
	}
//------------------------------------------------------------------------------
	if (strcmp("/retirar", cmdtext, true, 8) == 0)
	{
    if(PlayerInfo[playerid][LoggedIn] == 1)
	{
        new name2[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name2, sizeof(name2));
		format(string2, sizeof string2, "[CUENTA]: %s\n\nSaldo: %d$\n\nPonga la cantidad de dinero que desea retirar del banco:", name2,PlayerInfo[playerid][Banka]);
		ShowPlayerDialog(playerid, 2001, DIALOG_STYLE_INPUT, "Sistema de Banco", string2, "Retirar", "Cancelar");
		return 1;
	}
	else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}No Estás Logueado! Para Hacer Uso Del Banco USA: /Login Password");
	}
//------------------------------------------------------------------------------
	if (strcmp("/saldo", cmdtext, true, 7) == 0)
	{
    if(PlayerInfo[playerid][LoggedIn] == 1)
	{
        new name3[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name3, sizeof(name3));
		format(string2, sizeof string2, "[CUENTA]: %s\n\nSu dinero en el banco es de: %d$",name3, PlayerInfo[playerid][Banka]);
		ShowPlayerDialog(playerid,2003,DIALOG_STYLE_MSGBOX ,"Sistema de Banco",string2,"Aceptar","Cancelar");
		return 1;
	}
	else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}No Estás Logueado! Para Hacer Uso Del Banco USA: /Login Password");
	}
//------------------------------------------------------------------------------
    if(strcmp("/banco", cmdtext, true, 8) == 0)
	{
    if(PlayerInfo[playerid][LoggedIn] == 1)
	{
	ShowPlayerDialog(playerid,2004,DIALOG_STYLE_LIST,"Sistema de Banco","Depositar\nRetirar\nSaldo","Seleccionar","Cancelar");
	return 1;
	}
	else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}No Estás Logueado! Para Hacer Uso Del Banco USA: /Login Password");
	}
//------------------------------------------------------------------------------
//                      Remote Console
//------------------------------------------------------------------------------
/*	if (strcmp(cmd,"/banip", true)==0) {
	if(PlayerInfo[playerid][pAdmin] >= 6) {
		new pame[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pame, sizeof(pame));
		{
    		new str[128]; format(str,sizeof(string),"%s",cmdtext[1]); SendRconCommand(str);
    		CMDMessageToAdmins(playerid,"BANIP");
    		SendClientMessage(playerid, orange, "[Función]: BANEA LA IP DIRECTAMENTE DESDE LA CONSOLA REMOTA!");
			}
			return 1;
	}
else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
}

	if (strcmp(cmd,"/unbanip", true)==0) {
	if(PlayerInfo[playerid][pAdmin] >= 6) {
		new pame[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pame, sizeof(pame));
		{
    		new str[128]; format(str,sizeof(string),"%s",cmdtext[1]); SendRconCommand(str);
    		CMDMessageToAdmins(playerid,"unbanip (Rcon)");
    		SendClientMessage(playerid, orange, "[Función]: Al igual que /unbanip, desbaneas una ip!");
			}
			return 1;
	}
else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
}*/

	if (strcmp(cmd,"/say", true)==0) {
	if(PlayerInfo[playerid][pAdmin] == 10) {
		new pame[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pame, sizeof(pame));
		SendClientMessage(playerid, orange, "[Función]: ¡Hablas como admin anónimamente!");
		{
    		new str[128];
			format(str,sizeof(string),"%s",cmdtext[1]);
			SendRconCommand(str);
      	}
			return 1;
	}
else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
}

	if (strcmp(cmd,"/weather", true)==0) {
	if(PlayerInfo[playerid][pAdmin] >= 10) {
		new pame[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pame, sizeof(pame));
		{
    		new str[128]; format(str,sizeof(string),"%s",cmdtext[1]); SendRconCommand(str);
    		CMDMessageToAdmins(playerid,"weather (Rcon)");
    		SendClientMessage(playerid, orange, "[Función]: Establece el clima del servidor!");
			}
			return 1;
	}
else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
}

	if (strcmp(cmd,"/gravity", true)==0) {
	if(PlayerInfo[playerid][pAdmin] >= 10) {
		new pame[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pame, sizeof(pame));
		{
    		new str[128]; format(str,sizeof(string),"%s",cmdtext[1]); SendRconCommand(str);
    		CMDMessageToAdmins(playerid,"gravity (Rcon)");
    		SendClientMessage(playerid, orange, "[Función]: Cambia la gravedad del servidor!");
			}
			return 1;
	}
else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
}

	if (strcmp(cmd,"/players", true)==0) {
	if(PlayerInfo[playerid][pAdmin] >= 8) {
		new pame[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pame, sizeof(pame));
		{
    		new str[128]; format(str,sizeof(string),"%s",cmdtext[1]); SendRconCommand(str);
    		CMDMessageToAdmins(playerid,"players (Rcon)");
    		SendClientMessage(playerid, orange, "[Función]: Mira la cantidad de jugadores que hay!");
			}
			return 1;
	}
else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
}

	if (strcmp(cmd,"/reloadbans", true)==0) {
	if(PlayerInfo[playerid][pAdmin] >= 8) {
		new pame[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pame, sizeof(pame));
		{
    		new str[128]; format(str,sizeof(string),"%s",cmdtext[1]); SendRconCommand(str);
    		CMDMessageToAdmins(playerid,"Reloadbans (Rcon)");
    		SendClientMessage(playerid, orange, "[Función]: Vuelve a cargar la lista de users baneados!");
			}
			return 1;
	}
else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
}

	if (strcmp(cmd,"/reloadfs", true)==0) {
	if(PlayerInfo[playerid][pAdmin] >= 10) {
		new pame[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pame, sizeof(pame));
		{
    		new str[128]; format(str,sizeof(string),"%s",cmdtext[1]); SendRconCommand(str);
    		CMDMessageToAdmins(playerid,"Reloadfs (Rcon)");
    		SendClientMessage(playerid, orange, "[Función]: Vuelve a cargar un Filterscript!");
			}
			return 1;
	}
else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
}

	if (strcmp(cmd,"/exec", true)==0) {
	if(PlayerInfo[playerid][pAdmin] >= 10) {
		new pame[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pame, sizeof(pame));
		{
    		new str[128]; format(str,sizeof(string),"%s",cmdtext[1]); SendRconCommand(str);
    		CMDMessageToAdmins(playerid,"exec (Rcon)");
			}
			return 1;
	}
else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
}
	if (strcmp(cmd,"/loadfs", true)==0) {
	if(PlayerInfo[playerid][pAdmin] >= 10) {
		new pame[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pame, sizeof(pame));
		{
    		new str[128]; format(str,sizeof(string),"%s",cmdtext[1]); SendRconCommand(str);
    		CMDMessageToAdmins(playerid,"loadfs (Rcon)");
    		SendClientMessage(playerid, orange, "[Función]: Cargas un Fs!");
			}
			return 1;
	}
else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
}

	if (strcmp(cmd,"/unloadfs", true)==0) {
	if(PlayerInfo[playerid][pAdmin] >= 10) {
		new pame[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pame, sizeof(pame));
		{
    		new str[128]; format(str,sizeof(string),"%s",cmdtext[1]); SendRconCommand(str);
    		CMDMessageToAdmins(playerid,"unloadfs (Rcon)");
    		SendClientMessage(playerid, orange, "[Función]: Dejas de usar un determinado Fs!");
			}
			return 1;
	}
else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}No tienes el nivel para usar este comando.");
}
/*============================================================================*/
if(strcmp(cmdtext, "/saltarauto", true) == 0)
{
if(PlayerInfo[playerid][pVip] >= 6)
{
if(SaltosAuto[playerid] == 0)
{
SaltosAuto[playerid] = 1;
CMDMessageToVips(playerid,"SALTARAUTO (ON)");
SendClientMessage(playerid,green,"[INFO]: Has activado el salto con el coche (Ctrl izq)!");
}
else if(SaltosAuto[playerid] == 1)
{
SaltosAuto[playerid] = 0;
CMDMessageToVips(playerid,"SALTARAUTO (OFF)");
SendClientMessage(playerid,green,"[INFO]: Has desactivado el salto con el coche (Ctrl izq)!");
}
}
else return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Nesesitas ser vip Legendario para usar este comando!");
return 1;
}

/*============================================================================*/

if(strcmp(cmdtext, "/balase", true) == 0)
{
if(PlayerInfo[playerid][pVip] >= 7)
{
if(balason[playerid] == 1)
{
    CMDMessageToVips(playerid,"BALASE (ON)");
    balason[playerid] = 0;
    SendClientMessage(playerid, green, "[INFO]: Activaste las balas explosivas.");
}
else if(balason[playerid] == 0)
{
    balason[playerid] = 1;
    CMDMessageToVips(playerid,"BALASE (OFF)");
    SendClientMessage(playerid,green,"[INFO]: Desactivaste las balas explosivas.");
}
} else return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Nesesitas ser vip EXTREMO para usar este comando.");
return 1;
}

/*============================================================================*/
if(strcmp(cmdtext, "/Velocidad", true) == 0)
{
if(PlayerInfo[playerid][pVip] >= 8)
{
if(!IsPlayerInAnyVehicle(playerid))
{
SendClientMessage(playerid, 0xFF0000AA, "[ERROR]: {FFFFFF}No estas en un vehiculo!");
return 1;
}
if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
{
SendClientMessage(playerid, 0xFF0000AA, "[ERROR]: {FFFFFF}Debes ser el conductor del vehiculo!");
return 1;
}
if(AceleracionBrutal[playerid] == false)
{
GameTextForPlayer(playerid, "~b~Velocidad ~w~On", 4000, 3);
AceleracionBrutal[playerid] = true;
CMDMessageToVips(playerid,"VELOCIDAD (ON)");
}
else if(AceleracionBrutal[playerid] == true)
{
GameTextForPlayer(playerid, "~b~Velocidad ~w~Off", 4000, 3);
AceleracionBrutal[playerid] = false;
CMDMessageToVips(playerid,"VELOCIDAD (OFF)");
}
} else return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Nesesitas ser vip Legendario para usar este comando!");
return 1;
}
//------------------------------------------------------------------------------
if(strcmp(cmdtext, "/fireshoot", false, 7) == 0)
{
if(PlayerInfo[playerid][pVip] >= 9)
{
if(FireShotON[playerid] == 0)
{
FireShotON[playerid] = 1;
CMDMessageToVips(playerid,"FIRESHOOT (ON)");
SendClientMessage(playerid, 0x0000BB66, "[AVISO]: Lanza misiles del vehiculo (FireShoot) ACTIVADO {ffffff}Para Lanzar misiles Presiona {00FF00}CLICK");
}
else if(FireShotON[playerid] == 1)
{
FireShotON[playerid] = 0;
CMDMessageToVips(playerid,"FIRESHOOT (OFF)");
SendClientMessage(playerid, Rojo, "[Aviso]: Lanza misiles del vehiculo (FireShoot) DESACTIVADO");
}
}else ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX,"     ", "{ff0000}Info: {ffffff}Para este comando nesesitas ser vip nivel 7 cuenta {33CCFF}Latino", "Ok", "");
return 1;
}
/*============================================================================*/
if(strcmp("/sayayin", cmdtext, true, 10) == 0)
{
if(PlayerInfo[playerid][pVip] >= 8)
{
CMDMessageToVips(playerid,"SAYAYIN");
GameTextForPlayer(playerid,"~g~~h~~h~¡Eres Un Sayayin!",5000,5);
SetPlayerAttachedObject( playerid, 0, 19270, 1, 0.456246, 0.024526, 0.000000, 356.979461, 89.247146, 4.475475, 1.000000, 1.000000, 1.000000 ); // MapMarkerFire1 - hombre fuego
SetPlayerAttachedObject( playerid, 1, 19270, 1, 0.176541, 0.051910, -0.001506, 23.633422, 90.000000, 197.080627, 1.000000, 1.000000, 1.000000 ); // MapMarkerFire1 - hombre fuegi
SetPlayerAttachedObject( playerid, 2, 19270, 1, -0.308661, 0.051910, -0.001506, 23.633422, 90.000000, 197.080627, 1.000000, 1.000000, 1.000000 ); // MapMarkerFire1 - hombre fuegi
SetPlayerAttachedObject( playerid, 3, 19270, 1, -0.729163, 0.051910, -0.001506, 23.633422, 90.000000, 197.080627, 1.000000, 1.000000, 1.000000 ); // MapMarkerFire1 - hombre fuegi
} else return SendClientMessage(playerid, COLOR_ROJO,"[ERROR]: {FFFFFF}Tienes que ser vip Legendario para usar este comando!");
return 1;
}
/*============================================================================*/
if(strcmp("/infibalas", cmdtext, true, 10) == 0)
{
	if(UsoInfibalas[playerid] == 1) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Tienes que esperar 5 minutos antes de volver a usar este cmd!");
	if(PlayerInfo[playerid][pVip] >= 7)
	{
		MaxAmmo(playerid);
		CMDMessageToVips(playerid,"INFIBALAS");
		SendClientMessage(playerid, orange,"[INFO]: Ahora tienes balas infinitas, Puedes volver a usar el cmd en 5 minutos!");
		UsoInfibalas[playerid] = 1;
		SetTimerEx("VolverInfibalas", 300000, 0, "i", playerid);
	} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Vip Extremo para usar este comando");
return 1;
}

if(strcmp("/regenerar", cmdtext, true, 10) == 0)
{
if(UsoRegenerar[playerid] == 1) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Tienes que esperar 30 segundos antes de volver a usar este cmd!");
if(PlayerInfo[playerid][pVip] >= 8)
{
SetPlayerHealth(playerid, 100);
SetPlayerArmour(playerid, 100);
CMDMessageToVips(playerid,"REGENERAR");
SendClientMessage(playerid, orange,"[INFO]: ¡Te regeneraste la Vida y Armadura, puedes re-utilizar el comando en 30 segundos!");
UsoRegenerar[playerid] = 1;
SetTimerEx("VolverRegenerar", 30000, 0, "i", playerid);
} else return SendClientMessage(playerid, COLOR_ROJO,"[ERROR]: {FFFFFF}Tienes que ser Vip Legendario para usar este comando");
return 1;
}
//===================================
if(strcmp("/crojo", cmdtext, true, 10) == 0)
{
if(PlayerInfo[playerid][pVip] >= 9)
{
if(ColorAmarilloChat[playerid] == 1) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Solo puedes usar 1 color a la vez!");
if(ColorAzulChat[playerid] == 1) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Solo puedes usar 1 color a la vez!");
if(ColorRojoChat[playerid] == 0)
{
ColorRojoChat[playerid] = 1;
CMDMessageToVips(playerid,"CROJO (ON)");
SendClientMessage(playerid, orange,"[INFO]: Ahora hablas por el chat en color {FF0000}Rojo!");
}
else if(ColorRojoChat[playerid] == 1)
{
ColorRojoChat[playerid] = 0;
CMDMessageToVips(playerid,"CROJO (OFF)");
SendClientMessage(playerid, orange,"[INFO]: Has dejado de hablar por el chat en color {FF0000}Rojo!");
}
} else return SendClientMessage(playerid, COLOR_ROJO,"[ERROR]: {FFFFFF}Tienes que ser Vip Dios para usar este comando");
return 1;
}
//==============================================================================
if(strcmp("/cazul", cmdtext, true, 10) == 0)
{
if(PlayerInfo[playerid][pVip] >= 9)
{
if(ColorAmarilloChat[playerid] == 1) return SendClientMessage(playerid,COLOR_ROJO,"¡Error!: {FFFFFF}Solo puedes usar 1 color a la vez!");
if(ColorRojoChat[playerid] == 1) return SendClientMessage(playerid,COLOR_ROJO,"¡Error!: {FFFFFF}Solo puedes usar 1 color a la vez!");
if(ColorAzulChat[playerid] == 0)
{
ColorAzulChat[playerid] = 1;
CMDMessageToVips(playerid,"CAZUL (ON)");
SendClientMessage(playerid, orange,"¡Info!: Ahora hablas por el chat en color {0000FF}Azul!");
}
else if(ColorAzulChat[playerid] == 1)
{
ColorAzulChat[playerid] = 0;
CMDMessageToVips(playerid,"CAZUL (OFF)");
SendClientMessage(playerid, orange,"¡Info!: Has dejado de hablar por el chat en color {0000FF}Azul!");
}
} else return SendClientMessage(playerid, COLOR_ROJO,"¡Error!: {FFFFFF}Tienes que ser Vip Dios para usar este comando!");
return 1;
}
//==============================================================================
if(strcmp("/camarillo", cmdtext, true, 10) == 0)
{
if(PlayerInfo[playerid][pVip] >= 9)
{
if(ColorRojoChat[playerid] == 1) return SendClientMessage(playerid,COLOR_ROJO,"¡Error!: {FFFFFF}Solo puedes usar 1 color a la vez!");
if(ColorAzulChat[playerid] == 1) return SendClientMessage(playerid,COLOR_ROJO,"¡Error!: {FFFFFF}Solo puedes usar 1 color a la vez!");
if(ColorAmarilloChat[playerid] == 0)
{
ColorAmarilloChat[playerid] = 1;
CMDMessageToVips(playerid,"CAMARILLO (ON)");
SendClientMessage(playerid, orange,"¡Info!: Ahora hablas por el chat en color {00FF00}Amarillo!");
}
else if(ColorAmarilloChat[playerid] == 1)
{
ColorAmarilloChat[playerid] = 0;
CMDMessageToVips(playerid,"CAMARILLO (OFF)");
SendClientMessage(playerid, orange,"¡Info!: Has dejado de hablar por el chat en color {00FF00}Amarillo!");
}
} else return SendClientMessage(playerid, COLOR_ROJO,"¡Error!: {FFFFFF}Tienes que ser Vip Dios para usar este comando!");
return 1;
}
//==============================================================================
if(strcmp("/tienda",cmdtext,true,10)==0)
{
if(YaUsoTienda[playerid] == 1) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Tienes que esperar 5 minutos para volver a usar este comando!");
if(PlayerInfo[playerid][pVip] >= 7)
{
ShowPlayerDialog(playerid, 999, DIALOG_STYLE_TABLIST_HEADERS, "{ffb800}Tienda Vip Extremo:",
"Item\tPrecio\tCantidad\n\
Vida y Chaleco\t$2000\t100 y 100\n\
Granadas\t$1500\t150\n\
Molotovs\t$1500\t150\n\
Minigun\t$6000\t2500\n\
Rocket\t$7000\t1000\n\
Tanque\t$10000\t1\n\
Hydra\t$15000\t1\n\
Seasparrow\t$12000\t1\n\
Hunter\t$15000\t1",
"Seleccionar","Cancelar");
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
} else return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Tienes que ser Vip Extremo para usar este comando!");
return 1;
}

if(strcmp("/atienda",cmdtext,true,10)==0)
{
if(PlayerInfo[playerid][AxoneCash] >= 5)
{
ShowPlayerDialog(playerid, 10000, DIALOG_STYLE_TABLIST_HEADERS, "{ffb800}Tienda AXONE CASH:",
"Item\tPrecio\n\
250 de Score\t{FFFF00}5 AxoneCash\n\
VIP SILVER\t{FFFF00}15 AxoneCash(1000 score)\n\
VIP GOLD\t{FFFF00}25 AxoneCash(3500 score)\n\
VIP PREMIUM\t{FFFF00}30 AxoneCash(5000 score)\n\
VIP PLATINUM\t{FFFF00}35 AxoneCash(10000 score)\n\
VIP ESMERALDA\t{FFFF00}40 AxoneCash(15000 score)\n\
VIP DIAMOND\t{FFFF00}45 AxoneCash(20000 score)\n\
VIP EXTREMO\t{FFFF00}50 AxoneCash(30000 score)\n\
VIP LEGENDARIO\t{FFFF00}60 AxoneCash(75000 score)",
"Seleccionar","Cancelar");
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
} else return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Tienes que tener al menos 5 aXoneCash!");
return 1;
}
//==============================================================================
if(strcmp("/mguerra", cmdtext, true, 10) == 0)
{
if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Baja de tu vehiculo antes de activar el Modo Guerra!");
if(UsoGuerra[playerid] == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Tienes que esperar 5 minutos antes de volver a usar este comando!!");
if(PlayerInfo[playerid][pVip] >= 8)
{
CarSpawner(playerid,432);
GivePlayerWeapon(playerid,38,100000);
SetPlayerHealth(playerid, 100);
SetPlayerArmour(playerid, 100);
CMDMessageToVips(playerid,"MGUERRA");
SetPlayerSkin(playerid, 287);
SendClientMessage(playerid, orange,"[INFO]: Te equipaste el Modo Guerra, Puedes volver a usar el cmd en 5 minutos!");
UsoGuerra[playerid] = 1;
SetTimerEx("VolverGuerra", 300000, 0, "i", playerid);
} else return SendClientMessage(playerid, COLOR_ROJO,"[ERROR]: {FFFFFF}Tienes que ser Vip Legendario para usar este comando");
return 1;
}
/*============================================================================*/
if(strcmp(cmdtext,"/cmdsvip", true)==0)
    {
    ShowPlayerDialog(playerid,VIPS,DIALOG_STYLE_LIST, "{00EEFF}|| Comandos VIPS ||", "Silver\nGold\nPremium\nPlatinum\nEsmeralda\nDiamond\nExtremo\nLegendario\nDios", "Seleccionar","Salir");
    return 1;
    }
/*============================================================================*/
	if(strcmp(cmdtext,"/minijuegos", true)==0)
    {
    ShowPlayerDialog(playerid,MJ,DIALOG_STYLE_LIST, "|| Minijuegos ||",
    "Minigun\n\
	Minigun2\n\
	Minigun3\n\
	Rocket\n\
	Rocket2\n\
	Counter Strike {FF0000}*NUEVO*\n\
	{FFFFFF}MarioRocket",
	"Seleccionar","Cancelar");
    return 1;
    }
//------------------------------------------------------------------------------
		if(strcmp("/minigun", cmdtext, true) == 0)
	    {
	    new Float:health;
		GetPlayerHealth(playerid, health);
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar Teles mientras estás Spectando!");
		if(health > 70)
		{
	 	ResetPlayerWeapons(playerid);
	    new r = random(sizeof(MINIGUNR));
	    new PlayerName[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
		Minijuego[playerid] = 1;
		Minigun[playerid]  = 1;
	    RemovePlayerFromVehicle(playerid);
		GivePlayerWeapon(playerid, 38, 10000);
	    SetPlayerPos(playerid, MINIGUNR[r][0], MINIGUNR[r][1], MINIGUNR[r][2]);
	    SetPlayerFacingAngle(playerid,random(9000));
     	SetPlayerVirtualWorld(playerid, 1);
     	SetPlayerInterior(playerid, 10);
     	SetPlayerHealth(playerid, 100);
     	SetPlayerArmour(playerid, 100);
		GameTextForPlayer(playerid, "~b~minigun", 5000,6);
        EnviarComandoDM(playerid,"Minigun");
		}
	       else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los Minijuegos");
	     return 1;
	}
//------------------------------------------------------------------------------
		if(strcmp("/minigun2", cmdtext, true) == 0)
	    {
	    new Float:health;
		GetPlayerHealth(playerid, health);
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar Teles mientras estás Spectando!");
		if(health > 70)
		{
	 	ResetPlayerWeapons(playerid);
	    new r = random(sizeof(MINIGUNR2));
	    new PlayerName[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
		Minijuego[playerid] = 1;
		Minigun2[playerid]  = 1;
	    RemovePlayerFromVehicle(playerid);
		GivePlayerWeapon(playerid, 38, 10000);
	    SetPlayerPos(playerid, MINIGUNR2[r][0], MINIGUNR2[r][1], MINIGUNR2[r][2]);
	    SetPlayerFacingAngle(playerid,random(9000));
     	SetPlayerVirtualWorld(playerid, 1);
     	SetPlayerInterior(playerid, 0);
     	SetPlayerHealth(playerid, 100);
     	SetPlayerArmour(playerid, 100);
     	GameTextForPlayer(playerid, "~b~minigun2", 5000,6);
        EnviarComandoDM(playerid,"Minigun2");
		}
	       else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los Minijuegos");
	     return 1;
	}
	//------------------------------------------------------------------------------
		if(strcmp("/minigun3", cmdtext, true) == 0)
	    {
	    new Float:health;
		GetPlayerHealth(playerid, health);
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar Teles mientras estás Spectando!");
		if(health > 70)
		{
	 	ResetPlayerWeapons(playerid);
	    new r = random(sizeof(MINIGUNR3));
	    new PlayerName[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
		Minijuego[playerid] = 1;
		Minigun3[playerid]  = 1;
	    RemovePlayerFromVehicle(playerid);
		GivePlayerWeapon(playerid, 38, 10000);
	    SetPlayerPos(playerid, MINIGUNR3[r][0], MINIGUNR3[r][1], MINIGUNR3[r][2]);
	    SetPlayerFacingAngle(playerid,random(9000));
     	SetPlayerVirtualWorld(playerid, 1);
     	SetPlayerInterior(playerid, 1);
     	SetPlayerHealth(playerid, 100);
     	SetPlayerArmour(playerid, 100);
     	GameTextForPlayer(playerid, "~b~minigun3", 5000,6);
        EnviarComandoDM(playerid,"Minigun3");
		}
	       else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los Minijuegos");
	     return 1;
	}
//------------------------------------------------------------------------------
		if(strcmp("/rocket", cmdtext, true) == 0)
	    {
	    new Float:health;
		GetPlayerHealth(playerid, health);
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar Teles mientras estás Spectando!");
		if(health > 70)
		{
	 	ResetPlayerWeapons(playerid);
	    new r = random(sizeof(ROCKETR));
	    new PlayerName[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
		Minijuego[playerid] = 1;
		Rocket[playerid]  = 1;
	    RemovePlayerFromVehicle(playerid);
		GivePlayerWeapon(playerid, 35, 10000);
	    SetPlayerPos(playerid, ROCKETR[r][0], ROCKETR[r][1], ROCKETR[r][2]);
	    SetPlayerFacingAngle(playerid,random(9000));
     	SetPlayerVirtualWorld(playerid, 1);
     	SetPlayerInterior(playerid, 0);
     	SetPlayerHealth(playerid, 100);
     	SetPlayerArmour(playerid, 100);
     	GameTextForPlayer(playerid, "~b~rocket", 5000,6);
        EnviarComandoDM(playerid,"Rocket");
		}
	       else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los Minijuegos");
	     return 1;
	}
//------------------------------------------------------------------------------
		if(strcmp("/rocket2", cmdtext, true) == 0)
	    {
	    new Float:health;
		GetPlayerHealth(playerid, health);
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar Teles mientras estás Spectando!");
		if(health > 70)
		{
	 	ResetPlayerWeapons(playerid);
	    new r = random(sizeof(ROCKETR2));
	    new PlayerName[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
		Minijuego[playerid] = 1;
		Rocket2[playerid]  = 1;
	    RemovePlayerFromVehicle(playerid);
		GivePlayerWeapon(playerid, 35, 10000);
	    SetPlayerPos(playerid, ROCKETR2[r][0], ROCKETR2[r][1], ROCKETR2[r][2]);
	    SetPlayerFacingAngle(playerid,random(9000));
     	SetPlayerVirtualWorld(playerid, 1);
     	SetPlayerInterior(playerid, 0);
     	SetPlayerHealth(playerid, 100);
     	SetPlayerArmour(playerid, 100);
     	GameTextForPlayer(playerid, "~b~rocket2", 5000,6);
        EnviarComandoDM(playerid,"Rocket2");
		}
	       else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los Minijuegos");
	     return 1;
	}

//------------------------------------------------------------------------------
	if(strcmp("/counter", cmdtext, true) == 0)
	{
       if(balason[playerid] == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva las balas explosivas! (/balase)");
       if(vKnockOut[playerid] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva el VKNOCKOUT para ir al counter!");
	    new Float:health;
		GetPlayerHealth(playerid, health);
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar Teles mientras estás Spectando!");
		if(health > 70)
		{
			ShowPlayerDialog(playerid, CSTEAM, DIALOG_STYLE_LIST, "{FF0000}|| {FFFFFF}Counter Strike {FF0000}||", "{0000FF}Policias\n{FF0000}Terroristas", "Aceptar", "Cancelar");
		}
		else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los Minijuegos");
	    return 1;
	}

//------------------------------------------------------------------------------
		if(strcmp("/mario", cmdtext, true) == 0)
	    {
	    new Float:health;
		GetPlayerHealth(playerid, health);
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}No puedes usar Teles mientras estás Spectando!");
		if(health > 70)
		{
	 	ResetPlayerWeapons(playerid);
	    new r = random(sizeof(MARIOS));
	    new PlayerName[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
		Minijuego[playerid] = 1;
		Mario[playerid]  = 1;
	    RemovePlayerFromVehicle(playerid);
		GivePlayerWeapon(playerid, 35, 10000);
		GivePlayerWeapon(playerid,1,1);
	    SetPlayerPos(playerid, MARIOS[r][0], MARIOS[r][1], MARIOS[r][2]);
	    SetPlayerFacingAngle(playerid,random(9000));
     	SetPlayerVirtualWorld(playerid, 1);
     	SetPlayerInterior(playerid, 0);
     	SetPlayerHealth(playerid, 100);
     	SetPlayerArmour(playerid, 100);
     	TogglePlayerControllable(playerid,false);
        SetTimerEx("Descongelar", 4000, false, "d", playerid);
     	GameTextForPlayer(playerid, "~b~mario rocket", 5000,6);
        EnviarComandoDM(playerid,"Mario");
		}
	       else SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Llena tu vida antes de usar los Minijuegos");
	     return 1;
	}
//------------------------------------------------------------------------------

    if (strcmp("/caminar", cmdtext, true) == 0)
    {
        ShowPlayerDialog(playerid,CMNR,DIALOG_STYLE_LIST,"Elige Tu forma de andar","Andar Normal\nAndar Gordo\nAndar Banda1\nAndar Banda2\nAndar Viejo\nAndar Viejo Gordo\nAndar Mujer1\nAndar Mujer2\nAndar Borracho","Aceptar","Cancelar");
        return 1;
        }

    if (strcmp("/skin", cmdtext, true) == 0)
    {
        ShowPlayerDialog(playerid,DIALOG_SKIN,DIALOG_STYLE_INPUT,"{C6FF12}Selecciona un Skin","Escribe la ID del Skin Abajo [1-311]","Selecionar","Cerrar");
        return 1;
        }

        if(strcmp("/peleas", cmdtext, true) == 0){
        ShowPlayerDialog(playerid, Dialog_Pelea, DIALOG_STYLE_LIST, "Estilos de Pelea", "Normal\nBoxing\nBoxing\nKung-Fu\nKneeHead\nGrabKick\nElBow", "Seleccionar", "Cancelar");
        return 1;
		}

	if (strcmp("/clima", cmdtext, true, 10) == 0 || strcmp("/tiempo", cmdtext, true, 10) == 0)
    {
   	TogglePlayerClock(playerid,0);
    ShowPlayerDialog(playerid,climax, DIALOG_STYLE_LIST, "Menú De Tiempo Y Climas", "Restaurar Día Y Sol\nNoche\nMadrugada\nMañana\nDía\nTarde\nLLuvia\nSoleado\nNiebla\nTormenta De Arena\nCielo Gris\nCielo Rojo\nCielo Púrpura\nActivar Auto Reloj", "Aceptar", "Cancelar");
    return 1;
	}

    if (strcmp("/top", cmdtext, true) == 0)
	{
		new
			playerScores[MAX_PLAYERS][rankingEnum],
			index
		;
		for(new i; i != MAX_PLAYERS; ++i)
		{
			if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
				playerScores[index][player_Score] = GetPlayerScore(i);
				playerScores[index++][player_ID] = i;
			}
		}
		GetPlayerHighestScores(playerScores, 0, index);

		new
			score_Text[1280] = "\n",
			player_Name[100]
		;
		for(new i; i < 10; ++i)
		{
			if(i < index)
			{
				GetPlayerName(playerScores[i][player_ID], player_Name, sizeof(player_Name));
				format(score_Text, sizeof(score_Text), "%s\n{0000FF}%d. {FFFFFF}%s - {FF0000}%d", score_Text, i + 1, player_Name, playerScores[i][player_Score]);
			}
			else
				format(score_Text, sizeof(score_Text), "%s\n{0000FF}%d. {FF0000}Ninguno", score_Text, i + 1);
		}
    	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Top Players en Score Online", score_Text, "Aceptar", "");
		return 1;
	    }

    if(strcmp(cmdtext,"/rampa",true)==0)
        {
                if(ramped[playerid] > 0)
                {
                        ramped[playerid] = 0;
                        SendClientMessage(playerid,COLOR_VERDE,"¡Info!: Rampas Activas. Usa /rampa para Desactivarlas.");
                }
                else
                {
                        ramped[playerid] = 1;
                        SendClientMessage(playerid,COLOR_ROJO,"¡Info!: Rampas Desactivadas. Usa /rampa para Activarlas.");
                }
                return 1;
        }
        
    if (!strcmp(cmdtext, "/kill", true))
    {
		SetPlayerHealth(playerid,0.0);
		GameTextForPlayer(playerid,"~r~Baleh Bergah la bidah~n~~w~:v",5000,3);
		InformacionL[playerid][PAR] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		GivePlayerMoney(playerid, -100);
   	 	PlayerInfo[playerid][Deaths]++;
    	PlayerInfo[playerid][Experiencia]--;
    	ActualizarInformacion(playerid);
		return 1;
	}

    if (strcmp(cmdtext, "/voz",  true) == 0)
	{
		ShowPlayerDialog(playerid, 2012, DIALOG_STYLE_INPUT, "Reproducir algún texto.", "No olvide las [,]. Min: 1 Max: 100", "Traducir", "Cancelar");
		return 1;
	}
	
/*    if (strcmp(cmdtext, "/neon", true)==0)
	{
	if(IsPlayerInAnyVehicle(playerid))
	{
    ShowPlayerDialog(playerid, neondialog, DIALOG_STYLE_LIST, "Sistema de Neones", "{0000FF}Azul Oscuro\n{FF0000}Rojo\n{22FF00}Verde\n{FFFFFF}Blanco\n{B76AFF}Violeta\n{FFFF00}Amarillo\n{00FFFF}Cyan\n{005EFF}Azul Claro\n{FF00FC}Rosa\n{FF9E00}Naranja\n{9EFF00}Verde Claro\n{FEFA20}Amarillo Claro\n{00FFC4}Sacar Neon", "Seleccionar", "Cancelar");
	}
	return 1;
	}*/

	if(!strcmp(cmdtext, "/Armas", true) || !strcmp(cmdtext, "/a", true)) {

	    ShowPlayerDialog(playerid, 1998, DIALOG_STYLE_LIST, "Menú de Armas", "Pistolas\nMicro Subfusil\nEscopetas\nSubfusiles\nRifles\nAsalto", "Elejir", "Cancelar");
		return 1;
	}

	if(strcmp(cmdtext, "/menupistolas", true) == 0)
	{
	    ShowPlayerDialog(playerid, 1514, DIALOG_STYLE_LIST, "Pistolas", "9mm\nSilenciadora\nDesert Angle", "Elejir", "Cancelar");
		return 1;
	}

	if(strcmp(cmdtext, "/menumsubfusil", true) == 0)
	{
	    ShowPlayerDialog(playerid, 1520, DIALOG_STYLE_LIST, "Micro Subfusil", "Tec 9\nUzi", "Elejir", "Cancelar");
		return 1;
	}

	if(strcmp(cmdtext, "/menuescopetas", true) == 0)
	{
	    ShowPlayerDialog(playerid, 1516, DIALOG_STYLE_LIST, "Escopetas", "Shotgun\nSawn-Off\nCombate", "Elejir", "Cancelar");
		return 1;
	}

	if(strcmp(cmdtext, "/menusubfusiles", true) == 0)
	{
	    ShowPlayerDialog(playerid, 1517, DIALOG_STYLE_LIST, "Subfusiles", "MP5", "Elejir", "Cancelar");
		return 1;
	}

	if(strcmp(cmdtext, "/menurifles", true) == 0)
	{
	    ShowPlayerDialog(playerid, 1518, DIALOG_STYLE_LIST, "Rifles", "Rifle de Campo\nRifle de Francotirador", "Elejir", "Cancelar");
		return 1;
	}

	if(strcmp(cmdtext, "/menuasalto", true) == 0)
	{
	    ShowPlayerDialog(playerid, 1519, DIALOG_STYLE_LIST, "Asalto", "AK-47\nM4", "Elejir", "Cancelar");
		return 1;
	}

//===================================================================================
    if(strcmp(cmdtext, "/radio", true) == 0)
    {
    PlayAudioStreamForPlayer(playerid, "http://50.97.48.41:35808/listen.pls");
    SendClientMessage(playerid,green, "[RADIO]: Radio Revolucion Latina FM Encendido.");
	return 1;
    }

    if(strcmp(cmdtext, "/radioff", true) == 0)
    {
    StopAudioStreamForPlayer(playerid);
    SendClientMessage(playerid,green, "[RADIO]: Radio Revolucion Latina FM Apagado.");
	return 1;
    }

//==============================================================================
    if(strcmp(cmdtext, "/anuncio",  true) == 0)
	{
	if(PlayerInfo[playerid][pAdmin] >= 8) {
	ShowPlayerDialog(playerid, 2023, DIALOG_STYLE_INPUT, "Reproducir algún texto.", "No olvide las [,]. Min: 1 Max: 100", "Traducir", "Cancelar");
	} else return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Necesitas nivel 8 para usar este comando");
	return 1;
	}
// Menú de Armas q no se podrán usar mientras esten en un Duelo
    if(strcmp(cmdtext, "/ww", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 10000) {
	ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid, 24, 999);
	GivePlayerWeapon(playerid, 27, 999);
	GivePlayerWeapon(playerid, 29, 999);
	GivePlayerWeapon(playerid, 31, 999);
	GivePlayerWeapon(playerid, 34, 999);
	GivePlayerWeapon(playerid,1,1);
	GivePlayerMoney(playerid, -10000);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un pack de armas lentas. Te costó $10000.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $10000).");
    return 1;
    }
 	if(strcmp(cmdtext, "/ww2", true) == 0)
	{
	if(GetPlayerMoney(playerid) > 10000) {
	ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid, 24, 9999);
	GivePlayerWeapon(playerid, 25, 9999);
	GivePlayerWeapon(playerid, 34, 9999);
	GivePlayerWeapon(playerid,1,1);
    GivePlayerMoney(playerid, -10000);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un pack de armas lentas. Te costó $10000.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $10000).");
    return 1;
    }

	if(strcmp(cmdtext, "/rw", true) == 0)
	{
	if(GetPlayerMoney(playerid) > 10000) {
	ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid, 8, 1);
	GivePlayerWeapon(playerid, 28, 9999);
	GivePlayerWeapon(playerid, 26, 9999);
	GivePlayerWeapon(playerid, 22, 9999);
	GivePlayerWeapon(playerid,1,1);
	GivePlayerMoney(playerid, -10000);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un pack de armas rapidas. Te costó $10000.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $10000).");
    return 1;
    }

	if(strcmp(cmdtext, "/rw2", true) == 0)
	{
	if(GetPlayerMoney(playerid) > 10000) {
	ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid, 32, 9999);
	GivePlayerWeapon(playerid, 26, 9999);
	GivePlayerWeapon(playerid, 22, 9999);
	GivePlayerWeapon(playerid,1,1);
	GivePlayerMoney(playerid, -10000);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un pack de armas rápidas. Te costó $10000.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $10000).");
    return 1;
    }

    if(strcmp(cmdtext, "/cuchillo", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 100) {
	GivePlayerWeapon(playerid, 4, 1);
	GivePlayerMoney(playerid, -100);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un cuchillo. Te costó $100.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $100).");
    return 1;
    }

    if(strcmp(cmdtext, "/katana", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 100) {
	GivePlayerWeapon(playerid, 8, 1);
	GivePlayerMoney(playerid, -100);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado una katana. Te costó $100.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $100).");
    return 1;
    }

    if(strcmp(cmdtext, "/dildo", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 50) {
	GivePlayerWeapon(playerid, 10, 1);
	GivePlayerMoney(playerid, -50);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un dildo. Te costó $50.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $50).");
    return 1;
    }

    if(strcmp(cmdtext, "/motosierra", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 500) {
	GivePlayerWeapon(playerid, 9, 1);
	GivePlayerMoney(playerid, -500);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado una motosierra. Te costó $500.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $500).");
    return 1;
    }

    if(strcmp(cmdtext, "/flores", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 25) {
	GivePlayerWeapon(playerid, 14, 1);
	GivePlayerMoney(playerid, -25);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado flores. Te costó $25.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $25).");
    return 1;
    }

    if(strcmp(cmdtext, "/desert", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 1000) {
	GivePlayerWeapon(playerid, 24, 300);
	GivePlayerMoney(playerid, -1000);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado una desert. Te costó $1000.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $1000).");
    return 1;
    }

    if(strcmp(cmdtext, "/uzi", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 1250) {
	GivePlayerWeapon(playerid, 28, 3500);
	GivePlayerMoney(playerid, -1250);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado una uzi. Te costó $1250.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $1250).");
    return 1;
    }

    if(strcmp(cmdtext, "/tec9", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 1500) {
	GivePlayerWeapon(playerid, 32, 3500);
	GivePlayerMoney(playerid, -1500);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado una tec9. Te costó $1500.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $1500).");
    return 1;
    }

    if(strcmp(cmdtext, "/mp5", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 2500) {
	GivePlayerWeapon(playerid, 29, 3500);
	GivePlayerMoney(playerid, -2500);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un mp5. Te costó $2500.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $2500).");
    return 1;
    }

    if(strcmp(cmdtext, "/m4", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 10000) {
	GivePlayerWeapon(playerid, 31, 3500);
	GivePlayerMoney(playerid, -10000);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un m4. Te costó $10000.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $10000).");
    return 1;
    }

    if(strcmp(cmdtext, "/franco", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 5000) {
	GivePlayerWeapon(playerid, 34, 500);
	GivePlayerMoney(playerid, -5000);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado una franco. Te costó $5000.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $5000).");
    return 1;
    }

    if(strcmp(cmdtext, "/campo", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 5000) {
	GivePlayerWeapon(playerid, 33, 500);
	GivePlayerMoney(playerid, -5000);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un Rifle de campo. Te costó $5000.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $5000).");
    return 1;
    }

    if(strcmp(cmdtext, "/sawnoff", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 1500) {
	GivePlayerWeapon(playerid, 26, 1000);
	GivePlayerMoney(playerid, -1500);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado una escopeta recortada. Te costó $1500.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $1500).");
    return 1;
    }

    if(strcmp(cmdtext, "/combate", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 2500) {
	GivePlayerWeapon(playerid, 27, 500);
	GivePlayerMoney(playerid, -2500);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado una escopeta de combate. Te costó $2500.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $2500).");
    return 1;
    }

    if(strcmp(cmdtext, "/shotgun", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 500) {
	GivePlayerWeapon(playerid, 25, 500);
	GivePlayerMoney(playerid, -500);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado una escopeta lenta. Te costó $500.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $500).");
    return 1;
    }

    if(strcmp(cmdtext, "/ak47", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 8500) {
	GivePlayerWeapon(playerid, 30, 3500);
	GivePlayerMoney(playerid, -8500);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un ak47. Te costó $8500.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $8500).");
    return 1;
    }

	else if(strcmp(cmdtext, "/bate", true)==0)
	{
	GivePlayerWeapon(playerid,5,1);
	return 1;
	}

	else if(strcmp(cmdtext, "/flores", true)==0)
	{
	GivePlayerWeapon(playerid,14,1);
	return 1;
	}

    else if(strcmp(cmdtext, "/pistola", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 500) {
	GivePlayerWeapon(playerid, 22, 2000);
	GivePlayerMoney(playerid, -500);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado una 9mm. Te costó $500.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $500).");
    return 1;
    }

    else if(strcmp(cmdtext, "/silenciada", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 800) {
	GivePlayerWeapon(playerid, 23, 2000);
	GivePlayerMoney(playerid, -800);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado una silenciada. Te costó $800.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $800).");
    return 1;
    }

    if(strcmp(cmdtext, "/spray", true) == 0)
    {
    if(GetPlayerMoney(playerid) > 200) {
	GivePlayerWeapon(playerid, 41, 1500);
	GivePlayerMoney(playerid, -200);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un spray. Te costó $200.");
	}
    else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $200).");
    return 1;
    }

    if(strcmp(cmdtext, "/camara", true) == 0)
    {
	GivePlayerWeapon(playerid, 43, 50);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has obtenido una cámara.");
    return 1;
    }

    if(strcmp(cmdtext, "/paracaidas", true) == 0)
    {
	GivePlayerWeapon(playerid, 46, 1);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has obtenido un paracaidas.");
    return 1;
    }

    if(strcmp(cmdtext, "/desarmarme", true) == 0)
    {
	ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid,1,1);
	SendClientMessage(playerid, 0x00FF0000, "[INFO]: Te has Desarmado.");
    return 1;
    }
//==============================================================================
    if(strcmp(cmdtext, "/desbug", true) == 0) {
	    if(IsPlayerInAnyVehicle(playerid)){
	    SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}Sal del vehículo.");
	    return 1;
	    }
	    SetPlayerSkin(playerid,dUserINT(PlayerName2(playerid)).("FavSkin"));
		GetPlayerPos(playerid, FlatX[playerid], FlatY[playerid], FlatZ[playerid]);
		GetPlayerHealth(playerid, PlayerHealthFLO[playerid]);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		TogglePlayerControllable(playerid, true);
		SpawnPlayer(playerid);
		SetTimerEx("PowrotFloat", 2000, 0, "d", playerid);
		return 1;
	}
//=======================Hora Feliz ===========================
	if(strcmp("/HoraFelizRL", cmdtext, true, 10) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
	    	if(HoraFelizRL == 0)
		    {
	            HoraFelizRL = 1;
				new name[MAX_PLAYER_NAME];
				GetPlayerName(playerid, name, sizeof(name));
				format(string, sizeof(string), "{FF0000}Revolucion {FFFFFF}Latina: {00EEFF}El Administrador {FFFFFF}%s {00EEFF}Activo La Hora Feliz", name);
				SendClientMessageToAll(COLOR_ROJO,string);
				SendClientMessageToAll(COLOR_ROJO, "{FF0000}Revolucion {FFFFFF}Latina: Hora Feliz {00FF00}ON");
	            for(new i = 0; i < MAX_PLAYERS; i++)
				{
					GameTextForAll("~w~Hora Feliz ~b~Activada", 3000, 3);
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
                    ResetPlayerWeapons(i);
					GivePlayerWeapon(i, 38, 500);
					GivePlayerWeapon(i, 26, 500);
					GivePlayerWeapon(i, 16, 500);
	        	}
			}
		}
		else return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
		return 1;
	}

if(strcmp("/offhf", cmdtext, true, 10) == 0)
    {
	   if(PlayerInfo[playerid][pAdmin] >= 2)
		{
	    	if(HoraFelizRL == 1)
		    {
	            HoraFelizRL = 0;
				new name[MAX_PLAYER_NAME];
				GetPlayerName(playerid, name, sizeof(name));
				format(string, sizeof(string), "[{FF0000}Revolucion {FFFFFF}Latina]: {00EEFF}El Administrador {FFFFFF}%s {FF0000}Desactivo La Hora Feliz", name);
				SendClientMessageToAll(COLOR_ROJO,string);
				SendClientMessageToAll(COLOR_ROJO, "{FF0000}Revolucion {FFFFFF}Latina: {FFFFFF}Hora Feliz {FF0000}OFF ");
	            for(new i = 0; i < MAX_PLAYERS; i++)
				{
					GameTextForAll("~w~Hora Feliz ~r~Desactivada", 3000, 3);
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					GivePlayerWeapon(i, 0, 10);
	               	ResetPlayerWeapons(i);
      				GivePlayerWeapon(i,24,300);
					GivePlayerWeapon(i,26,300);
					GivePlayerWeapon(i,31,300);
					GivePlayerWeapon(i,32,300);
					GivePlayerWeapon(i,34,300);
					GivePlayerWeapon(i,8,1);
					GivePlayerWeapon(i,14,1);
					GivePlayerWeapon(i,1,1);
				}
			}
		}
		else return SendClientMessage(playerid,red,"¡Error!: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
		return 1;
	}
//==============================================================================
if(strcmp("/rc", cmdtext, true, 14) == 0)
{
    if(PlayerInfo[playerid][pVip] >= 9)
        if(IsPlayerInAnyVehicle(playerid))
        {
            SendClientMessage(playerid,COLOR_GREEN,"[INFO]: {00ff00}Rainbow Car Activado{FFFFFF}, Usa {00FF00}/Nrc {FFFFFF}si quieres Desactivarlo.");
			KillTimer(Tiempo2);
 			KillTimer(Tiempo3);
 			KillTimer(Tiempo4);
 			KillTimer(Tiempo5);
			Tiempo1 = SetTimerEx("Color1", 1, 0, "d" ,playerid);
		}
		else
        {
		    SendClientMessage(playerid, COLOR_RED, "[ERROR]: {FFFFFF}Usted No Esta En Un Vehiculo!!");
		}
	    return 1;
}
/*================================================================================*/
if (strcmp("/nrc", cmdtext, false, 14) == 0)
{
	if(PlayerInfo[playerid][pVip] >= 9)
	    if(IsPlayerInAnyVehicle(playerid))
		{
		    SendClientMessage(playerid,COLOR_GREEN,"[INFO]: {ff0000}Rainbow Car Desactivado{FFFFFF}, Usa {00FF00}/Rc {FFFFFF}si quieres Activarlo.");
			KillTimer(Tiempo1);
			KillTimer(Tiempo2);
			KillTimer(Tiempo3);
			KillTimer(Tiempo4);
			KillTimer(Tiempo5);
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED, "[ERROR]: {FFFFFF}Usted No Esta En Un Vehiculo!!");
		}
		return 1;
}
//======= Items =============
    if (strcmp("/items", cmdtext, true) == 0)
    {
	    ShowPlayerDialog(playerid,Obje,DIALOG_STYLE_LIST,"|| ITEMS ||","Gorro-Santa\nLoro\nHombre-Loro\nHipopótamo\nCasco-Moto\nGorro\nLente\nSmokeFlare\nSphere1\nSphere2\nSphere3\n{00FF00}Siguiente","Ok","Cerrar");
	    return 1;
    }
    if (strcmp("/citems", cmdtext, true) == 0)
    {
        for(new i;i<5;i++) RemovePlayerAttachedObject(playerid,i);
	    return 1;
  }
//================================================================================
new errorcmd[145];
format(errorcmd,sizeof(errorcmd), "{FF0000}.:|{FF0000}RL:FR|{FF0000}:. {FFFFFF}El comando {29FF0D}%s{FFFFFF} no {FF0000}existe{FFFFFF}, presiona N o usa /cmds.",cmdtext);
return SendClientMessage(playerid, -1, errorcmd);
}
//==============================================================================
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
//AntiFlood_Hack( playerid );

if(dialogid == CMDSVIP)
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/gold");
}
if(dialogid == CMDSVIP+1)
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/premium");
}
if(dialogid == CMDSVIP+2)
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/platinum");
}
if(dialogid == CMDSVIP+3)
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/esmeralda");
}
if(dialogid == CMDSVIP+4)
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/diamond");
}
if(dialogid == CMDSVIP+5)
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/extremo");
}
if(dialogid == CMDSVIP+6)
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/legendario");
}
if(dialogid == CMDSVIP+7)
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/dios");
}

if(dialogid == DSOLIC)
{
	if(response)
	{
		switch (listitem)
		{
			case 0:
			{
				ShowPlayerDialog(playerid, DSOLIC1, DIALOG_STYLE_INPUT, "|| Solicitar Encargado ||","Razón para Solicitar un Encargado?", "Aceptar", "Cancelar");
			}
			case 1:
			{
				ShowPlayerDialog(playerid, DSOLIC2, DIALOG_STYLE_INPUT, "|| Solicitar Administrador ||","Razón para Solicitar un Administrador?", "Aceptar", "Cancelar");
			}
			case 2:
			{
				ShowPlayerDialog(playerid, DSOLIC3, DIALOG_STYLE_INPUT, "|| Solicitar Operador ||","Razón para Solicitar un Operador?", "Aceptar", "Cancelar");
			}
		}
	}
	return 1;
}

if(dialogid == DSOLIC1)
{
	if(response)
	{
		if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, DSOLIC1, DIALOG_STYLE_INPUT, "|| Solicitar Encargado ||","Razón para Solicitar un Encargado?", "Aceptar", "Cancelar");
		new strs[1000];
		format(strs, sizeof(strs), "[INFO]: {FFFFFF}%s [%d] {00CB38}Solicito un {FF0000}Encargado {00CB38}en su Posicion! {FFFFFF}Motivo: %s", pName(playerid), playerid, inputtext);
		SendClientMessage(playerid, blue,"[INFO]: {00FF00}Has Solicitado un Encargado. Podras volver a Solicitarlo en 5 Minutos!");
		MessageToAdmins(-1,"|-------------------------------|");
		MessageToAdmins(red, strs);
		MessageToAdmins(-1,"|-------------------------------|");
	    YaSolicito[playerid] = 1;
	    SetTimerEx("VolverSolicitar", 300000, 0, "i", playerid);
	}
	return 1;
}

if(dialogid == DSOLIC2)
{
	if(response)
	{
		if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, DSOLIC1, DIALOG_STYLE_INPUT, "|| Solicitar Administrador ||","Razón para Solicitar un Administrador?", "Aceptar", "Cancelar");
		new strs[1000];
		format(strs, sizeof(strs), "[INFO]: {FFFFFF}%s [%d] {00CB38}Solicito un {00FF00}Administrador {00CB38}en su Posicion! {FFFFFF}Motivo: %s", pName(playerid), playerid, inputtext);
		SendClientMessage(playerid, blue,"[INFO]: {00FF00}Has Solicitado un Administrador. Podras volver a Solicitarlo en 5 Minutos!");
		MessageToAdmins(-1,"|-------------------------------|");
		MessageToAdmins(red, strs);
		MessageToAdmins(-1,"|-------------------------------|");
	    YaSolicito[playerid] = 1;
	    SetTimerEx("VolverSolicitar", 300000, 0, "i", playerid);
	}
	return 1;
}

if(dialogid == DSOLIC3)
{
	if(response)
	{
		if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, DSOLIC1, DIALOG_STYLE_INPUT, "|| Solicitar Operador ||","Razón para Solicitar un Operador?", "Aceptar", "Cancelar");
		new strs[1000];
		format(strs, sizeof(strs), "[INFO]: {FFFFFF}%s [%d] {00CB38}Solicito un {0000FF}Operador {00CB38}en su Posicion! {FFFFFF}Motivo: %s", pName(playerid), playerid, inputtext);
		SendClientMessage(playerid, blue,"[INFO]: {00FF00}Has Solicitado un Operador. Podras volver a Solicitarlo en 5 Minutos!");
		MessageToAdmins(-1,"|-------------------------------|");
		MessageToAdmins(red, strs);
		MessageToAdmins(-1,"|-------------------------------|");
	    YaSolicito[playerid] = 1;
	    SetTimerEx("VolverSolicitar", 300000, 0, "i", playerid);
	}
	return 1;
}

/*	//-- Neon Dialogo bug--//
	if(dialogid == neondialog)
	{
		if(response)
		{
			if(listitem == 0)
			{
			    SetPVarInt(playerid, "Status", 1);
                SetPVarInt(playerid, "neon", CreateObject(18648,0,0,0,0,0,0));
                SetPVarInt(playerid, "neon1", CreateObject(18648,0,0,0,0,0,0));
                AttachObjectToVehicle(GetPVarInt(playerid, "neon"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                AttachObjectToVehicle(GetPVarInt(playerid, "neon1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                SendClientMessage(playerid, 0xE60000FF, "Neon instalado");
   			}
			if(listitem == 1)
			{
				SetPVarInt(playerid, "Status", 1);
	            SetPVarInt(playerid, "neon2", CreateObject(18647,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon3", CreateObject(18647,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon2"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon3"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SendClientMessage(playerid, 0xE60000FF, "Neon instalado");

            }
			if(listitem == 2)
			{
		   	    SetPVarInt(playerid, "Status", 1);
	            SetPVarInt(playerid, "neon4", CreateObject(18649,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon5", CreateObject(18649,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon4"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon5"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SendClientMessage(playerid, 0xE60000FF, "Neon instalado");

	            }
			if(listitem == 3)
			{
		   	    SetPVarInt(playerid, "Status", 1);
	            SetPVarInt(playerid, "neon6", CreateObject(18652,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon7", CreateObject(18652,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon6"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon7"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SendClientMessage(playerid, 0xE60000FF, "Neon instalado");

            }
			if(listitem == 4)
			{
		   	    SetPVarInt(playerid, "Status", 1);
	            SetPVarInt(playerid, "neon8", CreateObject(18651,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon9", CreateObject(18651,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon8"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon9"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SendClientMessage(playerid, 0xE60000FF, "Neon instalado");

            }
			if(listitem == 5)
			{
  				SetPVarInt(playerid, "Status", 1);
	            SetPVarInt(playerid, "neon10", CreateObject(18650,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon11", CreateObject(18650,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon10"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon11"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SendClientMessage(playerid, 0xE60000FF, "Neon instalado");

            }
            if(listitem == 6)
			{
  				SetPVarInt(playerid, "Status", 1);
                SetPVarInt(playerid, "neon12", CreateObject(18648,0,0,0,0,0,0));
                SetPVarInt(playerid, "neon13", CreateObject(18648,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon14", CreateObject(18649,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon15", CreateObject(18649,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon12"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon13"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon14"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon15"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SendClientMessage(playerid, 0xE60000FF, "Neon instalado");

            }
             if(listitem == 7)
			{
  				SetPVarInt(playerid, "Status", 1);
                SetPVarInt(playerid, "neon16", CreateObject(18648,0,0,0,0,0,0));
                SetPVarInt(playerid, "neon17", CreateObject(18648,0,0,0,0,0,0));
                SetPVarInt(playerid, "neon18", CreateObject(18652,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon19", CreateObject(18652,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon16"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon17"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon18"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon19"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SendClientMessage(playerid, 0xE60000FF, "Neon instalado");

            }
            if(listitem == 8)
			{
  				SetPVarInt(playerid, "Status", 1);
	            SetPVarInt(playerid, "neon20", CreateObject(18647,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon21", CreateObject(18647,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon22", CreateObject(18652,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon23", CreateObject(18652,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon20"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon21"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon22"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon23"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SendClientMessage(playerid, 0xE60000FF, "Neon instalado");

            }
             if(listitem == 9)
			{
  				SetPVarInt(playerid, "Status", 1);
	            SetPVarInt(playerid, "neon24", CreateObject(18647,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon25", CreateObject(18647,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon26", CreateObject(18650,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon27", CreateObject(18650,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon24"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon25"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon26"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon27"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SendClientMessage(playerid, 0xE60000FF, "Neon instalado");

            }
             if(listitem == 10)
			{
  				SetPVarInt(playerid, "Status", 1);
	            SetPVarInt(playerid, "neon28", CreateObject(18649,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon29", CreateObject(18649,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon30", CreateObject(18652,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon31", CreateObject(18652,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon28"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon29"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon30"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon31"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SendClientMessage(playerid, 0xE60000FF, "Neon instalado");

            }
            if(listitem == 11)
			{
  				SetPVarInt(playerid, "Status", 1);
	            SetPVarInt(playerid, "neon32", CreateObject(18652,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon33", CreateObject(18652,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon34", CreateObject(18650,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon35", CreateObject(18650,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon32"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon33"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon34"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon35"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SendClientMessage(playerid, 0xE60000FF, "Neon instalado");

            }
   if(listitem == 12){DestroyObject(GetPVarInt(playerid, "neon")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon1")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon2")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon4")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon5")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon6")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon7"));
			DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon8")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon9")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon10")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon12")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon13")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon14")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon15"));
            DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon16")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon17")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon18")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon19"));
            DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon20")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon21")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon22")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon23"));
			DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon24")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon25")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon26")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon27"));
            DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon28")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon29")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon30")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon31"));
            DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon32")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon33")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon34")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon35"));
            SendClientMessage(playerid, 0x0259EAFF, "Neon Borrado");
		    }
		}
	}*/
/*//-------------------------------------Pms--------------------------------------
    new s1[264],s2[264],Nick[24];
//  new mensage[256];
    new namax[MAX_PLAYERS];
    new namax2[MAX_PLAYERS];
//	new idx;
//  ReceiverID[playerid] = strtok(params, idx);mensage = strtok(params, idx);
//id= strval(ReceiverID[playerid]);

    if(dialogid == 755)
    {
        ReceiverID[playerid] = strval(inputtext);
        ShowPlayerDialog(playerid,756,DIALOG_STYLE_INPUT,"{ffffff}Sistema de Mensajes Privados","{00FFFF}Introduzca el texto que desea enviar:","Enviar","Cancelar");
        return 1;
    }
    if(dialogid == 756)
    {
        if(response == 1)
		{
		new id;
		if (!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}El Jugador no está conectado.");
        if(reply[playerid] == 0)
		{

        if(ServerInfo[ReadPMs] == 1 && PlayerInfo[playerid][pAdmin] != ServerInfo[MaxAdminLevel])
    	{
		format(string2, sizeof(string2), "|- PM: %s(%d) A %s(%d): %s", namax, playerid, namax2, id);
  		for (new a = 0; a < MAX_PLAYERS; a++)
		if(IsPlayerConnected(a) && (PlayerInfo[a][pAdmin] >= 3) && a != playerid)
		SendClientMessage(a, lightblue, string2);
	    }

		PMfrom[ReceiverID[playerid]] = playerid;
		GetPlayerName(playerid, Nick, sizeof(Nick));
		format(s1, sizeof(s1), "{00FF00}Ha recibido un nuevo PM de %s\n\nPM: {ffffff}%s",Nick,inputtext);
		format(s2, sizeof(s2), "{FF8000}Nuevo PM de %s (%d)",Nick,playerid);
		ShowPlayerDialog(ReceiverID[playerid],757,DIALOG_STYLE_MSGBOX,s2,s1,"Responder","Cerrar");
        PlayerPlaySound(ReceiverID[playerid], 1085, 0.0, 0.0, 0.0);
        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		}
		else if(reply[playerid] == 1)
		{
		PMfrom[ReceiverID[playerid]] = playerid;
		GetPlayerName(playerid, Nick, sizeof(Nick));
		format(s1, sizeof(s1), "{00FF00}Ha recibido un nuevo PM de %s\n\nPM: {ffffff}%s",Nick,inputtext);
		format(s2, sizeof(s2), "{FF8000}Nuevo PM de %s (%d)",Nick,playerid);
		ShowPlayerDialog(PMfrom[playerid],757,DIALOG_STYLE_MSGBOX,s2,s1,"Responder","Cerrar");
		reply[playerid] = 0;
  		PlayerPlaySound(PMfrom[playerid], 1085, 0.0, 0.0, 0.0);
        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		}
		}
		return 1;
    }
    if(dialogid == 757)
    {
        if(response == 1)
        {
		ShowPlayerDialog(playerid,756,DIALOG_STYLE_INPUT,"{ffffff}Sistema de Mensajes Privados","	{00FFFF}Introduzca el texto que desea enviar:","Enviar","Cancelar");
		reply[playerid] = 1;
		}
    return 1;
	}
*/

if(dialogid == loquendoVoz)
    {
    if(response)
    {
    new rep[530];
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
		    format(rep, sizeof(rep), "http://audio1.spanishdict.com/audio?lang=es&voice=Ximena&speed=25&text=%s", inputtext);
		    PlayAudioStreamForPlayer(i, rep, 0, 0, 0, 0, 0);
		}
    }
return 1;
}

if(dialogid == loquendaV)
    {
    if(response)
    {
    new rep[530];
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
		    format(rep, sizeof(rep), "http://translate.google.com/translate_tts?tl=es&q=%s", inputtext);
		    PlayAudioStreamForPlayer(i, rep, 0, 0, 0, 0, 0);
		}
    }
return 1;
}

if(dialogid == DialogAdmin)
{
	if(response)
	{
	new string[2000];
	strcat(string, "11: Cualquier sustracción de advertencias dadas por uno u otro a un usuario, tiene que representar la razón después de su ID.");
	strcat(string, "12: Será negada la manipulación tanto abusiva como vulgar del comando /Congelar.");
	strcat(string, "13: La desactivación de /Sck solamente podrá ser para aislar a los usuarios de cualquier bug, ya sea en un evento donde haya un interior o el uso de vehículos.\n");
	strcat(string, "14: El Rban sólo se podrá ejecutar por razones mayores las cuales hayan afectado en algún momento al servidor, y también para los usuarios que hayan forzado su ingreso ilegalmente.\n");
	strcat(string, "15: La utilidad de /Goto sólo podra ser usado con la condición la cual el usuario haya aceptado y no negado, pero es importante no matarlo ya que va a una posición con un comando administrativo.\n");
	strcat(string, "16: Se mantiene actualmente que si un usuario está usando algún hack y al verlo está dentro de un vehículo, es importante primero insertar el comando /Sacar, y después ejecutar la acción de daño.\n");
	strcat(string, "17: La utilidad tanto de /Announce como /Announce2, tiene que ser solo exclusivamente para notificaciones de eventos, reinicios o respuestas a más de 3 usuarios en el servidor, si no supera esa cantidad, se usa automáticamente el /Asay o /Cadmin.\n");
	strcat(string, "18: Cualquier comando administrativo el cual implica a dar una razón o motivo, es importante darla con madurez, quiere decir que no se acepta los emoticones.\n");
	strcat(string, "19: La utilidad de /Warn no podrá ejecutarse a un nivel superior, eso quiere decir que si uno es un nivel menor y el otro mayor al cual ejecutarás una advertencias, está completamente prohibido ya que existen gente con experiencia para hacerlo.\n");
	ShowPlayerDialog(playerid, DialogAdmin+1, DIALOG_STYLE_MSGBOX, "|| Reglas Del STAFF 2 ||",string,"Siguiente", "Cancelar");
	return 1;
	}
}

if(dialogid == DialogAdmin+1)
{
	if(response)
	{
	new string[2000];
	strcat(string, "20: Si usted tiene nivel para utilizar el comando /Kick, es de importancia realizarlo por alguna razón justa y básica la cual esté basada en este reglamento, no se permitirá la utilidad de flood con el comando /Warn.\n");
	strcat(string, "21: Cualquier evento que haya sido abierto por un colega, es importante que se haga responsable de su ejecución a las acciones permitidas por el menú.");
	strcat(string, "22: Dejando en claro artículos básicos de los comandos fundamentales que son usados brevemente dento del servidor, esto va a influír en diferentes comandos, que se tendrán que usar con su madurez y atención.\n");
	strcat(string, "23: No importa su nivel y forma de ser, siempre se tendrá que mostrar buen comportamiento y apartar los insultos a cualquier persona o miembros del servidor.\n");
	strcat(string, "24: Cualquier donación de recursos al servidor, no será recompensado con nivel administrativo, puede llegar a ser con otros métodos.");
	strcat(string, "25: Se aumentará el nivel administrativo cada fin de mes sin usted ha cumplido con su rol y reglamento de la administración, sin esos requisitos no tendrá una recompensa justa.\n");
	strcat(string, "26: Es importante si usted dentro del servidor se encuentra On Dutty. Si usted está por ponerse en modo pausa, es importante remover su On Dutty a Off Dutty  ya que ofrecerá servicio falso y no es lo correcto.\n");
	strcat(string, "27: Está prohibido realizar eventos cuando tú colega está actualmente haciendo uno, si tú colega está por realizar eventos de /Rleventos cuando tú haces el mismo procedimiento que él y al mismo tiempo, se puede Bugear.\n");
	strcat(string, "28: Todo aquel Operador, administrador, encargado que se dedique a realizar continuamente eventos y no atender los /Reportes del servidor, directamente se le bajará un level dependiendo en cual se encuentre.\n");
	strcat(string, "29: Los Administradores que se pongan a Administrar con la cuenta de [STAFF]a[X]one12, y este un tiempo aproximadamente largo, quedará determinadamente con level 3, y si es menor, se tomará como una advertencia.\n");
	ShowPlayerDialog(playerid, DialogAdmin+2, DIALOG_STYLE_MSGBOX, "|| Reglas Del STAFF 3 ||",string,"Siguiente", "Cancelar");
	return 1;
	}
}

if(dialogid == DialogAdmin+2)
{
	if(response)
	{
	new string[2000];
	strcat(string, "30: Cualquier tipo de evento el cual su motivo sea de importancia para asistir, queda sumamente principal estar presente en tiempo y forma para su comienzo.");
	strcat(string, "31: Cualquier usuario que se encuentre dentro del servidor, y realice un reporte inválido sin intención, es importante poder avisarle por el siguiente proceso: /Asay Jugador [ID], su reporte es inválido [MOTIVO CORTO].");
	strcat(string, "32: Todo miembros de la administración que sufra algún desperfecto el cual de negado el acceso a su GTA, lag o crashed, tenga en cuenta si excede de las 12 sin una reparación, si continua durante 24 horas, será removido de la administración.");
	strcat(string, "33: Si se surge algún conflicto el cual tenga que intervenir los encargados, se armará un chat y se le avisará que obligatoriamente ingrese a su Facebook para solucionarlo. Si no se llega a un acuerdo, los dueños serán invitados a la conversación.");
	strcat(string, "34: Cualquier administrador que reporte a otro por un abuso, será el que podrá acotar que sanción se tomaría hacia él, pero no podría ser determinada, todo será básicamente al reglamento y gravedad de la situación.");
	strcat(string, "35: Nadie podrá hacer una modificación del reglamento sin ser básicamente importante o coherente.");
	strcat(string, "36: Queda en claro que está negado el reclamo de nivel administrativo, pero si se puede reclamar falta de subida por el fin de mes con el motivo el cual no estuviste, o simplemente avisar antes de tiempo.");
	strcat(string, "37: Es completamente ilegal, mostrar el chat de la administración tanto dentro del servidor como fuera tanto sus mensajes como interfaz e ip's.");
	strcat(string, "38: Es básicamente importante anunciar por el grupo del STAFF al momento de bajar o remover el Vip a alguien, ya sea temporalmente o permanentemente.");
	strcat(string, "39: Es importante tener una moderación y madurez exacta al nivel o edad de los principales miembros.");
	ShowPlayerDialog(playerid, DialogAdmin+3, DIALOG_STYLE_MSGBOX, "|| Reglas Del STAFF 4 ||",string,"Siguiente", "Cancelar");
	return 1;
	}
}

if(dialogid == DialogAdmin+3)
{
	if(response)
	{
	new string[2000];
	strcat(string, "40: Está prohibido cualquier meme gracioso o vulgar que llegue a ser publicado en la conversación de la administración.");
	strcat(string, "41: Es ilegal alterar la conversación del Staff, ya sea en cualquier método virtual, tanto su nombre, eliminación o agregación de miembros a él.");
	strcat(string, "42: Todo problema que no sea referido al Staff, no tendrá que influír en la conversación administrativa, sí es legal pero en modo viceversa.");
	strcat(string, "43: Toda pelea que se componga en la conversación de cualquier método interactivo virtual, será sancionado y expulsado del chat por horas, días o semanas.");
	strcat(string, "44: Cualquier removimiento de nivel VIP que es tomado como una sanción por violación de reglas, debe ser comunicado en el mismo grupo.");
	strcat(string, "45: Cualquier ban ejecutado, tiene que ser avisado respondiendo las siguientes pregunas, ¿por qué se realizó?, ¿a qué usuario?, ¿qué día, fecha y año?.");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "|| Reglas Del STAFF 5 ||",string,"Aceptar", "Cancelar");
	return 1;
	}
}

if(dialogid == DIALOG_PARTY)
        {
            if(response)
            {
                if(PartyPrepared == 1 || PartyStarted == 1)
                {
                    if(JoinedD[playerid] == 0 && IsADJ[playerid] == 0)
                    {
                        SetPlayerPos(playerid, Float:PartyX, Float:PartyY, Float:PartyZ);
                        SendClientMessage(playerid, green, "{38A6E6}.:|INFO|:. {FFFFFF}¡¡Fuiste teletransportado a la fiesta!!");
          				JoinedD[playerid] = 1;
          				SetPlayerTime(playerid,24,0);
	    				CurrentParticipants++;
						for(new i = 0; i < MAX_PLAYERS; i++)
						if(JoinedD[i] == 1)
						{
						new string[128];
						format(string, sizeof(string), "{38A6E6}.:|INFO|:.{D1710A} %s{FFFFFF} se unió al concierto, ahora hay{AF38E6} %d{FFFFFF} personas.", N(playerid), CurrentParticipants);
						SendClientMessage(i, azulcito, string);
						SetPlayerWorldBounds(playerid,102.7330,88.1335,139.7577,10.1788);
						}
                    	}
                    else return SendClientMessage(playerid, red, "{38A6E6}.:|ERROR|:. {FFFFFF}Está presente en éste concierto.");
                }
                else return SendClientMessage(playerid, red, "{38A6E6}.:|ERROR|:. {FFFFFF}No hay conciertos actuales que se celebra en el momento.");
            }
        }
        if(dialogid == DIALOG_MUSICNAME)
        {
            if(response)
            {
                if(PartyPrepared == 1 || PartyStarted == 1)
                {
					format(SongName, sizeof(SongName), "%s", inputtext);
                    ShowPlayerDialog(playerid, DIALOG_MUSICURL, DIALOG_STYLE_INPUT, "¿Cuál es la dirección URL de esta canción?",  "Inserta debajo de la URL de la canción que desea reproducir (Link terminado en .mp3)", "Listo", "Cancelar");
                }
                else return SendClientMessage(playerid, red, "{38A6E6}.:|ERROR|:. {FFFFFF}No hay conciertos actuales que se celebra en el momento.");
            }
        }
        if(dialogid == DIALOG_MUSICURL)
        {
            if(response)
            {
                if(PartyPrepared == 1 || PartyStarted == 1)
                {
					new string[128];
					format(string, sizeof(string), "{38A6E6}.:|ERROR|:. {FFFFFF}El DJ %s sigue con la canción {FFFFFF}'{AF38E6}%s{FFFFFF}'.", N(playerid), SongName);
					for(new i = 0; i < MAX_PLAYERS; i++)
					if(JoinedD[i] == 1 || IsADJ[i] == 1)
					{
					    PlayAudioStreamForPlayer(i, inputtext, 0, 0, 0, 50, 0);
					}
                }
                else return SendClientMessage(playerid, red, "{38A6E6}.:|ERROR|:. {FFFFFF}No hay conciertos actuales que se celebra en el momento.");
            }
        }



if(dialogid == 1515)
{
if(response)
{
switch (listitem)
{
case 0:
{
if(PlayerInfo[playerid][LoggedIn] == 1)
{
if(dUserINT(PlayerName2(playerid)).("UseSkin") == 1){
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/usarskin");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
else if(dUserINT(PlayerName2(playerid)).("UseSkin") == 0){
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/nousarskin");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
}
}
case 1:
{
if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pVip] >= 1)
{
if (dUserINT(PlayerName2(playerid)).("x")!=0) {
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/g");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
else{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/s");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
}
else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Nesesitas ser Administrador/Vip para usar esta opcion!");
}
case 2:
{
if(PlayerInfo[playerid][pVip] >= 6)
{
if(EstaEnFly[playerid]==0){
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/fly");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
else if(EstaEnFly[playerid]==1){
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/fly");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
}
else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Nesesitas ser Vip para usar esta opcion!");
}
case 3:
{
if(PlayerInfo[playerid][pVip] >= 8 || PlayerInfo[playerid][pAdmin] >= 5)
{
if(PlayerInfo[playerid][God] == 0 && PlayerInfo[playerid][pVip] >= 8 && PlayerInfo[playerid][pAdmin] == 0){
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/vgod");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
else if(PlayerInfo[playerid][God] == 0 && PlayerInfo[playerid][pAdmin] >= 5){
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/god");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
else if(PlayerInfo[playerid][God] == 1 && PlayerInfo[playerid][pVip] >= 8 && PlayerInfo[playerid][pAdmin] == 0){
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/vgod");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
else if(PlayerInfo[playerid][God] == 1 && PlayerInfo[playerid][pAdmin] >= 5){
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/god");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
}
else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Nesesitas ser Administrador/Vip para usar esta opcion!");
}
case 4:
{
if(SaltosAuto[playerid] == 0){
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/saltarauto");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
else if(SaltosAuto[playerid] == 1){
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/saltarauto");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
}
case 5:
{
if(ColUsado[playerid] == 0 || ColUsado[playerid] == 1){
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/colores");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
}
case 6:
{
if(ADpm[playerid] == 0){
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/nopm");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
else if(ADpm[playerid] == 1){
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sipm");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
}
case 7:
{
if(NODUEL[playerid] == 1){
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/siduelo");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
else if(NODUEL[playerid] == 0){
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/noduelo");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);}
}
case 8:
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/stats");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
}
}
}
return 1;
}

if(dialogid == 9145)
{
if(response)
{
switch (listitem)
{
case 0:
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sf");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
}
case 1:
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/ls");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
}
case 2:
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/lv");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
}
case 3:
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/desmadre");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
}
case 4:
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/aerosf");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
}
case 5:
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/aerols");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
}
case 6:
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/aerolv");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
}
case 7:
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/aa");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
}
case 8:
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/avion");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
}
case 9:
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/bosque");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
}
case 10:
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/colador");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
}
case 11:
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/bosque");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
}
case 12:
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/amor");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
}
}
}
return 1;
}

switch(dialogid)
{
case DB_DIALOG:
{
if(!response) return 1;
if(DBP_Stats[playerid] >= 0)
{
ShowPlayerDialog(playerid, 15157, DIALOG_STYLE_MSGBOX, "Derby", "Ya estas en el Derby!", " ", "");
return 1;
}
DBP_Stats[playerid] = listitem;
new RandomDerby = random(sizeof(DB_Spawns));
SetPlayerPosEx(playerid, DB_Spawns[DBP_Stats[playerid]][RandomDerby][0], DB_Spawns[DBP_Stats[playerid]][RandomDerby][1], DB_Spawns[DBP_Stats[playerid]][RandomDerby][2]+2, random(360), 0, 1);
DBP_Vehicle[playerid] = CreateVehicle(DB_VehicleID,DB_Spawns[DBP_Stats[playerid]][RandomDerby][0], DB_Spawns[DBP_Stats[playerid]][RandomDerby][1], DB_Spawns[DBP_Stats[playerid]][RandomDerby][2]+2,0,random(126), random(126),50000);
SetVehicleNumberPlate(DBP_Vehicle[playerid], "RL 2015");
EnviarComandoTele(playerid,"Derby2");
SendClientMessage(playerid,red,"[INFO]: {00FF00}Si quieres salir pon {FFFFFF}/derby2!");
GameTextForPlayer(playerid,"~r~Destruyelos!",4000,3);
}
case DB_DIALOG+1:
{
if(!response) return 1;
DBP_Exit(playerid);
}
}

if(dialogid == 1998)
{
if(response)
{
switch (listitem)
{
case 0: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/menupistolas");}
case 1: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/menumsubfusil");}
case 2: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/menuescopetas");}
case 3: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/menusubfusiles");}
case 4: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/menurifles");}
case 5: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/menuasalto");}
}
}
return 1;
}

if(dialogid == 1514)
{
if(response)
{
switch (listitem)
{
case 0: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/pistola");}
case 1: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/silenciada");}
case 2: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/desert");}
}
}
return 1;
}

if(dialogid == 1520)
{
if(response)
{
switch (listitem)
{
case 0: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/tec9");}
case 1: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/uzi");}
}
}
return 1;
}

if(dialogid == 1516)
{
if(response)
{
switch (listitem)
{
case 0: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/shotgun");}
case 1: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sawnoff");}
case 2: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/combate");}
}
}
return 1;
}

if(dialogid == 1517)
{
if(response)
{
switch (listitem)
{
case 0: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/mp5");}
}
}
return 1;
}

if(dialogid == 1518)
{
if(response)
{
switch (listitem)
{
case 0: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/campo");}
case 1: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/franco");}
}
}
return 1;
}

if(dialogid == 1519)
{
if(response)
{
switch (listitem)
{
case 0: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/ak47");}
case 1: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/m4");}
}
}
return 1;
}

if(dialogid == 999)
{
if(response)
{
switch (listitem)
{
case 0:
{
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado Vida y Chaleco. Te costó $2000!");
//PlayerInfo[playerid][AxoneCash] = 5;
SetPlayerHealth(playerid,100);
SetPlayerArmour(playerid,100);
CMDMessageToVips(playerid,"TIENDA");
SetTimerEx("VolverTienda", 300000, 0, "i", playerid);
YaUsoTienda[playerid] = 1;
}
case 1:
{
if(GetPlayerMoney(playerid) <= 1499) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $15000).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un Pack de Granadas. Te costó $1500!");
GivePlayerMoney(playerid, -1500);
GivePlayerWeapon(playerid, 16, 150);
CMDMessageToVips(playerid,"TIENDA");
SetTimerEx("VolverTienda", 300000, 0, "i", playerid);
YaUsoTienda[playerid] = 1;
}
case 2:
{
if(GetPlayerMoney(playerid) <= 1499) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $15000).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un Pack de Molotovs. Te costó $1500!");
GivePlayerMoney(playerid, -1500);
GivePlayerWeapon(playerid, 18, 150);
CMDMessageToVips(playerid,"TIENDA");
SetTimerEx("VolverTienda", 300000, 0, "i", playerid);
YaUsoTienda[playerid] = 1;
}
case 3:
{
if(GetPlayerMoney(playerid) <= 5999) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $15000).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado una Minigun con 2500 Municiones. Te costó $6000!");
GivePlayerMoney(playerid, -6000);
GivePlayerWeapon(playerid, 38, 2500);
CMDMessageToVips(playerid,"TIENDA");
SetTimerEx("VolverTienda", 300000, 0, "i", playerid);
YaUsoTienda[playerid] = 1;
}
case 4:
{
if(GetPlayerMoney(playerid) <= 6999) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $15000).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado una Rocket con 1000 Municiones. Te costó $7000!");
GivePlayerMoney(playerid, -7000);
GivePlayerWeapon(playerid, 35, 1000);
CMDMessageToVips(playerid,"TIENDA");
SetTimerEx("VolverTienda", 300000, 0, "i", playerid);
YaUsoTienda[playerid] = 1;
}
case 5:
{
if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Baja de tu vehiculo antes de comprar esto!");
if(GetPlayerMoney(playerid) <= 9999) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $15000).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un Tanque. Te costó $10000!");
GivePlayerMoney(playerid, -10000);
CarSpawner(playerid,432);
CMDMessageToVips(playerid,"TIENDA");
SetTimerEx("VolverTienda", 300000, 0, "i", playerid);
YaUsoTienda[playerid] = 1;
}
case 6:
{
if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Baja de tu vehiculo antes de comprar esto!");
if(GetPlayerMoney(playerid) <= 14999) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $15000).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un Hydra. Te costó $15000!");
GivePlayerMoney(playerid, -15000);
CarSpawner(playerid,520);
CMDMessageToVips(playerid,"TIENDA");
SetTimerEx("VolverTienda", 300000, 0, "i", playerid);
YaUsoTienda[playerid] = 1;
}
case 7:
{
if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Baja de tu vehiculo antes de comprar esto!");
if(GetPlayerMoney(playerid) <= 11999) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $15000).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un Seasparrow. Te costó $12000!");
GivePlayerMoney(playerid, -12000);
CarSpawner(playerid,447);
CMDMessageToVips(playerid,"TIENDA");
SetTimerEx("VolverTienda", 300000, 0, "i", playerid);
YaUsoTienda[playerid] = 1;
}
case 8:
{
if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Baja de tu vehiculo antes de comprar esto!");
if(GetPlayerMoney(playerid) <= 14999) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $15000).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un Hunter. Te costó $15000!");
GivePlayerMoney(playerid, -15000);
CarSpawner(playerid,425);
CMDMessageToVips(playerid,"TIENDA");
SetTimerEx("VolverTienda", 300000, 0, "i", playerid);
YaUsoTienda[playerid] = 1;
}
}
}
return 1;
}


if(dialogid == 9000)
{
if(response)
{
switch (listitem)
{
case 0:
{
ShowPlayerDialog(playerid, 9001, DIALOG_STYLE_TABLIST_HEADERS, "{ffb800} || Músicas RL || Reggaeton",
"Nombre\tPrecios\n\
Nicky JAM - El perdón\t1 nivel\n\
Nicky JAM - A que no te atreves\t1 nivel\n\
Nicky JAM - Si tu no estás\t1 nivel\n\
Nicky JAM - Travesuras\t1 nivel\n\
Nicky JAM - Voy a beber\t1 nivel\n\
Plan B - Si no le consteto\t1 nivel\n\
Plan B - Fanatica de lo sensual\t1 nivel\n\
Plan B - Candy\t1 nivel\n\
OSMANI GARCIA - Me lo paro el taxi\t1 nivel",
"Seleccionar","Cancelar");
}
case 1:
{
ShowPlayerDialog(playerid, 9002, DIALOG_STYLE_TABLIST_HEADERS, "{ffb800} || Músicas RL || Dubstep Liviano",
"Nombre\tPrecios\n\
Hello - OMFG\t1 nivel\n\
Fade - Alan Walker\t1 nivel\n\
Invincible - DEAF KEV\t1 nivel\n\
My Heart - Different Heaven\t1 nivel\n\
Infectious - Tobu\t1 nivel\n\
Skrillex - First Of The Year\t1 nivel\n\
Skrillex - Bangarang\t1 nivel\n\
Spectre - Alan Walker\t1 nivel\n\
Cetus - Lensko\t1 nivel",
"Seleccionar","Cancelar");
}
case 2:
{
ShowPlayerDialog(playerid, 9003, DIALOG_STYLE_TABLIST_HEADERS, "{ffb800} || Músicas RL || Dubstep Pesado",
"Nombre\tPrecios\n\
Skrillex - Turmoil\t1 nivel\n\
Borgore - NEWGOREORDER\t1 nivel\n\
The Two Friends - Sedated \t1 nivel\n\
Different Heaven - Incredicool\t1 nivel\n\
Spag Heddy - Onvang\t1 nivel\n\
Spag Heddy - The Master Vip\t1 nivel\n\
Spag Heddy - Here We Go\t1 nivel\n\
Spag Heddy - Freak It\t1 nivel\n\
Spag Heddy - Permanent\t1 nivel",
"Seleccionar","Cancelar");
}
case 3:
{
ShowPlayerDialog(playerid, 9004, DIALOG_STYLE_TABLIST_HEADERS, "{ffb800} || Músicas RL || Pop Asiatico",
"Nombre\tPrecios\n\
SHINee - Everybody\t1 nivel\n\
2PM - My House\t1 nivel\n\
Super Junior - Devil\t1 nivel\n\
SHINHWA - VENUS\t1 nivel\n\
EXO K - Growl\t1 nivel\n\
GOT7 - A\t1 nivel\n\
Speed - Pain The Love Of Heart\t1 nivel\n\
INFINITE - The Chaser\t1 nivel\n\
Bts - War of Hormone\t1 nivel",
"Seleccionar","Cancelar");
}
case 4:
{
ShowPlayerDialog(playerid, 9005, DIALOG_STYLE_TABLIST_HEADERS, "{ffb800} || Músicas RL || Pop Américano",
"Nombre\tPrecios\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO",
"Seleccionar","Cancelar");
}
case 5:
{
ShowPlayerDialog(playerid, 9006, DIALOG_STYLE_TABLIST_HEADERS, "{ffb800} || Músicas RL || Electrónicas",
"Nombre\tPrecios\n\
Avicii Levels\t1 nivel\n\
Avicii The Nights\t1 nivel\n\
Avicii Hey Brother\t1 nivel\n\
Avicii Wake Me Up\t1 nivel\n\
Avicii You Make Me\t1 nivel\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO",
"Seleccionar","Cancelar");
}
case 6:
{
ShowPlayerDialog(playerid, 9007, DIALOG_STYLE_TABLIST_HEADERS, "{ffb800} || Músicas RL || Lentos",
"Nombre\tPrecios\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO",
"Seleccionar","Cancelar");
}
case 7:
{
ShowPlayerDialog(playerid, 9008, DIALOG_STYLE_TABLIST_HEADERS, "{ffb800} || Músicas RL || Rock",
"Nombre\tPrecios\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO",
"Seleccionar","Cancelar");
}
case 8:
{
ShowPlayerDialog(playerid, 9009, DIALOG_STYLE_TABLIST_HEADERS, "{ffb800} || Músicas RL || Los 80'",
"Nombre\tPrecios\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO\n\
{FF0000}VACÍO",
"Seleccionar","Cancelar");
}
}
}
return 1;
}


if(dialogid == 9001)
{
if(response)
{
switch (listitem)
{
case 0:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Reggaeton/Nicky%20Jam/El%20Perdon.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Nicky JAM - El perdón'");
}
case 1:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Reggaeton/Plan%20B/A%20que%20no%20te%20atreves.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Nicky JAM - A que no te atreves'");
}
case 2:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Reggaeton/Nicky%20Jam/Si%20tu%20no%20estas.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Nicky JAM - Si tu no estás'");
}
case 3:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Reggaeton/Nicky%20Jam/Travesuras.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Nicky JAM - Travesuras'");
}
case 4:
{
PlayAudioStreamForPlayer(playerid, "http://wwxpeedmusic.esy.es/Reggaeton/Nicky%20Jam/Voy%20a%20beber.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Nicky JAM - Voy a beber'");
}
case 5:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Reggaeton/Plan%20B/Si%20no%20le%20contesto.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Plan B - Si no le contesto'");
}
case 6:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Reggaeton/Plan%20B/Fanatica%20sensual.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Fanatica de lo Sensual - Plan B'");
}
case 7:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Reggaeton/Plan%20B/Candy.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Candy - Plan B'");
}
case 8:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Reggaeton/Osmani%20Garcia/El%20Taxi.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Osmani Garcia - El Taxi'");
}
}
}
return 1;
}


if(dialogid == 9002)
{
if(response)
{
switch (listitem)
{
case 0:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20liviano/OMFG/Hello.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Hello - OMFG'");
}
case 1:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20liviano/Alan%20Walker/Fade.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Fade - Alan Walker'");
}
case 2:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20liviano/Deaf%20Kev/Invincible.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Invincible - DEAF KEV'");
}
case 3:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20liviano/My%20Heart/Different%20Heaven.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'My Heart - Different Heaven'");
}
case 4:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20liviano/Tobu/Infectious.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Infectious - Tobu'");
}
case 5:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20liviano/Skrillex/Firts%20Of%20The%20Year.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Skrillex - First of the Year'");
}
case 6:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20liviano/Skrillex/Bangarang.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Skrillex - Bangarang'");
}
case 7:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20liviano/Alan%20Walker/Spectre.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música ' Spectre - Alan Walker'");
}
case 8:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20liviano/Lensko/Cetus.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Cetus - Lensko'");
}
}
}
return 1;
}


if(dialogid == 9003)
{
if(response)
{
switch (listitem)
{
case 0:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20pesado/Skrillex/Turmoil.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Skrillex - Turmoil'");
}
case 1:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20pesado/Borgore/Newgoreorder.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Borgore - NEWGOREORDER'");
}
case 2:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20pesado/Two%20Friends/Sedated.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'The Two Friends - Sedated'");
}
case 3:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20pesado/Different%20Heaven/Incredicool.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Different Heaven - Incredicool'");
}
case 4:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20pesado/Spag%20Heddy/Onvang.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Spag Heddy - Onvang'");
}
case 5:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20pesado/Spag%20Heddy/The%20Master%20VIP.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Spag Heddy - The Master Vip'");
}
case 6:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20pesado/Spag%20Heddy/Here%20We%20Go.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Spag Heddy - Here We Go'");
}
case 7:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20pesado/Spag%20Heddy/Freak%20It.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Spag Heddy - Freak It'");
}
case 8:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Dubstep%20pesado/Spag%20Heddy/Permanent.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Spag Heddy - Permanent'");
}
}
}
return 1;
}


if(dialogid == 9004)
{
if(response)
{
switch (listitem)
{
case 0:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Pop%20Asiatico/SHINee/Everybody.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'SHINee - Everybody'");
}
case 1:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Pop%20Asiatico/2PM/My%20House.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música '2PM - My House'");
}
case 2:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Pop%20Asiatico/Super%20Junior/Devil.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Super Junior - Devil'");
}
case 3:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Pop%20Asiatico/SHINHWA/Venus.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'SHINHWA - VENUS'");
}
case 4:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Pop%20Asiatico/EXO%20K/Growl.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'EXO K - Growl'");
}
case 5:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Pop%20Asiatico/GOT7/-%20A%20-.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'GOT7 - A'");
}
case 6:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Pop%20Asiatico/Speed/Pain%20The%20Love%20Of%20Heart.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Speed - Pain The Love Of Heart'");
}
case 7:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Pop%20Asiatico/INFINITE/The%20Chaser.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'INFINITE - The Chaser'");
}
case 8:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Pop%20Asiatico/Bts/War%20Of%20Hormon.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Bts - War of Hormone'");
}
}
}
return 1;
}


if(dialogid == 9005)
{
if(response)
{
switch (listitem)
{
case 0:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 1:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 2:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 3:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 4:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 5:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 6:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 7:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 8:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
}
}
return 1;
}


if(dialogid == 9006)
{
if(response)
{
switch (listitem)
{
case 0:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Electronicas/Avicii/Levels.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Avicii Levels'");
}
case 1:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Electronicas/Avicii/The%20Nights.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Avicii The Nights'");
}
case 2:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Electronicas/Avicii/Hey%20Brother.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Avicii Hey Brother'");
}
case 3:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Electronicas/Avicii/Wake%20Me%20Up.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Avicii Wake Me Up'");
}
case 4:
{
PlayAudioStreamForPlayer(playerid, "http://xpeedmusic.esy.es/Electronicas/Avicii/You%20Make%20Me.mp3");
PlayerInfo[playerid][Nivel] = PlayerInfo[playerid][Nivel]- 1;
SendClientMessage(playerid,green,"[Info]: Gracias por comprar la música 'Avicii You Make Me'");
}
case 5:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 6:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 7:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 8:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
}
}
return 1;
}

if(dialogid == 9007)
{
if(response)
{
switch (listitem)
{
case 0:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 1:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 2:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 3:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 4:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 5:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 6:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 7:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 8:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
}
}
return 1;
}

if(dialogid == 9008)
{
if(response)
{
switch (listitem)
{
case 0:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 1:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 2:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 3:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 4:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 5:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 6:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 7:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 8:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
}
}
return 1;
}

if(dialogid == 9009)
{
if(response)
{
switch (listitem)
{
case 0:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 1:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 2:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 3:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 4:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 5:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 6:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 7:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
case 8:
{
SendClientMessage(playerid,red, "[INFO]: {FFFFFF}Esta música no se encuentra en la base de datos.");
}
}
}
return 1;
}

if(dialogid == 10000)
{
if(response)
{
switch (listitem)
{
case 0:
{
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "{FF0000}[INFO]: Has comprado 250 de score! Te costó 5 aXoneCash.");
PlayerInfo[playerid][AxoneCash] = PlayerInfo[playerid][AxoneCash]- 5;
SetPlayerScore(playerid,GetPlayerScore(playerid) + 250);
PlayerInfo[playerid][Kills] = PlayerInfo[playerid][Kills]+ 250;
new Nombre[MAX_PLAYER_NAME],str[328];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(str,sizeof(str),"{FF0000}[INFO]: {FFFFFF}El usuario %s[%d] ha usado el comando {29FF0D}/Atienda. (TIENDA AXONE/250 SCORE)", Nombre, playerid);
MessageToAdmins(0xff9900ff, str);
}
case 1:
{
if(PlayerInfo[playerid][AxoneCash] <= 14) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente aXoneCash (Costo 15 aXoneCash).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado VIP SILVER (+ 1000 de score). Te costó 15 aXoneCash!");
PlayerInfo[playerid][AxoneCash] = PlayerInfo[playerid][AxoneCash]- 15;
SetPlayerScore(playerid, 1000);
PlayerInfo[playerid][Kills] = 1000;
new Nombre[MAX_PLAYER_NAME],str[328];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(str,sizeof(str),"{FF0000}[INFO]: {FFFFFF}El usuario %s[%d] ha usado el comando {29FF0D}/Atienda. (TIENDA AXONE/VIP SILVER)", Nombre, playerid);
MessageToAdmins(0xff9900ff, str);
PlayerInfo[playerid][pVip] = 1;
}
case 2:
{
if(PlayerInfo[playerid][AxoneCash] <= 24) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente aXoneCash (Costo 25 aXoneCash).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado VIP GOLD (+ 3500 de score). Te costó 25 aXoneCash!");
PlayerInfo[playerid][AxoneCash] = PlayerInfo[playerid][AxoneCash]- 25;
SetPlayerScore(playerid, 3500);
PlayerInfo[playerid][Kills] = 3500;
new Nombre[MAX_PLAYER_NAME],str[328];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(str,sizeof(str),"{FF0000}[INFO]: {FFFFFF}El usuario %s[%d] ha usado el comando {29FF0D}/Atienda. (TIENDA AXONE/VIP GOLD)", Nombre, playerid);
MessageToAdmins(0xff9900ff, str);
PlayerInfo[playerid][pVip] = 2;
}
case 3:
{
if(PlayerInfo[playerid][AxoneCash] <= 29) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente aXoneCash (Costo 30 aXoneCash).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado VIP PREMIUM (+ 5000 de score). Te costó 30 aXoneCash!");
PlayerInfo[playerid][AxoneCash] = PlayerInfo[playerid][AxoneCash]- 35;
SetPlayerScore(playerid, 5000);
PlayerInfo[playerid][Kills] = 5000;
new Nombre[MAX_PLAYER_NAME],str[328];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(str,sizeof(str),"{FF0000}[INFO]: {FFFFFF}El usuario %s[%d] ha usado el comando {29FF0D}/Atienda. (TIENDA AXONE/VIP PREMIUM)", Nombre, playerid);
MessageToAdmins(0xff9900ff, str);
PlayerInfo[playerid][pVip] = 3;
}
case 4:
{
if(PlayerInfo[playerid][AxoneCash] <= 34) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente aXoneCash (Costo 35 aXoneCash).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado VIP PLATINUM (+ 10000 de score). Te costó 35 aXoneCash!");
PlayerInfo[playerid][AxoneCash] = PlayerInfo[playerid][AxoneCash]- 35;
SetPlayerScore(playerid, 10000);
PlayerInfo[playerid][Kills] = 10000;
new Nombre[MAX_PLAYER_NAME],str[328];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(str,sizeof(str),"{FF0000}[INFO]: {FFFFFF}El usuario %s[%d] ha usado el comando {29FF0D}/Atienda. (TIENDA AXONE/VIP PLATINUM)", Nombre, playerid);
MessageToAdmins(0xff9900ff, str);
PlayerInfo[playerid][pVip] = 4;
}
case 5:
{
if(PlayerInfo[playerid][AxoneCash] <= 39) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente aXoneCash (Costo 40 aXoneCash).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado VIP ESMERALDA (+ 15000 de score). Te costó 40 aXoneCash!");
PlayerInfo[playerid][AxoneCash] = PlayerInfo[playerid][AxoneCash]- 40;
SetPlayerScore(playerid, 15000);
PlayerInfo[playerid][Kills] = 15000;
new Nombre[MAX_PLAYER_NAME],str[328];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(str,sizeof(str),"{FF0000}[INFO]: {FFFFFF}El usuario %s[%d] ha usado el comando {29FF0D}/Atienda. (TIENDA AXONE/VIP ESMERALDA)", Nombre, playerid);
MessageToAdmins(0xff9900ff, str);
PlayerInfo[playerid][pVip] = 5;
}
case 6:
{
if(PlayerInfo[playerid][AxoneCash] <= 44) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente aXoneCash (Costo 45 aXoneCash).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado VIP DIAMOND (+ 20000 de score). Te costó 45 aXoneCash!");
PlayerInfo[playerid][AxoneCash] = PlayerInfo[playerid][AxoneCash]- 45;
SetPlayerScore(playerid, 20000);
PlayerInfo[playerid][Kills] = 20000;
new Nombre[MAX_PLAYER_NAME],str[328];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(str,sizeof(str),"{FF0000}[INFO]: {FFFFFF}El usuario %s[%d] ha usado el comando {29FF0D}/Atienda. (TIENDA AXONE/VIP DIAMOND)", Nombre, playerid);
MessageToAdmins(0xff9900ff, str);
PlayerInfo[playerid][pVip] = 6;
}
case 7:
{
if(PlayerInfo[playerid][AxoneCash] <= 49) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente aXoneCash (Costo 50 aXoneCash).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado VIP EXTREMO (+ 30000 de score). Te costó 50 aXoneCash!");
PlayerInfo[playerid][AxoneCash] = PlayerInfo[playerid][AxoneCash]- 50;
SetPlayerScore(playerid, 30000);
PlayerInfo[playerid][Kills] = 30000;
new Nombre[MAX_PLAYER_NAME],str[328];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(str,sizeof(str),"{FF0000}[INFO]: {FFFFFF}El usuario %s[%d] ha usado el comando {29FF0D}/Atienda. (TIENDA AXONE/VIP EXTREMO)", Nombre, playerid);
MessageToAdmins(0xff9900ff, str);
PlayerInfo[playerid][pVip] = 7;
}
case 8:
{
if(PlayerInfo[playerid][AxoneCash] <= 59) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente aXoneCash (Costo 60 aXoneCash).");
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado VIP LEGENDARIO (+ 75000 de score). Te costó 60 aXoneCash!");
PlayerInfo[playerid][AxoneCash] = PlayerInfo[playerid][AxoneCash]- 60;
SetPlayerScore(playerid, 75000);
PlayerInfo[playerid][Kills] = 75000;
new Nombre[MAX_PLAYER_NAME],str[328];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(str,sizeof(str),"{FF0000}[INFO]: {FFFFFF}El usuario %s[%d] ha usado el comando {29FF0D}/Atienda. (TIENDA AXONE/VIP LEGENDARIO)", Nombre, playerid);
MessageToAdmins(0xff9900ff, str);
PlayerInfo[playerid][pVip] = 8;
}
}
}
return 1;
}

if(dialogid ==6061)
{
if(response)
{
switch (listitem)
{
case 0: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/ayuda1");}
case 1: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/cmds");}
case 2: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/reglas");}
case 3: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/armas");}
case 4: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/teles");}
case 5: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/dmteles");}
case 6: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/autos");}
case 7: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/admins");}
case 8: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/vips");}
case 9: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sampinfo");}
case 10: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/minijuegos");}
}
}
return 1;
}

if(dialogid == 5150)
{
if(response)
{
switch (listitem)
{
case 0: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/evsurvival");}
case 1: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/evop7");}
case 2: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/evhg");}
case 3: { ShowPlayerDialog(playerid,5635,DIALOG_STYLE_LIST,"Elige un Modo","Caidas de la Plataformas\nPlataformas Suben y Bajan","Elegir", "Cancelar");}
case 4: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/evrevolucion");}
case 5: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/evderby");}
case 6: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/evrhino");}
case 7: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/evparkour");}
case 8: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/evzombie");}
case 9: { CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/evlaberinto");}
case 10:
{
new strrace[2600];
strcat(strrace,"Alpha\nArenaDune\nBanshee\nBiciRace\nBMX\nBomberMania\n");
strcat(strrace,"AeroStyle\naerolv\nBondiDrag\nBuffalo\nBullet\nCity Ls\nComet\n");
strcat(strrace,"Country SF\nDesert\nDesert 2.0\nDobleDrag\n");
strcat(strrace,"Drift\nEuros\nFastRace\nHotring\nHydra\n");
strcat(strrace,"Industrial\nInfernus\nInfinity\nJester\nLS Hills\nLS Style\n");
strcat(strrace,"LS to LV\nLv Freeway\nLV North\nLvRace\nMini Streets\n");
strcat(strrace,"Mini Streets 2.0\nMonte\nMonte 2.0\nPicada\nPlaya\nQuadRace\n");
strcat(strrace,"WTF\nRally 2.0\nSF City\nSF South\nShamal\n");
strcat(strrace,"Suburbana\nSultan\nTheRcRace\nTheTruck\nTramRace\nTurismoLs\n");
strcat(strrace,"VortexRace\nCountrySF\nLS-LVAutopista\nSF City 2.0\nRailRace\n");
strcat(strrace,"Country LS\nLS Beach\nLvRace 2.0\nRailRace 2.0\nFastRace 2.0 {FF0000}[BUG]");
ShowPlayerDialog(playerid,DIALOG_RACE,DIALOG_STYLE_LIST,"Carreras",strrace,"Aceptar","Cancelar");
}
}
}
return 1;
}

if(dialogid == DIALOG_RACE)
{
if(response)
{
switch (listitem)
{
case 0: {LoadRace(playerid, "Alpha");}
case 1: {LoadRace(playerid, "ArenaDune");}
case 2: {LoadRace(playerid, "Banshee");}
case 3: {LoadRace(playerid, "BiciRace");}
case 4: {LoadRace(playerid, "BMX");}
case 5: {LoadRace(playerid, "BomberMania");}
case 6: {LoadRace(playerid, "AeroStyle");}
case 7: {LoadRace(playerid, "aerolv");}
case 8: {LoadRace(playerid, "BondiDrag");}
case 9: {LoadRace(playerid, "Buffalo");}
case 10: {LoadRace(playerid, "Bullet");}
case 11: {LoadRace(playerid, "City Ls");}
case 12: {LoadRace(playerid, "Comet");}
case 13: {LoadRace(playerid, "Country SF");}
case 14: {LoadRace(playerid, "Desert");}
case 15: {LoadRace(playerid, "Desert 2.0");}
case 16: {LoadRace(playerid, "DobleDrag");}
case 17: {LoadRace(playerid, "Drift");}
case 18: {LoadRace(playerid, "Euros");}
case 19: {LoadRace(playerid, "FastRace");}
case 20: {LoadRace(playerid, "Hotring");}
case 21: {LoadRace(playerid, "Hydra");}
case 22: {LoadRace(playerid, "Industrial");}
case 23: {LoadRace(playerid, "Infernus");}
case 24: {LoadRace(playerid, "Infinity");}
case 25: {LoadRace(playerid, "Jester");}
case 26: {LoadRace(playerid, "LS Hills");}
case 27: {LoadRace(playerid, "LS Style");}
case 28: {LoadRace(playerid, "LS to LV");}
case 29: {LoadRace(playerid, "Lv Freeway");}
case 30: {LoadRace(playerid, "LV North");}
case 31: {LoadRace(playerid, "LvRace");}
case 32: {LoadRace(playerid, "Mini Streets");}
case 33: {LoadRace(playerid, "Mini Streets 2.0");}
case 34: {LoadRace(playerid, "Monte");}
case 35: {LoadRace(playerid, "Monte 2.0");}
case 36: {LoadRace(playerid, "Picada");}
case 37: {LoadRace(playerid, "Playa");}
case 38: {LoadRace(playerid, "QuadRace");}
case 39: {LoadRace(playerid, "WTF");}
case 40: {LoadRace(playerid, "Rally 2.0");}
case 41: {LoadRace(playerid, "SF City");}
case 42: {LoadRace(playerid, "SF South");}
case 43: {LoadRace(playerid, "Shamal");}
case 44: {LoadRace(playerid, "Suburbana");}
case 45: {LoadRace(playerid, "Sultan");}
case 46: {LoadRace(playerid, "TheRcRace");}
case 47: {LoadRace(playerid, "TheTruck");}
case 48: {LoadRace(playerid, "TramRace");}
case 49: {LoadRace(playerid, "TurismoLs");}
case 50: {LoadRace(playerid, "VortexRace");}
case 51: {LoadRace(playerid, "CountrySF");}
case 52: {LoadRace(playerid, "LS-LVAutopista");}
case 53: {LoadRace(playerid, "SF City 2.0");}
case 54: {LoadRace(playerid, "RailRace");}
case 55: {LoadRace(playerid, "Country LS");}
case 56: {LoadRace(playerid, "LS Beach");}
case 57: {LoadRace(playerid, "LvRace 2.0");}
case 58: {LoadRace(playerid, "RailRace 2.0");}
case 59: {LoadRace(playerid, "FastRace 2.0[BUG]");}
}
}
return 1;
}

if(dialogid == 5057)
{
if(response)
{
switch (listitem)
{
case 0: {ArenaSwat1 = 1;SSWAT = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/Revolucion");}
case 1: {ArenaSwat2 = 1;SSWAT = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/Revolucion");}
}
}
return 1;
}

if(dialogid ==5156)
{
if(response)
{
switch (listitem)
{
case 0: { ArenaRhino1 = 1;SRHINO = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/rhino");}
case 1: { ArenaRhino2 = 1;SRHINO = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/rhino");}
}
}
return 1;
}

if(dialogid == 5635)
{
if(response)
{
switch (listitem)
{
case 0: { SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/evgetwet");}
case 1: { SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/evgetwet1");}
}
}
return 1;
}

if(dialogid == 5055)
{
if(response)
{
switch (listitem)
{
case 0: {RushChallenge = 1;SOP7 = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/op7");}
case 1: {DeathSquare = 1;SOP7 = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/op7");}
case 2: {Otro = 1;SOP7 = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/op7");}
}
}
return 1;
}

if(dialogid == 5154)
{
if(response)
{
switch (listitem)
{
case 0: {arenabox1 = 1;arenabox2 = 0;ShowPlayerDialog(playerid,5155,DIALOG_STYLE_LIST,"Elige Arma Blanca/Balas","Puño\nPala\nBate\nDildo\nPalo de Golf\n9mm\nDesert Eagle\nShotgun\nSpray","Elegir", "Cancelar");}
case 1: {arenabox2 = 1;arenabox1 = 0;ShowPlayerDialog(playerid,5155,DIALOG_STYLE_LIST,"Elige Arma Blanca/Balas","Puño\nPala\nBate\nDildo\nPalo de Golf\n9mm\nDesert Eagle\nShotgun\nSpray","Elegir", "Cancelar");}
}
}
return 1;
}

if(dialogid == 5155)
{
if(response)
{
switch (listitem)
{
case 0: {Puno = 1;SBOX = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/survival");}
case 1: {Pala = 1;SBOX = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/survival");}
case 2: {Bate = 1;SBOX = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/survival");}
case 3: {Dildo = 1;SBOX = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/survival");}
case 4: {Golf = 1;SBOX = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/survival");}
case 5: {Nmm = 1;SBOX = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/survival");}
case 6: {Desert = 1;SBOX = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/survival");}
case 7: {Shotgun = 1;SBOX = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/survival");}
case 8: {Spray = 1;SBOX = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/survival");}
}
}
return 1;
}

if(dialogid ==5180)
{
if(response)
{
switch (listitem)
{
case 0: { SHG = 1;ArenaHG1 = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/hg");}
case 1: { SHG = 1;ArenaHG2 = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/hg");}
}
}
return 1;
}

if(dialogid == 5185)
{
if(response)
{
switch (listitem)
{
case 0: {ArenaZombie1 = 1;SZOMBIE = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/zombie");}
case 1: {ArenaZombie2 = 1;SZOMBIE = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/zombie");}
}
}
return 1;
}

if(dialogid == 5090)
{
if(response)
{
switch (listitem)
{
case 0: {ArenaDerby1 = 1;SDERBY = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/derby");}
case 1: {ArenaDerby2 = 1;SDERBY = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/derby");}
}
}
return 1;
}

if(dialogid == 5198)
{
if(response)
{
switch (listitem)
{
case 0: {ArenaP1 = 1;SPARK = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/park");}
case 1: {ArenaP2 = 1;SPARK = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/park");}
}
}
return 1;
}

if(dialogid == 5199)
{
if(response)
{
switch (listitem)
{
case 0: {ArenaL1 = 1;SLAB = 1;SEVENTO = 1; CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/laberinto");}
}
}
return 1;
}

if (dialogid == INVITAR)
	{
		if (response)
		{
			if(!udb_Exists(PlayerName2(playerid))) return SendClientMessage(playerid, COLOR_GREEN, "[ERROR]: {FFFFFF}Usted Debe Estar Registrado {0000FF}(/register)");
            if(PlayerGang[playerid] == 1) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Tú Debes Salir Primero De Tu Clan!");
            if(invited[playerid] == 0) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No Has Sido Invitado a Ningún Clan!");
            JoinGang(playerid, invited[playerid]);
		}
		if (!response)
		{
            invited[playerid] = 0;
            SendClientMessage(playerid, COLOR_ROJO, "[INFO]: Has Rechazado la Invitación al Clan!");
		}
        return 1;
	}

if(dialogid == DIALOG_EVENTO)
	{
	AntiFlood[playerid] = 0;
	    if(response)
		{
		    switch (listitem)
			{
				case 0:
				{
					if(EventInfo[Criado] == 1) return SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}Ya existe un evento Abierto, Finalíselo para crear otro!");
					if(SEVENTO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Ya hay un Evento/Carrera. Espera a que termine!");
					ShowPlayerDialog(playerid, DIALOG_NOMEEVENTO, DIALOG_STYLE_INPUT, "{00FF00}Creación de Evento", "Digite el Nombre del Evento:", "Continuar", "");
					return 1;
				}
				case 1:
				{
					if(EventInfo[Criado] == 0)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}No existe ningún Evento creado!");
					SetPlayerPos(playerid, EventInfo[Xq], EventInfo[Yq], EventInfo[Zq]);
					SetPlayerVirtualWorld(playerid, EventInfo[VirtualWorld]);
					SetPlayerInterior(playerid, EventInfo[Interior]);
					SendClientMessage(playerid, COLOR_AMARILLO, "[EVENTO]: ¡Fuiste llevado a la ubicación del Evento!");
					return 1;
				}
				case 2:
				{
					if(EventInfo[Criado] == 0)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}No existe ningún Evento creado!");
					ShowPlayerDialog(playerid, DIALOG_ARMA, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite la ID del Arma que darás a\ntodos los Jugadores del Evento:", "Continuar", "Cancelar");
					return 1;
				}
				case 3:
				{
					if(EventInfo[Criado] == 0)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}No existe ningún Evento creado!");
					ShowPlayerDialog(playerid, DIALOG_CARRO, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite la ID del Vehículo que darás a\ntodos los Jugadores del Evento:\n\n(0 = Nenhum)", "Continuar", "Cancelar");
					return 1;
				}
				case 4:
				{
					if(EventInfo[Criado] == 0)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}No existe ningún Evento creado!");
					ShowPlayerDialog(playerid, DIALOG_FIM1, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite la ID del Primer Lugar del Evento:", "Continuar", "Cancelar");
					return 1;
				}
				case 5:
				{
					if(EventInfo[Criado] == 0)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}No existe ningún Evento creado!");
					ShowPlayerDialog(playerid, DIALOG_VIDAVEICULOS, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite la Vida que deseas definir a los\nVehículos del Evento:", "Definir", "Cancelar");
					return 1;
				}
				case 6:
				{
					if(EventInfo[Criado] == 0)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}No existe ningún Evento creado!");
					ShowPlayerDialog(playerid, DIALOG_KICK, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite la ID del Jugador que deseas Kickear del Evento:", "Kickar", "Cancelar");
					return 1;
				}
				case 7:
				{
					if(EventInfo[Criado] == 0)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}No existe ningún Evento creado!");
					ShowPlayerDialog(playerid, DIALOG_VIDA, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite la Vida que deseas definir a los\nJugadores del Evento", "Definir", "Cancelar");
					return 1;
				}
				case 8:
				{
					if(EventInfo[Criado] == 0)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}No existe ningún Evento creado!");
					ShowPlayerDialog(playerid, DIALOG_SKIN1, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite la ID del Skin que deseas\naplicar a los Jugadores del Evento:", "Definir", "Cancelar");
					return 1;
				}
				case 9:
				{
					if(EventInfo[Criado] == 0)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}No existe ningún Evento creado!");
					for(new p = 0; p < MAX_PLAYERS; p++)
					{
						if(PlayerInfoE[p][NoEvento] == 1)
						{
							TogglePlayerControllable(p, 0);
						}
					}
					GetPlayerName(playerid, NomePlayer, MAX_PLAYER_NAME);
					format(Format, sizeof(Format), "[EVENTO]: El Administrador %s Congeló a todos los Jugadores del Evento!", NomePlayer);
					SendEventMessage(COR_INFO, Format);
					return 1;
				}
				case 10:
				{
					if(EventInfo[Criado] == 0)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}No existe ningún Evento creado!");
					for(new p = 0; p < MAX_PLAYERS; p++)
					{
						if(PlayerInfoE[p][NoEvento] == 1)
						{
							TogglePlayerControllable(p, 1);
						}
					}
					GetPlayerName(playerid, NomePlayer, MAX_PLAYER_NAME);
					format(Format, sizeof(Format), "[EVENTO]: El Administrador %s Descongeló a todos los Jugadores del Evento!", NomePlayer);
					SendEventMessage(COR_INFO, Format);
					return 1;
				}
				case 11:
				{
					if(EventInfo[Criado] == 0)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}No existe ningún Evento creado!");
					for(new p = 0; p < MAX_PLAYERS; p++)
					{
						if(PlayerInfoE[p][NoEvento] == 1)
						{
							ResetPlayerWeapons(p);
						}
					}
					EventInfo[Arma] = 0;
					GetPlayerName(playerid, NomePlayer, MAX_PLAYER_NAME);
					format(Format, sizeof(Format), "[EVENTO]: El Administrador %s Reseteó las Armas a los Jugadores del Evento!", NomePlayer);
					SendEventMessage(COR_INFO, Format);
					return 1;
				}
				case 12:
				{
                    if(EventInfo[Criado] == 0)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}No existe ningún Evento creado!");
					new Float:x,Float:y,Float:z, interior = GetPlayerInterior(playerid);
			    	GetPlayerPos(playerid,x,y,z);
				   	for(new i = 0; i < MAX_PLAYERS; i++)
		            {
						if(IsPlayerConnected(i) && (i != playerid) && PlayerInfoE[i][NoEvento] == 1)
						{
							PlayerPlaySound(i,1057,0.0,0.0,0.0);
							SetPlayerPos(i, x+1, y, z);
							SetPlayerInterior(i,interior);
						}
					}
					GetPlayerName(playerid, NomePlayer, MAX_PLAYER_NAME);
					format(Format, sizeof(Format), "[EVENTO]: El Administrador %s Llevo a todos los Jugadores del Evento a su Posicion!", NomePlayer);
					SendClientMessageToAll(COR_INFO, Format);
					return 1;
				}
			}
		}
		return 1;
	}

	if(dialogid == DIALOG_DEFINIR)
	{
	    if(response)
		{
        GetPlayerPos(playerid, PosX, PosY, PosZ);
        GetPlayerFacingAngle(playerid, PosA);
		EventInfo[Xq] = PosX;
		EventInfo[Yq] = PosY;
		EventInfo[Zq] = PosZ;
		EventInfo[Aq] = PosA;
		EventInfo[Interior] = GetPlayerInterior(playerid);
		EventInfo[VirtualWorld] = (GetPlayerVirtualWorld(playerid) + 1);
		SendClientMessage(playerid, -1, "[INFO]: Posición del Evento Definida!");
		ShowPlayerDialog(playerid, DIALOG_PREMIO1, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite cual será el Premio para el 1º Lugar:", "Salvar", "");
		}
		return 1;
	}

	if(dialogid == DIALOG_NOMEEVENTO)
	{
	    if(response)
		{
            if(strlen(inputtext) < 5 || strlen(inputtext) > 19)	return	ShowPlayerDialog(playerid, DIALOG_NOMEEVENTO, DIALOG_STYLE_INPUT, "{00FF00}Creación de Evento", "{FF0000}[ERROR]: {FFFFFF}El Nombre debe ser de 5 a 19 Carácteres! \n{BCC3E1}Digite el Nombre del Evento:", "Continuar", "");
			format(NameA, sizeof(NameA), "%s", inputtext);
			EventInfo[Nome] = NameA;
			ShowPlayerDialog(playerid, DIALOG_DEFINIR, DIALOG_STYLE_MSGBOX, "Creación de Evento", "Elija La posición del Evento", "Aceptar", "");
			return 1;
		}
		return 1;
	}
	if(dialogid == DIALOG_PREMIO1)
	{
	    if(response)
		{
			if(strval(inputtext) < 1 || strval(inputtext) > 100000)	return	ShowPlayerDialog(playerid, DIALOG_PREMIO1, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "{FF0000}[ERROR]: {FFFFFF}El Premio debe ser Minimo $1 y Máximo $100000 ! \n{BCC3E1}Digite cual será el Premio para el 1º Lugar:", "Salvar", "");
			EventInfo[Premio1] = strval(inputtext);
			SendClientMessage(playerid, -1, "[INFO]: Premio para el 1º Lugar Definido!");
			ShowPlayerDialog(playerid, DIALOG_PREMIO2, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite cual será el Premio para el 2º Lugar:", "Salvar", "");
			return 1;
		}
		return 1;
	}
	if(dialogid == DIALOG_PREMIO2)
	{
	    if(response)
		{
			if(strval(inputtext) < 1 || strval(inputtext) > 10000)	return	ShowPlayerDialog(playerid, DIALOG_PREMIO2, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "{FF0000}[ERROR]: {FFFFFF}El Premio debe ser Minimo $1 y Máximo $10000 ! \n{BCC3E1}Digite cual será el Premio para el 2º Lugar:", "Salvar", "");
			EventInfo[Premio2] = strval(inputtext);
			SendClientMessage(playerid, -1, "[INFO]: Premio para el 2º Lugar Definido!");
			ShowPlayerDialog(playerid, DIALOG_PREMIO3, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite cual será el Premio para el 3º Lugar:", "Salvar", "");
			return 1;
		}
		return 1;
	}
	if(dialogid == DIALOG_PREMIO3)
	{
	    if(response)
		{
			if(strval(inputtext) < 1 || strval(inputtext) > 5000)	return	ShowPlayerDialog(playerid, DIALOG_PREMIO3, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "{FF0000}[ERROR]: {FFFFFF}El Premio debe ser Minimo $1 y Máximo $5000 ! \n{BCC3E1}Digite cual será el Premio para el 3º Lugar:", "Salvar", "");
			EventInfo[Premio3] = strval(inputtext);
			SendClientMessage(playerid, -1, "[INFO]: Premio para el 3º Lugar Definido!");
			ShowPlayerDialog(playerid, DIALOG_PREMIO4, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite cual será la Cantidad de Score para el Ganador:", "Salvar", "");
		}
		return 1;
	}
	if(dialogid == DIALOG_PREMIO4)
	{
	    if(response)
		{
			if(strval(inputtext) < 0 || strval(inputtext) > 400)	return	ShowPlayerDialog(playerid, DIALOG_PREMIO4, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "{FF0000}[ERROR]: {FFFFFF}El Premio debe ser Minimo 1 y Máximo 400 Score ! \n{BCC3E1}Digite cual será la Cantidad de Score para el Ganador:", "Salvar", "");
			EventInfo[PremioS] = strval(inputtext);
			SendClientMessage(playerid, -1, "[INFO]: Premio de Score para el Ganador Definido!");
			ShowPlayerDialog(playerid, DIALOG_PREMIO5, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite cual será la Cantidad de NivelxVip para el Ganador:", "Salvar", "");
		}
		return 1;
	}
	if(dialogid == DIALOG_PREMIO5)
	{
	    if(response)
		{
			if(strval(inputtext) < 0 || strval(inputtext) > 2500)	return	ShowPlayerDialog(playerid, DIALOG_PREMIO5, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "{FF0000}[ERROR]: {FFFFFF}El Premio debe ser Minimo 0 y Máximo 2500 NivelxVip ! \n{BCC3E1}Digite cual será la Cantidad de NivelxVip para el Ganador:", "Salvar", "");
			EventInfo[PremioN] = strval(inputtext);
			SendClientMessage(playerid, -1, "[INFO]: Premio de Nivel para el Ganador Definido!");
			ShowPlayerDialog(playerid, DIALOG_ABRIREVENTO, DIALOG_STYLE_MSGBOX, "Creación de Evento", "Evento Creado, dale en Aceptar para Comenzar", "Aceptar", "");
		}
		return 1;
	}
	if(dialogid == DIALOG_ARMA)
	{
	    if(response)
		{
		    if(strval(inputtext) == 16 || strval(inputtext) == 18 || strval(inputtext) == 36 || strval(inputtext) == 37 || strval(inputtext) == 39 || strval(inputtext) == 44 || strval(inputtext) == 45) return  SendClientMessage(playerid,COR_ERRO, "[ERROR]: {FFFFFF}No Puedes dar esta Arma!");

			if(strval(inputtext) < 1 || strval(inputtext) > 46)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}ID Inválido!");
			EventInfo[Arma] = strval(inputtext);
			ShowPlayerDialog(playerid, DIALOG_MUNICAO, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite las Municiones que deseas dar a los Jugadores del Evento:", "Continuar", "");
		}
		return 1;
	}
	if(dialogid == DIALOG_MUNICAO)
	{
	    if(response)
		{
			if(strval(inputtext) < 1 || strval(inputtext) > 999) return	ShowPlayerDialog(playerid, DIALOG_MUNICAO, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "{FF0000}[ERROR]: {FFFFFF}El Número Máximo de Balas es de 999 \n{BCC3E1}Digite las Municiones que deseas dar a los Jugadores del Evento:", "Continuar", "");
			for(new p = 0; p < MAX_PLAYERS; p++)
     		{
            	if(PlayerInfoE[p][NoEvento] == 1)
				{
					GivePlayerWeapon(p, EventInfo[Arma], strval(inputtext));
				}
     		}
			GetPlayerName(playerid, NomePlayer, MAX_PLAYER_NAME);
			format(Format, sizeof(Format), "[EVENTO]: El Administrador %s dió una Arma ID %d para todos los Jugadores del Evento!", NomePlayer, EventInfo[Arma]);
			SendEventMessage(COR_INFO, Format);
		}
		return 1;
	}
	if(dialogid == DIALOG_CARRO)
	{
	    if(response)
		{
			if(strval(inputtext) < 400 && strval(inputtext) != 0 || strval(inputtext) > 611 && strval(inputtext) != 0)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}ID Inválido!");
			EventInfo[Carro] = strval(inputtext);
			if(strval(inputtext) == 0)
			{
				for(new p = 0; p < MAX_PLAYERS; p++)
				{
					if(PlayerInfoE[p][NoEvento] == 1)
					{
						DestroyVehicle(PlayerInfoE[p][Carro]);
						PlayerInfoE[p][Carro] = 0;
					}
				}
				GetPlayerName(playerid, NomePlayer, MAX_PLAYER_NAME);
				format(Format, sizeof(Format), "[EVENTO]: El Administrador %s Retiró los Vehículo de todos los Jugadores del Evento!", NomePlayer);
				SendEventMessage(COR_INFO, Format);
				return 1;
			}
			ShowPlayerDialog(playerid, DIALOG_COR1, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite el Primer Color que deseas para los Vehículos:", "Continuar", "");
		}
		return 1;
	}
	if(dialogid == DIALOG_COR1)
	{
	    if(response)
		{
			if(strval(inputtext) < 0 || strval(inputtext) > 255)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}ID informado invalido!");
			EventInfo[Cor1] = strval(inputtext);
			ShowPlayerDialog(playerid, DIALOG_COR2, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite el Segundo Color que deseas para los Vehículos:", "Continuar", "");
		}
		return 1;
	}
	if(dialogid == DIALOG_COR2)
	{
	    if(response)
		{
			if(strval(inputtext) < 0 || strval(inputtext) > 255)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}ID Inválido!");
			EventInfo[Cor2] = strval(inputtext);
			new CarID;
			for(new p = 0; p < MAX_PLAYERS; p++)
     		{
            	if(PlayerInfoE[p][NoEvento] == 1)
				{
					if(PlayerInfoE[p][Carro] >= 1)
					{
						DestroyVehicle(PlayerInfoE[p][Carro]);
						PlayerInfoE[p][Carro] = 0;
					}
					GetPlayerPos(p, PosX, PosY, PosZ);
					GetPlayerFacingAngle(p, PosA);
					CarID = CreateVehicle(EventInfo[Carro], PosX, PosY, PosZ, PosA, EventInfo[Cor1], EventInfo[Cor2], -1);
					SetVehicleNumberPlate(CarID, "RL 2015");
					LinkVehicleToInterior(CarID, EventInfo[Interior]);
					SetVehicleVirtualWorld(CarID, EventInfo[VirtualWorld]);
					PutPlayerInVehicle(p, CarID, 0);
					PlayerInfoE[p][Carro] = CarID;
				}
     		}
			GetPlayerName(playerid, NomePlayer, MAX_PLAYER_NAME);
			format(Format, sizeof(Format), "[EVENTO]: El Administrador %s dió un Vehículo ID %d para todos los Jugadores del Evento!", NomePlayer, EventInfo[Carro]);
			SendEventMessage(COR_INFO, Format);
		}
		return 1;
	}
	if(dialogid == DIALOG_VIDAVEICULOS)
	{
	    if(response)
		{
			if(strval(inputtext) < 0 || strval(inputtext) > 5000) return ShowPlayerDialog(playerid, DIALOG_VIDAVEICULOS, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "{FF0000}[ERROR]: {FFFFFF}Use de 0 a 100! \n{BCC3E1}Digite la Vida que deseas definir a los\nVehículos del Evento:", "Definir", "Cancelar");
			for(new p = 0; p < MAX_PLAYERS; p++)
     		{
            	if(PlayerInfoE[p][NoEvento] == 1)
				{
					if(PlayerInfoE[p][Carro] >= 1)
					{
						SetVehicleHealth(PlayerInfoE[p][Carro], strval(inputtext));
					}
				}
     		}
			GetPlayerName(playerid, NomePlayer, MAX_PLAYER_NAME);
			format(Format, sizeof(Format), "[EVENTO]: El Administrador %s Reseteó la Vida de los Vehículos del Evento a %d", NomePlayer, strval(inputtext));
			SendEventMessage(COR_INFO, Format);
		}
		return 1;
	}
	if(dialogid == DIALOG_KICK)
	{
	    if(response)
		{
            if (strval(inputtext) == playerid) return SendClientMessage(playerid, COR_ERRO,"[ERROR]: {FFFFFF}No puedes Kikearte a ti mismo.");
			if(!IsPlayerConnected(strval(inputtext))) return SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}Jugador no Conectado!");
			if(PlayerInfoE[strval(inputtext)][NoEvento] == 0) return SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}No es posible Kickear un Jugador que no está en Evento!");
			new NomePlayer2[MAX_PLAYER_NAME];
			SetPlayerVirtualWorld(strval(inputtext), 0);
			SetPlayerInterior(strval(inputtext), 0);
			SpawnPlayer(strval(inputtext));
			PlayerInfoE[strval(inputtext)][NoEvento] = 0;
			if(PlayerInfoE[strval(inputtext)][Carro] >= 1)
			{
				DestroyVehicle(PlayerInfoE[strval(inputtext)][Carro]);
				PlayerInfoE[strval(inputtext)][Carro] = 0;
			}
			GetPlayerName(playerid, NomePlayer, MAX_PLAYER_NAME);
			GetPlayerName(strval(inputtext), NomePlayer2, MAX_PLAYER_NAME);
			format(Format, sizeof(Format), "[EVENTO]: EL Administrador %s Kickeó al Jugador %s del Evento!", NomePlayer, NomePlayer2);
			SendEventMessage(COR_INFO, Format);
		}
		return 1;
	}
	if(dialogid == DIALOG_FIM1)
	{
		if(response)
		{
			if(!IsPlayerConnected(strval(inputtext))) return ShowPlayerDialog(playerid, DIALOG_FIM1, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "{FF0000}[ERROR]: {FFFFFF}Jugador no Conectado! \n{BCC3E1}Digite la ID del Primer Lugar del Evento:", "Continuar", "");
			GivePlayerMoney(strval(inputtext), EventInfo[Premio1]);
			GetPlayerName(strval(inputtext), NomePlayer, MAX_PLAYER_NAME);
			SetPlayerScore(strval(inputtext), GetPlayerScore(strval(inputtext)) +EventInfo[PremioS]);
			PlayerInfo[strval(inputtext)][Kills]=PlayerInfo[strval(inputtext)][Kills]+EventInfo[PremioS];
			PlayerInfo[strval(inputtext)][Nivel]=PlayerInfo[strval(inputtext)][Nivel]+EventInfo[PremioN];
			format(Format, sizeof(Format), "[EVENTO]: 1º Lugar: %s | Premio Dinero [$%d] | Premio Score [%d] | Premio Nivel [%d]", NomePlayer, EventInfo[Premio1], EventInfo[PremioS], EventInfo[PremioN]);
			SendClientMessageToAll(COR_INFO, Format);
			ShowPlayerDialog(playerid, DIALOG_FIM2, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite la ID del Segundo Lugar del Evento:", "Continuar", "");
		}
		return 1;
	}
	if(dialogid == DIALOG_FIM2)
	{
		if(response)
		{
			if(!IsPlayerConnected(strval(inputtext))) return ShowPlayerDialog(playerid, DIALOG_FIM2, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "{FF0000}[ERROR]: {FFFFFF}Jugador no Conectado! \n{BCC3E1}Digite la ID del Segundo Lugar del Evento:", "Continuar", "");
			GivePlayerMoney(strval(inputtext), EventInfo[Premio2]);
			GetPlayerName(strval(inputtext), NomePlayer, MAX_PLAYER_NAME);
			format(Format, sizeof(Format), "[EVENTO]: 2º Lugar: %s | Premio Pago [%d]", NomePlayer, EventInfo[Premio2]);
			SendClientMessageToAll(COR_INFO, Format);
			ShowPlayerDialog(playerid, DIALOG_FIM3, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite la ID del Tercer Lugar del Evento:", "Continuar", "");
		}
		return 1;
	}
	if(dialogid == DIALOG_FIM3)
	{
		if(response)
		{
			if(!IsPlayerConnected(strval(inputtext))) return ShowPlayerDialog(playerid, DIALOG_FIM3, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "{FF0000}[ERROR]: {FFFFFF}Jugador no Conectado! \n{BCC3E1}Digite la ID del Tercer Lugar del Evento:", "Continuar", "");
			GivePlayerMoney(strval(inputtext), EventInfo[Premio3]);
			GetPlayerName(strval(inputtext), NomePlayer, MAX_PLAYER_NAME);
		    format(Format, sizeof(Format), "[EVENTO]: 3º Lugar: %s | Premio Pago [%d]", NomePlayer, EventInfo[Premio3]);
			SendClientMessageToAll(COR_INFO, Format);
			ColorEventoChat[playerid] = 0;
			SendClientMessage(playerid,azulcito,"[INFO]: El /cevento ha sido desactivado automáticamente.");
			DestruirEvento(playerid);
		}
		return 1;
	}
	if(dialogid == DIALOG_VIDA)
	{
	    if(response)
		{
			if(strval(inputtext) < 0 || strval(inputtext) > 2000) return	ShowPlayerDialog(playerid, DIALOG_VIDA, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "{FF0000}[ERROR]: {FFFFFF}Use de 0 a 2000! \n{BCC3E1}Digite la Vida que deseas definir a los\nJugadores del Evento", "Definir", "Cancelar");
			EventInfo[Vida] = strval(inputtext);
			ShowPlayerDialog(playerid, DIALOG_COLETE, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "Digite el Chaleco que deseas definir a los\nJugadores del Evento", "Definir", "Cancelar");
		}
		return 1;
	}
	if(dialogid == DIALOG_COLETE)
	{
	    if(response)
		{
			if(strval(inputtext) < 0 || strval(inputtext) > 2000) return	ShowPlayerDialog(playerid, DIALOG_COLETE, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "{FF0000}[ERROR]: {FFFFFF}Use de 0 a 2000! \n{BCC3E1}Digite el Chaleco que deseas definir a los\nJugadores del Evento", "Definir", "Cancelar");
			for(new p = 0; p < MAX_PLAYERS; p++)
     		{
            	if(PlayerInfoE[p][NoEvento] == 1)
				{
					SetPlayerHealth(p, EventInfo[Vida]);
					SetPlayerArmour(p, strval(inputtext));
				}
     		}
			GetPlayerName(playerid, NomePlayer, MAX_PLAYER_NAME);
			format(Format, sizeof(Format), "[EVENTO]: El Administrador %s Definió la Vida a los Jugadores del Evento con %d y de Chaleco con %d", NomePlayer, EventInfo[Vida], strval(inputtext));
			SendEventMessage(COR_INFO, Format);
		}
		return 1;
	}
	if(dialogid == DIALOG_SKIN1)
	{
		if(response)
		{
			if(strval(inputtext) < 0 || strval(inputtext) > 200) return	ShowPlayerDialog(playerid, DIALOG_SKIN1, DIALOG_STYLE_INPUT, "{00FF00}Definiciones de Evento", "{FF0000}[ERROR]: {FFFFFF}Use de 0 a 200! \n{BCC3E1}Digite la ID del Skin que deseas\naplicar a los Jugadores del Evento:", "Definir", "Cancelar");
			for(new p = 0; p < MAX_PLAYERS; p++)
     		{
            	if(PlayerInfoE[p][NoEvento] == 1)
				{
					SetPlayerSkin(p, strval(inputtext));
				}
     		}
			GetPlayerName(playerid, NomePlayer, MAX_PLAYER_NAME);
			format(Format, sizeof(Format), "[EVENTO]: EL Administrador %s Definió el Skin a los Jugadores del Evento con el ID: %d", NomePlayer, strval(inputtext));
			SendEventMessage(COR_INFO, Format);
		}
		return 1;
	}

	if(dialogid == DIALOG_ABRIREVENTO)
	{
		if(response)
		{
			EventInfo[Criado] = 1;
			EventInfo[Aberto] = 1;
			EventInfo[Cerrado] = 0;
			ColorEventoChat[playerid] = 1;
			SendClientMessage(playerid,azulcito,"[Info]: Se te activó automáticamente el /cevento.");
			SetPlayerVirtualWorld(playerid, EventInfo[VirtualWorld]);
			SetPlayerInterior(playerid, EventInfo[Interior]);
			SetPlayerHealth(playerid, 100);
			SetPlayerArmour(playerid, 100);
			SEVENTO = 1;
			GetPlayerName(playerid, NomePlayer, sizeof(NomePlayer));
			new StrA[64];
			format(StrA, sizeof(StrA), "%s", NomePlayer);
			EventInfo[Admin] = StrA;
			format(Format, sizeof(Format), "[EVENTO]: ¡EL Administrador %s creó un Evento Abierto! {00EEFF}/IREVENTO", NomePlayer);
			SendClientMessageToAll(COR_EVENTO, Format);
			format(Format, sizeof(Format), "{00FF00}Nombre: {FF0000}%s {00FF00}| Premio para el 1º Lugar: {FF0000}$%d, %d de Score y %d de Nivel", EventInfo[Nome], EventInfo[Premio1], EventInfo[PremioS], EventInfo[PremioN]);
			SendClientMessageToAll(COR_INFO, Format);
			format(Format, sizeof(Format), "{00FF00}Premio para el 2º Lugar: {FF0000}$%d {00FF00}| Premio para el 3º Lugar: {FF0000}$%d",EventInfo[Premio2], EventInfo[Premio3]);
		    SendClientMessageToAll(COR_INFO, Format);
			CountAmountEvento = 60;
			CMDMessageToAdmins(playerid,"MIEVENTO");
			CountTimerEvento = SetTimer("CountTillEvento", 999, 1);
			}
			return 1;
		}

 if (dialogid == DUELOSMENU)
	{
		if (response)
		{
			for (new i=1; i<=ARENAS; i++)
			{
				if (Duelos[i][DesafiadoId] == playerid)
				{
				    format(string2,sizeof(string2),"Tu Duelo con %s a sido Aceptado!",PlayerName2(playerid));
				    SendClientMessage(playerid,COLOR_DUELO,"[DUELO]: Espera a que tu desafiante confirme el Duelo.");
					ShowPlayerDialog(Duelos[i][DesaId], DUELOSMENU+1, DIALOG_STYLE_MSGBOX,"Invitación de Duelo",string2,"Comenzar", "Abortar");
					return 1;
				}
			}
		}
		if (!response)
		{
            for (new i=1; i<=ARENAS; i++)
			{
				if (Duelos[i][DesafiadoId] == playerid)
				{
   				    format(string2,sizeof(string2),"[DUELO]: %s a Rechazado tu invitación de Duelo x_x",PlayerName2(playerid));
					SendClientMessage(Duelos[i][DesaId],amarillo,string2);
				    Duelos[i][DesafiadoId] = -1;
   				    Duelos[i][DesaId] = -1;
    				Duelos[i][ArmasId] = -1;
				    Duelos[i][Libre] = 0;
					return 1;
				}
			}
		}
		return 1;
	}
	if (dialogid == DUELOSMENU+1)
	{
		if (response)
		{
			for (new i=1; i <=ARENAS; i++)
			{
				if (Duelos[i][DesaId] == playerid)
				{
				    Duelos[i][Libre] = 1;
				    EnDuelo[Duelos[i][DesafiadoId]] = 1;
				    EnDuelo[playerid] = 1;
					SetDuel(playerid,Duelos[i][DesafiadoId],Duelos[i][ArmasId],i);
					new wep[128];
					switch (Duelos[i][ArmasId])
					{
						case 1: wep = "Armas Rápidas";
						case 2: wep = "Armas Lentas";
						case 3: wep = "Armas Libres";
                        case 4: wep = "Arma Desert";
						case 5: wep = "Arma Sawnoff";
						case 6: wep = "Arma Shotgun";
						case 7: wep = "Arma Tec9";
						case 8: wep = "Arma Sniper";
						case 9: wep = "Arma M4";
						case 10: wep = "Arma Country Rifle";
						case 11: wep = "Arma Combat Shotgun";
					}
					new string5[1000], string6[1000], string7[1000];
					SendClientMessageToAll(0xFF0000FF,"|---- ¡¡ATENCION DUELO!! ¡¡ATENCION DUELO!! ----|");
					format(string5,sizeof(string5),"{33AA33}%s {FFFFFF}vs {33AA33}%s.",PlayerName2(Duelos[i][DesaId]),PlayerName2(Duelos[i][DesafiadoId]));
					format(string6,sizeof(string6),"{00EEFF}Arena: {FFFFFF}%d.",i);
					format(string7,sizeof(string7),"{FF0000}Arma: {FFFFFF}%s.",wep);
					SendClientMessageToAll(0xFFFFFFFF,"");
					SendClientMessageToAll(0xFFFFFFFF,string5);
					SendClientMessageToAll(0xFFFFFFFF,string6);
					SendClientMessageToAll(0xFFFFFFFF,string7);
					SendClientMessageToAll(0xFFFFFFFF,"");
					SendClientMessageToAll(0x00FF00FF,"|Informacion|: {FFFFFF}Para ver el duelo pon '/duelo ver'");
					SendClientMessageToAll(0xFF0000FF,"|---- ¡¡ATENCION DUELO!! ¡¡ATENCION DUELO!! ----|");
					return 1;
				}
			}
  		}
  		if (!response)
  		{
            for (new i=1; i <=ARENAS; i++)
			{
				if (Duelos[i][DesaId] == playerid)
				{
				    format(string2,sizeof(string2),"[DUELO]: Por alguna razón %s a decidido abortar el Duelo en último momento .__.",PlayerName2(playerid));
				    SendClientMessage(Duelos[i][DesafiadoId],amarillo,string2);
				    Duelos[i][DesafiadoId] = -1;
   				    Duelos[i][DesaId] = -1;
    				Duelos[i][ArmasId] = -1;
				    Duelos[i][Libre] = 0;
				}
			}
		}
		return 1;
	}
	if (dialogid == DUELOSMENU2)
	{
	    if (response)
	    {
	        if (Duelos[listitem+1][Libre] == 1) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Esa Arena está ocupada, espera a que termine el Duelo o escoje otra Arena.");
			Duelos[listitem+1][DesaId] = playerid;
            ShowPlayerDialog(playerid, DUELOSMENU2+1, DIALOG_STYLE_LIST,"Escoje El Tipo de Armas","Armas Rápidas\nArmas Lentas\nArmas Libres\nArma Desert\nArma Sawnoff\nArma Shotgun\nArma Tec9\nArma Sniper\nArma M4\nArma Country Rifle\nArma Combat Shotgun","Escojer", "Cancelar");
            vKnockOut[playerid] = 0;
		}
		if (!response)
		{
			SendClientMessage(playerid,COLOR_DUELO,"[DUELO]: Has cancelado la invitación de Duelo.");
		}
		return 1;
	}
	if (dialogid == DUELOSMENU2+1)
	{
		if (response)
		{
			for (new i = 1; i <=ARENAS; i++)
			{
				if (Duelos[i][DesaId] == playerid)
				{
					Duelos[i][ArmasId] = listitem+1;
					ShowPlayerDialog(playerid, DUELOSMENU2+2, DIALOG_STYLE_INPUT,"Escribe la ID","Escribe La ID del Jugador\n al que quieras Invitar","Invitar", "Cancelar");
                    vKnockOut[playerid] = 0;
					return 1;
				}
			}
		}
		if (!response)
		{
			for (new i = 1; i <= ARENAS; i++)
			{
				if (Duelos[i][DesaId] == playerid)
				{
					Duelos[i][DesaId] = -1;
					SendClientMessage(playerid,COLOR_DUELO,"[DUELO]: Has cancelado la invitación de Duelo.");
					return 1;
				}
			}
		}
		return 1;
	}
	if (dialogid == DUELOSMENU2+2)
	{
		if (response)
		{
		    new str[15];
			if (!strlen(inputtext)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}La ID que has puesto es Inválida.");
			if (!IsNumeric(inputtext))  return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}La ID que has puesto es Inválida.");
			new id = strval(inputtext);
			if (!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}El Jugador no está conectado.");
			if (id == playerid) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No puedes desafiarte a ti mismo a un Duelo.");
			if (EnDuelo[id] == 1) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}El Jugador al que quieres Invitar está actuamente en un Duelo.");
   			if(	NODUEL[id] == 1) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}El Jugador No acepta Duelos!");
   			if(Joined[id] == true) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}El Jugador al que quieres Invitar está actuamente en una Carrera!");
   			if(Minijuego[id] == 1) return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}El Jugador al que quieres Invitar está actuamente en un Minijuego!");
			for (new i = 1; i <= ARENAS; i++)
			{
				if (Duelos[i][DesaId] == playerid)
				{
					Duelos[i][DesafiadoId] = id;
					switch (Duelos[i][ArmasId])
					{
						case 1: str = "Armas Rápidas";
						case 2: str = "Armas Lentas";
						case 3: str = "Armas Libres";
						case 4: str = "Arma Desert";
						case 5: str = "Arma Sawnoff";
						case 6: str = "Arma Shotgun";
						case 7: str = "Arma Tec9";
						case 8: str = "Arma Sniper";
						case 9: str = "Arma M4";
						case 10: str = "Arma Count. R.";
						case 11: str = "Arma Combat S.";
					}
					format(string2,sizeof(string2),"%s Te a desafiado a un Duelo \n Con %s en la Arena %d",PlayerName2(playerid),str,i);
					ShowPlayerDialog(Duelos[i][DesafiadoId], DUELOSMENU, DIALOG_STYLE_MSGBOX,"Invitación de Duelo",string2,"Aceptar","Rechazar");
					GameTextForPlayer(Duelos[i][DesafiadoId],"~r~DUE~w~LO !", 3000, 3);
					format(string2,sizeof(string2),"[DUELO]: Tu invitación se a enviado exitósamente a %s",PlayerName2(Duelos[i][DesafiadoId]));
					SendClientMessage(playerid,COLOR_DUELO,string2);
					return 1;
				}
			}
		}
		if (!response)
		{
			for (new i=1; i<= ARENAS; i++)
			{
				if (Duelos[i][DesaId] == playerid)
				{
					Duelos[i][DesaId] = -1;
					Duelos[i][ArmasId] = -1;
					Duelos[i][DesafiadoId] = -1;
					Duelos[i][Libre] = 0;
					SendClientMessage(playerid,COLOR_DUELO,"[DUELO]: has cancelado la invitación de Duelo.");
					return 1;
				}
			}
		}
		return 1;
	}
	if (dialogid == DUELOSMENU+3)
	{
	    if (response)
	    {
	        if (Duelos[listitem+1][Libre] == 0) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No hay ningún Duelo en curso en esa Arena.");
			switch (listitem)
			{
				case 0:{new rand=random(sizeof(DuelosSpec1));SetPlayerPos(playerid,DuelosSpec1[rand][0],DuelosSpec1[rand][1],DuelosSpec1[rand][2]);SetPlayerFacingAngle(playerid,DuelosSpec1[rand][3]); ResetPlayerWeapons(playerid); SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,12);}
				case 1:{new rand=random(sizeof(DuelosSpec2));SetPlayerPos(playerid,DuelosSpec2[rand][0],DuelosSpec2[rand][1],DuelosSpec2[rand][2]);SetPlayerFacingAngle(playerid,DuelosSpec2[rand][3]); ResetPlayerWeapons(playerid); SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,12);}
				case 2:{new rand=random(sizeof(DuelosSpec3));SetPlayerPos(playerid,DuelosSpec3[rand][0],DuelosSpec3[rand][1],DuelosSpec3[rand][2]);SetPlayerFacingAngle(playerid,DuelosSpec3[rand][3]); ResetPlayerWeapons(playerid); SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,12);}
				case 3:{new rand=random(sizeof(DuelosSpec4));SetPlayerPos(playerid,DuelosSpec4[rand][0],DuelosSpec4[rand][1],DuelosSpec4[rand][2]);SetPlayerFacingAngle(playerid,DuelosSpec4[rand][3]); ResetPlayerWeapons(playerid); SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,12);}
				case 4:{new rand=random(sizeof(DuelosSpec5));SetPlayerPos(playerid,DuelosSpec5[rand][0],DuelosSpec5[rand][1],DuelosSpec5[rand][2]);SetPlayerFacingAngle(playerid,DuelosSpec5[rand][3]); ResetPlayerWeapons(playerid); SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,12);}
				case 5:{new rand=random(sizeof(DuelosSpec6));SetPlayerPos(playerid,DuelosSpec6[rand][0],DuelosSpec6[rand][1],DuelosSpec6[rand][2]);SetPlayerFacingAngle(playerid,DuelosSpec6[rand][3]); ResetPlayerWeapons(playerid); SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,12);}
			}
		    ViendoDuelo[playerid] = (listitem+1);
		}
		return 1;
	}

   new engine,lights,alarm,doors,bonnet,boot,objective;
	new vehicleid = GetPlayerVehicleID(playerid);

	if(dialogid == ControlCoche)
	{
	    if(response)
	    {
	        switch (listitem)
        {
            case 0:
	        {
	            if(lights == 0 || lights == -1)
 				{
  					SetVehicleParamsEx(vehicleid,1,1,0,0,0,0,0);
  					lights = 1;
  					SendClientMessage(playerid, Blanco, "Luces {2F991A}encendidas!");
  					return 1;
 				}
 				else if(lights == 1)
 				{
  					SetVehicleParamsEx(vehicleid,1,0,0,0,0,0,0);
  					lights = 0;
  					SendClientMessage(playerid, Blanco, "Luces {E31919}apagadas!");
  					return 1;
 				}
			}
			case 1:
			{
			    if(InfoPuertas[playerid] == 0)
				{
					GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vehicleid,engine,lights,alarm,VEHICLE_PARAMS_ON,bonnet,boot,objective);
					InfoPuertas[playerid] = 1;
					SendClientMessage(playerid, Blanco, "Puertas {E31919}bloqueadas!");
				}
				else if(InfoPuertas[playerid] == 1)
				{
					GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vehicleid,engine,lights,alarm,VEHICLE_PARAMS_OFF,bonnet,boot,objective);
					InfoPuertas[playerid] = 0;
					SendClientMessage(playerid, Blanco, "Puertas {2F991A}desbloqueadas!");
				}
			}
			case 2:
			{
			    if(InfoMaletero[playerid] == 0)
				{
					GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_ON,objective);
					InfoMaletero[playerid] = 1;
					SendClientMessage(playerid, Blanco, "Maletero {2F991A}abierto!");
				}
				else if(InfoMaletero[playerid] == 1)
				{
					GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_OFF,objective);
					InfoMaletero[playerid] = 0;
					SendClientMessage(playerid, Blanco, "Maletero {E31919}cerrado!");
				}
			}
			case 3:
			{
			    if(InfoCapo[playerid] == 0)
				{
					GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,VEHICLE_PARAMS_ON,boot,objective);
					InfoCapo[playerid] = 1;
					SendClientMessage(playerid, Blanco, "Capó {2F991A}abierto!");
				}
				else if(InfoCapo[playerid] == 1)
				{
					GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,VEHICLE_PARAMS_OFF,boot,objective);
					InfoCapo[playerid] = 0;
					SendClientMessage(playerid, Blanco, "Capó {E31919}cerrado!");
				}
			}
			case 4:
			{
			    if(InfoAlarma[playerid] == 0)
				{
					GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vehicleid,engine,lights,VEHICLE_PARAMS_ON,doors,bonnet,boot,objective);
					InfoAlarma[playerid] = 1;
					SendClientMessage(playerid, Blanco, "Alarma {2F991A}encendida!");
				}
				else if(InfoAlarma[playerid] == 1)
				{
					GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vehicleid,engine,lights,VEHICLE_PARAMS_OFF,doors,bonnet,boot,objective);
					InfoAlarma[playerid] = 0;
					SendClientMessage(playerid, Blanco, "Alarma {E31919}apagada!");
				}
			}
		}
		}
		return 1;
	}

   if (dialogid == 2023)
	{
 	if (strlen(inputtext) >= 1 && strlen(inputtext) <= 100)
 	{
 	for(new i = 0; i < GetMaxPlayers(); i ++)
    {
        if(IsPlayerConnected(i))
        {
 	SendClientAudioMessage(i, "es", inputtext);
 	}
 	}
 	}
 	}

if(dialogid == DIALOG_MUSIC)
{
if(response)
{
for(new i = 0; i < GetMaxPlayers(); i ++)
    {
        if(IsPlayerConnected(i))
        {
if(strfind(inputtext, "http://", true) == 0) PlayAudioStreamForPlayer(i, inputtext) &&
SendClientMessage(i,blue, "[INFO]: ¡Un Administrador ha colocado una canción!");
else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}URL inválida. [Tiene que empezar con http://]");
}
}
}
return 1;
}

if(dialogid == DIALOG_MUSIC1)
{
if(response)
{
if(strfind(inputtext, "http://", true) == 0) PlayAudioStreamForPlayer(playerid, inputtext) &&
SendClientMessage(playerid,verde, "[INFO]: Has puesto una Música! Parala con /nradio");
else return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}URL inválida. [Tiene que empezar con http://]");
}
return 1;
}

new Coche;
Coche = GetPlayerVehicleID(playerid);

	if(dialogid == 9048)
	{
		if(response)
        {
			if (!udb_Exists(PlayerName2(playerid))) return SendClientMessage(playerid,red,"{0ED59C}|-:-|{C50404}Error{0ED59C}|-:-|{098BEE}: La cuenta no existe, usa: /Register [Contraseña].");
			if (strlen(inputtext)==0) return ShowPlayerDialog(playerid, 9048, DIALOG_STYLE_PASSWORD, "{0ED59C}|-:-|{C50404}Error{0ED59C}|-:-|", "{FF0000}[ERROR]: {FFFFFF}Debes ingresar tú cuenta para jugar \n\nInsertá la contraseña\nY podrás guardar tú:\n\n{00EEFF}*Score\n{00EEFF}*VIP\n{00EEFF}*Dinero\n{00EEFF}*Nivel\n{00EEFF}*Experiencia\n\n {00FF00}¡Diversión al máximo!.\n              {FFFFFF}Revolucion {FF0000}Latina {00EEFF}año 2015!", "Ingresar", "");
			if (udb_CheckLogin(PlayerName2(playerid),inputtext))
			{
		 		new file[256], tmp3[100], str[1000], pDeaths;
		 	   	format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName2(playerid)) );
		   		GetPlayerIp(playerid,tmp3,100);
		 	   	dini_Set(file,"ip",tmp3);
		 		LoginPlayer(playerid);
		 		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);

       Logged[playerid] = 1;
			    SendClientMessage(playerid, -1, "[INFO]: Ahora te has conectado a tu cuenta de {00FF00}propiedades.");
			    #if ENABLE_LOGIN_SYSTEM == 1
			    if(PlayerProps[playerid] > 0)
				{
				    format(str, 128, "Tienes actualmente {00FF00}%d {ffffff}Propiedades. Use {00FF00}/MisPropiedades {FFFFFF}para mas infomación", PlayerProps[playerid]);
				    SendClientMessage(playerid, -1, str);
				}
				#endif

		       	new rango[24];
		        new IPA[16];
		 	    GetPlayerIp(playerid, IPA, sizeof IPA);
		 		if(PlayerInfo[playerid][Deaths] == 0) pDeaths = 1; else pDeaths = PlayerInfo[playerid][Deaths];
                if((PlayerInfo[playerid][Experiencia]>= 0 && PlayerInfo[playerid][Experiencia] <= 1000)) { rango = "Noob"; }
                else if((PlayerInfo[playerid][Experiencia]>= 1001 && PlayerInfo[playerid][Experiencia] <= 2000)) { rango = "Semi-Novato"; }
                else if((PlayerInfo[playerid][Experiencia]>= 2001 && PlayerInfo[playerid][Experiencia] <= 3500)) { rango = "Aprendíz"; }
                else if((PlayerInfo[playerid][Experiencia]>= 3501 && PlayerInfo[playerid][Experiencia] <= 5000)) { rango = "Novato"; }
    			else if((PlayerInfo[playerid][Experiencia]>= 5001 && PlayerInfo[playerid][Experiencia] <= 6500)) { rango = "Veterano"; }
    			else if((PlayerInfo[playerid][Experiencia]>= 6501 && PlayerInfo[playerid][Experiencia] <= 7000)) { rango = "Psicópata"; }
    			else if((PlayerInfo[playerid][Experiencia]>= 7001 && PlayerInfo[playerid][Experiencia] <= 7500)) { rango = "Loco extremo"; }
    			else if((PlayerInfo[playerid][Experiencia]>= 7501 && PlayerInfo[playerid][Experiencia] <= 8000)) { rango = "Asesino"; }
    			else if((PlayerInfo[playerid][Experiencia]>= 8001 && PlayerInfo[playerid][Experiencia] <= 10000)) { rango = "Sicario Novato"; }
    			else if((PlayerInfo[playerid][Experiencia]>= 10001 && PlayerInfo[playerid][Experiencia] <= 11500)) { rango = "Sicario"; }
   				else if((PlayerInfo[playerid][Experiencia]>= 11501 && PlayerInfo[playerid][Experiencia] <= 12000)) { rango = "Asesino Pro"; }
    			else if((PlayerInfo[playerid][Experiencia]>= 12001 && PlayerInfo[playerid][Experiencia] <= 13000)) { rango = "Rambo ._.!"; }
    			else if((PlayerInfo[playerid][Experiencia]>= 13001 && PlayerInfo[playerid][Experiencia] <= 14500)) { rango = "Pro Killer"; }
    			else if((PlayerInfo[playerid][Experiencia]>= 14501 && PlayerInfo[playerid][Experiencia] <= 25000)) { rango = "Kratos"; }
    			else if((PlayerInfo[playerid][Experiencia]>= 25001 && PlayerInfo[playerid][Experiencia] <= 90000)) { rango = "DiosRL"; }
		       	new h, m, s;
		       	TotalGameTime(playerid, h, m, s);
		       	dUserSetINT(PlayerName2(playerid)).("hours", h);
		       	dUserSetINT(PlayerName2(playerid)).("minutes", m);
		       	dUserSetINT(PlayerName2(playerid)).("seconds", s);
		       	new TxAdm[50];
		       	switch(PlayerInfo[playerid][pAdmin])
	            {
			       	case 0: TxAdm = "{FFFFFF}Normal";
			       	case 1: TxAdm = "{0D00FF}|1|Operador[A]";
			       	case 2: TxAdm = "{0D00FF}|2|Operador[I]";
			       	case 3: TxAdm = "{0D00FF}|3|Operador[M]";
			       	case 4: TxAdm = "{0D00FF}|4|Operador[P]";
			       	case 5: TxAdm = "{00FF00}|5|Game Master[A]";
			       	case 6: TxAdm = "{00FF00}|6|Game Master[I]";
			       	case 7: TxAdm = "{00FF00}|7|Game Master[G]";
			       	case 8: TxAdm = "{00FF00}|8|Game Master[P]";
			       	case 9: TxAdm = "{FF0000}|9|Co-Manager";
			       	case 10: TxAdm = "{FF0000}|10|Owner";
	            }
		 	    new Vip[50];
		       	switch(PlayerInfo[playerid][pVip])
	            {
			       	case 0: Vip = "{FFFFFF}Ninguno";
			       	case 1: Vip = "{3C3214}Silver";
			       	case 2: Vip = "{C3D5DF}Gold";
			       	case 3: Vip = "{DFC418}Premium";
			       	case 4: Vip = "{209193}Platinum";
			       	case 5: Vip = "{0C242E}Esmeralda";
			       	case 6: Vip = "{0C242E}Diamond";
			       	case 7: Vip = "{FF0000}Extremo";
			       	case 8: Vip = "{00FF00}Legendario";
			       	case 9: Vip = "{FFFF00}Dios";
	            }
		       	format(string2, sizeof(string2), "{050DFA}  || Logueado Correctamente ||");
		       	format(str,sizeof(str),"{29FF0D}» Asesinatos: %d\n{0700D7}» Muertes: %d\n{29FF0D}» AdminLevel: %d\n%s\n{0700D7}» Score Race: %d\n{29FF0D}» Duelos Ganados: %d\n{FF0000}» Duelos Perdidos: %d\n{29FF0D}» Score Evento: %d\n{0700D7}» Experiencia: %d\n{FF0000}» Nivel: %d\n{FF8040}» KDR: %0.2f\n{29FF0D}» Rango: %s\n{0700D7}» Dinero: $%d\n{29FF0D}» Vip: %s\n{FFFF00}» AxoneCash: {0700D7}%d\n{0700D7}» Tiempo SV: %d H. %d M. y %d S.\n{29FF0D}» Advertencias: %d\n{FF0000}» Kicks: %d",
		       	PlayerInfo[playerid][Kills],PlayerInfo[playerid][Deaths],PlayerInfo[playerid][pAdmin],TxAdm,PlayerInfo[playerid][ScoreRace],PlayerInfo[playerid][ScoreDueloWin],PlayerInfo[playerid][ScoreDueloLose],PlayerInfo[playerid][pScoreEvento],PlayerInfo[playerid][Experiencia],PlayerInfo[playerid][Nivel],Float:PlayerInfo[playerid][Kills]/Float:pDeaths,rango,GetPlayerMoney(playerid),Vip,PlayerInfo[playerid][AxoneCash],h,m,s,PlayerInfo[playerid][Warnings],PlayerInfo[playerid][Kicks]);
				return ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,string2,str,"Aceptar","");
	        }
	  	    else
		    {
			 	PlayerInfo[playerid][FailLogin]++;
			 	printf("LOGIN: %s a puesto una contraseña incorrecta de logueo, contraseña ingresada: (%s) Intentos: [%d]", PlayerName2(playerid), inputtext, PlayerInfo[playerid][FailLogin] );
			 	if(PlayerInfo[playerid][FailLogin] == MAX_FAIL_LOGINS)
			 	{
			 		format(string2, sizeof(string2), "[INFO]: {FFFFFF}%s Ha sido Kickeado del Servidor. [Razón: Contraseña Incorrecta]", PlayerName2(playerid) );
			 		SendClientMessageToAll(red, string2);
			 		print(string2);
			 		ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, " {FF0000}ERROR - Revolucion Latina","{FFFFFF} Has sido Kickeado del Servidor \n\n{FF0000}Razón: {FFFFFF}Contraseña Incorrecta", "Aceptar", "") ;
			 		SetTimerEx("KickearPlayer", 50, 0, "i", playerid);
	    	 	}
			 	return ShowPlayerDialog(playerid, 9048, DIALOG_STYLE_INPUT, "{00FF00}|| Revolucion Latina FR ||", "{FF0000}[ERROR]: {FFFFFF}Contraseña incorrecta.\n\n{00FF00}Tu cuenta está Registrada, Ingresa tu contraseña:", "Entrar", "");
	   	    }
        }
        if(!response)
		{
		    format(string2, sizeof(string2), "[INFO]: {FFFFFF}%s Ha sido Kickeado del Servidor. [Razón: Evadir Logeo/Contraseña]", PlayerName2(playerid) );
			SendClientMessageToAll(red, string2);
			print(string2);
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Error - Revolucion Latina","{FFFFFF} Has sido Kickeado del Servidor \n\n{FF0000}Razón: {FFFFFF}Evadir Login/Contraseña", "Aceptar", "") ;
			SetTimerEx("KickearPlayer", 50, 0, "i", playerid);
		}
	}

	if(dialogid == 9049)
	{
		if (response)
		{
		    if (PlayerInfo[playerid][LoggedIn] == 1) return SendClientMessage(playerid,red,"[CUENTA]: Usted ya está registrado y conectado.");
		    if (udb_Exists(PlayerName2(playerid))) return SendClientMessage(playerid,red,"[CUENTA]: Esta cuenta ya existe, por favor, utilice '/login [contraseña]'.");
		    if (strlen(inputtext) == 0) return ShowPlayerDialog(playerid, 9049, DIALOG_STYLE_PASSWORD, "{00FF00}|| Revolucion Latina FR ||", "{FF0000}[ERROR]: {FFFFFF}No has escrito una contraseña! \n\n{FFFFFF}Cuenta {FF0000}NO REGISTRADA {FFFFFF}Pon Una Contraseña\nY Guarda Datos RL:\n\n{00EEFF}*Score\n{00EEFF}*VIP\n{00EEFF}*Dinero\n{00EEFF}*Admin\n{00EEFF}*Nivel\n{00EEFF}*Experiencia\n\n {00FF00}Esperamos Que Te Diviertas Al Maximo", "Aceptar", "No Registrar");
		    if (strlen(inputtext) < 4 || strlen(inputtext) > 20) return ShowPlayerDialog(playerid, 9049, DIALOG_STYLE_PASSWORD, "{00FF00}|| Revolucion Latina FR ||", "{FF0000}La contraseña debe ser superior a 3 carácteres\n\n{FFFFFF}Cuenta {FF0000}NO REGISTRADA {FFFFFF}Pon Una Contraseña\nY Guarda Datos RL:\n\n{00EEFF}*Score\n{00EEFF}*VIP\n{00EEFF}*Dinero\n{00EEFF}*Admin\n{00EEFF}*Nivel\n{00EEFF}*Experiencia\n\n {00FF00}Esperamos Que Te Diviertas Al Maximo", "Aceptar", "No Registrar");
		    if (udb_Create(PlayerName2(playerid),inputtext))
			{
		    GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
      		Logged[playerid] = 1;
	    	new file[256],name[MAX_PLAYER_NAME], tmp3[100];
	    	new strdate[20], year,month,day;	getdate(year, month, day);
			GetPlayerName(playerid,name,sizeof(name)); format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(name));
	     	GetPlayerIp(playerid,tmp3,100);	dini_Set(file,"ip",tmp3);
		    dUserSetINT(PlayerName2(playerid)).("registered",1);
	  		format(strdate, sizeof(strdate), "%d/%d/%d",day,month,year);
			dUserSetINT(PlayerName2(playerid)).("loggedin",1);
			dUserSetINT(PlayerName2(playerid)).("banned",0);
			dUserSetINT(PlayerName2(playerid)).("level",0);
			dUserSetINT(PlayerName2(playerid)).("AccountType",0);
		    dUserSetINT(PlayerName2(playerid)).("LastOn",0);
	    	dUserSetINT(PlayerName2(playerid)).("money",0);
		   	dUserSetINT(PlayerName2(playerid)).("Banka",0);
	    	dUserSetINT(PlayerName2(playerid)).("kills",0);
	    	dUserSetINT(PlayerName2(playerid)).("Kicks",0);
		   	dUserSetINT(PlayerName2(playerid)).("deaths",0);
		   	dUserSetINT(PlayerName2(playerid)).("hours",0);
		   	dUserSetINT(PlayerName2(playerid)).("minutes",0);
		   	dUserSetINT(PlayerName2(playerid)).("seconds",0);
		   	dUserSetINT(PlayerName2(playerid)).("clan",0);
		   	dUserSetINT(PlayerName2(playerid)).("lider",0);
		   	dini_Set(file,"Contraseña",inputtext);
		    PlayerInfo[playerid][LoggedIn] = 1;
		    PlayerInfo[playerid][Registered] = 1;
		    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, " {00EEFF}|| Registrado ||", "{FFFFFF}Te has registrado En Nuestro Servidor {FF0000}Revolucion {FFFFFF}Latina\n{00FF00}Usa {FF0000}/Comandos {00EEFF}/Teles {FFFFFF}/Autos\n{00EEFF}Esperamos Que Te Diviertas.!\n{FFFFFF}Gracias Por Entrar A Nuestro Servidor FR", "Divertirme", "");
			return PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
   }
		return 1;
		}
     }
     
     if(dialogid == 9050)
	{
		if (response)
		{
			if(!strcmp(ServerInfo[Password],inputtext[0],true)) {
				KillTimer( LockKickTimer[playerid] );
				PlayerInfo[playerid][AllowedIn] = true;
				SendClientMessage(playerid,COLOR_WHITE,"[INFO] Contraseña Ingresada Correctamente");
				format(string2, sizeof(string2), "%s Ha entrado al Servidor exitosamente",PlayerName2(playerid));
				return MessageToAdmins(COLOR_WHITE, string2);
			} else return ShowPlayerDialog(playerid, 9050,DIALOG_STYLE_INPUT, "{FF0000}Server Block | PASS Incorrecto", "{FFFFFF}Ingrese la contraseña del Servidor:", "Aceptar", "");
         }
        }

	if(dialogid == Tuning)
    {
        if(response)
        {
        switch (listitem)
        {
            case 0:
			{
            ShowPlayerDialog(playerid, Tuning+1, DIALOG_STYLE_LIST, "Ruedas", "Estilo 1 \nEstilo 2 \nEstilo 3 \nEstilo 4 \nEstilo 5 \nEstilo 6 \nEstilo 7 \nEstilo 8 \nEstilo 9 \nEstilo 10 \nEstilo 11 \nEstilo 12 \nEstilo 13", "Cambiar", "Atras");
			}
            case 1:
            {
            ShowPlayerDialog(playerid, Tuning+2, DIALOG_STYLE_LIST, "Colores", "Negro \nBlanco \nAzul Oscuro \nCeleste \nVerde \nRojo \nAmarillo \nRosado \nCafe \nVerde Agua \nMorado  \nGris \nLila \nRojo Oscuro \nVerde Oscuro", "Pintar", "Atras");
            }
            case 2:
            {
            ShowPlayerDialog(playerid, Tuning+3, DIALOG_STYLE_LIST, "PaintJobs", "Estilo 1 \nEstilo 2 \nEstilo 3 \nEstilo 4 \nEstilo 5", "Pintar", "Atras");
            }
            case 3:
            {
            ShowPlayerDialog(playerid, Tuning+4, DIALOG_STYLE_LIST, "Nitro", "Nitro x2 \nNitro x5 \nNitro x10", "Agregar", "Atras");
            }
			case 4:
            {
            AddVehicleComponent(Coche,1087);
			}
            case 5:
            {
            ShowPlayerDialog(playerid, Tuning+5, DIALOG_STYLE_LIST, "Sideskirts", "Sideskirt Derecho \nSideskirt Izquierdo \nAlien Derecho \nAlien Izquierdo \nX-Flow Izquierdo \nX-Flow Derecho", "Agregar", "Atras");
            }
            case 6:
            {
            ShowPlayerDialog(playerid, Tuning+6, DIALOG_STYLE_LIST, "Tubos De Escape", "Alien \nX-Flow \nSlamin \nChrome", "Agregar", "Atras");
            }
            case 7:
            {
            RepairVehicle(Coche);
  	    	SendClientMessage(playerid, Verde,"Su Coche Ha Sido Reparado");
            PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
			}
            case 8:
            {
            new Float:Angulo;
			GetVehicleZAngle(Coche, Angulo);
            SetVehicleZAngle(Coche, Angulo);
			SendClientMessage(playerid,Amarillo,"Su Coche Ha Sido volteado");
		    }
            case 9:
            {
            new Float:x, Float:y, Float:z, Float:Angulo;
		    {
			GetPlayerPos(playerid, x, y, z );
            GetPlayerFacingAngle(playerid, Angulo);
            }
            Auto1 = AddStaticVehicle(560, x+3, y, z, Angulo, 144, 144);
            PutPlayerInVehicle(playerid, Auto1, 0);
            AddVehicleComponent(Auto1,1028);
            AddVehicleComponent(Auto1,1032);
            AddVehicleComponent(Auto1,1010);
            ChangeVehiclePaintjob(Auto1,0);
			}
			case 10:
			{
            new Float:x, Float:y, Float:z, Float:Angulo;
		    {
			GetPlayerPos(playerid, x, y, z );
            GetPlayerFacingAngle(playerid, Angulo);
            }
            Auto2 = AddStaticVehicle(562, x+3, y, z, Angulo, 1, 1);
            PutPlayerInVehicle(playerid, Auto2, 0);
            AddVehicleComponent(Auto2,1035);
            AddVehicleComponent(Auto2,1037);
            AddVehicleComponent(Auto2,1010);
            ChangeVehiclePaintjob(Auto2,2);
			}
			case 11:
			{
            new Float:x, Float:y, Float:z, Float:Angulo;
		    {
			GetPlayerPos(playerid, x, y, z );
            GetPlayerFacingAngle(playerid, Angulo);
            }
            Auto2 = AddStaticVehicle(565, x+3, y, z, Angulo, 2, 2);
            PutPlayerInVehicle(playerid, Auto3, 0);
            AddVehicleComponent(Auto3,1046);
            AddVehicleComponent(Auto3,1049);
            AddVehicleComponent(Auto3,1010);
            ChangeVehiclePaintjob(Auto3,3);
            }
		}
		}
    	return 1;
   }

   if(dialogid == Tuning+1)
   {
       if(response == 0)
       {
  	   ShowPlayerDialog(playerid, Tuning, DIALOG_STYLE_LIST, "Menu Tuning v3.0", "Ruedas\nColores\nPaintjobs\nNitro\nHidraulicos\nSideskirts\nTubos De Escape", "Seleccionar", "Cancelar");
       }
          if(response)
          {
          switch (listitem)
          {
          case 0:
          {
          AddVehicleComponent(Coche,1084);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Amarillo ,"[INFO]: Has Cambiado De Rueda De Tu Coche");
		  }
		  case 1:
		  {
          AddVehicleComponent(Coche,1073);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Amarillo ,"[INFO]: Has Cambiado De Rueda De Tu Coche");
		  }
          case 2:
		  {
	      AddVehicleComponent(Coche,1075);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Amarillo ,"[INFO]: Has Cambiado De Rueda De Tu Coche");
		  }
		  case 3:
		  {
	      AddVehicleComponent(Coche,1077);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Amarillo ,"[INFO]: Has Cambiado De Rueda De Tu Coche");
		  }
		  case 4:
		  {
	      AddVehicleComponent(Coche,1079);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Amarillo ,"[INFO]: Has Cambiado De Rueda De Tu Coche");
		  }
          case 5:
   	      {
   	      AddVehicleComponent(Coche,1080);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Amarillo ,"[INFO]: Has Cambiado De Rueda De Tu Coche");
	      }
          case 6:
	  	  {
          AddVehicleComponent(Coche,1074);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Amarillo ,"[INFO]: Has Cambiado De Rueda De Tu Coche");
          }
          case 7:
          {
          AddVehicleComponent(Coche,1076);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Amarillo ,"[INFO]: Has Cambiado De Rueda De Tu Coche");
          }
          case 8:
          {
          AddVehicleComponent(Coche,1078);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Amarillo ,"[INFO]: Has Cambiado De Rueda De Tu Coche");
     	  }
          case 9:
          {
   	      AddVehicleComponent(Coche,1081);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Amarillo ,"[INFO]: Has Cambiado De Rueda De Tu Coche");
          }
          case 10:
          {
          AddVehicleComponent(Coche,1082);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Amarillo ,"[INFO]: Has Cambiado De Rueda De Tu Coche");
          }
          case 11:
          {
          AddVehicleComponent(Coche,1083);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Amarillo ,"[INFO]: Has Cambiado De Rueda De Tu Coche");
          }
          case 12:
          {
          AddVehicleComponent(Coche,1085);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Amarillo ,"[INFO]: Has Cambiado De Rueda De Tu Coche");
          }
     }
     }
     return 1;
}
   if(dialogid == Tuning+2)
   {
       if(response == 0)
       {
       ShowPlayerDialog(playerid, Tuning, DIALOG_STYLE_LIST, "Menu Tuning v3.0", "Ruedas\nColores\nPaintjobs\nNitro\nHidraulicos\nSideskirts\nTubos De Escape", "Seleccionar", "Cancelar");
       }
          if(response)
          {
          switch (listitem)
          {
          case 0:
          {
          ChangeVehicleColor(Coche,0,0);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Negro ,"[INFO]: Has Pintado Tu Coche De Color Negro");
          }
          case 1:
          {
          ChangeVehicleColor(Coche,1,1);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
          SendClientMessage(playerid, Blanco ,"[INFO]: Has Pintado Tu Coche De Color Blanco");
          }
          case 2:
          {
          ChangeVehicleColor(Coche,79,79);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
	      SendClientMessage(playerid, AzulOscuro ,"[INFO]: Has Pintado Tu Coche De Color Azul Oscuro");
          }
          case 3:
          {
          ChangeVehicleColor(Coche,2,2);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Celeste ,"[INFO]: Has Pintado Tu Coche De Color Celeste");
	   	  }
          case 4:
          {
          ChangeVehicleColor(Coche,252,252);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid,green,"[INFO]: Has Pintado Tu Coche De Color Verde");
          }
          case 5:
          {
          ChangeVehicleColor(Coche,3,3);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid,red,"[INFO]: Has Pintado Tu Coche De Color Rojo");
          }
          case 6:
          {
          ChangeVehicleColor(Coche,6,6);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Amarillo ,"[INFO]: Has Pintado Tu Coche De Color Amarillo");
          }
          case 7:
          {
          ChangeVehicleColor(Coche,146,146);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Rosado ,"[INFO]: Has Pintado Tu Coche De Color Rosado");
	   	  }
          case 8:
          {
          ChangeVehicleColor(Coche,84,84);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Cafe ,"[INFO]: Has Pintado Tu Coche De Color Cafe");
          }
          case 9:
          {
          ChangeVehicleColor(Coche,145,145);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Verde_Agua ,"[INFO]: Has Pintado Tu Coche De Color Verde Agua");
          }
          case 10:
          {
          ChangeVehicleColor(Coche,157,157);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Morado ,"[INFO]: Has Pintado Tu Coche De Color Morado");
          }
          case 11:
          {
          ChangeVehicleColor(Coche,92,92);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		  SendClientMessage(playerid, Gris ,"[INFO]: Has Pintado Tu Coche De Color Gris");
          }
   	 }
   	 }
	 return 1;
}
   if(dialogid == Tuning+3)
   {
       if(response == 0)
       {
       ShowPlayerDialog(playerid, Tuning, DIALOG_STYLE_LIST, "Menu Tuning v3.0", "Ruedas\nColores\nPaintjobs\nNitro\nHidraulicos\nSideskirts\nTubos De Escape", "Seleccionar", "Cancelar");
       }
          if(response)
          {
          switch (listitem)
          {
          case 0:
	   	  {
          ChangeVehiclePaintjob(Coche,0);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		  }
          case 1:
          {
          ChangeVehiclePaintjob(Coche,1);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		  }
          case 2:
          {
          ChangeVehiclePaintjob(Coche,2);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		  }
          case 3:
          {
          ChangeVehiclePaintjob(Coche,3);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		  }
          case 4:
          {
          ChangeVehiclePaintjob(Coche,4);
          PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
          }
     }
     }
     return 1;
}
   if(dialogid == Tuning+4)
   {
       if(response == 0)
       {
       ShowPlayerDialog(playerid, Tuning, DIALOG_STYLE_LIST, "Menu Tuning v3.0", "Ruedas\nColores\nPaintjobs\nNitro\nHidraulicos\nSideskirts\nTubos De Escape", "Seleccionar", "Cancelar");
       }
          if(response)
          {
          switch (listitem)
          {
          case 0:
	  	  {
          AddVehicleComponent(Coche,1009);
          SendClientMessage(playerid, Verde ,"[INFO]: Has Agregado Nitro A Tu Coche");
	 	  }
          case 1:
          {
          AddVehicleComponent(Coche,1008);
          SendClientMessage(playerid, Verde ,"[INFO]: Has Agregado Nitro A Tu Coche");
          }
          case 2:
          {
          AddVehicleComponent(Coche,1010);
          SendClientMessage(playerid, Verde ,"[INFO]: Has Agregado Nitro A Tu Coche");
          }
          }
          }
    return 1;
}
   if(dialogid == Tuning+5)
   {
       if(response == 0)
       {
       ShowPlayerDialog(playerid, Tuning, DIALOG_STYLE_LIST, "Menu Tuning v3.0", "Ruedas\nColores\nPaintjobs\nNitro\nHidraulicos\nSideskirts\nTubos De Escape", "Seleccionar", "Cancelar");
       }
          if(response)
          {
          switch (listitem)
          {
          case 0:
          {
          AddVehicleComponent(Coche,1007);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  }
          case 1:
          {
          AddVehicleComponent(Coche,1017);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  }
          case 2:
          {
          AddVehicleComponent(Coche,1026);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  }
          case 3:
          {
          AddVehicleComponent(Coche,1027);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  }
          case 4:
          {
          AddVehicleComponent(Coche,1030);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  }
          case 5:
          {
          AddVehicleComponent(Coche,1031);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  }
     }
     }
     return 1;
}
   if(dialogid == Tuning+6)
   {
       if(response == 0)
       {
       ShowPlayerDialog(playerid, Tuning, DIALOG_STYLE_LIST, "Menu Tuning v3.0", "Ruedas\nColores\nPaintjobs\nNitro\nHidraulicos\nSideskirts\nTubos De Escape", "Seleccionar", "Cancelar");
       }
          if(response)
          {
          switch (listitem)
          {
          case 0:
          {
          AddVehicleComponent(Coche,1028);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  }
          case 1:
          {
          AddVehicleComponent(Coche,1029);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  }
          case 2:
          {
          AddVehicleComponent(Coche,1043);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  }
          case 3:
          {
          AddVehicleComponent(Coche,1044);
          PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		  }
     }
     }
     return 1;
}

if(dialogid == ARMA)
{
if(response)
{
switch (listitem)
{
case 0:
{
if (GetPlayerMoney(playerid) <= 19999) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $20000).");
GivePlayerWeapon(playerid, 16, 10);
GivePlayerMoney(playerid, -20000);
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un pack de Granadas. Te costó $20000.");
CMDMessageToVips(playerid,"ARMASPESADA [Granada]");
SetTimerEx("VolverPesada", 300000, 0, "i", playerid);
YaUsoPesada[playerid] = 1;
}
case 1:
{
if (GetPlayerMoney(playerid) <= 19999) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $20000).");
GivePlayerWeapon(playerid, 18, 10);
GivePlayerMoney(playerid, -20000);
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un pack de Molotov. Te costó $20000.");
CMDMessageToVips(playerid,"ARMASPESADA [Molotov]");
SetTimerEx("VolverPesada", 300000, 0, "i", playerid);
YaUsoPesada[playerid] = 1;
}
case 2:
{
if (GetPlayerMoney(playerid) <= 49999) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $50000).");
GivePlayerWeapon(playerid, 35, 10);
GivePlayerMoney(playerid, -50000);
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un pack de RPG (Bazoka). Te costó $50000.");
CMDMessageToVips(playerid,"ARMASPESADA [RPG-Bazoka]");
SetTimerEx("VolverPesada", 300000, 0, "i", playerid);
YaUsoPesada[playerid] = 1;
}
case 3:
{
if (GetPlayerMoney(playerid) <= 69999) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $70000).");
GivePlayerWeapon(playerid, 36, 10);
GivePlayerMoney(playerid, -70000);
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un pack de HS Rocket (Bazoka con detección de calor). Te costó $70000.");
CMDMessageToVips(playerid,"ARMASPESADA [HS Rocket]");
SetTimerEx("VolverPesada", 300000, 0, "i", playerid);
YaUsoPesada[playerid] = 1;
}
case 4:
{
if (GetPlayerMoney(playerid) <= 29999) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $30000).");
GivePlayerWeapon(playerid, 37, 200);
GivePlayerMoney(playerid, -30000);
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un pack de Flamethrower (Lanzallamas). Te costó $30000.");
CMDMessageToVips(playerid,"ARMASPESADA [Lanzallamas]");
SetTimerEx("VolverPesada", 300000, 0, "i", playerid);
YaUsoPesada[playerid] = 1;
}
case 5:
{
if (GetPlayerMoney(playerid) <= 29999) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $30000).");
GivePlayerWeapon(playerid, 38, 100);
GivePlayerMoney(playerid, -30000);
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un pack de Minigun. Te costó $30000.");
CMDMessageToVips(playerid,"ARMASPESADA [Minigun]");
SetTimerEx("VolverPesada", 300000, 0, "i", playerid);
YaUsoPesada[playerid] = 1;
}
case 6:
{
if (GetPlayerMoney(playerid) <= 39999) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $40000).");
GivePlayerWeapon(playerid, 39, 10);
GivePlayerWeapon(playerid, 40, 1);
GivePlayerMoney(playerid, -40000);
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un pack de Satchel Charge (Bombas por control). Te costó $40000.");
CMDMessageToVips(playerid,"ARMASPESADA [Bombas por control]");
SetTimerEx("VolverPesada", 300000, 0, "i", playerid);
YaUsoPesada[playerid] = 1;
}
}
}
return 1;
}
//==============================================================================
if(dialogid == AutosTuning)
    {
        if(response)
        {
        switch (listitem)
        {
        case 0:
            {
            if(!IsPlayerInAnyVehicle(playerid)) {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); 	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);
			SetVehicleNumberPlate(LVehicleIDt, "RL 2015");
			AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
		    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
		    AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,0);
	   	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			return PlayerInfo[playerid][pCar] = LVehicleIDt;
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Estás en un vehículo!");
		    }
		    case 1:
		    {
		    if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        	LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); 	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
	        SetVehicleNumberPlate(LVehicleIDt, "RL 2015");
			AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
	    	AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,1);
	   		SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = LVehicleIDt;
			}
			}
			case 2:
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        	LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); 	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
			SetVehicleNumberPlate(LVehicleIDt, "RL 2015");
			AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,2);
	   		SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = LVehicleIDt;
			}
			}
			case 3:
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(559,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
			SetVehicleNumberPlate(carid, "RL 2015");
			AddVehicleComponent(carid,1065);    AddVehicleComponent(carid,1067);    AddVehicleComponent(carid,1162); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073);	ChangeVehiclePaintjob(carid,1);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			case 4:
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(565,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
			SetVehicleNumberPlate(carid, "RL 2015");
			AddVehicleComponent(carid,1046); AddVehicleComponent(carid,1049); AddVehicleComponent(carid,1053); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			case 5:
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(558,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
			SetVehicleNumberPlate(carid, "RL 2015");
			AddVehicleComponent(carid,1088); AddVehicleComponent(carid,1092); AddVehicleComponent(carid,1139); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
	 	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			case 6:
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(561,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
			SetVehicleNumberPlate(carid, "RL 2015");
			AddVehicleComponent(carid,1055); AddVehicleComponent(carid,1058); AddVehicleComponent(carid,1064); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			case 7:
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(562,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
			SetVehicleNumberPlate(carid, "RL 2015");
			AddVehicleComponent(carid,1034); AddVehicleComponent(carid,1038); AddVehicleComponent(carid,1147); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			case 8:
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(567,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
			SetVehicleNumberPlate(carid, "RL 2015");
			AddVehicleComponent(carid,1102); AddVehicleComponent(carid,1129); AddVehicleComponent(carid,1133); AddVehicleComponent(carid,1186); AddVehicleComponent(carid,1188); ChangeVehiclePaintjob(carid,1); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1085); AddVehicleComponent(carid,1087); AddVehicleComponent(carid,1086);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			case 9:
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(558,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
			SetVehicleNumberPlate(carid, "RL 2015");
			AddVehicleComponent(carid,1092); AddVehicleComponent(carid,1166); AddVehicleComponent(carid,1165); AddVehicleComponent(carid,1090);
		    AddVehicleComponent(carid,1094); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1087); AddVehicleComponent(carid,1163);
		    AddVehicleComponent(carid,1091); ChangeVehiclePaintjob(carid,2);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			case 10:
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
			} else {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(557,X,Y,Z,Angle,1,1,-1);	PutPlayerInVehicle(playerid,carid,0);
			SetVehicleNumberPlate(carid, "RL 2015");
			AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1081);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			case 11:
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(535,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
			SetVehicleNumberPlate(carid, "RL 2015");
			ChangeVehiclePaintjob(carid,1); AddVehicleComponent(carid,1109); AddVehicleComponent(carid,1115); AddVehicleComponent(carid,1117); AddVehicleComponent(carid,1073); AddVehicleComponent(carid,1010);
		    AddVehicleComponent(carid,1087); AddVehicleComponent(carid,1114); AddVehicleComponent(carid,1081); AddVehicleComponent(carid,1119); AddVehicleComponent(carid,1121);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			case 12:
			{
			if(IsPlayerInAnyVehicle(playerid)) SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Usted ya tiene un vehículo");
			else {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(562,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
			SetVehicleNumberPlate(carid, "RL 2015");
			AddVehicleComponent(carid,1034); AddVehicleComponent(carid,1038); AddVehicleComponent(carid,1147);
			AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,0);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}
			}
		}
		}
		return 1;
	}
	if(dialogid == AutosRC)
	{
	    if(response)
	    {
	        switch (listitem)
        {
            case 0:
	        {
	        if(!IsPlayerInAnyVehicle(playerid)) {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        LVehicleIDt = CreateVehicle(441,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0);
      		PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,0);
	   	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			return PlayerInfo[playerid][pCar] = LVehicleIDt;
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Estás en un vehículo!");
		    }
		    case 1:
	        {
	        if(!IsPlayerInAnyVehicle(playerid)) {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        LVehicleIDt = CreateVehicle(465,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0);
		    PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,0);
	   	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			return PlayerInfo[playerid][pCar] = LVehicleIDt;
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Estás en un vehículo!");
		    }
		    case 2:
	        {
	        if(!IsPlayerInAnyVehicle(playerid)) {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        LVehicleIDt = CreateVehicle(501,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0);
		    PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,0);
	   	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			return PlayerInfo[playerid][pCar] = LVehicleIDt;
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Estás en un vehículo!");
		    }
		    case 3:
	        {
	        if(!IsPlayerInAnyVehicle(playerid)) {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        LVehicleIDt = CreateVehicle(564,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0);
		    PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,0);
	   	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			return PlayerInfo[playerid][pCar] = LVehicleIDt;
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Estás en un vehículo!");
		    }
		    case 4:
	        {
	        if(!IsPlayerInAnyVehicle(playerid)) {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        LVehicleIDt = CreateVehicle(594,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0);
		    PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,0);
	   	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			return PlayerInfo[playerid][pCar] = LVehicleIDt;
			} else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Estás en un vehículo!");
		    }
		    }
		    }
		return 1;
	}

	if(dialogid == UNBAN)
	{
		if(response) {
		new iName[MAX_PLAYER_NAME];
		GetPlayerName(playerid, iName, MAX_PLAYER_NAME);
		format(iytring,sizeof(iytring),"[INFO]: {FFFFFF}El Administrador %s ha desbaneado la IP {FFFF00}'%s' ",iName,inputtext); SaveToFile("UnBanLog",iytring);
	 	format(string2,sizeof(iytring),"unbanip %s",inputtext);
	 	SendRconCommand(string2);
	 	SendRconCommand("reloadbans");
	 	SendClientMessageToAll(red,iytring);
	 	CMDMessageToAdmins(playerid,"UNBAN");
	 	SendClientMessage(playerid,orange,"|- !Comando Enviado! -|");
	 	}
		return 1;
  	}

if(dialogid == 2000)
	{
		if(response)
		{
		    new file[128];
	    	new stringdeposit[128];
            new name[MAX_PLAYER_NAME];
            GetPlayerName(playerid, name, sizeof(name));
			if(strlen(inputtext) == 0)
			{
	        	format(string2, sizeof string2, "Cuenta: %s\n\nPonga la cantidad de dinero que quiere depositar en el banco:", name);
	        	ShowPlayerDialog(playerid, 2000, DIALOG_STYLE_INPUT, "Sistema de Banco", string2, "Depositar", "Cancelar");
				return 0;
			}
			format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(name));
			if(fexist(file))
			{
				dUserSetINT(PlayerName2(playerid)).("Banka",strlen(inputtext));
				if(strval(inputtext)>0){
				if(GetPlayerMoney(playerid) < strval(inputtext)) return SendClientMessage(playerid, 0xFF0005FF, "Usted no tiene ese dinero. JAJA pobre.");
				GivePlayerMoney(playerid,-strval(inputtext));
                PlayerInfo[playerid][Banka]+=strval(inputtext);
                format(stringdeposit, sizeof stringdeposit, "Usted a depositado: %d$ | Su saldo de ahora es: %d$", strval(inputtext),PlayerInfo[playerid][Banka]);
                SendClientMessage(playerid, 0xFFD200FF, stringdeposit);
			}
		  }
		}
	}
if(dialogid == 2001)
	{
		if(response)
		{
		    new file[128];
            new name[MAX_PLAYER_NAME];
            new stringwithdraw[128];
            GetPlayerName(playerid, name, sizeof(name));
			if(strlen(inputtext) == 0)
			{
                new name2[MAX_PLAYER_NAME];
	            GetPlayerName(playerid, name2, sizeof(name2));
		        format(string2, sizeof string2, "Cuenta: %s\n\nSaldo: %d$\n\nPonga la cantidad de dinero que desea retirar del banco:", name2,PlayerInfo[playerid][Banka]);
		        ShowPlayerDialog(playerid, 2001, DIALOG_STYLE_INPUT, "Sistema de Banco", string2, "Retirar", "Cancelar");
				return 0;
			}
			format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(name));
			if(fexist(file))
			{
				dUserSetINT(PlayerName2(playerid)).("Banka",strlen(inputtext));
				if(strval(inputtext)>0)
				{
				if(PlayerInfo[playerid][Banka] < strval(inputtext)) return SendClientMessage(playerid, 0xFF0005FF, "Usted no tiene ese dinero. JAJA pobre.");
				GivePlayerMoney(playerid,strval(inputtext));
                PlayerInfo[playerid][Banka]-=strval(inputtext);
                format(stringwithdraw, sizeof stringwithdraw, "Usted retiró: %d$ | Su saldo de ahora es: %d", strval(inputtext),PlayerInfo[playerid][Banka]);
                SendClientMessage(playerid, 0xFFD200FF, stringwithdraw);
			}
		  }
		}
	}
if(dialogid == 2004 && response)
    {
        switch(listitem)
        {
            case 0:
            {
            new name[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, name, sizeof(name));
		    format(string2, sizeof string2, "Cuenta: %s\n\nPonga la cantidad de dinero que quiere depositar en el banco:", name);
		    ShowPlayerDialog(playerid, 2000, DIALOG_STYLE_INPUT, "Sistema de Banco", string2, "Depositar", "Cancelar");
            }
            case 1:
            {
            new name2[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, name2, sizeof(name2));
		    format(string2, sizeof string2, "Cuenta: %s\n\nSaldo: %d$\n\nPonga la cantidad de dinero que desea retirar del banco:", name2,PlayerInfo[playerid][Banka]);
		    ShowPlayerDialog(playerid, 2001, DIALOG_STYLE_INPUT, "Sistema de Banco", string2, "Retirar", "Cancelar");
            }
            case 2:
            {
            new name3[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, name3, sizeof(name3));
		    format(string2, sizeof string2, "Cuenta: %s\n\nSu dinero en el banco es de: %d$",name3, PlayerInfo[playerid][Banka]);
		    ShowPlayerDialog(playerid,2003,DIALOG_STYLE_MSGBOX ,"Sistema de Banco",string2,"Aceptar","Cancelar");
            }
        }
    }

if(dialogid == MJ)
{
if(response)
{
switch (listitem)
{
case 0: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/minigun");}
case 1: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/minigun2");}
case 2: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/minigun3");}
case 3: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/rocket");}
case 4: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/rocket2");}
case 5: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/counter");}
case 6: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/mario");}
}
}
return 1;
}

if(dialogid == CSTEAM)
{
	if(response)
	{
		switch (listitem)
		{
			case 0:
			{
			 	ResetPlayerWeapons(playerid);
			    new r = random(sizeof(POLISPAWN));
			    new PlayerName[MAX_PLAYER_NAME];
			    GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
				Minijuego[playerid] = 1;
				CS16[playerid] = 1;
			    RemovePlayerFromVehicle(playerid);
			    SetPlayerPos(playerid, POLISPAWN[r][0], POLISPAWN[r][1], POLISPAWN[r][2]);
			    SetPlayerTeam(playerid, 10); // Team Policia
				GivePlayerWeapon(playerid, 1, 1);
				GivePlayerWeapon(playerid, 3, 1);
				GivePlayerWeapon(playerid, 16, 2);
				GivePlayerWeapon(playerid, 24, 1000);
				GivePlayerWeapon(playerid, 25, 1000);
				GivePlayerWeapon(playerid, 29, 1000);
				GivePlayerWeapon(playerid, 31, 1000);
			    SetPlayerFacingAngle(playerid,random(9000));
			    SetPlayerSkin(playerid, 285); // Skin Policia
		     	SetPlayerVirtualWorld(playerid, 5);
		     	SetPlayerInterior(playerid, 0);
		     	SetPlayerHealth(playerid, 100);
		     	SetPlayerArmour(playerid, 100);
		     	SetPlayerColor(playerid,0x0000FFFF); //Policia Azul
		     	GameTextForPlayer(playerid, "~n~~g~Counter Strike~n~~b~Policia", 5000, 3);
		        EnviarComandoDM(playerid,"Counter");
			}
			case 1:
			{
			 	ResetPlayerWeapons(playerid);
			    new r = random(sizeof(TERROSPAWN));
			    new PlayerName[MAX_PLAYER_NAME];
			    GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
				Minijuego[playerid] = 1;
				CS16[playerid] = 1;
			    RemovePlayerFromVehicle(playerid);
			    SetPlayerPos(playerid, TERROSPAWN[r][0], TERROSPAWN[r][1], TERROSPAWN[r][2]);
			    SetPlayerTeam(playerid, 11); // Team Terrorista
				GivePlayerWeapon(playerid, 1, 1);
				GivePlayerWeapon(playerid, 4, 1);
				GivePlayerWeapon(playerid, 16, 2);
				GivePlayerWeapon(playerid, 22, 1000);
				GivePlayerWeapon(playerid, 27, 1000);
				GivePlayerWeapon(playerid, 29, 1000);
				GivePlayerWeapon(playerid, 30, 1000);
			    SetPlayerFacingAngle(playerid,random(9000));
			    SetPlayerSkin(playerid, 179); // Skin Terrorista
		     	SetPlayerVirtualWorld(playerid, 5);
		     	SetPlayerInterior(playerid, 0);
		     	SetPlayerHealth(playerid, 100);
		     	SetPlayerArmour(playerid, 100);
		     	SetPlayerColor(playerid,0xFF0000FF); //Terrorista Rojo
		     	GameTextForPlayer(playerid, "~n~~g~Counter Strike~n~~r~Terrorista", 5000, 3);
		        EnviarComandoDM(playerid,"Counter");
			}
		}
	}
	return 1;
}

if(dialogid == VIPS)
{
if(response)
{
switch (listitem)
{
case 0: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/Silver");}
case 1: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/Gold");}
case 2: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/Premium");}
case 3: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/Platinum");}
case 4: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/Esmeralda");}
case 5: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/Diamond");}
case 6: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/Extremo");}
case 7: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/Legendario");}
case 8: {if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/Dios");}
}
}
return 1;
}

if(dialogid == CMNR)
	{
	    if(response)
	    {
	    switch (listitem)
        {
	        case 0:
	        {
	        SetPlayerWalkingStyle(playerid, WALK_NORMAL);
	        SendClientMessage(playerid, COLOR_VERDE, "[INFO]: Seleccionaste el estilo de caminar Normal");
        	return 1;
   			}
			case 1:
	        {
	        SetPlayerWalkingStyle(playerid, WALK_GANGSTA);
	        SendClientMessage(playerid, COLOR_VERDE, "[INFO]: Seleccionaste el estilo de caminar Gordo");
	        return 1;
			}
			case 2:
	        {
	        SetPlayerWalkingStyle(playerid, WALK_GANGSTA2);
	        SendClientMessage(playerid, COLOR_VERDE, "[INFO]: Seleccionaste el estilo de caminar Banda1");
        	return 1;
			}

			case 3:
	        {
	        SetPlayerWalkingStyle(playerid, WALK_OLD);
	        SendClientMessage(playerid, COLOR_VERDE, "[INFO]: Seleccionaste el estilo de caminar Banda2");
	        return 1;
			}

			case 4:
	        {
	        SetPlayerWalkingStyle(playerid, WALK_FAT_OLD);
	        SendClientMessage(playerid, COLOR_VERDE, "[INFO]: Seleccionaste el estilo de caminar Viejo");
        	return 1;
			}

			case 5:
	        {
	        SetPlayerWalkingStyle(playerid, WALK_FAT);
	        SendClientMessage(playerid, COLOR_VERDE, "[INFO]: Seleccionaste el estilo de caminar Viejo Gordo");
        	return 1;
			}

			case 6:
	        {
	        SetPlayerWalkingStyle(playerid, WALK_LADY);
	        SendClientMessage(playerid, COLOR_VERDE, "[INFO]: Seleccionaste el estilo de caminar Mujer1");
        	return 1;
			}

			case 7:
	        {
	        SetPlayerWalkingStyle(playerid, WALK_LADY2);
	        SendClientMessage(playerid, COLOR_VERDE, "[INFO]: Seleccionaste el estilo de caminar Mujer2");
        	return 1;
			}

			case 8:
	        {
	        SetPlayerWalkingStyle(playerid, WALK_DRUNK);
	        SendClientMessage(playerid, COLOR_VERDE, "[INFO]: Seleccionaste el estilo de caminar Borracho");
        	return 1;
			}
			}
			}
	    return 1;
	    }


if(dialogid == DIALOG_SKIN)
{
if(!response)

return SendClientMessage(playerid, COLOR_VERDE, "[SKIN]: Has cancelado el Menú de Skin.");

if(!strval(inputtext))

return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Número de Skin Inválido.");

if(strval(inputtext) < 1 || strval(inputtext) > 311)

return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Número de Skin Inválido.");

for(new i = 0; i < sizeof(badSkins); i++)

if(strval(inputtext) == badSkins[i])

return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Número de Skin Inválido.");

SetPlayerSkin(playerid,strval(inputtext));
SendClientMessage(playerid, COLOR_VERDE, "[SKIN]: Has Cambiado de Skin.");
}

if(dialogid == INTDIALOG)
{
	if(response)
	{
		switch (listitem)
        {
	        case 0:
			{
			SetPlayerPos(playerid, -25.884498,-185.868988,1003.546875);
			SetPlayerInterior(playerid, 17);
			}
	        case 1:
			{
			SetPlayerPos(playerid, -25.884498,-185.868988,1003.546875);
			SetPlayerInterior(playerid, 10);
			}
	        case 2:
			{
			SetPlayerPos(playerid, -30.946699,-89.609596,1003.546875);
			SetPlayerInterior(playerid, 18);
			}
	        case 3:
			{
			SetPlayerPos(playerid, -30.946699,-89.609596,1003.546875);
			SetPlayerInterior(playerid, 16);
			}
	        case 4:
			{
			SetPlayerPos(playerid, -30.946699,-89.609596,1003.546875);
			SetPlayerInterior(playerid, 4);
			}
	        case 5:
			{
			SetPlayerPos(playerid, -26.691598,-55.714897,1003.546875);
			SetPlayerInterior(playerid, 6);
			}
	        case 6:
			{
			SetPlayerPos(playerid, -1827.147338,7.207417,1061.143554);
			SetPlayerInterior(playerid, 14);
			}
	        case 7:
			{
			SetPlayerPos(playerid, -1861.936889,54.908092,1061.143554);
			SetPlayerInterior(playerid, 14);
			}
	        case 8:
			{
			SetPlayerPos(playerid, 1.808619,32.384357,1199.593750);
			SetPlayerInterior(playerid, 1);
			}
	        case 9:
			{
			SetPlayerPos(playerid, 1.808619,32.384357,1199.593750);
			SetPlayerInterior(playerid, 9);
			}
	        case 10:
			{
			SetPlayerPos(playerid, 286.148986,-40.644397,1001.515625);
			SetPlayerInterior(playerid, 1);
			}
	        case 11:
			{
			SetPlayerPos(playerid, 286.800994,-82.547599,1001.515625);
			SetPlayerInterior(playerid, 4);
			}
	        case 12:
			{
			SetPlayerPos(playerid, 296.919982,-108.071998,1001.515625);
			SetPlayerInterior(playerid, 6);
			}
	        case 13:
			{
			SetPlayerPos(playerid, 314.820983,-141.431991,999.601562);
			SetPlayerInterior(playerid, 7);
			}
	        case 14:
			{
			SetPlayerPos(playerid, 316.524993,-167.706985,999.593750);
			SetPlayerInterior(playerid, 6);
			}
	        case 15:
			{
			SetPlayerPos(playerid, 302.292877,-143.139099,1004.062500);
			SetPlayerInterior(playerid, 7);
			}
	        case 16:
			{
			SetPlayerPos(playerid, 298.507934,-141.647048,1004.054748);
			SetPlayerInterior(playerid, 7);
			}
	        case 17:
			{
			SetPlayerPos(playerid, 298.507934,-141.647048,1004.054748);
			SetPlayerInterior(playerid, 3);
			}
	        case 18:
			{
			SetPlayerPos(playerid, 444.646911,508.239044,1001.419494);
			SetPlayerInterior(playerid, 12);
			}
	        case 19:
			{
			SetPlayerPos(playerid, 2215.454833,-1147.475585,1025.796875);
			SetPlayerInterior(playerid, 15);
			}
	        case 20:
			{
			SetPlayerPos(playerid, 833.269775,10.588416,1004.179687);
			SetPlayerInterior(playerid, 3);
			}
	        case 21:
			{
			SetPlayerPos(playerid, -103.559165,-24.225606,1000.718750);
			SetPlayerInterior(playerid, 3);
			}
	        case 22:
			{
			SetPlayerPos(playerid, 963.418762,2108.292480,1011.030273);
			SetPlayerInterior(playerid, 1);
			}
	        case 23:
			{
			SetPlayerPos(playerid, -2240.468505,137.060440,1035.414062);
			SetPlayerInterior(playerid, 6);
			}
	        case 24:
			{
			CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/interiores2");
			}
        }
	}
}

if(dialogid == INTDIALOG+1)
{
	if(response)
	{
		switch (listitem)
        {
	        case 0:
			{
			SetPlayerPos(playerid, 663.836242,-575.605407,16.343263);
			SetPlayerInterior(playerid, 0);
			}
	        case 1:
			{
			SetPlayerPos(playerid, 2169.461181,1618.798339,999.976562);
			SetPlayerInterior(playerid, 1);
			}
	        case 2:
			{
			SetPlayerPos(playerid, 1889.953369,1017.438293,31.882812);
			SetPlayerInterior(playerid, 10);
			}
	        case 3:
			{
			SetPlayerPos(playerid, -2159.122802,641.517517,1052.381713);
			SetPlayerInterior(playerid, 1);
			}
	        case 4:
			{
			SetPlayerPos(playerid, 207.737991,-109.019996,1005.132812);
			SetPlayerInterior(playerid, 15);
			}
	        case 5:
			{
			SetPlayerPos(playerid, 204.332992,-166.694992,1000.523437);
			SetPlayerInterior(playerid, 14);
			}
	        case 6:
			{
			SetPlayerPos(playerid, 207.054992,-138.804992,1003.507812);
			SetPlayerInterior(playerid, 3);
			}
	        case 7:
			{
			SetPlayerPos(playerid, 203.777999,-48.492397,1001.804687);
			SetPlayerInterior(playerid, 1);
			}
	        case 8:
			{
			SetPlayerPos(playerid, 226.293991,-7.431529,1002.210937);
			SetPlayerInterior(playerid, 5);
			}
	        case 9:
			{
			SetPlayerPos(playerid, 161.391006,-93.159156,1001.804687);
			SetPlayerInterior(playerid, 18);
			}
	        case 10:
			{
			SetPlayerPos(playerid, 493.390991,-22.722799,1000.679687);
			SetPlayerInterior(playerid, 17);
			}
	        case 11:
			{
			SetPlayerPos(playerid, 501.980987,-69.150199,998.757812);
			SetPlayerInterior(playerid, 11);
			}
	        case 12:
			{
			SetPlayerPos(playerid, -227.027999,1401.229980,27.765625);
			SetPlayerInterior(playerid, 18);
			}
	        case 13:
			{
			SetPlayerPos(playerid, 457.304748,-88.428497,999.554687);
			SetPlayerInterior(playerid, 4);
			}
	        case 14:
			{
			SetPlayerPos(playerid, 454.973937,-110.104995,1000.077209);
			SetPlayerInterior(playerid, 5);
			}
	        case 15:
			{
			SetPlayerPos(playerid, 435.271331,-80.958938,999.554687);
			SetPlayerInterior(playerid, 6);
			}
	        case 16:
			{
			SetPlayerPos(playerid, 452.489990,-18.179698,1001.132812);
			SetPlayerInterior(playerid, 1);
			}
	        case 17:
			{
			SetPlayerPos(playerid, 681.557861,-455.680053,-25.609874);
			SetPlayerInterior(playerid, 1);
			}
	        case 18:
			{
			SetPlayerPos(playerid, 375.962463,-65.816848,1001.507812);
			SetPlayerInterior(playerid, 10);
			}
	        case 19:
			{
			SetPlayerPos(playerid, 369.579528,-4.487294,1001.858886);
			SetPlayerInterior(playerid, 9);
			}
	        case 20:
			{
			SetPlayerPos(playerid, 373.825653,-117.270904,1001.499511);
			SetPlayerInterior(playerid, 5);
			}
	        case 21:
			{
			SetPlayerPos(playerid, 381.169189,-188.803024,1000.632812);
			SetPlayerInterior(playerid, 17);
			}
	        case 22:
			{
			SetPlayerPos(playerid, 244.411987,305.032989,999.148437);
			SetPlayerInterior(playerid, 1);
			}
	        case 23:
			{
			SetPlayerPos(playerid, 271.884979,306.631988,999.148437);
			SetPlayerInterior(playerid, 2);
			}
	        case 24:
			{
			CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/interiores3");
			}
        }
	}
}

if(dialogid == INTDIALOG+2)
{
	if(response)
	{
		switch (listitem)
        {
	        case 0:
			{
			SetPlayerPos(playerid, 302.180999,300.722991,999.148437);
			SetPlayerInterior(playerid, 4);
			}
	        case 1:
			{
			SetPlayerPos(playerid, 322.197998,302.497985,999.148437);
			SetPlayerInterior(playerid, 5);
			}
	        case 2:
			{
			SetPlayerPos(playerid, 346.870025,309.259033,999.155700);
			SetPlayerInterior(playerid, 6);
			}
	        case 3:
			{
			SetPlayerPos(playerid, -959.564392,1848.576782,9.000000);
			SetPlayerInterior(playerid, 17);
			}
	        case 4:
			{
			SetPlayerPos(playerid, 384.808624,173.804992,1008.382812);
			SetPlayerInterior(playerid, 3);
			}
	        case 5:
			{
			SetPlayerPos(playerid, 223.431976,1872.400268,13.734375);
			SetPlayerInterior(playerid, 0);
			}
	        case 6:
			{
			SetPlayerPos(playerid, 772.111999,-3.898649,1000.728820);
			SetPlayerInterior(playerid, 5);
			}
	        case 7:
			{
			SetPlayerPos(playerid, 774.213989,-48.924297,1000.585937);
			SetPlayerInterior(playerid, 6);
			}
	        case 8:
			{
			SetPlayerPos(playerid, 773.579956,-77.096694,1000.655029);
			SetPlayerInterior(playerid, 7);
			}
	        case 9:
			{
			SetPlayerPos(playerid, 1527.229980,-11.574499,1002.097106);
			SetPlayerInterior(playerid, 3);
			}
	        case 10:
			{
			SetPlayerPos(playerid, 1523.509887,-47.821197,1002.130981);
			SetPlayerInterior(playerid, 2);
			}
	        case 11:
			{
			SetPlayerPos(playerid, 2496.049804,-1695.238159,1014.742187);
			SetPlayerInterior(playerid, 3);
			}
	        case 12:
			{
			SetPlayerPos(playerid, 1267.663208,-781.323242,1091.906250);
			SetPlayerInterior(playerid, 5);
			}
	        case 13:
			{
			SetPlayerPos(playerid, 513.882507,-11.269994,1001.565307);
			SetPlayerInterior(playerid, 3);
			}
	        case 14:
			{
			SetPlayerPos(playerid, 2454.717041,-1700.871582,1013.515197);
			SetPlayerInterior(playerid, 2);
			}
	        case 15:
			{
			SetPlayerPos(playerid, 2527.654052,-1679.388305,1015.498596);
			SetPlayerInterior(playerid, 1);
			}
	        case 16:
			{
			SetPlayerPos(playerid, 2543.462646,-1308.379882,1026.728393);
			SetPlayerInterior(playerid, 2);
			}
	        case 17:
			{
			SetPlayerPos(playerid, 1212.019897,-28.663099,1000.953125);
			SetPlayerInterior(playerid, 3);
			}
	        case 18:
			{
			SetPlayerPos(playerid, 761.412963,1440.191650,1102.703125);
			SetPlayerInterior(playerid, 6);
			}
	        case 19:
			{
			SetPlayerPos(playerid, 1204.809936,-11.586799,1000.921875);
			SetPlayerInterior(playerid, 2);
			}
	        case 20:
			{
			SetPlayerPos(playerid, 1204.809936,13.897239,1000.921875);
			SetPlayerInterior(playerid, 2);
			}
	        case 21:
			{
			SetPlayerPos(playerid, 942.171997,-16.542755,1000.929687);
			SetPlayerInterior(playerid, 3);
			}
	        case 22:
			{
			SetPlayerPos(playerid, 964.106994,-53.205497,1001.124572);
			SetPlayerInterior(playerid, 3);
			}
	        case 23:
			{
			SetPlayerPos(playerid, -2640.762939,1406.682006,906.460937);
			SetPlayerInterior(playerid, 3);
			}
	        case 24:
			{
			SetPlayerPos(playerid, -729.276000,503.086944,1371.971801);
			SetPlayerInterior(playerid, 1);
			}
	        case 25:
			{
			CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/interiores4");
			}
        }
	}
}

if(dialogid == INTDIALOG+3)
{
	if(response)
	{
		switch (listitem)
        {
	        case 0:
			{
			SetPlayerPos(playerid, -794.806396,497.738037,1376.195312);
			SetPlayerInterior(playerid, 1);
			}
	        case 1:
			{
			SetPlayerPos(playerid, 2350.339843,-1181.649902,1027.976562);
			SetPlayerInterior(playerid, 5);
			}
	        case 2:
			{
			SetPlayerPos(playerid, 2807.619873,-1171.899902,1025.570312);
			SetPlayerInterior(playerid, 8);
			}
	        case 3:
			{
			SetPlayerPos(playerid, 318.564971,1118.209960,1083.882812);
			SetPlayerInterior(playerid, 5);
			}
	        case 4:
			{
			SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
			SetPlayerInterior(playerid, 1);
			}
	        case 5:
			{
			SetPlayerPos(playerid, 1302.519897,-1.787510,1001.028259);
			SetPlayerInterior(playerid, 18);
			}
	        case 6:
			{
			SetPlayerPos(playerid, 2522.000000,-1673.383911,14.866223);
			SetPlayerInterior(playerid, 0);
			}
	        case 7:
			{
			SetPlayerPos(playerid, -221.059051,1408.984008,27.773437);
			SetPlayerInterior(playerid, 18);
			}
	        case 8:
			{
			SetPlayerPos(playerid, 2324.419921,-1145.568359,1050.710083);
			SetPlayerInterior(playerid, 12);
			}
	        case 9:
			{
			SetPlayerPos(playerid, -975.975708,1060.983032,1345.671875);
			SetPlayerInterior(playerid, 10);
			}
	        case 10:
			{
			SetPlayerPos(playerid, 411.625976,-21.433298,1001.804687);
			SetPlayerInterior(playerid, 2);
			}
	        case 11:
			{
			SetPlayerPos(playerid, 418.652984,-82.639793,1001.804687);
			SetPlayerInterior(playerid, 3);
			}
	        case 12:
			{
			SetPlayerPos(playerid, 412.021972,-52.649898,1001.898437);
			SetPlayerInterior(playerid, 12);
			}
	        case 13:
			{
			SetPlayerPos(playerid, -204.439987,-26.453998,1002.273437);
			SetPlayerInterior(playerid, 16);
			}
	        case 14:
			{
			SetPlayerPos(playerid, -204.439987,-8.469599,1002.273437);
			SetPlayerInterior(playerid, 17);
			}
	        case 15:
			{
			SetPlayerPos(playerid, -204.439987,-43.652496,1002.273437);
			SetPlayerInterior(playerid, 3);
			}
	        case 16:
			{
			SetPlayerPos(playerid, 246.783996,63.900199,1003.640625);
			SetPlayerInterior(playerid, 6);
			}
	        case 17:
			{
			SetPlayerPos(playerid, 246.375991,109.245994,1003.218750);
			SetPlayerInterior(playerid, 10);
			}
	        case 18:
			{
			SetPlayerPos(playerid, 288.745971,169.350997,1007.171875);
			SetPlayerInterior(playerid, 3);
			}
	        case 19:
			{
			SetPlayerPos(playerid, -2029.798339,-106.675910,1035.171875);
			SetPlayerInterior(playerid, 3);
			}
	        case 20:
			{
			SetPlayerPos(playerid, -1398.065307,-217.028900,1051.115844);
			SetPlayerInterior(playerid, 7);
			}
	        case 21:
			{
			SetPlayerPos(playerid, -1398.103515,937.631164,1036.479125);
			SetPlayerInterior(playerid, 15);
			}
	        case 22:
			{
			SetPlayerPos(playerid, -1444.645507,-664.526000,1053.572998);
			SetPlayerInterior(playerid, 4);
			}
	        case 23:
			{
			SetPlayerPos(playerid, -1465.268676,1557.868286,1052.531250);
			SetPlayerInterior(playerid, 14);
			}
	        case 24:
			{
			SetPlayerPos(playerid, -1401.829956,107.051300,1032.273437);
			SetPlayerInterior(playerid, 1);
			}
	        case 25:
			{
			CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/interiores5");
			}
        }
	}
}

if(dialogid == INTDIALOG+4)
{
	if(response)
	{
		switch (listitem)
        {
	        case 0:
			{
			SetPlayerPos(playerid, -1790.378295,1436.949829,7.187500);
			SetPlayerInterior(playerid, 0);
			}
	        case 1:
			{
			SetPlayerPos(playerid, 1643.839843,-1514.819580,13.566620);
			SetPlayerInterior(playerid, 0);
			}
	        case 2:
			{
			SetPlayerPos(playerid, -1685.636474,1035.476196,45.210937);
			SetPlayerInterior(playerid, 0);
			}
	        case 3:
			{
			SetPlayerPos(playerid, 76.632553,-301.156829,1.578125);
			SetPlayerInterior(playerid, 0);
			}
	        case 4:
			{
			SetPlayerPos(playerid, 1059.895996,2081.685791,10.820312);
			SetPlayerInterior(playerid, 0);
			}
	        case 5:
			{
			SetPlayerPos(playerid, 1059.180175,2148.938720,10.820312);
			SetPlayerInterior(playerid, 0);
			}
	        case 6:
			{
			SetPlayerPos(playerid, 2131.507812,1600.818481,1008.359375);
			SetPlayerInterior(playerid, 1);
			}
	        case 7:
			{
			SetPlayerPos(playerid, 2315.952880,-1.618174,26.742187);
			SetPlayerInterior(playerid, 0);
			}
	        case 8:
			{
			SetPlayerPos(playerid, 2319.714843,-14.838361,26.749565);
			SetPlayerInterior(playerid, 0);
			}
	        case 9:
			{
			SetPlayerPos(playerid, 1710.433715,-1669.379272,20.225049);
			SetPlayerInterior(playerid, 18);
			}
	        case 10:
			{
			SetPlayerPos(playerid, 1494.325195,1304.942871,1093.289062);
			SetPlayerInterior(playerid, 3);
			}
        }
	}
}
        
if(dialogid == climax)
	{
		if(response)
		{
		switch (listitem)
        {
	        case 0:
			{
            //SetPlayerWeather(playerid,1);
            SetPlayerTime(playerid,24,0);
            SendClientMessage(playerid,red,"[INFO]: {FFFFFF}No puedes poner de día en Hallowen >:D.");
			}
			case 1:
			{
            SetPlayerTime(playerid,24,0);
            SendClientMessage(playerid,COLOR_VERDECLARO,"[INFO]: Tiempo Cambiado a la noche");
			}
			case 2:
			{
            SetPlayerTime(playerid,24,0);
           	SendClientMessage(playerid,red,"[INFO]: {FFFFFF}No puedes poner de día en Hallowen >:D.");
			}
			case 3:
			{
            SetPlayerTime(playerid,24,0);
            SendClientMessage(playerid,red,"[INFO]: {FFFFFF}No puedes poner de día en Hallowen >:D.");
			}
			case 4:
			{
            SetPlayerTime(playerid,24,0);
            SendClientMessage(playerid,red,"[INFO]: {FFFFFF}No puedes poner de día en Hallowen >:D.");
			}
			case 5:
			{
            SetPlayerTime(playerid,24,0);
            SendClientMessage(playerid,red,"[INFO]: {FFFFFF}No puedes poner de día en Hallowen >:D.");
			}
			case 6:
			{
            SetPlayerWeather(playerid,8);
            SendClientMessage(playerid,COLOR_VERDECLARO,"[INFO]:¡Has hecho llover!");
			}
			case 7:
			{
        	SetPlayerWeather(playerid,1);
            SendClientMessage(playerid,COLOR_VERDECLARO,"[INFO]: Has hecho salir el sol");
			}
			case 8:
			{
            SetPlayerWeather(playerid,9);
            SendClientMessage(playerid,COLOR_VERDECLARO,"[INFO]: Nieve seleccionada!");
			}
			case 9:
			{
            SetPlayerWeather(playerid,19);
            SendClientMessage(playerid,COLOR_VERDECLARO,"[INFO]: Tormenta de arena seleccionada");
			}
			case 10:
			{
            SetPlayerWeather(playerid,21);
            SendClientMessage(playerid,COLOR_VERDECLARO,"[INFO]: Cielo Gris Seleccionado");
			}
			case 11:
            {
            SetPlayerWeather(playerid,382);
			SendClientMessage(playerid,COLOR_VERDECLARO,"[INFO]: Cielo Rojo Seleccionado");
			}
			case 12:
            {
            SetPlayerWeather(playerid,953);
			SendClientMessage(playerid,COLOR_VERDECLARO,"[INFO]: Cielo Color Púrpura Seleccionado");
			}
			case 13:
            {
			TogglePlayerClock(playerid,1);
			SendClientMessage(playerid,COLOR_VERDECLARO,"[INFO]: Auto Clima Activado! Usa {FF0000}/Clima Para Desactivarlo!");
			}
		}
		}
		return 1;
	}


if(dialogid == Dialog_Pelea)
{
if(response)
{
switch (listitem)
{
case 0:
{
SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
GameTextForPlayer(playerid, "~b~estilo de pelea cambiado a: ~n~~w~normal",5000,5);
}
case 1:
{
SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
GameTextForPlayer(playerid, "~b~estilo de pelea cambiado a: ~n~~w~boxeo",5000,5);
}
case 2:
{
SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
GameTextForPlayer(playerid, "~b~estilo de pelea cambiado a: ~n~~w~kungfu",5000,5);
}
case 3:
{
SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
GameTextForPlayer(playerid, "~b~estilo de pelea cambiado a: ~n~~w~callejero",5000,5);
}
case 4:
{
SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
GameTextForPlayer(playerid, "~b~estilo de pelea cambiado a: ~n~~w~agarrar y patear",5000,5);
}
case 5:
{
SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
GameTextForPlayer(playerid, "~b~estilo de pelea cambiado a: ~n~~w~codos",5000,5);
}
}
}
return 1;
}


if(dialogid == CMD){if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/cmds1");}
if(dialogid == CMD+1){if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/cmds2");}
if(dialogid == CMD+2){if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/cmds3");}
if(dialogid == CMD+3){if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/cmds4");}
if(dialogid == CMD+4){if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/cmds5");}
if(dialogid == CMD+5){if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/cmds6");}
if(dialogid == CMD+6){if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/cmds7");}
if(dialogid == CMD+7){if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/cmds8");}
if(dialogid == CDTS){if(response) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/creditos1");}

if(dialogid == INFO)
{
if(response)
{
switch (listitem)
{
case 0:
{
{
{
	new string[1817];
	strcat(string, "{FF0000}Todo Sobre Samp\n\n\nSamp (San Andreas Multiplayer): \n{FFFFFF}Es una modificación para Grand Theft Auto: San Andreas que lo convierte en un juego Multijugador. \nUsted puede jugar a través de Internet (o LAN) con capacidad para 500 personas.\nHay muchos modos de Juego que cuentan con una serie de cosas diferentes y divertidas para hacer. \nMuchos de los cuales no son posibles en un solo Jugador.\n\n");
	strcat(string, "{FF0000}Modos de Juego (GM): \n{FFFFFF}Son los Modos que tiene el Server para Jugar los Cualos son:\n");
	strcat(string, "{1141FF}* Freeroam (Modo Libre): {FFFFFF}Es un modo mayormente libre y sin restricciones, el Jugador puede realizar cualquier tipo de acción,\n(dentro de los límites permitidos por las Reglas del Servidor) sin ningún tipo de limitaciones.\n");
	strcat(string, "{1141FF}* DeathMatch (Combate a Muerte): {FFFFFF}Los jugadores están provisto de armas y tienen como objetivo matar al resto de Jugadores\npara conseguir premios como dinero, puntos, vehículos y nuevas o mejores armas.\n");
	strcat(string, "{1141FF}* Team DeathMach (Combate a Muerte por Equipos): {FFFFFF}Similar al modo anterior, pero los Jugadores se agrupan en equipos.\n");
	strcat(string, "{1141FF}* RolePlay (Juego de Rol): {FFFFFF}Este modo emula la Vida Real y como tal los Jugadores\ndeben buscar trabajo, un hogar, comprar vehículos, etc. Es el modo más Jugado.\n");
	strcat(string, "{1141FF}* Race (Carrera): {FFFFFF}Se divide en varias categorías tales como Drift, Rally, Carreras Ilegales, Nascar,\n(conocido en Grand Theft Auto: San Andreas como Hotring) y otras.\n");
	strcat(string, "{1141FF}* Stunt (Acrobacia): {FFFFFF}Se basa en la realización de trucos Acrobáticos con vehículos.\nEl mapa está plagado de objetos que ayuden (rampas, circuitos, carreteras en el aire y agua, etc.)\n");
	strcat(string, "{1141FF}* Zombie: {FFFFFF}Es un Team DeathMatch en el cual luchan Zombies vs Humanos.\nSe lo toma como un modo diferente ya que posee ciertas características exclusivas.\n\n");
	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{ffb800}|| SA-MP ||", string, "OK", "");
	}
	return 1;
	}
}
case 1:
{
{
{
	new string[1840];
    strcat(string, "{FF0000}Armas: \n{FFFFFF}Aqui pondremos las definiciones de las Armas, de como Usarlos y sus Bugs.\n\n");
	strcat(string, "{20F718}Cuchillo: {FFFFFF}Arma cuerpo a cuerpo , es una arma mortal si atacas por detrás a tu enemigo.\n");
	strcat(string, "{20F718}Motosierra: {FFFFFF}Arma cuerpo a cuerpo más potente.\n");
	strcat(string, "{20F718}9mm: {FFFFFF}Pistola de poca potencia que puedes manejar corriendo , es muy buena para Duelos.\n");
	strcat(string, "{20F718}9mm con silenciador: {FFFFFF}Pistola similar a la 9mm pero con un silenciador en su parte delantera.\n");
	strcat(string, "{20F718}Desert Eagle (Llamada Deagle también): {FFFFFF}Pistola mas potente de un disparo te quita el 50% de la vida aproximadamente.\n");
	strcat(string, "{20F718}Sawn Off Shotgun o Recortadas: {FFFFFF}La mejor arma para Duelear , arma con disparos muy potentes con 4 tiros te quita la vida y el chaleco practicamente.\n");
	strcat(string, "{20F718}Shotgun o Pump: {FFFFFF}Escopeta normal , con disparos potentes también.\n");
	strcat(string, "{20F718}Spas o Escopeta De Combate: {FFFFFF}La mejor escopeta caminando , tiene disparos de mucha potencia a Corta/Media distancia.\n");
	strcat(string, "{20F718}M4: {FFFFFF}Mejor Fusil a larga distancia , tiene disparos muy potentes, no recomiendo el Cbug en esta arma.\n");
	strcat(string, "{20F718}AK47: {FFFFFF}Fusil a larga distancia , mismas caracteristicas que la M4 pero sus disparos son menos potentes.\n");
	strcat(string, "{20F718}Sniper: {FFFFFF}Mejor arma a larga distancia, el Slide no lo recomiendo porque no ves nada.\n\n");
	strcat(string, "{20F718}RW (Running Weapons): {FFFFFF}Son las armas con las que puedes correr mientras disparas.\n Ej: recortadas, uzi, pistolas, tec). La mayoría cree que estas armas son de Pros, pero no es así,\nquien sabe dominar las WW es más Pro que quien sabe dominar las RW.\n");
	strcat(string, "{20F718}WW (Walking Weapons): {FFFFFF}Son el equipamento del verdadero Pro. Si recién empezás en Samp, no te recomiendo usarlas contra uno que sabe RW,\nya que, digamos la verdad, te va a violar\n Ejemplos de WW: Desert, Shotgun, Spaz, Sniper, M4, etc.\n\n");
    ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{ffb800}|| SA-MP ||", string, "OK", "");
	}
	return 1;
	}
}
case 2:
{
{
{
	new string[1046];
    strcat(string, "{FF0000}Bugs de Armas: \n{FFFFFF}Aqui pondremos los Bugs de las Armas, las cuales son {FF0000}4\n\n");
	strcat(string, "{20F718}C-Bug (Crouch Bug): {FFFFFF}El C-Bug sirve para disparar más rápido en ww, lo puedes ejecutar con la siguiente combinación:\nDisparar + Rapidamente C (Asi sucesivamente) {989110}(Desert, Shotgun, Escopeta De Combate, M4, Sniper).\n");
	strcat(string, "{20F718}Slidebug: {FFFFFF}El Slide Bug sirve para moverte mientras disparas, este bug se hace:\nAgachandose + Espacio + W y Apuntar a la vez.\nCaminarás con la Deagle pero aparecerá que estás corriendo {989110}(Desert, Shotgun, Escopeta De Combate, M4, Sniper).\n");
	strcat(string, "{20F718}Two Shoot: {FFFFFF}Usada en la Sawn Off, sirve para disparar sin recargar, este bug se hace:\nDisparar una vez + E + Disparar + E , Con la letra E si tienes el contro por defecto.\nTambién puedes hacerlo con el botón central del ratón {989110}(Sawn Off).\n");
	strcat(string, "{20F718}Slide Two Shoot: {FFFFFF}Usada en la Sawn Off, sirve para disparar sin recargar seguidamente mientras tas corriendo,\nusado para Noobs y no permitodo en el Servidor {989110}(Sawn Off).\n");
    ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{ffb800}|| SA-MP ||", string, "OK", "");
	}
	return 1;
	}
}
case 3:
{
{
{
	new string[1300];
    strcat(string, "{FF0000}Frases Usadas: \n{FFFFFF}Aqui pondremos las definiciones de las Frases más usadas en Samp.\n\n");
	strcat(string, "{20F718}LOL: {FFFFFF}Laughing Out Loud (Mucha risa o Morirse de la risa)\n");
	strcat(string, "{20F718}ROFL: {FFFFFF}Rolling on floor laughing (Rodando en el suelo riéndose)\n");
	strcat(string, "{20F718}AFK: {FFFFFF}Away From Keyboard (Lejos del Teclado), Osea que no está Jugando.\n");
	strcat(string, "{20F718}WTF: {FFFFFF}What the Fuck (Pero que carajo).\n");
	strcat(string, "{20F718}N00b o Noob: {FFFFFF}Pues viene a hacer estorbo, desagradable, pesado, fastidiosos, estúpido, etc..\n");
	strcat(string, "{20F718}NEWBIE: {FFFFFF}Principiante, Novato, Iniciado, etc..\n");
	strcat(string, "{20F718}FTW: {FFFFFF}For the win (Por la victoria)\n");
	strcat(string, "{20F718}GTFO: {FFFFFF}Get the fuck out (Vete a la mierda de aqui)\n");
	strcat(string, "{20F718}LMAO: {FFFFFF}Laughin my ass off (Partirse el culo de la risa)\n");
    ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{ffb800}|| SA-MP ||", string, "OK", "");
	}
	return 1;
	}
}
case 4:
{
{
{
	new string[2800];
    strcat(string, "{FF0000}Funciones Usadas: \n{FFFFFF}Aqui pondremos las definiciones de las Funciones más usadas en Samp.\n\n");
	strcat(string, "{20F718}Drive By o DB: {FFFFFF}Matar con un Subfusil (TEC9, UZI, SMG) Siendo el conductor de un Vehículo.\n");
	strcat(string, "{20F718}Park Kill (También conocido como car kill): {FFFFFF}Matar dejándoles encima el Vehículo a los Jugadores.\n");
	strcat(string, "{20F718}HeliKill: {FFFFFF}Matar con las Hélices del Helicóptero.\n");
	strcat(string, "{20F718}SpawnKill: {FFFFFF}Matar apenas aparesca el Jugador en su Respawn.\n");
	strcat(string, "{20F718}Kickear: {FFFFFF}Expulsar a un Jugador del Server por distintas razones.\n");
	strcat(string, "{20F718}Bannear: {FFFFFF}Expulsar a un Jugador y Registriéndole el acceso al Server por distintas razones.\n");
	strcat(string, "{20F718}Cheat: {FFFFFF}Son programas para facilitar el Juego, en otras palabras Trampas.\n");
	strcat(string, "{20F718}Cheater: {FFFFFF}Jugador que usa los Cheats.\n");
	strcat(string, "{20F718}Lag: {FFFFFF}Es el retrazo que tienes en el Juego, causando que no puedas ver bien a los Jugadores o atinarles en los disparos.\nMuchos lo confunden con el Ping. Si puede estar vinculado al Ping, pero no siempre.\nEl Lag también puede deberse a FPS bajos o a una PC con pocos recursos.\n");
	strcat(string, "{20F718}Ping: {FFFFFF}Tiempo de respuesta entre el Servidor y el Jugador o sea el Ping es de acuerdo a la velocidad de internet y distancia al Host.\nCuanta mayor sea la distancia al Host del Server, el Ping será mayor, cuanto mayor sea tu velocidad de internet, menor será tu Ping.\nLo común es 150-250 en Servers del mismo Continente. Cuando el Ping excede los 300, puede llamarse Lag.\n");
	strcat(string, "{20F718}FPS (Frames Per Second): {FFFFFF}O Fotogramas Por Segundo. Son los Fotogramas que el Juego pasa por segundo.\nLo normal es tener FPS de más de 25. Cuando tienes menos de 25 FPS, ya sos Lagger.\n");
	strcat(string, "{20F718}Warp: {FFFFFF}Es cuando vez a un Jugador que se Teletransporta a corta Distancia, es debido al Lag entre otras cosas.\n");
	strcat(string, "{20F718}Fast Skin: {FFFFFF}El Fast Skin es un Skin que gira mas rápido que un Skin normal.\nPor lo general son los que se la dan de Pro. Entre los fast skin se encuentran CJ, Ryder, Big Smoke, Sweet y otros más.\n");
	strcat(string, "{20F718}Spam: {FFFFFF}El Spam se produce cuando un Usuario o Jugador publica comentarios\nque contienen enlaces o algún tipo de referencia hacia alguna página web o foro similar\nde igual contenido, o incluso ajeno al mismo, así como cualquier otro objetivo típico de publicidad\ncon el objetivo de atraer más usuarios y visitantes al mismo.\n");
	strcat(string, "{20F718}Flood: {FFFFFF}El Flood, donde es más frecuente, es en los foros, donde se escriben en un mismo tema\nvarios mensajes con el único fin de llenar el contador de Posts o la barra de Chat.\n");
	strcat(string, "{20F718}Mod´s: {FFFFFF}Programas que sirven para modificar el Juego\nHay 2 tipos de Mods que son los Cheats o Modificación Interna (Sobeit, Cleo, Etc)\nY la Modificación Visual Para mejorar gráficos, Etc (Hud, STR3, Sami, etc).");
    ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{ffb800}|| SA-MP ||", string, "OK", "");
	}
	return 1;
	}
}
case 5:
{
{
{
	new string[1430];
    strcat(string, "{FF0000}Como disparar en Samp: \n{FFFFFF}Aqui pondremos como se dispara en Samp según el Lag.\nCuando tenemos ciertos pings...\n\n");
	strcat(string, "{20F718}0-10: {FFFFFF}Nada de Lag, al disparar al personaje, el tiro acertará y provocará daños.\n");
	strcat(string, "{20F718}10-60: {FFFFFF}Asable, muy poco Lag, nada.\n");
	strcat(string, "{20F718}60-90: {FFFFFF}Pocos problemas, Solucionable con una ráfaga de tiros.\n");
	strcat(string, "{20F718}90-150: {FFFFFF}Los problemas empiezan, hay que ANTICIPAR los disparos a donde el personaje esté corriendo/caminando.\n");
	strcat(string, "{20F718}150-280: {FFFFFF}Es Jugable cuando te acostumbras a éste Ping, si sabes como disparar, te resultará fácil.\n");
	strcat(string, "{20F718}280-600: {FFFFFF}El Juego empieza a trabarse, es molesto...te acostumbras con dificultad.\n");
	strcat(string, "{20F718}600 en Adelante: {FFFFFF}Imposible jugar, a menos que juegues STUNTS sólo.\n\n\n");
	strcat(string, "{FF0000}HOST: \n");
	strcat(string, "{FFFFFF}El Host es como una super PC (Usada como base de Datos) que está prendida todo el tiempo\ny mantiene el Server dedicado Open, es decir, abierto.\nComo el Server Samp no se puede tener en la PC abierto todo el tiempo, porque obiamente la PC no aguanta\nestar todos los dias y todas las horas prendida.\n");
	strcat(string, "Y se les asigna un Host, es decir, un lugar donde la PC esta prendida continuamente.\nCuando es Host se cae, es porque esa super PC se reinicia o apaga.\nEl Host se debe pagar por cuotas, y la mayoría de los Servers de Samp están Hosteados, es decir,\nalojados, en México y Estados Unidos.\nResumiendo, el Host es la casa del Server.");
    ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{ffb800}|| SA-MP ||", string, "OK", "");
	}
	return 1;
	}
}
}
}
return 1;
}

		if(dialogid == Obje)
	    {
		if(response)
		{
		switch (listitem)
        {
             case 0:
			{
            SetPlayerAttachedObject( playerid, 0, 19065, 2, 0.121128, 0.023578, 0.001139, 222.540847, 90.773872, 211.130859, 1.098305, 1.122310, 1.106640 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 1:
			{
            SetPlayerAttachedObject( playerid, 0, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 2:
			{
            SetPlayerAttachedObject( playerid, 0, 19078, 1, -1.097527, -0.348305, -0.008029, 0.000000, 0.000000, 0.000000, 8.073966, 8.073966, 8.073966 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 3:
			{
            SetPlayerAttachedObject( playerid, 0, 1371, 1, 0.037538, 0.000000, -0.020199, 350.928314, 89.107200, 180.974227, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 4:
			{
            SetPlayerAttachedObject( playerid, 0, 18645, 2, 0.079577, 0.016865, 0.005709, 171.620758, 93.131149, 280.057983, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 5:
			{
            SetPlayerAttachedObject( playerid, 0, 18939, 2, 0.147825, 0.010626, -0.004892, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 6:
			{
            SetPlayerAttachedObject( playerid, 0, 19006, 2, 0.109624, 0.029350, -0.000269, 271.726898, 86.017311, 177.508102, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 7:
			{
            SetPlayerAttachedObject( playerid, 0, 18728, 2, 0.134301, 1.475258, -0.192459, 82.870338, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 8:
			{
            SetPlayerAttachedObject( playerid, 0, 18843, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.027590, -0.027590, -0.027590 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 9:
			{
            SetPlayerAttachedObject( playerid, 0, 18844, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.027590, -0.027590, -0.027590 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 10:
			{
            SetPlayerAttachedObject( playerid, 0, 18845, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.027590, -0.027590, -0.027590 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 11:
            {
			ShowPlayerDialog(playerid,Obje2,DIALOG_STYLE_LIST,"HOLD Objetos","Maleta\nBolsa-Dinero\nHombre-Tiburón\nHombre-Delfin\nSombrero-Cluckin Bell\nBeachBall\nBasketBall\nSa-Mp Logo\nSombrero Slash\nCalabaza\nBajo\n{00FF00}Siguiente","Ok","Cerrar");
			}
		}
		}
		return 1;
	}

    if(dialogid == Obje2)
	{
		if(response)
		{
		switch (listitem)
        {
             case 0:
			{
            SetPlayerAttachedObject( playerid, 0, 1210, 6, 0.259532, -0.043030, -0.009978, 85.185333, 271.380615, 253.650283, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 1:
			{
            SetPlayerAttachedObject( playerid, 0, 1550, 15, 0.016491, 0.205742, -0.208498, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 2:
			{
            SetPlayerAttachedObject( playerid, 0, 1608, 1, 0.201047, -1.839761, -0.010739, 0.000000, 90.005447, 0.000000, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 3:
			{
            SetPlayerAttachedObject( playerid, 0, 1607, 1, 0.000000, 0.000000, 0.000000, 0.000000, 86.543479, 0.000000, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 4:
			{
            SetPlayerAttachedObject( playerid, 0, 19137, 2, 0.110959, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 5:
			{
            SetPlayerAttachedObject( playerid, 0, 1598, 2, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 6:
			{
            SetPlayerAttachedObject( playerid, 0, 2114, 2, 0.043076, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 7:
			{
			SetPlayerAttachedObject( playerid, 0, 18749, 2, 0.264992, 0.043229, -0.004249, 0.000000, 87.368362, 165.130233, 1.000000, 1.000000, 1.000000 );
			SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			case 8:
            {
			SetPlayerAttachedObject( playerid, 0, 19352, 2, 0.137999, 0.000000, 0.000000, 0.000000, 82.300010, 0.000000, 1.000000, 1.000000, 1.860999 );
			SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			case 9:
            {
			SetPlayerAttachedObject( playerid, 0, 19320, 2, 0.184000,0.000000,0.020000,-18.599983,83.199989,-46.700000,0.469000,0.675999,0.798999 );
			SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			case 10:
            {
			SetPlayerAttachedObject( playerid, 0, 19319, 12, -0.539000,0.000000,0.171000,-169.600021,-31.799983,-15.800000,0.910999,0.708000,0.917000 );
			SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 11:
            {
			ShowPlayerDialog(playerid,Obje3,DIALOG_STYLE_LIST,"HOLD Objetos","Hombre-Toro\nEscudo\nDildo-1\nDildo-2\nDildo-3\nLinterna\nGuitarra Eléctrica\nGuitarra Eléctrica Rosa\nSombrero de Vaquero\nGorro Militar\nGorro Militar Ruso\n{FF0E1E}Sacar objeto (/citems)","Ok","Cerrar");
			}
		}
		}
		return 1;
    }


    if(dialogid == Obje3)
	{
	    if(response)
		{
		switch (listitem)
        {
             case 0:
			{
            SetPlayerAttachedObject( playerid, 0, 2045, 5, 0.054017, -0.143008, -0.296382, 236.015472, 0.000000, 0.000000, 1.677617, 1.000000, 1.000000 );
            SetPlayerAttachedObject( playerid, 1, 1736, 15, -0.052946, -0.209805, 0.302906, 0.000000, 0.000000, 0.000000, 1.438930, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 1:
			{
            SetPlayerAttachedObject( playerid, 1, 18637, 13, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 2:
			{
            SetPlayerAttachedObject( playerid, 0, 321, 1, -0.351133, 0.125670, 0.008458, 267.892150, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 3:
			{
            SetPlayerAttachedObject( playerid, 0, 19086, 8, -0.071553, -0.079917, -0.126324, 285.126586, 272.391174, 12.223253, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 4:
			{
            SetPlayerAttachedObject( playerid, 0, 19086, 8, -0.071553, -0.079917, -0.126324, 285.126586, 272.391174, 12.223253, 1.000000, 1.000000, 1.000000 );
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
	        ApplyAnimation(playerid, "PAULNMAC", "wank_in", 4.0, 1, 1, 1, 1, 1);
			}
			 case 5:
			{
            SetPlayerAttachedObject(playerid, 2,18641, 5, 0.1, 0.02, -0.05, 0, 0, 0, 1, 1, 1);
            SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			case 6:
            {
			SetPlayerAttachedObject( playerid, 0, 19318, 12, -0.539000,0.000000,0.171000,-169.600021,-31.799983,-15.800000,0.910999,0.708000,0.917000 );
			SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			case 7:
            {
			SetPlayerAttachedObject( playerid, 0, 19317, 12, -0.539000,0.000000,0.171000,-169.600021,-31.799983,-15.800000,0.910999,0.708000,0.917000 );
			SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			case 8:
            {
			SetPlayerAttachedObject(playerid,0,19100,2,0.170000,0.000000,0.000000,0.000000,0.000000,0.000000,1.104999,1.000000,1.000000);
			SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			case 9:
            {
			SetPlayerAttachedObject(playerid,0,18925,2,0.153999,0.000000,-0.005000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
			SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			case 10:
            {
			SetPlayerAttachedObject(playerid,0,18924,2,0.153999,0.000000,-0.005000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
			SendClientMessage(playerid, 0x0000FFAA,"[INFO]: Usa /citems para sacártelo");
			}
			 case 11:
			{
            for(new i;i<5;i++) RemovePlayerAttachedObject(playerid,i);
			}
          }
          }
return 1;
    }

if (dialogid == 2012)
	{
 	if (strlen(inputtext) >= 1 && strlen(inputtext) <= 100)
 	{
 	SendClientAudioMessage(playerid, "es", inputtext);
 	}
 	}

 	switch(dialogid)
    {
        case 5000:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                ShowPlayerDialog(playerid,5001,DIALOG_STYLE_LIST,"{FF0000}Rojos", "{FF0000}Rojo\r\n{DC143C}Carmesí\r\n{E32636}Alizarina\r\n{E34234}Bermellón\r\n{FF2400}Escarlata\r\n{800000}Granate\r\n{960018}Carmín\r\n{E52B50}Amaranto\r\n{FF033E}Rosa Americana\r\n{800020}Borgoña","Ok","Cancelar");
                }
                case 1:
                {
                ShowPlayerDialog(playerid,5002,DIALOG_STYLE_LIST,"{FF8000}Naranjas", "{FEC3AC}Salmón\r\n{FF7028}Naranja\r\n{FF7E00}Ámbar\r\n{FF7F50}Coral\r\n{FF8C69}Sésamo\r\n{FBCEB1}Albaricoque\r\n{F5DEB3}Beige\r\n{FFCC99}Piel","Ok","Cancelar");
                }
                case 2:
                {
                ShowPlayerDialog(playerid,5003,DIALOG_STYLE_LIST,"{964B00}Marrones", "{964B00}Marrón\r\n{CC7722}Ocre\r\n{B87333}Siena\r\n{321414}Marrón Foca\r\n{483C32}Gris Pardo\r\n{3D2B1F}Bistre\r\n{98817B}Cinereous\r\n{674C47}Pardo medio\r\n{BC987E}Pardo Pálido","Ok","Cancelar");
                }
                case 3:
                {
                ShowPlayerDialog(playerid,5004,DIALOG_STYLE_LIST,"{00FF00}Amarillos", "{00FF00}Amarillos\r\n{FDE910}Limón\r\n{FFD700}Dorado\r\n{FFBF00}Ámbar\r\n{E3A857}Amarillo indio\r\n{FFBA00}Amarillo selectivo","Ok","Cancelar");
                }
                case 4:
                {
                ShowPlayerDialog(playerid,5005,DIALOG_STYLE_LIST,"{00FF00}Verdes", "{40826D}Verde Veronés\r\n{40826D}Xanadu\r\n{94812B}Kaki\r\n{00FF00}Verde\r\n{7FFF00}Verde Lima\r\n{8DB600}Verde Manzana\r\n{4D5D53}Feldgrau\r\n{4CBB17}Verde Kelly\r\n{008000}Ao Inglés\r\n{50C878}Esmeralda\r\n{00A86B}Jade\r\n{44944A}Arquelín\r\n{7BA05B}Esparrago\r\n{6B8E23}Verde Oliva\r\n{355E3B}Verde Cazador","Ok","Cancelar");
                }
                case 5:
                {
                ShowPlayerDialog(playerid,5006,DIALOG_STYLE_LIST,"{00FFFF}Azules Claros", "{00FFFF}Cian\r\n{30D5C8}Turquesa\r\n{87CEFF}Celeste\r\n{9BC4E2}Cerúleo o Azul cielo\r\n{7FFFD4}Aguamarina","Ok","Cancelar");
                }
                case 6:
                {
                ShowPlayerDialog(playerid,5007,DIALOG_STYLE_LIST,"{0000FF}Azules Oscuros", "{6082B6}Glauco\r\n{0000FF}Azul\r\n{0047AB}Azul Cobalto\r\n{120A8F}Azul Marino\r\n{5D8AA8}Azul de fuerza aérea\r\n{0000CD}Azur\r\n{0131B4}Zafiro\r\n{000080}Turquí\r\n{003153}Azul de Prusia\r\n{6050DC}Azul Majorelle","Ok","Cancelar");
                }
                case 7:
                {
                ShowPlayerDialog(playerid,5008,DIALOG_STYLE_LIST,"{8B00FF}Violetas", "{AA98A9}Rosa Cuarzo\r\n{8B00FF}Violeta\r\n{B57EDC}Lavanda Floral\r\n{9966CC}Amatista\r\n{660099}Púrpura\r\n{66023C}Púrpura de Tiro\r\n{915C83}Fucsia Antiguo\r\n{4B0082}Añil o Indigo","Ok","Cancelar");
                }
                case 8:
                {
                ShowPlayerDialog(playerid,5009,DIALOG_STYLE_LIST,"{FF00FF}Rosas", "{FF00FF}Magenta\r\n{F400A1}Fuscia\r\n{C54B8C}Morado\r\n{E0B0FF}Malva\r\n{C8A2C8}Lila\r\n{E6E6fA}Lavanda\r\n{FFCBDB}Rosa\r\n{CD9575}Bronze Antiguo\r\n{DA8A67}Siena Pálido", "Ok","Cancelar");
                ColUsado[playerid] = 1;
				}
				case 9:
				{
				SetPlayerColor(playerid, 0xFFFFFFFF);
				SendClientMessage(playerid, 0xFFFFFFFF, "[INFO]: Has seleccionado tu color a blanco");
                ColUsado[playerid] = 1;
				}
				case 10:
				{
				SetPlayerColor(playerid, 0x000000FF);
				SendClientMessage(playerid, 0xFFFFFFFF, "[INFO]: Has seleccionado tu color a {000000}negro");
                ColUsado[playerid] = 1;
				}
				case 11:
				{
				ShowPlayerDialog(playerid,5010,DIALOG_STYLE_LIST,"{808080}Grises", "Gris\r\n{3B444B}Arsénico\r\n{B2BEB5}Ceniza\r\n{848482}Gris Acorazado\r\n{536872}Gris Cadete\r\n{36454F}Carbón Vegetal\r\n{8C92AC}Gris Fresco\r\n{555555}Gris de Davy\r\n{534B4F}Hígado\r\n{40404F}Gris de Payne\r\n{E5E4E2}Platino\r\n{C0C0C0}Plateado\r\n{708090}Gris Pizarra\r\n{50404D}Violeta Pardo","Ok","Cancelar");
				}
            }
        }
        case 5001:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0xFF0000FF);
                SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Has seleccionado tu color a Rojo");
                ColUsado[playerid] = 1;
                }
                case 1:
                {
                SetPlayerColor(playerid, 0xDC143CFF);
                SendClientMessage(playerid, 0xDC143CFF, "[INFO]: Has seleccionado tu color a Carmesí");
                ColUsado[playerid] = 1;
                }
                case 2:
                {
                SetPlayerColor(playerid, 0xE32636FF);
                SendClientMessage(playerid, 0xE32636FF, "[INFO]: Has seleccionado tu color a Alizarina");
                ColUsado[playerid] = 1;
				}
				case 3:
				{
				SetPlayerColor(playerid, 0xE34234FF);
				SendClientMessage(playerid, 0xE34234FF, "[INFO]: Has seleccionado tu color a Bermellón");
                ColUsado[playerid] = 1;
				}
				case 4:
				{
				SetPlayerColor(playerid, 0xFF2400FF);
				SendClientMessage(playerid, 0xFF2400FF, "[INFO]: Has seleccionado tu color a Escarlata");
                ColUsado[playerid] = 1;
				}
				case 5:
				{
				SetPlayerColor(playerid, 0x800000FF);
				SendClientMessage(playerid, 0x800000FF, "[INFO]: Has seleccionado tu color a Granate");
                ColUsado[playerid] = 1;
				}
				case 6:
				{
				SetPlayerColor(playerid, 0x960018FF);
                SendClientMessage(playerid, 0x960018FF, "[INFO]: Has seleccionado tu color a Carmín");
                ColUsado[playerid] = 1;
                }
                case 7:
                {
                SetPlayerColor(playerid, 0xE52B50FF);
                SendClientMessage(playerid, 0xE52B50FF, "[INFO]: Has seleccionado tu color a Amaranto");
                ColUsado[playerid] = 1;
                }
                case 8:
                {
                SetPlayerColor(playerid, 0xFF033EFF);
                SendClientMessage(playerid, 0xFF033EFF, "[INFO]: Has seleccionado tu color a Rosa Americana");
                ColUsado[playerid] = 1;
                }
                case 9:
                {
                SetPlayerColor(playerid, 0x800020FF);
                SendClientMessage(playerid, 0x800020FF, "[INFO]: Has seleccionado tu color a Borgoña");
                ColUsado[playerid] = 1;
                }
			}
        }
        case 5002:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0xFEC3ACFF);
                SendClientMessage(playerid, 0xFEC3ACFF,"[INFO]: Has seleccionado tu color a Salmón");
                ColUsado[playerid] = 1;
                }
                case 1:
                {
                SetPlayerColor(playerid, 0xFF7028FF);
                SendClientMessage(playerid, 0xFF7028FF,"[INFO]: Has seleccionado tu color a Naranja");
                ColUsado[playerid] = 1;
                }
                case 2:
                {
                SetPlayerColor(playerid, 0xFF7E00FF);
                SendClientMessage(playerid, 0xFF7E00FF,"[INFO]: Has seleccionado tu color a Ámbar");
                ColUsado[playerid] = 1;
                }
                case 3:
                {
                SetPlayerColor(playerid, 0xFF7F50FF);
                SendClientMessage(playerid, 0xFF7F50FF,"[INFO]: Has seleccionado tu color a Coral");
                ColUsado[playerid] = 1;
                }
                case 4:
                {
                SetPlayerColor(playerid, 0xFF8C69FF);
                SendClientMessage(playerid, 0xFF8C69FF,"[INFO]: Has seleccionado tu color a Sésamo");
                ColUsado[playerid] = 1;
                }
                case 5:
                {
                SetPlayerColor(playerid, 0xFBCEB1FF);
                SendClientMessage(playerid, 0xFBCEB1FF,"[INFO]: Has seleccionado tu color a Albaricoque");
                ColUsado[playerid] = 1;
                }
                case 6:
                {
                SetPlayerColor(playerid, 0xF5DEB3FF);
                SendClientMessage(playerid, 0xF5DEB3FF,"[INFO]: Has seleccionado tu color a Beige");
                ColUsado[playerid] = 1;
                }
                case 7:
                {
                SetPlayerColor(playerid, 0xFFCC99FF);
                SendClientMessage(playerid, 0xFFCC99FF,"[INFO]: Has seleccionado tu color a Piel");
                ColUsado[playerid] = 1;
                }
			}
		}
       case 5003:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
				SetPlayerColor(playerid, 0x964B00FF);
				SendClientMessage(playerid, 0x964B00FF, "[INFO]: Has seleccionado tu color a Marrón");
                ColUsado[playerid] = 1;
                }
                case 1:
                {
				SetPlayerColor(playerid, 0xCC7722FF);
				SendClientMessage(playerid, 0xCC7722FF, "[INFO]: Has seleccionado tu color a Ocre");
                ColUsado[playerid] = 1;
                }
                case 2:
                {
				SetPlayerColor(playerid, 0xB87333FF);
				SendClientMessage(playerid, 0xB87333FF, "[INFO]: Has seleccionado tu color a Siena");
                ColUsado[playerid] = 1;
                }
                case 3:
                {
				SetPlayerColor(playerid, 0x321414FF);
				SendClientMessage(playerid, 0x321414FF, "[INFO]: Has seleccionado tu color a Marrón Foca");
                ColUsado[playerid] = 1;
                }
                case 4:
                {
				SetPlayerColor(playerid, 0x483C32FF);
				SendClientMessage(playerid, 0x483C32FF, "[INFO]: Has seleccionado tu color a Gris Pardo");
                ColUsado[playerid] = 1;
                }
                case 5:
                {
				SetPlayerColor(playerid, 0x3D2B1FFF);
				SendClientMessage(playerid, 0x3D2B1FFF, "[INFO]: Has seleccionado tu color a Bistre");
                ColUsado[playerid] = 1;
                }
                case 6:
                {
				SetPlayerColor(playerid, 0x98817BFF);
				SendClientMessage(playerid, 0x98817BFF, "[INFO]: Has seleccionado tu color a Cinereous");
                ColUsado[playerid] = 1;
                }
                case 7:
                {
				SetPlayerColor(playerid, 0x674C47FF);
				SendClientMessage(playerid, 0x674C47FF, "[INFO]: Has seleccionado tu color a Pardo Medio");
                ColUsado[playerid] = 1;
                }
                case 8:
                {
				SetPlayerColor(playerid, 0xBC987EFF);
				SendClientMessage(playerid, 0xBC987EFF, "[INFO]: Has seleccionado tu color a Pardo Pálido");
                ColUsado[playerid] = 1;
                }
			}
		 }
		 case 5004:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
				SetPlayerColor(playerid, 0xFFFF00FF);
				SendClientMessage(playerid, 0xFFFF00FF, "[INFO]: Has seleccionado tu color a Amarillo");
                ColUsado[playerid] = 1;
                }
                case 1:
                {
				SetPlayerColor(playerid, 0xFDE910FF);
				SendClientMessage(playerid, 0xFDE910FF, "[INFO]: Has seleccionado tu color a Limón");
                ColUsado[playerid] = 1;
                }
                case 2:
                {
				SetPlayerColor(playerid, 0xFFD700FF);
				SendClientMessage(playerid, 0xFFD700FF, "[INFO]: Has seleccionado tu color a Dorado");
                ColUsado[playerid] = 1;
                }
                case 3:
                {
				SetPlayerColor(playerid, 0xFFBF00FF);
				SendClientMessage(playerid, 0xFFBF00FF, "[INFO]: Has seleccionado tu color a Ámbar");
                ColUsado[playerid] = 1;
                }
                case 4:
                {
				SetPlayerColor(playerid, 0xE3A857FF);
				SendClientMessage(playerid, 0xE3A857FF, "[INFO]: Has seleccionado tu color a Amarillo Indio");
                ColUsado[playerid] = 1;
                }
                case 5:
                {
				SetPlayerColor(playerid, 0xFFBA00FF);
				SendClientMessage(playerid, 0xFFBA00FF, "[INFO]: Has seleccionado tu color a Amarillo Selectivo");
                ColUsado[playerid] = 1;
                }
			}
		 }
		 case 5005:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0x40826DFF);
                SendClientMessage(playerid, 0x40826DFF, "[INFO]: Has seleccionado tu color a Verde Veronés");
                ColUsado[playerid] = 1;
                }
                case 1:
                {
                SetPlayerColor(playerid, 0x738678FF);
                SendClientMessage(playerid, 0x738678FF, "[INFO]: Has seleccionado tu color a Xanadu");
                ColUsado[playerid] = 1;
                }
                case 2:
                {
                SetPlayerColor(playerid, 0x94812BFF);
                SendClientMessage(playerid, 0x94812BFF, "[INFO]: Has seleccionado tu color a Kaki");
                ColUsado[playerid] = 1;
                }
                case 3:
                {
                SetPlayerColor(playerid, 0x00FF00FF);
                SendClientMessage(playerid, 0x00FF00FF, "[INFO]: Has seleccionado tu color a Verde");
                ColUsado[playerid] = 1;
                }
                case 4:
                {
                SetPlayerColor(playerid, 0x7FFF00FF);
                SendClientMessage(playerid, 0x7FFF00FF, "[INFO]: Has seleccionado tu color a Verde Lima");
                ColUsado[playerid] = 1;
                }
                case 5:
                {
                SetPlayerColor(playerid, 0x8DB600FF);
                SendClientMessage(playerid, 0x8DB600FF, "[INFO]: Has seleccionado tu color a Verde Manzana");
                ColUsado[playerid] = 1;
                }
                case 6:
                {
                SetPlayerColor(playerid, 0x4D5D53FF);
                SendClientMessage(playerid, 0x4D5D53FF, "[INFO]: Has seleccionado tu color a Fledgrau");
                ColUsado[playerid] = 1;
                }
                case 7:
                {
                SetPlayerColor(playerid, 0x4CBB17FF);
                SendClientMessage(playerid, 0x4CBB17FF, "[INFO]: Has seleccionado tu color a Verde Kelly");
                ColUsado[playerid] = 1;
                }
				case 8:
                {
                SetPlayerColor(playerid, 0x008000FF);
                SendClientMessage(playerid, 0x008000FF, "[INFO]: Has seleccionado tu color a Ao Inglés");
                ColUsado[playerid] = 1;
                }
				case 9:
                {
                SetPlayerColor(playerid, 0x50C878FF);
                SendClientMessage(playerid, 0x50C878FF, "[INFO]: Has seleccionado tu color a Esmeralda");
                ColUsado[playerid] = 1;
                }
                case 10:
                {
                SetPlayerColor(playerid, 0x00A86BFF);
                SendClientMessage(playerid, 0x00A86BFF, "[INFO]: Has seleccionado tu color a Jade");
                ColUsado[playerid] = 1;
                }
                case 11:
                {
                SetPlayerColor(playerid, 0x44944AFF);
                SendClientMessage(playerid, 0x44944AFF, "[INFO]: Has seleccionado tu color a Arquelín");
                ColUsado[playerid] = 1;
                }
                case 12:
                {
                SetPlayerColor(playerid, 0x7BA05BFF);
                SendClientMessage(playerid, 0x7BA05BFF, "[INFO]: Has seleccionado tu color a Espárrago");
                ColUsado[playerid] = 1;
                }
                case 13:
                {
                SetPlayerColor(playerid, 0x6B8E23FF);
                SendClientMessage(playerid, 0x6B8E23FF, "[INFO]: Has seleccionado tu color a Verde Oliva");
                ColUsado[playerid] = 1;
                }
                case 14:
                {
                SetPlayerColor(playerid, 0x355E3BFF);
                SendClientMessage(playerid, 0x355E3BFF, "[INFO]: Has seleccionado tu color a Verde Cazador");
                ColUsado[playerid] = 1;
                }

			}
		}
		case 5006:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0x00FFFFFF);
                SendClientMessage(playerid, 0x00FFFFFF, "[INFO]: Has seleccionado tu color a Cian");
                ColUsado[playerid] = 1;
                }
                case 1:
                {
                SetPlayerColor(playerid, 0x30D5C8FF);
                SendClientMessage(playerid, 0x30D5C8FF, "[INFO]: Has seleccionado tu color a Turquesa");
                ColUsado[playerid] = 1;
                }
                case 2:
                {
                SetPlayerColor(playerid, 0x87CEFFFF);
                SendClientMessage(playerid, 0x87CEFFFF, "[INFO]: Has seleccionado tu color a Celeste");
                ColUsado[playerid] = 1;
                }
                case 3:
                {
                SetPlayerColor(playerid, 0x9BC4E2FF);
                SendClientMessage(playerid, 0x9BC4E2FF, "[INFO]: Has seleccionado tu color a Cerúleo/Azul Cielo");
                ColUsado[playerid] = 1;
				}
				case 4:
                {
                SetPlayerColor(playerid, 0x7FFFD4FF);
                SendClientMessage(playerid, 0x7FFFD4FF, "[INFO]: Has seleccionado tu color a Aguamarina");
                ColUsado[playerid] = 1;
                }
			}
		}
		case 5007:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0x6082B6FF);
                SendClientMessage(playerid, 0x6082B6FF, "vHas seleccionado tu color a Glauco");
                ColUsado[playerid] = 1;
                }
                case 1:
                {
                SetPlayerColor(playerid, 0x0000FFFF);
                SendClientMessage(playerid, 0x0000FFFF, "[INFO]: Has seleccionado tu color a Azul");
                ColUsado[playerid] = 1;
                }
                case 2:
                {
                SetPlayerColor(playerid, 0x0047ABFF);
                SendClientMessage(playerid, 0x0047ABFF, "[INFO]: Has seleccionado tu color a Azul Cobalto");
                ColUsado[playerid] = 1;
                }
                case 3:
                {
                SetPlayerColor(playerid, 0x120A8FFF);
                SendClientMessage(playerid, 0x120A8FFF, "[INFO]: Has seleccionado tu color a Azul Marino");
                ColUsado[playerid] = 1;
                }
                case 4:
                {
                SetPlayerColor(playerid, 0x5D8AA8FF);
                SendClientMessage(playerid, 0x5D8AA8FF, "[INFO]: Has seleccionado tu color a Azul de Fuerza Aérea");
                ColUsado[playerid] = 1;
                }
                case 5:
                {
                SetPlayerColor(playerid, 0x0000CDFF);
                SendClientMessage(playerid, 0x0000CDFF, "[INFO]: Has seleccionado tu color a Azur");
                ColUsado[playerid] = 1;
                }
                case 6:
                {
                SetPlayerColor(playerid, 0x0131B4FF);
                SendClientMessage(playerid, 0x0131B4FF, "[INFO]: Has seleccionado tu color a Zafiro");
                ColUsado[playerid] = 1;
                }
                case 7:
                {
                SetPlayerColor(playerid, 0x000080FF);
                SendClientMessage(playerid, 0x000080FF, "[INFO]: Has seleccionado tu color a Turquí");
                ColUsado[playerid] = 1;
                }
                case 8:
                {
                SetPlayerColor(playerid, 0x003153FF);
                SendClientMessage(playerid, 0x003153FF, "[INFO]: Has seleccionado tu color a Azul de Prusa");
                ColUsado[playerid] = 1;
                }
                case 9:
                {
                SetPlayerColor(playerid, 0x6050DCFF);
                SendClientMessage(playerid, 0x6050DCFF, "[INFO]: Has seleccionado tu color a Azul Majorelle");
                ColUsado[playerid] = 1;
                }

			}
		}
		case 5008:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0xAA98A9FF);
                SendClientMessage(playerid, 0xAA98A9FF, "[INFO]: Has seleccionado tu color a Rosa Cuarzo");
                ColUsado[playerid] = 1;
                }
                case 1:
                {
                SetPlayerColor(playerid, 0x8B00FFFF);
                SendClientMessage(playerid, 0x8B00FFFF, "[INFO]: Has seleccionado tu color a Violeta");
                ColUsado[playerid] = 1;
                }
                case 2:
                {
                SetPlayerColor(playerid, 0xB57EDCFF);
                SendClientMessage(playerid, 0xB57EDCFF, "[INFO]: Has seleccionado tu color a Lavanda Floral");
                ColUsado[playerid] = 1;
                }
                case 3:
                {
                SetPlayerColor(playerid, 0x9966CFF);
                SendClientMessage(playerid, 0x9966CFF, "[INFO]: Has seleccionado tu color a Amatista");
                ColUsado[playerid] = 1;
                }
                case 4:
                {
                SetPlayerColor(playerid, 0x660099FF);
                SendClientMessage(playerid, 0x660099FF, "[INFO]: Has seleccionado tu color a Púrpura");
                ColUsado[playerid] = 1;
                }
                case 5:
                {
                SetPlayerColor(playerid, 0x66023CFF);
                SendClientMessage(playerid, 0x66023CFF, "[INFO]: Has seleccionado tu color a Púrpura de Tiro");
                ColUsado[playerid] = 1;
                }
                case 6:
                {
                SetPlayerColor(playerid, 0x915C83FF);
                SendClientMessage(playerid, 0x915C83FF, "[INFO]: Has seleccionado tu color a Fucsia Antiguo");
                ColUsado[playerid] = 1;
                }
                case 7:
                {
                SetPlayerColor(playerid, 0x4B0082FF);
                SendClientMessage(playerid, 0x4B0082FF, "[INFO]: Has seleccionado tu color a Añil Antiguo");
                ColUsado[playerid] = 1;
                }
			}
		}
		case 5009:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0xFF00FFFF);
                SendClientMessage(playerid, 0xFF00FFFF, "[INFO]: Has seleccionado tu color a Magenta");
                ColUsado[playerid] = 1;
                }
                case 1:
                {
                SetPlayerColor(playerid, 0xF400A1FF);
                SendClientMessage(playerid, 0xF400A1FF, "[INFO]: Has seleccionado tu color a Fucsia");
                }
                case 2:
                {
                SetPlayerColor(playerid, 0xC54B8CFF);
                SendClientMessage(playerid, 0xC54B8CFF, "[INFO]: Has seleccionado tu color a Morado");
                ColUsado[playerid] = 1;
                }
                case 3:
                {
                SetPlayerColor(playerid, 0xE0B0FFFF);
                SendClientMessage(playerid, 0xE0B0FFFF, "[INFO]: Has seleccionado tu color a Malva");
                ColUsado[playerid] = 1;
                }
                case 4:
                {
                SetPlayerColor(playerid, 0xC8A2C8FF);
                SendClientMessage(playerid, 0xC8A2C8FF, "[INFO]: Has seleccionado tu color a Lila");
                ColUsado[playerid] = 1;
                }
                case 5:
                {
                SetPlayerColor(playerid, 0xE6E6fAFF);
                SendClientMessage(playerid, 0xE6E6fAFF, "[INFO]: Has seleccionado tu color a Lavanda");
                ColUsado[playerid] = 1;
                }
                case 6:
                {
                SetPlayerColor(playerid, 0xFFCBDBFF);
                SendClientMessage(playerid, 0xFFCBDBFF, "[INFO]: Has seleccionado tu color a Rosa");
                ColUsado[playerid] = 1;
                }
                case 7:
                {
                SetPlayerColor(playerid, 0xCD9575FF);
                SendClientMessage(playerid, 0xCD9575FF, "[INFO]: Has seleccionado tu color a Bronce Antiguo");
                ColUsado[playerid] = 1;
                }
                case 8:
                {
                SetPlayerColor(playerid, 0xDA8A67FF);
                SendClientMessage(playerid, 0xDA8A67FF, "[INFO]: Has seleccionado tu color a Siena Pálido");
                ColUsado[playerid] = 1;
                }
			}
		}
		case 5010:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0x808080FF);
                SendClientMessage(playerid, 0x808080FF, "[INFO]: Has seleccionado tu color a Gris");
                ColUsado[playerid] = 1;
                }
                case 1:
                {
                SetPlayerColor(playerid, 0x3B444BFF);
                SendClientMessage(playerid, 0x3B444BFF, "[INFO]: Has seleccionado tu color a Arsénico");
                ColUsado[playerid] = 1;
                }
                case 2:
                {
                SetPlayerColor(playerid, 0xB2BEB5FF);
                SendClientMessage(playerid, 0xB2BEB5FF, "[INFO]: Has seleccionado tu color a Ceniza");
                ColUsado[playerid] = 1;
                }
                case 3:
                {
                SetPlayerColor(playerid, 0x848482FF);
                SendClientMessage(playerid, 0x848482FF, "[INFO]: Has seleccionado tu color a Gris Acorazado");
                ColUsado[playerid] = 1;
                }
                case 4:
                {
                SetPlayerColor(playerid, 0x536872FF);
                SendClientMessage(playerid, 0x536872FF, "[INFO]: Has seleccionado tu color a Gris Cadete");
                ColUsado[playerid] = 1;
                }
                case 5:
                {
                SetPlayerColor(playerid, 0x36454FFF);
                SendClientMessage(playerid, 0x36454FFF, "[INFO]: Has seleccionado tu color a Carbón Vegetal");
                ColUsado[playerid] = 1;
                }
                case 6:
                {
                SetPlayerColor(playerid, 0x8C92ACFF);
                SendClientMessage(playerid, 0x8C92ACFF, "[INFO]: Has seleccionado tu color a Gris Fresco");
                ColUsado[playerid] = 1;
                }
                case 7:
                {
                SetPlayerColor(playerid, 0x555555FF);
                SendClientMessage(playerid, 0x555555FF, "[INFO]: Has seleccionado tu color a Gris de Davy");
                ColUsado[playerid] = 1;
                }
                case 8:
                {
                SetPlayerColor(playerid, 0x534B4FFF);
                SendClientMessage(playerid, 0x534B4FFF, "[INFO]: Has seleccionado tu color a Hígado");
                ColUsado[playerid] = 1;
                }
                case 9:
                {
                SetPlayerColor(playerid, 0x40404FFF);
                SendClientMessage(playerid, 0x40404FFF, "[INFO]: Has seleccionado tu color a Gris de Payne");
                ColUsado[playerid] = 1;
                }
                case 10:
                {
                SetPlayerColor(playerid, 0xE5E4E2FF);
                SendClientMessage(playerid, 0xE5E4E2FF, "[INFO]: Has seleccionado tu color a Platino");
                ColUsado[playerid] = 1;
                }
                case 11:
                {
                SetPlayerColor(playerid, 0xC0C0C0FF);
                SendClientMessage(playerid, 0xC0C0C0FF, "[INFO]: Has seleccionado tu color a Plateado");
                ColUsado[playerid] = 1;
                }
                case 12:
                {
                SetPlayerColor(playerid, 0x708090FF);
                SendClientMessage(playerid, 0x708090FF, "[INFO]: Has seleccionado tu color a Gris Pizarra");
                ColUsado[playerid] = 1;
                }
                case 13:
                {
                SetPlayerColor(playerid, 0x50404DFF);
                SendClientMessage(playerid, 0x50404DFF, "[INFO]: Has seleccionado tu color a Violeta Pardo");
                ColUsado[playerid] = 1;
                }
			}
		}
    }


if(dialogid == MAUTOS)
{
if(response)
{
switch (listitem)
{
case 0: {ShowPlayerDialog(playerid, MAUTOS+1, DIALOG_STYLE_LIST, "{FF8000}AUTOS",
"{FF8000}Admiral\n\
{FF8000}Blade\n\
{FF8000}Blistac\n\
{FF8000}Bravura\n\
{FF8000}Broadway\n\
{FF8000}Buffalo\n\
{FF8000}Cadrona\n\
{FF8000}Cheetah\n\
{FF8000}Clover\n\
{FF8000}Comet\n\
{FF8000}CopCarla\n\
{FF8000}CopCarsf\n\
{FF8000}Elegant\n\
{FF8000}Elegy\n\
{FF8000}Glendale\n\
{FF8000}Manana\n\
{FF8000}Premier\n\
{FF8000}Sabre\n\
{FF8000}Savanna\n\
{FF8000}Taxi\n\
{FF8000}Voodoo\n\
{FF8000}Zr350\n\
{FF8000}Kart\n\
{FF8000}Mower\n\
{FF8000}Sweeper","Seleccionar","Atras");}
case 1: {ShowPlayerDialog(playerid, MAUTOS+2, DIALOG_STYLE_LIST, "{FF0000}AUTOS RAPIDOS",
"{FF0000}Alpha\n\
{FF0000}Banshee\n\
{FF0000}Bullet\n\
{FF0000}Comet\n\
{FF0000}Euros\n\
{FF0000}Hotrina\n\
{FF0000}Hotring\n\
{FF0000}Infernus\n\
{FF0000}Jester\n\
{FF0000}Phonix\n\
{FF0000}Sultan\n\
{FF0000}Supergt\n\
{FF0000}Turismo\n\
{FF0000}Uranus","Seleccionar","Atras");}
case 2: {ShowPlayerDialog(playerid, MAUTOS+3, DIALOG_STYLE_LIST, "{FE2E2E}MOTOS Y BICICLETAS",
"{FE2E2E}NRG-500\n\
{FE2E2E}Faggio\n\
{FE2E2E}FCR-900\n\
{FE2E2E}PCJ-600\n\
{FE2E2E}Freeway\n\
{FE2E2E}BF-400\n\
{FE2E2E}PizzaBoy\n\
{FE2E2E}CopBike\n\
{FE2E2E}Sanchez\n\
{FE2E2E}Cuatrimoto\n\
{FE2E2E}Bike\n\
{FE2E2E}BMX\n\
{FE2E2E}Mountain Bike\n\
{FE2E2E}Wayfarer","Seleccionar","Atras");}
case 3: {ShowPlayerDialog(playerid, MAUTOS+4, DIALOG_STYLE_LIST, "{00FF00}CAMIONES Y CAMIONETAS",
"{00FF00}Ambulance\n\
{00FF00}Benson\n\
{00FF00}BobCat\n\
{00FF00}Burrito\n\
{00FF00}Bus\n\
{00FF00}Camper\n\
{00FF00}Coach\n\
{00FF00}FireTruck\n\
{00FF00}Patriot\n\
{00FF00}Rancher\n\
{00FF00}Walton\n\
{00FF00}Duneride\n\
{00FF00}Monster\n\
{00FF00}Verga Movil\n\
{00FF00}Dumper","Seleccionar","Atras");}
case 4: {ShowPlayerDialog(playerid, MAUTOS+5, DIALOG_STYLE_LIST, "{FFFFFF}AVIONES",
"{FFFFFF}Rustler\n\
{FFFFFF}Dodo\n\
{FFFFFF}Nevada\n\
{FFFFFF}StuntPlane\n\
{FFFFFF}Beagle\n\
{FFFFFF}Skimer\n\
{FFFFFF}Shamal","Seleccionar","Atras");}
case 5: {ShowPlayerDialog(playerid, MAUTOS+6, DIALOG_STYLE_LIST, "{80FF00}HELICOPTEROS",
"{80FF00}Cargobob\n\
{80FF00}Leviathn\n\
{80FF00}Maverick\n\
{80FF00}PolMav\n\
{80FF00}RainDanc\n\
{80FF00}VsnMav\n\
{80FF00}Sparrow","Seleccionar","Atras");}
case 6: {ShowPlayerDialog(playerid, MAUTOS+7, DIALOG_STYLE_LIST, "{0000FF}BOTES",
"{0000FF}CoastGuard\n\
{0000FF}Dhingy\n\
{0000FF}JetMax\n\
{0000FF}Launch\n\
{0000FF}Marquis\n\
{0000FF}Predato\n\
{0000FF}Speedr\n\
{0000FF}Squalo\n\
{0000FF}Vortex\n\
{0000FF}Reefer","Seleccionar","Atras");}
case 7: {ShowPlayerDialog(playerid, MAUTOS+8, DIALOG_STYLE_LIST, "{DBA901}AUTOS DE GUERRA",
"{DBA901}Seasparrow [$30000]\n\
{DBA901}Hydra [$60000]\n\
{DBA901}Hunter [$80000]\n\
{DBA901}Rhino [$100000]","Seleccionar","Atras");}
}
}
return 1;
}

if(dialogid == MAUTOS+1)
{
if(response == 0)ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "{00EEFF}Autos De {FF0000}Revolucion {FFFFFF}Latina", "{FF8000}Autos\n{FF0000}Autos Rápidos\n{FE2E2E}Motos y Bicicletas\n{00FF00}Camiones y Camionetas\n{FFFFFF}Aviones\n{80FF00}Helicópteros\n{0000FF}Botes\n{DBA901}Autos de Guerra", "Seleccionar","Cancelar");
if(response)
{
switch (listitem)
{
case 0: {CarSpawner1(playerid,445);}
case 1: {CarSpawner1(playerid,536);}
case 2: {CarSpawner1(playerid,496);}
case 3: {CarSpawner1(playerid,401);}
case 4: {CarSpawner1(playerid,575);}
case 5: {CarSpawner1(playerid,402);}
case 6: {CarSpawner1(playerid,527);}
case 7: {CarSpawner1(playerid,415);}
case 8: {CarSpawner1(playerid,542);}
case 9: {CarSpawner1(playerid,480);}
case 10: {CarSpawner1(playerid,596);}
case 11: {CarSpawner1(playerid,597);}
case 12: {CarSpawner1(playerid,507);}
case 13: {CarSpawner1(playerid,562);}
case 14: {CarSpawner1(playerid,466);}
case 15: {CarSpawner1(playerid,410);}
case 16: {CarSpawner1(playerid,426);}
case 17: {CarSpawner1(playerid,475);}
case 18: {CarSpawner1(playerid,467);}
case 19: {CarSpawner1(playerid,420);}
case 20: {CarSpawner1(playerid,412);}
case 21: {CarSpawner1(playerid,477);}
case 22: {CarSpawner1(playerid,571);}
case 23: {CarSpawner1(playerid,572);}
case 24: {CarSpawner1(playerid,574);}
}
}
return 1;
}

if(dialogid == MAUTOS+2)
{
if(response == 0)
{
ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "{00EEFF}Autos De {FF0000}Revolucion {FFFFFF}Latina", "{FF8000}Autos\n{FF0000}Autos Rápidos\n{FE2E2E}Motos y Bicicletas\n{00FF00}Camiones y Camionetas\n{FFFFFF}Aviones\n{80FF00}Helicópteros\n{0000FF}Botes\n{DBA901}Autos de Guerra", "Seleccionar","Cancelar");
}
if(response)
{
switch (listitem)
{
case 0: {CarSpawner1(playerid,602);}
case 1: {CarSpawner1(playerid,429);}
case 2: {CarSpawner1(playerid,541);}
case 3: {CarSpawner1(playerid,480);}
case 4: {CarSpawner1(playerid,587);}
case 5: {CarSpawner1(playerid,502);}
case 6: {CarSpawner1(playerid,494);}
case 7: {CarSpawner1(playerid,411);}
case 8: {CarSpawner1(playerid,559);}
case 9: {CarSpawner1(playerid,603);}
case 10: {CarSpawner1(playerid,560);}
case 11: {CarSpawner1(playerid,506);}
case 12: {CarSpawner1(playerid,451);}
case 13: {CarSpawner1(playerid,558);}
}
}
return 1;
}

if(dialogid == MAUTOS+3)
{
if(response == 0)
{
ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "{00EEFF}Autos De {FF0000}Revolucion {FFFFFF}Latina", "{FF8000}Autos\n{FF0000}Autos Rápidos\n{FE2E2E}Motos y Bicicletas\n{00FF00}Camiones y Camionetas\n{FFFFFF}Aviones\n{80FF00}Helicópteros\n{0000FF}Botes\n{DBA901}Autos de Guerra", "Seleccionar","Cancelar");
}
if(response)
{
switch (listitem)
{
case 0: {CarSpawner1(playerid,522);}
case 1: {CarSpawner1(playerid,462);}
case 2: {CarSpawner1(playerid,521);}
case 3: {CarSpawner1(playerid,461);}
case 4: {CarSpawner1(playerid,463);}
case 5: {CarSpawner1(playerid,581);}
case 6: {CarSpawner1(playerid,448);}
case 7: {CarSpawner1(playerid,523);}
case 8: {CarSpawner1(playerid,468);}
case 9: {CarSpawner1(playerid,471);}
case 10: {CarSpawner1(playerid,509);}
case 11: {CarSpawner1(playerid,481);}
case 12: {CarSpawner1(playerid,510);}
case 13: {CarSpawner1(playerid,586);}
}
}
return 1;
}

if(dialogid == MAUTOS+4)
{
if(response == 0)
{
ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "{00EEFF}Autos De {FF0000}Revolucion {FFFFFF}Latina", "{FF8000}Autos\n{FF0000}Autos Rápidos\n{FE2E2E}Motos y Bicicletas\n{00FF00}Camiones y Camionetas\n{FFFFFF}Aviones\n{80FF00}Helicópteros\n{0000FF}Botes\n{DBA901}Autos de Guerra", "Seleccionar","Cancelar");
}
if(response)
{
switch (listitem)
{
case 0: {CarSpawner1(playerid,416);}
case 1: {CarSpawner1(playerid,499);}
case 2: {CarSpawner1(playerid,422);}
case 3: {CarSpawner1(playerid,482);}
case 4: {CarSpawner1(playerid,431);}
case 5: {CarSpawner1(playerid,483);}
case 6: {CarSpawner1(playerid,437);}
case 7: {CarSpawner1(playerid,407);}
case 8: {CarSpawner1(playerid,470);}
case 9: {CarSpawner1(playerid,489);}
case 10: {CarSpawner1(playerid,578);}
case 11: {CarSpawner1(playerid,573);}
case 12: {CarSpawner1(playerid,444);}
case 13: {CarSpawner1(playerid,423);}
case 14: {CarSpawner1(playerid,406);}
}
}
return 1;
}

if(dialogid == MAUTOS+5)
{
if(response == 0)
{
ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "{00EEFF}Autos De {FF0000}Revolucion {FFFFFF}Latina", "{FF8000}Autos\n{FF0000}Autos Rápidos\n{FE2E2E}Motos y Bicicletas\n{00FF00}Camiones y Camionetas\n{FFFFFF}Aviones\n{80FF00}Helicópteros\n{0000FF}Botes\n{DBA901}Autos de Guerra", "Seleccionar","Cancelar");
}
if(response)
{
switch (listitem)
{
case 0: {CarSpawner1(playerid,476);}
case 1: {CarSpawner1(playerid,593);}
case 2: {CarSpawner1(playerid,553);}
case 3: {CarSpawner1(playerid,513);}
case 4: {CarSpawner1(playerid,511);}
case 5: {CarSpawner1(playerid,460);}
case 6: {CarSpawner1(playerid,519);}
}
}
return 1;
}

if(dialogid == MAUTOS+6)
{
if(response == 0)
{
ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "{00EEFF}Autos De {FF0000}Revolucion {FFFFFF}Latina", "{FF8000}Autos\n{FF0000}Autos Rápidos\n{FE2E2E}Motos y Bicicletas\n{00FF00}Camiones y Camionetas\n{FFFFFF}Aviones\n{80FF00}Helicópteros\n{0000FF}Botes\n{DBA901}Autos de Guerra", "Seleccionar","Cancelar");
}
if(response)
{
switch (listitem)
{
case 0: {CarSpawner1(playerid,548);}
case 1: {CarSpawner1(playerid,417);}
case 2: {CarSpawner1(playerid,487);}
case 3: {CarSpawner1(playerid,497);}
case 4: {CarSpawner1(playerid,563);}
case 5: {CarSpawner1(playerid,488);}
case 6: {CarSpawner1(playerid,469);}
}
}
return 1;
}

if(dialogid == MAUTOS+7)
{
if(response == 0)ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "{00EEFF}Autos De {FF0000}Revolucion {FFFFFF}Latina", "{FF8000}Autos\n{FF0000}Autos Rápidos\n{FE2E2E}Motos y Bicicletas\n{00FF00}Camiones y Camionetas\n{FFFFFF}Aviones\n{80FF00}Helicópteros\n{0000FF}Botes\n{DBA901}Autos de Guerra", "Seleccionar","Cancelar");
if(response)
{
switch (listitem)
{
case 0: {CarSpawner1(playerid,472);}
case 1: {CarSpawner1(playerid,473);}
case 2: {CarSpawner1(playerid,493);}
case 3: {CarSpawner1(playerid,595);}
case 4: {CarSpawner1(playerid,484);}
case 5: {CarSpawner1(playerid,430);}
case 6: {CarSpawner1(playerid,452);}
case 7: {CarSpawner1(playerid,446);}
case 8: {CarSpawner1(playerid,539);}
case 9: {CarSpawner1(playerid,453);}
}
}
return 1;
}

if (dialogid == 2012)
	{
 	if (strlen(inputtext) >= 1 && strlen(inputtext) <= 100)
 	{
 	SendClientAudioMessage(playerid, "es", inputtext);
 	}
 	}

 	switch(dialogid)
    {
        case 5000:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                ShowPlayerDialog(playerid,5001,DIALOG_STYLE_LIST,"{FF0000}Rojos", "{FF0000}Rojo\r\n{DC143C}Carmesí\r\n{E32636}Alizarina\r\n{E34234}Bermellón\r\n{FF2400}Escarlata\r\n{800000}Granate\r\n{960018}Carmín\r\n{E52B50}Amaranto\r\n{FF033E}Rosa Americana\r\n{800020}Borgoña","Ok","Cancelar");
                }
                case 1:
                {
                ShowPlayerDialog(playerid,5002,DIALOG_STYLE_LIST,"{FF8000}Naranjas", "{FEC3AC}Salmón\r\n{FF7028}Naranja\r\n{FF7E00}Ámbar\r\n{FF7F50}Coral\r\n{FF8C69}Sésamo\r\n{FBCEB1}Albaricoque\r\n{F5DEB3}Beige\r\n{FFCC99}Piel","Ok","Cancelar");
                }
                case 2:
                {
                ShowPlayerDialog(playerid,5003,DIALOG_STYLE_LIST,"{964B00}Marrones", "{964B00}Marrón\r\n{CC7722}Ocre\r\n{B87333}Siena\r\n{321414}Marrón Foca\r\n{483C32}Gris Pardo\r\n{3D2B1F}Bistre\r\n{98817B}Cinereous\r\n{674C47}Pardo medio\r\n{BC987E}Pardo Pálido","Ok","Cancelar");
                }
                case 3:
                {
                ShowPlayerDialog(playerid,5004,DIALOG_STYLE_LIST,"{00FF00}Amarillos", "{00FF00}Amarillos\r\n{FDE910}Limón\r\n{FFD700}Dorado\r\n{FFBF00}Ámbar\r\n{E3A857}Amarillo indio\r\n{FFBA00}Amarillo selectivo","Ok","Cancelar");
                }
                case 4:
                {
                ShowPlayerDialog(playerid,5005,DIALOG_STYLE_LIST,"{00FF00}Verdes", "{40826D}Verde Veronés\r\n{40826D}Xanadu\r\n{94812B}Kaki\r\n{00FF00}Verde\r\n{7FFF00}Verde Lima\r\n{8DB600}Verde Manzana\r\n{4D5D53}Feldgrau\r\n{4CBB17}Verde Kelly\r\n{008000}Ao Inglés\r\n{50C878}Esmeralda\r\n{00A86B}Jade\r\n{44944A}Arquelín\r\n{7BA05B}Esparrago\r\n{6B8E23}Verde Oliva\r\n{355E3B}Verde Cazador","Ok","Cancelar");
                }
                case 5:
                {
                ShowPlayerDialog(playerid,5006,DIALOG_STYLE_LIST,"{00FFFF}Azules Claros", "{00FFFF}Cian\r\n{30D5C8}Turquesa\r\n{87CEFF}Celeste\r\n{9BC4E2}Cerúleo o Azul cielo\r\n{7FFFD4}Aguamarina","Ok","Cancelar");
                }
                case 6:
                {
                ShowPlayerDialog(playerid,5007,DIALOG_STYLE_LIST,"{0000FF}Azules Oscuros", "{6082B6}Glauco\r\n{0000FF}Azul\r\n{0047AB}Azul Cobalto\r\n{120A8F}Azul Marino\r\n{5D8AA8}Azul de fuerza aérea\r\n{0000CD}Azur\r\n{0131B4}Zafiro\r\n{000080}Turquí\r\n{003153}Azul de Prusia\r\n{6050DC}Azul Majorelle","Ok","Cancelar");
                }
                case 7:
                {
                ShowPlayerDialog(playerid,5008,DIALOG_STYLE_LIST,"{8B00FF}Violetas", "{AA98A9}Rosa Cuarzo\r\n{8B00FF}Violeta\r\n{B57EDC}Lavanda Floral\r\n{9966CC}Amatista\r\n{660099}Púrpura\r\n{66023C}Púrpura de Tiro\r\n{915C83}Fucsia Antiguo\r\n{4B0082}Añil o Indigo","Ok","Cancelar");
                }
                case 8:
                {
                ShowPlayerDialog(playerid,5009,DIALOG_STYLE_LIST,"{FF00FF}Rosas", "{FF00FF}Magenta\r\n{F400A1}Fuscia\r\n{C54B8C}Morado\r\n{E0B0FF}Malva\r\n{C8A2C8}Lila\r\n{E6E6fA}Lavanda\r\n{FFCBDB}Rosa\r\n{CD9575}Bronze Antiguo\r\n{DA8A67}Siena Pálido", "Ok","Cancelar");
				}
				case 9:
				{
				SetPlayerColor(playerid, 0xFFFFFFFF);
				SendClientMessage(playerid, 0xFFFFFFFF, "[INFO]: Has seleccionado tu color a blanco");
				}
				case 10:
				{
				SetPlayerColor(playerid, 0x000000FF);
				SendClientMessage(playerid, 0xFFFFFFFF, "[INFO]: Has seleccionado tu color a {000000}negro");
				}
				case 11:
				{
				ShowPlayerDialog(playerid,5010,DIALOG_STYLE_LIST,"{808080}Grises", "Gris\r\n{3B444B}Arsénico\r\n{B2BEB5}Ceniza\r\n{848482}Gris Acorazado\r\n{536872}Gris Cadete\r\n{36454F}Carbón Vegetal\r\n{8C92AC}Gris Fresco\r\n{555555}Gris de Davy\r\n{534B4F}Hígado\r\n{40404F}Gris de Payne\r\n{E5E4E2}Platino\r\n{C0C0C0}Plateado\r\n{708090}Gris Pizarra\r\n{50404D}Violeta Pardo","Ok","Cancelar");
				}
            }
        }
        case 5001:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0xFF0000FF);
                SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Has seleccionado tu color a Rojo");
                }
                case 1:
                {
                SetPlayerColor(playerid, 0xDC143CFF);
                SendClientMessage(playerid, 0xDC143CFF, "[INFO]: Has seleccionado tu color a Carmesí");
                }
                case 2:
                {
                SetPlayerColor(playerid, 0xE32636FF);
                SendClientMessage(playerid, 0xE32636FF, "[INFO]: Has seleccionado tu color a Alizarina");
				}
				case 3:
				{
				SetPlayerColor(playerid, 0xE34234FF);
				SendClientMessage(playerid, 0xE34234FF, "[INFO]: Has seleccionado tu color a Bermellón");
				}
				case 4:
				{
				SetPlayerColor(playerid, 0xFF2400FF);
				SendClientMessage(playerid, 0xFF2400FF, "[INFO]: Has seleccionado tu color a Escarlata");
				}
				case 5:
				{
				SetPlayerColor(playerid, 0x800000FF);
				SendClientMessage(playerid, 0x800000FF, "[INFO]: Has seleccionado tu color a Granate");
				}
				case 6:
				{
				SetPlayerColor(playerid, 0x960018FF);
                SendClientMessage(playerid, 0x960018FF, "[INFO]: Has seleccionado tu color a Carmín");
                }
                case 7:
                {
                SetPlayerColor(playerid, 0xE52B50FF);
                SendClientMessage(playerid, 0xE52B50FF, "[INFO]: Has seleccionado tu color a Amaranto");
                }
                case 8:
                {
                SetPlayerColor(playerid, 0xFF033EFF);
                SendClientMessage(playerid, 0xFF033EFF, "[INFO]: Has seleccionado tu color a Rosa Americana");
                }
                case 9:
                {
                SetPlayerColor(playerid, 0x800020FF);
                SendClientMessage(playerid, 0x800020FF, "[INFO]: Has seleccionado tu color a Borgoña");
                }
			}
        }
        case 5002:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0xFEC3ACFF);
                SendClientMessage(playerid, 0xFEC3ACFF,"[INFO]: Has seleccionado tu color a Salmón");
                }
                case 1:
                {
                SetPlayerColor(playerid, 0xFF7028FF);
                SendClientMessage(playerid, 0xFF7028FF,"[INFO]: Has seleccionado tu color a Naranja");
                }
                case 2:
                {
                SetPlayerColor(playerid, 0xFF7E00FF);
                SendClientMessage(playerid, 0xFF7E00FF,"[INFO]: Has seleccionado tu color a Ámbar");
                }
                case 3:
                {
                SetPlayerColor(playerid, 0xFF7F50FF);
                SendClientMessage(playerid, 0xFF7F50FF,"[INFO]: Has seleccionado tu color a Coral");
                }
                case 4:
                {
                SetPlayerColor(playerid, 0xFF8C69FF);
                SendClientMessage(playerid, 0xFF8C69FF,"[INFO]: Has seleccionado tu color a Sésamo");
                }
                case 5:
                {
                SetPlayerColor(playerid, 0xFBCEB1FF);
                SendClientMessage(playerid, 0xFBCEB1FF,"[INFO]: Has seleccionado tu color a Albaricoque");
                }
                case 6:
                {
                SetPlayerColor(playerid, 0xF5DEB3FF);
                SendClientMessage(playerid, 0xF5DEB3FF,"[INFO]: Has seleccionado tu color a Beige");
                }
                case 7:
                {
                SetPlayerColor(playerid, 0xFFCC99FF);
                SendClientMessage(playerid, 0xFFCC99FF,"[INFO]: Has seleccionado tu color a Piel");
                }
			}
		}
       case 5003:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
				SetPlayerColor(playerid, 0x964B00FF);
				SendClientMessage(playerid, 0x964B00FF, "[INFO]: Has seleccionado tu color a Marrón");
                }
                case 1:
                {
				SetPlayerColor(playerid, 0xCC7722FF);
				SendClientMessage(playerid, 0xCC7722FF, "[INFO]: Has seleccionado tu color a Ocre");
                }
                case 2:
                {
				SetPlayerColor(playerid, 0xB87333FF);
				SendClientMessage(playerid, 0xB87333FF, "[INFO]: Has seleccionado tu color a Siena");
                }
                case 3:
                {
				SetPlayerColor(playerid, 0x321414FF);
				SendClientMessage(playerid, 0x321414FF, "[INFO]: Has seleccionado tu color a Marrón Foca");
                }
                case 4:
                {
				SetPlayerColor(playerid, 0x483C32FF);
				SendClientMessage(playerid, 0x483C32FF, "[INFO]: Has seleccionado tu color a Gris Pardo");
                }
                case 5:
                {
				SetPlayerColor(playerid, 0x3D2B1FFF);
				SendClientMessage(playerid, 0x3D2B1FFF, "[INFO]: Has seleccionado tu color a Bistre");
                }
                case 6:
                {
				SetPlayerColor(playerid, 0x98817BFF);
				SendClientMessage(playerid, 0x98817BFF, "[INFO]: Has seleccionado tu color a Cinereous");
                }
                case 7:
                {
				SetPlayerColor(playerid, 0x674C47FF);
				SendClientMessage(playerid, 0x674C47FF, "[INFO]: Has seleccionado tu color a Pardo Medio");
                }
                case 8:
                {
				SetPlayerColor(playerid, 0xBC987EFF);
				SendClientMessage(playerid, 0xBC987EFF, "[INFO]: Has seleccionado tu color a Pardo Pálido");
                }
			}
		 }
		 case 5004:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
				SetPlayerColor(playerid, 0xFFFF00FF);
				SendClientMessage(playerid, 0xFFFF00FF, "[INFO]: Has seleccionado tu color a Amarillo");
                }
                case 1:
                {
				SetPlayerColor(playerid, 0xFDE910FF);
				SendClientMessage(playerid, 0xFDE910FF, "[INFO]: Has seleccionado tu color a Limón");
                }
                case 2:
                {
				SetPlayerColor(playerid, 0xFFD700FF);
				SendClientMessage(playerid, 0xFFD700FF, "[INFO]: Has seleccionado tu color a Dorado");
                }
                case 3:
                {
				SetPlayerColor(playerid, 0xFFBF00FF);
				SendClientMessage(playerid, 0xFFBF00FF, "[INFO]: Has seleccionado tu color a Ámbar");
                }
                case 4:
                {
				SetPlayerColor(playerid, 0xE3A857FF);
				SendClientMessage(playerid, 0xE3A857FF, "[INFO]: Has seleccionado tu color a Amarillo Indio");
                }
                case 5:
                {
				SetPlayerColor(playerid, 0xFFBA00FF);
				SendClientMessage(playerid, 0xFFBA00FF, "[INFO]: Has seleccionado tu color a Amarillo Selectivo");
                }
			}
		 }
		 case 5005:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0x40826DFF);
                SendClientMessage(playerid, 0x40826DFF, "[INFO]: Has seleccionado tu color a Verde Veronés");
                }
                case 1:
                {
                SetPlayerColor(playerid, 0x738678FF);
                SendClientMessage(playerid, 0x738678FF, "[INFO]: Has seleccionado tu color a Xanadu");
                }
                case 2:
                {
                SetPlayerColor(playerid, 0x94812BFF);
                SendClientMessage(playerid, 0x94812BFF, "[INFO]: Has seleccionado tu color a Kaki");
                }
                case 3:
                {
                SetPlayerColor(playerid, 0x00FF00FF);
                SendClientMessage(playerid, 0x00FF00FF, "[INFO]: Has seleccionado tu color a Verde");
                }
                case 4:
                {
                SetPlayerColor(playerid, 0x7FFF00FF);
                SendClientMessage(playerid, 0x7FFF00FF, "[INFO]: Has seleccionado tu color a Verde Lima");
                }
                case 5:
                {
                SetPlayerColor(playerid, 0x8DB600FF);
                SendClientMessage(playerid, 0x8DB600FF, "[INFO]: Has seleccionado tu color a Verde Manzana");
                }
                case 6:
                {
                SetPlayerColor(playerid, 0x4D5D53FF);
                SendClientMessage(playerid, 0x4D5D53FF, "[INFO]: Has seleccionado tu color a Fledgrau");
                }
                case 7:
                {
                SetPlayerColor(playerid, 0x4CBB17FF);
                SendClientMessage(playerid, 0x4CBB17FF, "[INFO]: Has seleccionado tu color a Verde Kelly");
                }
				case 8:
                {
                SetPlayerColor(playerid, 0x008000FF);
                SendClientMessage(playerid, 0x008000FF, "[INFO]: Has seleccionado tu color a Ao Inglés");
                }
				case 9:
                {
                SetPlayerColor(playerid, 0x50C878FF);
                SendClientMessage(playerid, 0x50C878FF, "[INFO]: Has seleccionado tu color a Esmeralda");
                }
                case 10:
                {
                SetPlayerColor(playerid, 0x00A86BFF);
                SendClientMessage(playerid, 0x00A86BFF, "[INFO]: Has seleccionado tu color a Jade");
                }
                case 11:
                {
                SetPlayerColor(playerid, 0x44944AFF);
                SendClientMessage(playerid, 0x44944AFF, "[INFO]: Has seleccionado tu color a Arquelín");
                }
                case 12:
                {
                SetPlayerColor(playerid, 0x7BA05BFF);
                SendClientMessage(playerid, 0x7BA05BFF, "[INFO]: Has seleccionado tu color a Espárrago");
                }
                case 13:
                {
                SetPlayerColor(playerid, 0x6B8E23FF);
                SendClientMessage(playerid, 0x6B8E23FF, "[INFO]: Has seleccionado tu color a Verde Oliva");
                }
                case 14:
                {
                SetPlayerColor(playerid, 0x355E3BFF);
                SendClientMessage(playerid, 0x355E3BFF, "[INFO]: Has seleccionado tu color a Verde Cazador");
                }

			}
		}
		case 5006:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0x00FFFFFF);
                SendClientMessage(playerid, 0x00FFFFFF, "[INFO]: Has seleccionado tu color a Cian");
                }
                case 1:
                {
                SetPlayerColor(playerid, 0x30D5C8FF);
                SendClientMessage(playerid, 0x30D5C8FF, "[INFO]: Has seleccionado tu color a Turquesa");
                }
                case 2:
                {
                SetPlayerColor(playerid, 0x87CEFFFF);
                SendClientMessage(playerid, 0x87CEFFFF, "[INFO]: Has seleccionado tu color a Celeste");
                }
                case 3:
                {
                SetPlayerColor(playerid, 0x9BC4E2FF);
                SendClientMessage(playerid, 0x9BC4E2FF, "[INFO]: Has seleccionado tu color a Cerúleo/Azul Cielo");
				}
				case 4:
                {
                SetPlayerColor(playerid, 0x7FFFD4FF);
                SendClientMessage(playerid, 0x7FFFD4FF, "[INFO]: Has seleccionado tu color a Aguamarina");
                }
			}
		}
		case 5007:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0x6082B6FF);
                SendClientMessage(playerid, 0x6082B6FF, "vHas seleccionado tu color a Glauco");
                }
                case 1:
                {
                SetPlayerColor(playerid, 0x0000FFFF);
                SendClientMessage(playerid, 0x0000FFFF, "[INFO]: Has seleccionado tu color a Azul");
                }
                case 2:
                {
                SetPlayerColor(playerid, 0x0047ABFF);
                SendClientMessage(playerid, 0x0047ABFF, "[INFO]: Has seleccionado tu color a Azul Cobalto");
                }
                case 3:
                {
                SetPlayerColor(playerid, 0x120A8FFF);
                SendClientMessage(playerid, 0x120A8FFF, "[INFO]: Has seleccionado tu color a Azul Marino");
                }
                case 4:
                {
                SetPlayerColor(playerid, 0x5D8AA8FF);
                SendClientMessage(playerid, 0x5D8AA8FF, "[INFO]: Has seleccionado tu color a Azul de Fuerza Aérea");
                }
                case 5:
                {
                SetPlayerColor(playerid, 0x0000CDFF);
                SendClientMessage(playerid, 0x0000CDFF, "[INFO]: Has seleccionado tu color a Azur");
                }
                case 6:
                {
                SetPlayerColor(playerid, 0x0131B4FF);
                SendClientMessage(playerid, 0x0131B4FF, "[INFO]: Has seleccionado tu color a Zafiro");
                }
                case 7:
                {
                SetPlayerColor(playerid, 0x000080FF);
                SendClientMessage(playerid, 0x000080FF, "[INFO]: Has seleccionado tu color a Turquí");
                }
                case 8:
                {
                SetPlayerColor(playerid, 0x003153FF);
                SendClientMessage(playerid, 0x003153FF, "[INFO]: Has seleccionado tu color a Azul de Prusa");
                }
                case 9:
                {
                SetPlayerColor(playerid, 0x6050DCFF);
                SendClientMessage(playerid, 0x6050DCFF, "[INFO]: Has seleccionado tu color a Azul Majorelle");
                }

			}
		}
		case 5008:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0xAA98A9FF);
                SendClientMessage(playerid, 0xAA98A9FF, "[INFO]: Has seleccionado tu color a Rosa Cuarzo");
                }
                case 1:
                {
                SetPlayerColor(playerid, 0x8B00FFFF);
                SendClientMessage(playerid, 0x8B00FFFF, "[INFO]: Has seleccionado tu color a Violeta");
                }
                case 2:
                {
                SetPlayerColor(playerid, 0xB57EDCFF);
                SendClientMessage(playerid, 0xB57EDCFF, "[INFO]: Has seleccionado tu color a Lavanda Floral");
                }
                case 3:
                {
                SetPlayerColor(playerid, 0x9966CFF);
                SendClientMessage(playerid, 0x9966CFF, "[INFO]: Has seleccionado tu color a Amatista");
                }
                case 4:
                {
                SetPlayerColor(playerid, 0x660099FF);
                SendClientMessage(playerid, 0x660099FF, "[INFO]: Has seleccionado tu color a Púrpura");
                }
                case 5:
                {
                SetPlayerColor(playerid, 0x66023CFF);
                SendClientMessage(playerid, 0x66023CFF, "[INFO]: Has seleccionado tu color a Púrpura de Tiro");
                }
                case 6:
                {
                SetPlayerColor(playerid, 0x915C83FF);
                SendClientMessage(playerid, 0x915C83FF, "[INFO]: Has seleccionado tu color a Fucsia Antiguo");
                }
                case 7:
                {
                SetPlayerColor(playerid, 0x4B0082FF);
                SendClientMessage(playerid, 0x4B0082FF, "[INFO]: Has seleccionado tu color a Añil Antiguo");
                }
			}
		}
		case 5009:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0xFF00FFFF);
                SendClientMessage(playerid, 0xFF00FFFF, "[INFO]: Has seleccionado tu color a Magenta");
                }
                case 1:
                {
                SetPlayerColor(playerid, 0xF400A1FF);
                SendClientMessage(playerid, 0xF400A1FF, "[INFO]: Has seleccionado tu color a Fucsia");
                }
                case 2:
                {
                SetPlayerColor(playerid, 0xC54B8CFF);
                SendClientMessage(playerid, 0xC54B8CFF, "[INFO]: Has seleccionado tu color a Morado");
                }
                case 3:
                {
                SetPlayerColor(playerid, 0xE0B0FFFF);
                SendClientMessage(playerid, 0xE0B0FFFF, "[INFO]: Has seleccionado tu color a Malva");
                }
                case 4:
                {
                SetPlayerColor(playerid, 0xC8A2C8FF);
                SendClientMessage(playerid, 0xC8A2C8FF, "[INFO]: Has seleccionado tu color a Lila");
                }
                case 5:
                {
                SetPlayerColor(playerid, 0xE6E6fAFF);
                SendClientMessage(playerid, 0xE6E6fAFF, "[INFO]: Has seleccionado tu color a Lavanda");
                }
                case 6:
                {
                SetPlayerColor(playerid, 0xFFCBDBFF);
                SendClientMessage(playerid, 0xFFCBDBFF, "[INFO]: Has seleccionado tu color a Rosa");
                }
                case 7:
                {
                SetPlayerColor(playerid, 0xCD9575FF);
                SendClientMessage(playerid, 0xCD9575FF, "[INFO]: Has seleccionado tu color a Bronce Antiguo");
                }
                case 8:
                {
                SetPlayerColor(playerid, 0xDA8A67FF);
                SendClientMessage(playerid, 0xDA8A67FF, "[INFO]: Has seleccionado tu color a Siena Pálido");
                }
			}
		}
		case 5010:
        {
            if(!response)return SendClientMessage(playerid, 0xFF0000FF, "[INFO]: Cancelado.");
            switch(listitem)
            {
                case 0:
                {
                SetPlayerColor(playerid, 0x808080FF);
                SendClientMessage(playerid, 0x808080FF, "[INFO]: Has seleccionado tu color a Gris");
                }
                case 1:
                {
                SetPlayerColor(playerid, 0x3B444BFF);
                SendClientMessage(playerid, 0x3B444BFF, "[INFO]: Has seleccionado tu color a Arsénico");
                }
                case 2:
                {
                SetPlayerColor(playerid, 0xB2BEB5FF);
                SendClientMessage(playerid, 0xB2BEB5FF, "[INFO]: Has seleccionado tu color a Ceniza");
                }
                case 3:
                {
                SetPlayerColor(playerid, 0x848482FF);
                SendClientMessage(playerid, 0x848482FF, "[INFO]: Has seleccionado tu color a Gris Acorazado");
                }
                case 4:
                {
                SetPlayerColor(playerid, 0x536872FF);
                SendClientMessage(playerid, 0x536872FF, "[INFO]: Has seleccionado tu color a Gris Cadete");
                }
                case 5:
                {
                SetPlayerColor(playerid, 0x36454FFF);
                SendClientMessage(playerid, 0x36454FFF, "[INFO]: Has seleccionado tu color a Carbón Vegetal");
                }
                case 6:
                {
                SetPlayerColor(playerid, 0x8C92ACFF);
                SendClientMessage(playerid, 0x8C92ACFF, "[INFO]: Has seleccionado tu color a Gris Fresco");
                }
                case 7:
                {
                SetPlayerColor(playerid, 0x555555FF);
                SendClientMessage(playerid, 0x555555FF, "[INFO]: Has seleccionado tu color a Gris de Davy");
                }
                case 8:
                {
                SetPlayerColor(playerid, 0x534B4FFF);
                SendClientMessage(playerid, 0x534B4FFF, "[INFO]: Has seleccionado tu color a Hígado");
                }
                case 9:
                {
                SetPlayerColor(playerid, 0x40404FFF);
                SendClientMessage(playerid, 0x40404FFF, "[INFO]: Has seleccionado tu color a Gris de Payne");
                }
                case 10:
                {
                SetPlayerColor(playerid, 0xE5E4E2FF);
                SendClientMessage(playerid, 0xE5E4E2FF, "[INFO]: Has seleccionado tu color a Platino");
                }
                case 11:
                {
                SetPlayerColor(playerid, 0xC0C0C0FF);
                SendClientMessage(playerid, 0xC0C0C0FF, "[INFO]: Has seleccionado tu color a Plateado");
                }
                case 12:
                {
                SetPlayerColor(playerid, 0x708090FF);
                SendClientMessage(playerid, 0x708090FF, "[INFO]: Has seleccionado tu color a Gris Pizarra");
                }
                case 13:
                {
                SetPlayerColor(playerid, 0x50404DFF);
                SendClientMessage(playerid, 0x50404DFF, "[INFO]: Has seleccionado tu color a Violeta Pardo");
                }
			}
		}
    }

if(dialogid == MAUTOS+8)
{
if(response == 0)ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "{00EEFF}Autos De {FF0000}Revolucion {FFFFFF}Latina", "{FF8000}Autos\n{FF0000}Autos Rápidos\n{FE2E2E}Motos y Bicicletas\n{00FF00}Camiones y Camionetas\n{FFFFFF}Aviones\n{80FF00}Helicópteros\n{0000FF}Botes\n{DBA901}Autos de Guerra", "Seleccionar","Cancelar");
if(response)
{
switch (listitem)
{
case 0:
{
if(GetPlayerMoney(playerid) > 30000)
{
CarSpawner1(playerid,447); GivePlayerMoney(playerid, -30000);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un Seasparrow. Te costó $30000.");
}
else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $30000).");
}
case 1:
{
if(GetPlayerMoney(playerid) > 60000)
{
CarSpawner1(playerid,520); GivePlayerMoney(playerid, -60000);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado un Hydra. Te costó $60000.");
}
else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $60000).");
}
case 2:
{
if(GetPlayerMoney(playerid) > 80000)
{
CarSpawner1(playerid,425); GivePlayerMoney(playerid, -80000);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado una Hunter. Te costó $80000.");
}
else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $80000).");
}
case 3:
{
if(GetPlayerMoney(playerid) > 100000)
{
CarSpawner1(playerid,432); GivePlayerMoney(playerid, -100000);
SendClientMessage(playerid, 0x00FF0000, "[INFO]: Has comprado una Rhino. Te costó $100000.");
}
else return SendClientMessage(playerid, ERROR_COLOR, "[ERROR]: {FFFFFF}No tienes suficiente dinero (Costo $100000).");
}
}
}
}
return 1;
}
//==============================================================================
#if defined ENABLE_SPEC

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	new x = 0;
	while(x!=MAX_PLAYERS) {
	    if( IsPlayerConnected(x) &&	GetPlayerState(x) == PLAYER_STATE_SPECTATING &&
			PlayerInfo[x][SpecID] == playerid && PlayerInfo[x][SpecType] == ADMIN_SPEC_TYPE_PLAYER )
   		{
   		    SetPlayerInterior(x,newinteriorid);
		}
		x++;
	}
}
//=========================================
public OnVehicleMod(playerid, vehicleid, componentid) {
    new vehicleide = GetVehicleModel(vehicleid);
    new modok = islegalcarmod(vehicleide, componentid);
	new name[24];
	GetPlayerName(playerid, name, 24);
    if (!modok) {
        if(warnedS[playerid] == 0) {
	        printf("[invalid_mod - WARNING] %s %d %d %d %d %d", name, playerid, vehicleid, vehicleide, componentid);
	        DestroyVehicle(vehicleid);
			warnedS[playerid] = 1;
		} else {
			DestroyVehicle(vehicleid);
			format(string2, sizeof(string2), "[ANTI-BOT]: %s[%d] a Sido Kickeado Automáticamente [Razón: HackCrash Noob]", name, playerid);
	        SendClientMessageToAll(0xFF0000AA, string2);
	        ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Advertencia - Revolucion Latina","{FFFFFF} Has sido Kickeado del Servidor \n\n{FF0000}Razón: {FFFFFF}HackCrash Noob", "Aceptar", "") ;
	        printf(string2);
	        #if defined Guardar_Logs
	        GuardarAntiBot("HackCrash",string2);
	        #endif
	        Kick(playerid);
		}
		return 0;
    }
    return 1;
}
//==============================================================================
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
if(newkeys & KEY_NO)
    {
        OnPlayerCommandText(playerid, "/Comandos");
    }

	if ((oldkeys & (KEY_ACTION | KEY_ACTION)) == (KEY_ACTION | KEY_ACTION))
    {
	if(SaltosAuto[playerid] == 1 && IsPlayerInAnyVehicle(playerid))
    {
    new Float:x, Float:y, Float:z;
    GetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z);
    SetVehicleVelocity(GetPlayerVehicleID(playerid) ,x ,y ,z+0.1);
    }
	}

    if(IsPlayerInAnyVehicle(playerid))
    {
		new nos = GetPlayerVehicleID(playerid);
		if(Nitro(nos) && (oldkeys & 1 || oldkeys & 4))
   		{
		RemoveVehicleComponent(nos, 1010);
		AddVehicleComponent(nos, 1010);
   		}
		if(newkeys == KEY_ACTION)
		{
	        switch(GetVehicleModel( GetPlayerVehicleID(playerid) )) {
			case 592,577,511,512,593,520,553,476,519,460,513,487,488,548,425,417,497,563,447,469:
			return 1;
			}

		}
 }
	//------------------------------ [ kangaro ] ---------------------------------//
	if ((newkeys & (KEY_JUMP | KEY_JUMP)) == (KEY_JUMP | KEY_JUMP))
	{
		if(SaltarMas[playerid] > 0 && Saltos[playerid] == 0)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerVelocity(playerid,x,y,z);
			if(z < 0) return Saltos[playerid] = 0;
			SetTimerEx("ImpulsarSaltos",120,0,"d",playerid);
		}
	}
    /*	//------------------------------ [ balason ] ---------------------------------//
	if (newkeys & KEY_FIRE)
	{
		if(balason[playerid] == 0)
  {
		new Float:X, Float:Y, Float:Z;
 	GetPlayerPos(playerid,X,Y,Z);
    	CreateExplosion(X, Y, Z, 12, 1.0);
  }
	}*/
	//--rampas
    if(newkeys & KEY_CROUCH)
    {
    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsPlayerConnected(playerid))
    {
	if(!(ramped[playerid] == 1))
	{
		new Float:x, Float:y, Float:z, Float:angle;
	  	GetPlayerPos(playerid, x, y, z);
	   	angle = GetPosInFrontOfPlayer(playerid, x, y, GetRampDistance(playerid));
	    jumped[playerid] = CreateObject(18778, x, y, z - 0.5, 0.0, 0.0, angle);
	    ramped[playerid] = 1;
	    SetTimerEx("BorrarRampa", 1000, 0, "d", playerid);
        }
        else Pressedkey[playerid] = false;
    	}
    }

if(IsPlayerInAnyVehicle(playerid) && FireShotON[playerid] == 1 && FireShot[playerid] == 0 && newkeys & 4 && !IsValidObject(gRocketObj[playerid]))   // Only run the code if the object doesn't already exist, otherwise more objects will take up gRocketObj and the previous ones won't be deleted
	{
 		SetPlayerTime(playerid,0,0);
  		new
	        vehicleid = GetPlayerVehicleID(playerid),
			Float:x,
			Float:y,
			Float:z,
			Float:r,
			Float:dist = 50.0,
			Float:tmpang,
			Float:tmpx,
			Float:tmpy,
			Float:tmpz;

		FireShot[playerid] = 1;
        SetTimerEx("ShotFire", 1000, 0, "i", playerid);
		GetVehiclePos(vehicleid, x, y, z);
	    GetVehicleZAngle(vehicleid, r);
		new rand = random(11);
  		switch(rand)
  		{
			case 0: gRocketObj[playerid] = CreateObject(18647, x, y, z, 0, 0, r);
			case 1: gRocketObj[playerid] = CreateObject(18648, x, y, z, 0, 0, r);
			case 2: gRocketObj[playerid] = CreateObject(18649, x, y, z, 0, 0, r);
			case 3: gRocketObj[playerid] = CreateObject(18650, x, y, z, 0, 0, r);
			case 4: gRocketObj[playerid] = CreateObject(18651, x, y, z, 0, 0, r);
			case 5: gRocketObj[playerid] = CreateObject(18652, x, y, z, 0, 0, r);
            case 6: gRocketObj[playerid] = CreateObject(18647, x, y, z, 0, 0, r+90);
			case 7: gRocketObj[playerid] = CreateObject(18648, x, y, z, 0, 0, r+90);
			case 8: gRocketObj[playerid] = CreateObject(18649, x, y, z, 0, 0, r+90);
			case 9: gRocketObj[playerid] = CreateObject(18650, x, y, z, 0, 0, r+90);
			case 10: gRocketObj[playerid] = CreateObject(18651, x, y, z, 0, 0, r+90);
			case 11: gRocketObj[playerid] = CreateObject(18652, x, y, z, 0, 0, r+90);
		}
		//gracias a Southclaw por su ayuda
		for(new i;i<MAX_PLAYERS;i++)
		{
		    if(i == playerid)continue;
		    if(IsPlayerInRangeOfPoint(i, 50.0, x, y, z))
		    {
		        GetPlayerPos(i, tmpx, tmpy, tmpz);

		        tmpang = (90-atan2(tmpy-y, tmpx-x));
		        if(tmpang < 0)tmpang = 360.0+tmpang;
		        tmpang = 360.0 - tmpang;

				if( floatabs(tmpang-r) < 5.0)
				{
				    dist = GetPlayerDistanceFromPoint(i, x, y, z);
				}
		    }
		}

  	    MoveObject(gRocketObj[playerid],x + (dist * floatsin(-r, degrees)),y + (dist * floatcos(-r, degrees)),z,100.0);// Nice and fast!
	}
//Transformers //Optimus Prime
        new Float:info[7],model;
        if (IsPlayerInVehicle(playerid,optimusprime))
        {
                if (newkeys & KEY_ANALOG_LEFT)
                {
                        GetVehicleVelocity(optimusprime,info[4],info[5],info[6]);
                        GetVehiclePos(optimusprime,info[0],info[1],info[2]);
                        GetVehicleZAngle(optimusprime,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(optimusprime);
                        optimusprime = AddStaticVehicle(446,info[0],info[1],info[2],info[3],125,125);
                        PutPlayerInVehicle(playerid,optimusprime,0);
                        SetVehicleNumberPlate(optimusprime, "RL 2015");
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(optimusprime,info[4],info[5],info[6]);
                }
                if (newkeys & KEY_ANALOG_RIGHT)
                {
                        GetVehicleVelocity(optimusprime,info[4],info[5],info[6]);
                        GetVehiclePos(optimusprime,info[0],info[1],info[2]);
                        GetVehicleZAngle(optimusprime,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(optimusprime);
                        optimusprime = AddStaticVehicle(476,info[0],info[1],info[2],info[3],125,125);
                        PutPlayerInVehicle(playerid,optimusprime,0);
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(optimusprime,info[4],info[5],info[6]);
                }
                if (newkeys & KEY_ANALOG_DOWN)
                {
                        GetVehicleVelocity(optimusprime,info[4],info[5],info[6]);
                        GetVehiclePos(optimusprime,info[0],info[1],info[2]);
                        GetVehicleZAngle(optimusprime,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(optimusprime);
                        optimusprime = AddStaticVehicle(403,info[0],info[1],info[2],info[3],125,125);
                        PutPlayerInVehicle(playerid,optimusprime,0);
                        SetVehicleNumberPlate(optimusprime, "RL 2015");
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(optimusprime,info[4],info[5],info[6]);
                }
                if (newkeys & KEY_ANALOG_UP)
                {
                        GetVehicleVelocity(optimusprime,info[4],info[5],info[6]);
                        GetVehiclePos(optimusprime,info[0],info[1],info[2]);
                        GetVehicleZAngle(optimusprime,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(optimusprime);
                        optimusprime = AddStaticVehicle(468,info[0],info[1],info[2],info[3],125,125);
                        PutPlayerInVehicle(playerid,optimusprime,0);
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(optimusprime,info[4],info[5],info[6]);
                }
        }
        //Bumblebee
        if (IsPlayerInVehicle(playerid, bumblebee))
        {
                if (newkeys & KEY_ANALOG_LEFT)
                {
                        GetVehicleVelocity(bumblebee,info[4],info[5],info[6]);
                        GetVehiclePos(bumblebee,info[0],info[1],info[2]);
                        GetVehicleZAngle(bumblebee,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(bumblebee);
                        bumblebee = AddStaticVehicle(493,info[0],info[1],info[2],info[3],6,0);
                        PutPlayerInVehicle(playerid,bumblebee,0);
                        SetVehicleNumberPlate(bumblebee, "RL 2015");
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(bumblebee,info[4],info[5],info[6]);
                }
                if (newkeys & KEY_ANALOG_RIGHT)
                {
                        GetVehicleVelocity(bumblebee,info[4],info[5],info[6]);
                        GetVehiclePos(bumblebee,info[0],info[1],info[2]);
                        GetVehicleZAngle(bumblebee,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(bumblebee);
                        bumblebee = AddStaticVehicle(476,info[0],info[1],info[2],info[3],6,0);
                        PutPlayerInVehicle(playerid,bumblebee,0);
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(bumblebee,info[4],info[5],info[6]);
                }
                if (newkeys & KEY_ANALOG_DOWN)
                {
                        GetVehicleVelocity(bumblebee,info[4],info[5],info[6]);
                        GetVehiclePos(bumblebee,info[0],info[1],info[2]);
                        GetVehicleZAngle(bumblebee,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(bumblebee);
                        bumblebee = AddStaticVehicle(541,info[0],info[1],info[2],info[3],6,0);
                        PutPlayerInVehicle(playerid,bumblebee,0);
                        SetVehicleNumberPlate(bumblebee, "RL 2015");
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(bumblebee,info[4],info[5],info[6]);
                }
                if (newkeys & KEY_ANALOG_UP)
                {
                        GetVehicleVelocity(bumblebee,info[4],info[5],info[6]);
                        GetVehiclePos(bumblebee,info[0],info[1],info[2]);
                        GetVehicleZAngle(bumblebee,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(bumblebee);
                        bumblebee = AddStaticVehicle(522,info[0],info[1],info[2],info[3],6,0);
                        PutPlayerInVehicle(playerid,bumblebee,0);
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(bumblebee,info[4],info[5],info[6]);
                }

        }
        //Jazz
        if (IsPlayerInVehicle(playerid,jazz))
        {
                if (newkeys & KEY_ANALOG_LEFT)
                {
                        GetVehicleVelocity(jazz,info[4],info[5],info[6]);
                        GetVehiclePos(jazz,info[0],info[1],info[2]);
                        GetVehicleZAngle(jazz,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(jazz);
                        jazz = AddStaticVehicle(493,info[0],info[1],info[2],info[3],35,35);
                        PutPlayerInVehicle(playerid,jazz,0);
                        SetVehicleNumberPlate(jazz, "RL 2015");
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(jazz,info[4],info[5],info[6]);
                }
                if (newkeys & KEY_ANALOG_RIGHT)
                {
                        GetVehicleVelocity(jazz,info[4],info[5],info[6]);
                        GetVehiclePos(jazz,info[0],info[1],info[2]);
                        GetVehicleZAngle(jazz,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(jazz);
                        jazz = AddStaticVehicle(476,info[0],info[1],info[2],info[3],35,35);
                        PutPlayerInVehicle(playerid,jazz,0);
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(jazz,info[4],info[5],info[6]);
                }
                if (newkeys & KEY_ANALOG_DOWN)
                {
                        GetVehicleVelocity(jazz,info[4],info[5],info[6]);
                        GetVehiclePos(jazz,info[0],info[1],info[2]);
                        GetVehicleZAngle(jazz,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(jazz);
                        jazz = AddStaticVehicle(444,info[0],info[1],info[2],info[3],35,35);
                        PutPlayerInVehicle(playerid,jazz,0);
                        SetVehicleNumberPlate(jazz, "RL 2015");
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(jazz,info[4],info[5],info[6]);
                }
                if (newkeys & KEY_ANALOG_UP)
                {
                        GetVehicleVelocity(jazz,info[4],info[5],info[6]);
                        GetVehiclePos(jazz,info[0],info[1],info[2]);
                        GetVehicleZAngle(jazz,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(jazz);
                        jazz = AddStaticVehicle(522,info[0],info[1],info[2],info[3],35,35);
                        PutPlayerInVehicle(playerid,jazz,0);
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(jazz,info[4],info[5],info[6]);
                }
        }
        //Ratchet
        if (IsPlayerInVehicle(playerid,ratchet))
        {
                if (newkeys & KEY_ANALOG_LEFT)
                {
                        GetVehicleVelocity(ratchet,info[4],info[5],info[6]);
                        GetVehiclePos(ratchet,info[0],info[1],info[2]);
                        GetVehicleZAngle(ratchet,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(ratchet);
                        ratchet = AddStaticVehicle(446,info[0],info[1],info[2],info[3],104,104);
                        PutPlayerInVehicle(playerid,ratchet,0);
                        SetVehicleNumberPlate(ratchet, "RL 2015");
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(ratchet,info[4],info[5],info[6]);
                }
                if (newkeys & KEY_ANALOG_RIGHT)
                {
                        GetVehicleVelocity(ratchet,info[4],info[5],info[6]);
                        GetVehiclePos(ratchet,info[0],info[1],info[2]);
                        GetVehicleZAngle(ratchet,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(ratchet);
                        ratchet = AddStaticVehicle(476,info[0],info[1],info[2],info[3],104,104);
                        PutPlayerInVehicle(playerid,ratchet,0);
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(ratchet,info[4],info[5],info[6]);
                }
                if (newkeys & KEY_ANALOG_DOWN)
                {
                        GetVehicleVelocity(ratchet,info[4],info[5],info[6]);
                        GetVehiclePos(ratchet,info[0],info[1],info[2]);
                        GetVehicleZAngle(ratchet,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(ratchet);
                        ratchet = AddStaticVehicle(470,info[0],info[1],info[2],info[3],104,104);
                        PutPlayerInVehicle(playerid,ratchet,0);
                        SetVehicleNumberPlate(ratchet, "RL 2015");
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(ratchet,info[4],info[5],info[6]);
                }
                if (newkeys & KEY_ANALOG_UP)
                {
                        GetVehicleVelocity(ratchet,info[4],info[5],info[6]);
                        GetVehiclePos(ratchet,info[0],info[1],info[2]);
                        GetVehicleZAngle(ratchet,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(ratchet);
                        ratchet = AddStaticVehicle(468,info[0],info[1],info[2],info[3],104,104);
                        PutPlayerInVehicle(playerid,ratchet,0);
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(ratchet,info[4],info[5],info[6]);
                }
         }
        //Ironhide
        if (IsPlayerInVehicle(playerid,ironhide))
        {
                if (newkeys & KEY_ANALOG_LEFT)
                {
                        GetVehicleVelocity(ironhide,info[4],info[5],info[6]);
                        GetVehiclePos(ironhide,info[0],info[1],info[2]);
                        GetVehicleZAngle(ironhide,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(ironhide);
                        ironhide = AddStaticVehicle(446,info[0],info[1],info[2],info[3],2,2);
                        PutPlayerInVehicle(playerid,ironhide,0);
                        SetVehicleNumberPlate(ironhide, "RL 2015");
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(ironhide,info[4],info[5],info[6]);
                }
                if (newkeys & KEY_ANALOG_RIGHT)
                {
                        GetVehicleVelocity(ironhide,info[4],info[5],info[6]);
                        GetVehiclePos(ironhide,info[0],info[1],info[2]);
                        GetVehicleZAngle(ironhide,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(ironhide);
                        ironhide = AddStaticVehicle(476,info[0],info[1],info[2],info[3],2,3);
                        PutPlayerInVehicle(playerid,ironhide,0);
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(ironhide,info[4],info[5],info[6]);
                }
                if (newkeys & KEY_ANALOG_DOWN)
                {
                        GetVehicleVelocity(ironhide,info[4],info[5],info[6]);
                        GetVehiclePos(ironhide,info[0],info[1],info[2]);
                        GetVehicleZAngle(ironhide,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(ironhide);
                        ironhide = AddStaticVehicle(429,info[0],info[1],info[2],info[3],2,3);
                        PutPlayerInVehicle(playerid,ironhide,0);
                        SetVehicleNumberPlate(ironhide, "RL 2015");
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(ironhide,info[4],info[5],info[6]);
                }
                if (newkeys & KEY_ANALOG_UP)
                {
                        GetVehicleVelocity(ironhide,info[4],info[5],info[6]);
                        GetVehiclePos(ironhide,info[0],info[1],info[2]);
                        GetVehicleZAngle(ironhide,info[3]);
                        GetVehicleModel(model);
                        DestroyVehicle(ironhide);
                        ironhide = AddStaticVehicle(468,info[0],info[1],info[2],info[3],2,3);
                        PutPlayerInVehicle(playerid,ironhide,0);
                        PlayerPlaySound(playerid,1133,0,0,0);
                        SetVehicleVelocity(ironhide,info[4],info[5],info[6]);
                }
        }

	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
		if(newkeys == KEY_JUMP) AdvanceSpectate(playerid);
		else if(newkeys == KEY_SPRINT) ReverseSpectate(playerid);
	}
	if(newkeys & KEY_FIRE)
    {
		if(AceleracionBrutal[playerid] == true)
		{
            new Float:X, Float:Y, Float:Z, Float:Velocidad;
            GetVehicleVelocity(GetPlayerVehicleID(playerid), X, Y, Z);
            Velocidad = floatmul(floatsqroot(floatadd(floatadd(floatpower(X, 2), floatpower(Y, 2)),  floatpower(Z, 2))), 100.0);
            if(Velocidad >= 100.0)
            {
                SetVehicleVelocity(GetPlayerVehicleID(playerid), X * 1.5, Y * 1.5, Z * 1.5);
    		} else
			  {
                SetVehicleVelocity(GetPlayerVehicleID(playerid), X * 3.0, Y * 3.0, Z * 3.0);
    		}
		}
    }
	if ((oldkeys & (KEY_ACTION | KEY_ACTION)) == (KEY_ACTION | KEY_ACTION))
	{
		if(SaltosBici[playerid] == 1 && JugadorEnBici(playerid))
		{
			new Float:x,Float:y,Float:z;
			GetVehicleVelocity(GetPlayerVehicleID(playerid),x,y,z);
			SetTimerEx("SaltosBiciTimer",150,0,"d",playerid);
			SaltosBici[playerid] = 2;
		}
	}
    DB_OnPlayerKeyStateChange(playerid, newkeys, oldkeys);
                return 1;
                }

//==============================================================================
public ShotFire(playerid)
{
	FireShot[playerid] = 0;
	return 1;
}
//==============================================================================
public OnObjectMoved(objectid)
{
	//Fire Shoot Vip
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(objectid == gRocketObj[i])
		{
		    new
				Float:x,
				Float:y,
				Float:z;

		    GetObjectPos(gRocketObj[i], x, y, z);
		    CreateExplosion(x, y, z, 11, 3.0);
		    DestroyObject(gRocketObj[i]);
		}
	}
 return 1;}
//==============================================================================
public OnPlayerEnterVehicle(playerid, vehicleid)
{
	if(SaltosAuto[playerid] == 1)
	{
		if(vehicleid == 476 || vehicleid == 593 || vehicleid == 592 || vehicleid == 553 || vehicleid == 513 || vehicleid == 512 || vehicleid == 520 || vehicleid == 577 || vehicleid == 511 || vehicleid == 460 || vehicleid == 519)
		{
			SaltosAuto[playerid] = 0;
		}
		else if(vehicleid == 548 || vehicleid == 417 || vehicleid == 487 || vehicleid == 425 || vehicleid == 447 || vehicleid == 497 || vehicleid == 563 || vehicleid == 488 || vehicleid == 469)
		{
			SaltosAuto[playerid] = 0;
		}
	 }

	for(new x=0; x<MAX_PLAYERS; x++) {
	    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid) {
	        TogglePlayerSpectating(x, 1);
	        PlayerSpectateVehicle(x, vehicleid);
	        PlayerInfo[x][SpecType] = ADMIN_SPEC_TYPE_VEHICLE;
		}
	}

	if(Nitro(vehicleid))AddVehicleComponent(vehicleid, 1010);
}

Nitro(vehicleid) {
new nos = GetVehicleModel(vehicleid);
switch(nos) {
case 444:return 0;case 581:return 0;case 586:return 0;case 481:return 0;case 509:return 0;case 446:return 0;case 556:return 0;case 443:return 0;case 452:return 0;case 453:return 0;
case 454:return 0;case 472:return 0;case 473:return 0;case 484:return 0;case 493:return 0;case 595:return 0;case 462:return 0;case 463:return 0;case 468:return 0;case 521:return 0;
case 522:return 0;case 417:return 0;case 425:return 0;case 447:return 0;case 487:return 0;case 488:return 0;case 497:return 0;case 501:return 0;case 548:return 0;case 563:return 0;
case 406:return 0;case 520:return 0;case 539:return 0;case 553:return 0;case 557:return 0;case 573:return 0;case 460:return 0;case 593:return 0;case 464:return 0;case 476:return 0;
case 511:return 0;case 512:return 0;case 577:return 0;case 592:return 0;case 471:return 0;case 448:return 0;case 461:return 0;case 523:return 0;case 510:return 0;case 430:return 0;
case 465:return 0;case 469:return 0;case 513:return 0;case 519:return 0; }
	return 1;
}

//==============================================================================
public OnPlayerStateChange(playerid, newstate, oldstate) {
	//assert( Antiflood( playerid ) );

	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
        SetPlayerAttachedObject(playerid,1,18645,2,0.08,0.0,0.0,85.0,90.0,0.0,1.2,1.2,1.2); //Casco de moto
        SendClientMessage(playerid, COLOR_ROJO, "|Informacion|: {FFFFFF}Si usted quiere {00FF00}Prender {FFFFFF}la Radio, use /Radio");
        PlayerPlaySound(playerid,1058, 0.0, 0.0, 0.0);
		if(SaltosAuto[playerid] == 0)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(vehicleid == 476 || vehicleid == 593 || vehicleid == 592 || vehicleid == 553 || vehicleid == 513 || vehicleid == 512 || vehicleid == 520 || vehicleid == 577 || vehicleid == 511 || vehicleid == 460 || vehicleid == 519)
			{
				SaltosAuto[playerid] = 0;
			}
			else if(vehicleid == 548 || vehicleid == 417 || vehicleid == 487 || vehicleid == 425 || vehicleid == 447 || vehicleid == 497 || vehicleid == 563 || vehicleid == 488 || vehicleid == 469)
			{
				SaltosAuto[playerid] = 0;
			}
		 }
	}
	else if(oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER)
	{
	    for(new i;i<5;i++) RemovePlayerAttachedObject(playerid,i);
	}

	if(newstate == PLAYER_STATE_DRIVER)
	{
    	SetPlayerArmedWeapon(playerid, 0);
		if(PlayerInfo[playerid][pVip] >= 4)
		{
			SendClientMessage(playerid, COLOR_ROJO, "|Informacion|: {FFFFFF}Puede controlar su Auto con {00FF00}/vcontrol!");
		}
	}
	return 1;
}

#endif

//==============================================================================
public OnPlayerExitVehicle(playerid, vehicleid)
{
    for (new i=0; i<MAX_PLAYERS; i++)
	{
		if (jumped[i] != -1) DestroyObject(jumped[i]);
	}

      if(PlayerInfoH[playerid][Lol] == 1)
    {
    RemovePlayerAttachedObject(playerid, 1);
    DestroyObject(GetPVarInt(playerid, "11"));
    DestroyObject(GetPVarInt(playerid, "12"));
    DeletePVar(playerid, "neon");
    DeletePVar(playerid, "neon");
    DeletePVar(playerid, "neon6");
    DeletePVar(playerid, "neon6");
    DestroyObject(GetPVarInt(playerid, "11a"));
    DestroyObject(GetPVarInt(playerid, "12a"));
    DeletePVar(playerid, "luzazul1");
    DeletePVar(playerid, "luzazul2");
    DestroyObject(GetPVarInt(playerid, "azul1"));
    DestroyObject(GetPVarInt(playerid, "azul2"));
    PlayerInfoH[playerid][Neon] = 0;
    PlayerInfoH[playerid][Lol] = 0;
    PlayerInfoH[playerid][Luz] = 0;
    SendClientMessage(playerid,Rojo, "[INFO]: Se desactivaron los neones y las luces de color por salir de auto");
    }

    if(PlayerInfo[playerid][PlayerinDerby] == 1)
    {
		format(string2, sizeof(string2), "{FF0000}[Evento Derby]: {FFFFFF}%s {00EEFF}ha sido Eliminado del Derby {FFFFFF}[Rank: %d]", pName(playerid), derbyrank);
		SendClientMessageToAll(0x33AA33AA, string2);
		CarDeleter(PlayerInfo[playerid][pCar]);
		PlayerInfo[playerid][PlayerinDerby] = 0;
		PlayerInfo[playerid][EnEvento] = 0;
		derbyrank--;
		new strev[1000];
		format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",derbyrank);
		TextDrawSetString(ConcText,strev);
		TextDrawShowForAll(ConcText);
		SetCameraBehindPlayer(playerid);
	   	SetPlayerVirtualWorld(playerid,0);
		SpawnPlayer(playerid);
	}

    if(Joined[playerid] == true)
    {
		JoinCount--;
		Joined[playerid] = false;
		DestroyVehicle(CreatedRaceVeh[playerid]);
		PlayerInfo[playerid][GodCar] = 0;
		ramped[playerid] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		CPProgess[playerid] = 0;
		KillTimer(InfoTimer[playerid]);
		#if defined RACE_IN_OTHER_WORLD
		SetPlayerVirtualWorld(playerid, 0);
		DisableRemoteVehicleCollisions(playerid, 0);
		SendClientMessage(playerid,red,"[INFO]: Has salido del vehículo por lo tanto has sido sacado de la Carrera");
		#endif
	}

	if(PlayerInfo[playerid][DoorsLocked] == 1) SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),playerid,false,false);

	#if defined ENABLE_SPEC
	for(new x=0; x<MAX_PLAYERS; x++) {
    	if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid && PlayerInfo[x][SpecType] == ADMIN_SPEC_TYPE_VEHICLE) {
        	TogglePlayerSpectating(x, 1);
	        PlayerSpectatePlayer(x, playerid);
    	    PlayerInfo[x][SpecType] = ADMIN_SPEC_TYPE_PLAYER;
		}
	}
	#endif

	return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
    new Float:VidaZ;
	GetPlayerHealth(playerid, VidaZ);
	if(VidaZ < VidaB[playerid])
	{
		SetTimerEx("VidaHold",800,0,"d",playerid);
		SetPlayerAttachedObject(playerid, 0, 1240, 1, 0.797953, 0.070644, 0.001249, 0.521487, 89.103843, 0.000000, 1.000000, 1.000000, 1.000000);
	}
	VidaB[playerid] = VidaZ;

	new Float:Chaleco;
	GetPlayerArmour(playerid, Chaleco);
	if(Chaleco < ChalecoB[playerid])
	{
	    SetTimerEx("ChalecoHold",800,0,"d",playerid);
	    SetPlayerAttachedObject(playerid, 0, 1242, 1, 0.797953, 0.070644, 0.001249, 0.521487, 89.103843, 0.000000, 1.000000, 1.000000, 1.000000);
	}
	ChalecoB[playerid] = Chaleco;
    //PlayerPlaySound(issuerid, 17802, 0.0, 0.0, 0.0);

	if(PlayerInfo[issuerid][pVip] >= 6 && bodypart == 9)
	{
		new Silah = GetPlayerWeapon(issuerid);
		if(PlayerInfo[playerid][God] == 0 && PlayerInfo[issuerid][God] == 0)
		{
			if(Silah == 34)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por HeadShot con Sniper!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por HeadShot con Sniper!");
			PlayAudioStreamForPlayer(issuerid, "http://www.dropbox.com/s/gmjmf9fzff4duey/Headshot.mp3?dl=1");
			}
		}
	}

    if(PlayerInfo[issuerid][pVip] == 8 && vKnockOut[issuerid] == 1)
	{
		new Silah = GetPlayerWeapon(issuerid);
		if(PlayerInfo[playerid][God] == 0 && PlayerInfo[issuerid][God] == 0)
		{
			if(Silah == 24)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Desert Eagle!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Sniper!");
			}

			if(Silah == 33)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Country Rifle!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Country Rifle!");
			}

			if(Silah == 34)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Sniper!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Sniper!");
			}
		}
	}
    else if(PlayerInfo[issuerid][pVip] == 9 && vKnockOut[issuerid] == 1)
	{
		new Silah = GetPlayerWeapon(issuerid);
		if(PlayerInfo[playerid][God] == 0 && PlayerInfo[issuerid][God] == 0)
		{
			if(Silah == 22)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con 9mm!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con 9mm!");
			}

			if(Silah == 23)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Silenced 9mm!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Silenced 9mm!");
			}

			if(Silah == 24)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Desert Eagle!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Desert Eagle!");
			}

			if(Silah == 25)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Shotgun!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Shotgun!");
			}

			if(Silah == 26)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Sawnoff Shotgun!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Sawnoff Shotgun!");
			}

			if(Silah == 27)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Combat Shotgun!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Combat Shotgun!");
			}

			if(Silah == 28)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Micro SMG/Uzi!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Micro SMG/Uzi!");
			}

			if(Silah == 29)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con MP5!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con MP5!");
			}

			if(Silah == 30)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con AK-47!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con AK-47!");
			}

			if(Silah == 31)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con M4!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con M4!");
			}

			if(Silah == 32)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Tec-9!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Tec-9!");
			}

			if(Silah == 33)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Country Rifle!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Country Rifle!");
			}

			if(Silah == 34)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Sniper!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Sniper!");
			}

			if(Silah == 35)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con RPG!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con RPG!");
			}

			if(Silah == 36)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con HS Rocket!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con HS Rocket!");
			}

			if(Silah == 37)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Flamethrower!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Flamethrower!");
			}

			if(Silah == 38)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Minigun!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Minigun!");
			}

			if(Silah == 39)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Satchel Charge!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Satchel Charge!");
			}

			if(Silah == 41)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Spraycan!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Spraycan!");
			}

			if(Silah == 42)
			{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_VERDE, "¡Info!: {FF0000}Has sido Asesinado por Knock Out con Fire Extinguisher!");
			SendClientMessage(issuerid, COLOR_VERDE, "¡Info!: {0000FF}Has Matado por Knock Out con Fire Extinguisher!");
			}
		}
	}
    return 1;
}
//==============================================================================
#if defined ENABLE_SPEC

stock StartSpectate(playerid, specplayerid)
{
	for(new x=0; x<MAX_PLAYERS; x++) {
	    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid) {
	       AdvanceSpectate(x);
		}
	}
	SetPlayerInterior(playerid,GetPlayerInterior(specplayerid));
	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(specplayerid));
	TogglePlayerSpectating(playerid, 1);
	TextDrawHideForPlayer(playerid, HP0);
    TextDrawHideForPlayer(playerid, AR1);

	if(IsPlayerInAnyVehicle(specplayerid)) {
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specplayerid));
		PlayerInfo[playerid][SpecID] = specplayerid;
		PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_VEHICLE;
	}
	else {
		PlayerSpectatePlayer(playerid, specplayerid);
		PlayerInfo[playerid][SpecID] = specplayerid;
		PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_PLAYER;
	}
	new Float:hp, Float:ar;
	GetPlayerName(specplayerid,string2,sizeof(string2));
	GetPlayerHealth(specplayerid, hp);	GetPlayerArmour(specplayerid, ar);
	format(string2,sizeof(string2),"~n~~n~~n~~n~~n~~n~~n~~w~- %s[%d] ~n~~y~Vida: ~w~%0.1f ~l~- ~y~Chaleco: ~w~%0.1f ~l~- ~y~Money: ~w~$%d", string2,specplayerid,hp,ar,GetPlayerMoney(specplayerid) );
	GameTextForPlayer(playerid,string2,25000,3);
	return 1;
}

stock StopSpectate(playerid)
{
    TextDrawShowForPlayer(playerid, HP0);
    TextDrawShowForPlayer(playerid, AR1);
	TogglePlayerSpectating(playerid, 0);
	PlayerInfo[playerid][SpecID] = INVALID_PLAYER_ID;
	PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_NONE;
	GameTextForPlayer(playerid,"~n~~n~~n~~w~MODO SPECTADOR DESACTIVADO",4000,3);
	return 1;
}

stock AdvanceSpectate(playerid)
{
    if(ConnectedPlayers() == 2) { StopSpectate(playerid); return 1; }
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
	    for(new x=PlayerInfo[playerid][SpecID]+1; x<=MAX_PLAYERS; x++)
		{
	    	if(x == MAX_PLAYERS) x = 0;
	        if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] != INVALID_PLAYER_ID || (GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
		}
	}
	return 1;
}

stock ReverseSpectate(playerid)
{
    if(ConnectedPlayers() == 2) { StopSpectate(playerid); return 1; }
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
	    for(new x=PlayerInfo[playerid][SpecID]-1; x>=0; x--)
		{
	    	if(x == 0) x = MAX_PLAYERS;
	        if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] != INVALID_PLAYER_ID || (GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
		}
	}
	return 1;
}

InitFly(playerid)
{
	OnFly[playerid] = false;
	return;
}

bool:StartFly(playerid)
{
	if(OnFly[playerid])
 	return false;
    OnFly[playerid] = true;
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	SetPlayerPos(playerid,x,y,z+5.0);
	ApplyAnimation(playerid,"PARACHUTE","PARA_steerR",6.1,1,1,1,1,0,1);
	Fly(playerid);
	GameTextForPlayer(playerid,"~y~Modo Vuelo~n~~r~Clic Izq ~w~- Subes~n~~r~Clic Derecho ~w~- Bajas~n~ ~r~Espacio ~w~- Rapido~n~~r~Alt Izq ~w~- Lento",10000,3);
	return true;
}

public Fly(playerid) {
	if(!IsPlayerConnected(playerid)) return 1; new k, ud,lr; GetPlayerKeys(playerid,k,ud,lr);
	new Float:v_x,Float:v_y,Float:v_z, Float:x,Float:y,Float:z; if(ud < 0) { GetPlayerCameraFrontVector(playerid,x,y,z); v_x = x+0.1; v_y = y+0.1; }
	if(k & 128) v_z = -0.2; else if(k & KEY_FIRE) v_z = 0.2; if(k & KEY_WALK) { v_x /=5.0; v_y /=5.0; v_z /=5.0; }
	if(k & KEY_SPRINT) { v_x *=4.0; v_y *=4.0; v_z *=4.0; }
	if(v_z == 0.0) v_z = 0.025; SetPlayerVelocity(playerid,v_x,v_y,v_z);
	if(v_x == 0 && v_y == 0) { if(GetPlayerAnimationIndex(playerid) == 959) ApplyAnimation(playerid,"PARACHUTE","PARA_steerR",6.1,1,1,1,1,0,1); } else { GetPlayerCameraFrontVector(playerid,v_x,v_y,v_z); GetPlayerCameraPos(playerid,x,y,z); SetPlayerLookAt(playerid,v_x*500.0+x,v_y*500.0+y); if(GetPlayerAnimationIndex(playerid) != 959) ApplyAnimation(playerid,"PARACHUTE","FALL_SkyDive_Accel",6.1,1,1,1,1,0,1); }
	if(OnFly[playerid]) SetTimerEx("Fly",80,0,"i",playerid); return 1; }
	bool:StopFly(playerid) { if(!OnFly[playerid]) return false; new Float:x,Float:y,Float:z; GetPlayerPos(playerid,x,y,z); SetPlayerPos(playerid,x,y,z); OnFly[playerid] = false; return true; }
	static SetPlayerLookAt(playerid,Float:x,Float:y) { new Float:Px, Float:Py, Float: Pa; GetPlayerPos(playerid, Px, Py, Pa); Pa = floatabs(atan((y-Py)/(x-Px))); if (x <= Px && y >= Py) 		Pa = floatsub(180.0, Pa); else if (x < Px && y < Py) 		Pa = floatadd(Pa, 180.0); else if (x >= Px && y <= Py)	Pa = floatsub(360.0, Pa); Pa = floatsub(Pa, 90.0); if (Pa >= 360.0) Pa = floatsub(Pa, 360.0); SetPlayerFacingAngle(playerid, Pa); return; }

#endif

//==============================================================================
EraseVehicle(vehicleid)
{
    for(new players=0;players<=MAX_PLAYERS;players++)
    {
        new Float:X,Float:Y,Float:Z;
        if (IsPlayerInVehicle(players,vehicleid))
        {
            GetPlayerPos(players,X,Y,Z);
            SetPlayerPos(players,X,Y,Z+2);
            SetVehicleToRespawn(vehicleid);
        }
        SetVehicleParamsForPlayer(vehicleid,players,0,1);
    }
    SetTimerEx("VehRes",3000,0,"d",vehicleid);
    return 1;
}


public UsaIPKick(playerid)
{
Kick(playerid);
return 1;
}

forward CarSpawner(playerid,model);
public CarSpawner(playerid,model)
{
	if(IsPlayerInAnyVehicle(playerid)) SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Usted ya tiene un coche!");
 	else
	{
    	new Float:x, Float:y, Float:z, Float:angle;
	 	GetPlayerPos(playerid, x, y, z);
	 	GetPlayerFacingAngle(playerid, angle);
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
	    new vehicleid=CreateVehicle(model, x, y, z, angle, -1, -1, -1);
	    SetVehicleNumberPlate(vehicleid, "RL 2015");
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
		ChangeVehicleColor(vehicleid,0,7);
        PlayerInfo[playerid][pCar] = vehicleid;
	}
	return 1;
}


forward CarDeleter(vehicleid);
public CarDeleter(vehicleid)
{
    for(new i=0;i<MAX_PLAYERS;i++) {
        new Float:X,Float:Y,Float:Z;
    	if(IsPlayerInVehicle(i, vehicleid)) {
    	    RemovePlayerFromVehicle(i);
    	    GetPlayerPos(i,X,Y,Z);
        	SetPlayerPos(i,X,Y+3,Z);
	    }
	    SetVehicleParamsForPlayer(vehicleid,i,0,1);
	}
    SetTimerEx("VehRes",1500,0,"i",vehicleid);
}
forward VehRes(vehicleid);
public VehRes(vehicleid)
{
    DestroyVehicle(vehicleid);
}
public CarSpawner1(playerid,model)
{
	if(IsPlayerInAnyVehicle(playerid))
	SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Ya Estás En Un Auto!");
	else
	{
	   	new Float:x, Float:y, Float:z, Float:angle;
	 	GetPlayerPos(playerid, x, y, z);
	 	GetPlayerFacingAngle(playerid, angle);
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new vehicleid=CreateVehicle(model, x, y, z, angle, -1, -1, -1);
		SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
		PutPlayerInVehicle(playerid, vehicleid, 0);
		ChangeVehicleColor(vehicleid,0,7);
	    PlayerInfo[playerid][pCar] = vehicleid;
	}
	return 1;
}

public BorrarAuto(vehicleid)
{
    for(new i=0;i<MAX_PLAYERS;i++)
	{
        new Float:X,Float:Y,Float:Z;
    	if(IsPlayerInVehicle(i, vehicleid))
		{
  		RemovePlayerFromVehicle(i);
  		GetPlayerPos(i,X,Y,Z);
 		SetPlayerPos(i,X,Y+3,Z);
	    }
	    SetVehicleParamsForPlayer(vehicleid,i,0,1);
	}
    SetTimerEx("ResAuto",1500,0,"i",vehicleid);
}
public ResAuto(vehicleid)
{
    DestroyVehicle(vehicleid);
}

public OnVehicleSpawn(vehicleid)
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
        if(vehicleid==PlayerInfo[i][pCar])
		{
		    CarDeleter(vehicleid);
	        PlayerInfo[i][pCar]=-1;
        }
	}

    for(new i=0;i<MAX_PLAYERS;i++)
	{
        if(vehicleid==AccInfo[i][pCar])
		{
		    BorrarAuto(vehicleid);
	        AccInfo[i][pCar]=-1;
        }
	}
	return 1;
}
//==============================================================================
forward TuneLCar(VehicleID);
public TuneLCar(VehicleID)
{
	ChangeVehicleColor(VehicleID,0,7);
	AddVehicleComponent(VehicleID, 1010);  AddVehicleComponent(VehicleID, 1087);
}

public OnPlayerUpdate(playerid)
{
    if(PlayerInfo[playerid][Kills] == 1000)
	{
	    PlayerInfo[playerid][pVip] = 1;
        dUserSetINT(PlayerName2(playerid)).("AccountType",(1));
		SendClientMessage(playerid, COLOR_GREEN, "** Score 1.000 conseguido!");
		SendClientMessage(playerid, COLOR_GREEN, "** Premio: $30000 + 100 de Score");
		SendClientMessage(playerid, COLOR_yellow, "[INFO]: ¡Promovido a Vip Silver!");
		GivePlayerMoney(playerid, 30000);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		#if defined USE_STATS
		PlayerInfo[playerid][Experiencia]=PlayerInfo[playerid][Experiencia]+300;
        SetPlayerScore(playerid, GetPlayerScore(playerid)+100);
        PlayerInfo[playerid][Kills] = GetPlayerScore(playerid);
        #endif
        ActualizarInformacion(playerid);
        SavePlayer(playerid);
		//GameTextForPlayer(playerid, "Score ~b~1000 ~g~Promovido a Silver!", 3000, 1);
	}
	if(PlayerInfo[playerid][Kills] == 3500)
	{
	    PlayerInfo[playerid][pVip] = 2;
        dUserSetINT(PlayerName2(playerid)).("AccountType",(2));
		SendClientMessage(playerid, COLOR_GREEN, "** Score 3.500 conseguido!");
		SendClientMessage(playerid, COLOR_GREEN, "** Premio: $100000 + 100 de Score");
		SendClientMessage(playerid, COLOR_yellow, "[INFO]: Promovido a Vip Gold!");
		GivePlayerMoney(playerid, 100000);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		#if defined USE_STATS
		PlayerInfo[playerid][Experiencia]=PlayerInfo[playerid][Experiencia]+1000;
        SetPlayerScore(playerid, GetPlayerScore(playerid)+100);
        PlayerInfo[playerid][Kills] = GetPlayerScore(playerid);
        #endif
        ActualizarInformacion(playerid);
        SavePlayer(playerid);
		//GameTextForPlayer(playerid, "Score ~b~2500 ~g~Promovido a Gold!", 3000, 1);
	}
	if(PlayerInfo[playerid][Kills] == 5000)
	{
	    PlayerInfo[playerid][pVip] = 3;
        dUserSetINT(PlayerName2(playerid)).("AccountType",(3));
		SendClientMessage(playerid, COLOR_GREEN, "** Score 5.000 conseguido!");
		SendClientMessage(playerid, COLOR_GREEN, "** Premio: $200000 + 100 de Score");
		SendClientMessage(playerid, COLOR_yellow, "[INFO]: Promovido a Vip Premium!");
		GivePlayerMoney(playerid, 200000);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		#if defined USE_STATS
		PlayerInfo[playerid][Experiencia]=PlayerInfo[playerid][Experiencia]+999;
        SetPlayerScore(playerid, GetPlayerScore(playerid)+100);
        PlayerInfo[playerid][Kills] = GetPlayerScore(playerid);
        #endif
        ActualizarInformacion(playerid);
        SavePlayer(playerid);
		//GameTextForPlayer(playerid, "Score ~b~3500 ~g~Promovido a Premium!", 3000, 1);
	}
		if(PlayerInfo[playerid][Kills] == 10000)
	{
	     PlayerInfo[playerid][pVip] = 4;
         dUserSetINT(PlayerName2(playerid)).("AccountType",(4));
		 SendClientMessage(playerid, COLOR_GREEN, "** Score 10.000 conseguido!");
		 SendClientMessage(playerid, COLOR_GREEN, "** Premio: $300000 + 100 de Score");
		 SendClientMessage(playerid, COLOR_yellow, "[INFO]: Promovido a Vip Platinum!");
		 GivePlayerMoney(playerid, 300000);
		 PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		 #if defined USE_STATS
		 PlayerInfo[playerid][Experiencia]=PlayerInfo[playerid][Experiencia]+1200;
	     SetPlayerScore(playerid, GetPlayerScore(playerid)+100);
	     PlayerInfo[playerid][Kills] = GetPlayerScore(playerid);
	     #endif
	     ActualizarInformacion(playerid);
	     SavePlayer(playerid);
		 //GameTextForPlayer(playerid, "Score ~b~4000 ~g~Promovido a Esmeralda!", 3000, 1);
	}
	if(PlayerInfo[playerid][Kills] == 15000)
	{
	     PlayerInfo[playerid][pVip] = 5;
         dUserSetINT(PlayerName2(playerid)).("AccountType",(5));
		 SendClientMessage(playerid, COLOR_GREEN, "** Score 15.000 conseguido!");
		 SendClientMessage(playerid, COLOR_GREEN, "** Premio: $300000 + 100 de Score");
		 SendClientMessage(playerid, COLOR_yellow, "[INFO]: Promovido a Vip Esmeralda!");
		 GivePlayerMoney(playerid, 300000);
		 PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		 #if defined USE_STATS
		 PlayerInfo[playerid][Experiencia]=PlayerInfo[playerid][Experiencia]+1200;
	     SetPlayerScore(playerid, GetPlayerScore(playerid)+100);
	     PlayerInfo[playerid][Kills] = GetPlayerScore(playerid);
	     #endif
	     ActualizarInformacion(playerid);
	     SavePlayer(playerid);
		 //GameTextForPlayer(playerid, "Score ~b~7000 ~g~Promovido a Platinum!", 3000, 1);
	}
	if(PlayerInfo[playerid][Kills] == 20000)
	{
	     PlayerInfo[playerid][pVip] = 6;
         dUserSetINT(PlayerName2(playerid)).("AccountType",(6));
		 SendClientMessage(playerid, COLOR_GREEN, "** Score 20.000 conseguido!");
		 SendClientMessage(playerid, COLOR_GREEN, "** Premio: $400000 + 200 de Score");
		 SendClientMessage(playerid, COLOR_yellow, "[INFO]: Promovido a Vip Diamond!");
		 GivePlayerMoney(playerid, 400000);
		 PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		 #if defined USE_STATS
		 PlayerInfo[playerid][Experiencia]=PlayerInfo[playerid][Experiencia]+1500;
	     SetPlayerScore(playerid, GetPlayerScore(playerid)+200);
	     PlayerInfo[playerid][Kills] = GetPlayerScore(playerid);
   	     #endif
   	     ActualizarInformacion(playerid);
	     SavePlayer(playerid);
		 //GameTextForPlayer(playerid, "Score ~b~10000 ~g~Promovido a Diamond!", 3000, 1);
	}
	if(PlayerInfo[playerid][Kills] == 30000)
	{
	     PlayerInfo[playerid][pVip] = 7;
         dUserSetINT(PlayerName2(playerid)).("AccountType",(7));
		 SendClientMessage(playerid, COLOR_GREEN, "** Score 30.000 conseguido!");
		 SendClientMessage(playerid, COLOR_GREEN, "** Premio: $700000 + 300 de Score");
		 SendClientMessage(playerid, COLOR_yellow, "[INFO]: Promovido a Vip Extremo!");
		 GivePlayerMoney(playerid, 700000);
		 PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		 #if defined USE_STATS
		 PlayerInfo[playerid][Experiencia]=PlayerInfo[playerid][Experiencia]+2000;
	     SetPlayerScore(playerid, GetPlayerScore(playerid)+300);
	     PlayerInfo[playerid][Kills] = GetPlayerScore(playerid);
   	     #endif
   	     ActualizarInformacion(playerid);
	     SavePlayer(playerid);
		 //GameTextForPlayer(playerid, "Score ~b~15000 ~g~Promovido a Extremo!", 3000, 1);
	}
	if(PlayerInfo[playerid][Kills] == 75000)
	{
	     PlayerInfo[playerid][pVip] = 8;
         dUserSetINT(PlayerName2(playerid)).("AccountType",(8));
		 SendClientMessage(playerid, COLOR_GREEN, "** Score 75.000 conseguido!");
		 SendClientMessage(playerid, COLOR_GREEN, "** Premio: $900000 + 400 de Score");
		 SendClientMessage(playerid, COLOR_yellow, "[INFO]: Promovido a Vip Legendario!");
		 GivePlayerMoney(playerid, 900000);
		 PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		 #if defined USE_STATS
		 PlayerInfo[playerid][Experiencia]=PlayerInfo[playerid][Experiencia]+3000;
	     SetPlayerScore(playerid, GetPlayerScore(playerid)+400);
	     PlayerInfo[playerid][Kills] = GetPlayerScore(playerid);
   	     #endif
   	     ActualizarInformacion(playerid);
	     SavePlayer(playerid);
		 //GameTextForPlayer(playerid, "Score ~b~90000 ~g~Promovido a Legendario!", 3000, 1);
	}
/*	// ANTI CRASHER
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	if( X >= 99999.0 || Y >= 99999.0 || Z >= 99999.0 || X <= -99999.0 || Y <= -99999.0 || Z <= -99999.0 )
	{
		if(AceleracionBrutal[playerid] == false && SaltosAuto[playerid] == 0)
		{
			SendClientMessage(playerid, 0xFF0000FF, "¡ANTI-BOT RL!: {FFFFFF}Fuera de los Limites del Mundo.");
			RankBound[playerid]++;
		}
	}
	if(RankBound[playerid] == 20)
	{
		if(AceleracionBrutal[playerid] == false && SaltosAuto[playerid] == 0)
		{
		    new string3[2000];
			format(string3,sizeof(string3),"¡Info!: {FFFFFF}%s [%d] fue Kickeado del Servidor. [Razón: Posible Crasher/Fuera de los Limites del Mundo]",pName(playerid),playerid);
			SendClientMessageToAll(red, string3);
			Kick(playerid);
		}
	}

	if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		new Float:vec[3];
		GetPlayerCameraFrontVector(playerid, vec[0], vec[1], vec[2]);
		new bool:possible_crasher = false;
		for (new i = 0; !possible_crasher && i < sizeof(vec); i++)
			if (floatabs(vec[i]) > 10.0)
				possible_crasher = true;

		if (possible_crasher)
			return 0;
	}*/

/*new FPSSS = GetPlayerDrunkLevel(playerid), fps; if (FPSSS < 100) { SetPlayerDrunkLevel(playerid, 2000); } else { if (FPSSS != FPSS[playerid]) { fps = FPSS[playerid] - FPSSS; if (fps > 0 && fps < 200) FPS[playerid] = fps; FPSS[playerid] = FPSSS;} }// BY Tribisk
new string[150];
format(string,sizeof(string), "~b~Fps: ~w~%d",FPS[playerid]); TextDrawSetString(AbajoVida[playerid],string);// BY Tribisk*/

//Anti Cleo Crash
    if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
        new Float:vec[3];
        GetPlayerCameraFrontVector(playerid, vec[0], vec[1], vec[2]);
        if(floatabs(vec[0]) > 10.0) return 0;
        if(floatabs(vec[1]) > 10.0) return 0;
        if(floatabs(vec[2]) > 10.0) return 0;
    }
    
if(GetTickCount() - armedbody_pTick[playerid] > 113){

				new weaponid[13],weaponammo[13],pArmedWeapon;
                pArmedWeapon = GetPlayerWeapon(playerid);
                GetPlayerWeaponData(playerid,1,weaponid[1],weaponammo[1]);
                GetPlayerWeaponData(playerid,2,weaponid[2],weaponammo[2]);
                GetPlayerWeaponData(playerid,4,weaponid[4],weaponammo[4]);
                GetPlayerWeaponData(playerid,5,weaponid[5],weaponammo[5]);
                #if ARMEDBODY_USE_HEAVY_WEAPON
                GetPlayerWeaponData(playerid,7,weaponid[7],weaponammo[7]);
                #endif
                if(weaponid[1] && weaponammo[1] > 0){
                        if(pArmedWeapon != weaponid[1]){
                                if(!IsPlayerAttachedObjectSlotUsed(playerid,0)){
                                        SetPlayerAttachedObject(playerid,0,GetWeaponModel(weaponid[1]),1, 0.199999, -0.139999, 0.030000, 0.500007, -115.000000, 0.000000, 1.000000, 1.000000, 1.000000);
                                }
                        }
                        else {
                                if(IsPlayerAttachedObjectSlotUsed(playerid,0)){
                                        RemovePlayerAttachedObject(playerid,0);
                                }
                        }
                }
                else if(IsPlayerAttachedObjectSlotUsed(playerid,0)){
                        RemovePlayerAttachedObject(playerid,0);
                }
                if(weaponid[2] && weaponammo[2] > 0){
                        if(pArmedWeapon != weaponid[2]){
                                if(!IsPlayerAttachedObjectSlotUsed(playerid,1)){
                                        SetPlayerAttachedObject(playerid,1,GetWeaponModel(weaponid[2]),8, -0.079999, -0.039999, 0.109999, -90.100006, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
                                }
                        }
                        else {
                                if(IsPlayerAttachedObjectSlotUsed(playerid,1)){
                                        RemovePlayerAttachedObject(playerid,1);
                                }
                        }
                }
                else if(IsPlayerAttachedObjectSlotUsed(playerid,1)){
                        RemovePlayerAttachedObject(playerid,1);
                }
                if(weaponid[4] && weaponammo[4] > 0){
                        if(pArmedWeapon != weaponid[4]){
                                if(!IsPlayerAttachedObjectSlotUsed(playerid,2)){
                                        SetPlayerAttachedObject(playerid,2,GetWeaponModel(weaponid[4]),7, 0.000000, -0.100000, -0.080000, -95.000000, -10.000000, 0.000000, 1.000000, 1.000000, 1.000000);
                                }
                        }
                        else {
                                if(IsPlayerAttachedObjectSlotUsed(playerid,2)){
                                        RemovePlayerAttachedObject(playerid,2);
                                }
                        }
                }
                else if(IsPlayerAttachedObjectSlotUsed(playerid,2)){
                        RemovePlayerAttachedObject(playerid,2);
                }
                if(weaponid[5] && weaponammo[5] > 0){
                        if(pArmedWeapon != weaponid[5]){
                                if(!IsPlayerAttachedObjectSlotUsed(playerid,3)){
                                        SetPlayerAttachedObject(playerid,3,GetWeaponModel(weaponid[5]),1, 0.200000, -0.119999, -0.059999, 0.000000, 206.000000, 0.000000, 1.000000, 1.000000, 1.000000);
                                }
                        }
                        else {
                                if(IsPlayerAttachedObjectSlotUsed(playerid,3)){
                                        RemovePlayerAttachedObject(playerid,3);
                                }
                        }
                }
                else if(IsPlayerAttachedObjectSlotUsed(playerid,3)){
                        RemovePlayerAttachedObject(playerid,3);
                }
                #if ARMEDBODY_USE_HEAVY_WEAPON
                if(weaponid[7] && weaponammo[7] > 0){
                        if(pArmedWeapon != weaponid[7]){
                                if(!IsPlayerAttachedObjectSlotUsed(playerid,4)){
                                        SetPlayerAttachedObject(playerid,4,GetWeaponModel(weaponid[7]),1,-0.100000, 0.000000, -0.100000, 84.399932, 112.000000, 10.000000, 1.099999, 1.000000, 1.000000);
                                }
                        }
                        else {
                                if(IsPlayerAttachedObjectSlotUsed(playerid,4)){
                                        RemovePlayerAttachedObject(playerid,4);
                                }
                        }
                }
                else if(IsPlayerAttachedObjectSlotUsed(playerid,4)){
                        RemovePlayerAttachedObject(playerid,4);
                }
                #endif
                armedbody_pTick[playerid] = GetTickCount();
        }
        return true;
}
//==============================================================================
public ChauBengala(playerid)
{
    new Float:X,Float:Y,Float:Z;
	GetObjectPos(OBengala[playerid],X,Y,Z);
	DestroyObject(OBengala[playerid]);
	CreateExplosion(X,Y,Z,6,10.0);
	return 1;
}

public ChauBengala2(playerid)
{
    new Float:X,Float:Y,Float:Z;
	GetObjectPos(OBengala[playerid],X,Y,Z);
	DestroyObject(OBengala[playerid]);
	CreateExplosion(X+2,Y,Z,6,10.0);
	return 1;
}

public ChauBengala3(playerid)
{
    new Float:X,Float:Y,Float:Z;
	GetObjectPos(OBengala[playerid],X,Y,Z);
	DestroyObject(OBengala[playerid]);
	CreateExplosion(X,Y+2,Z,6,10.0);
	return 1;
}
//==============================================================================

public OnRconCommand(cmd[])
{
	if( strlen(cmd) > 50 || strlen(cmd) == 1 ) return print("Longitud del comando inválido (excede los 50 carácteres)");

	if(strcmp(cmd, "ladmin", true)==0) {
		print("Rcon Commands");
		print("info, aka, pm, asay, ann, uconfig, chat");
		return true;
	}

	if(strcmp(cmd, "info", true)==0)
	{
	    new TotalVehicles = CreateVehicle(411, 0, 0, 0, 0, 0, 0, 1000);    DestroyVehicle(TotalVehicles);
		new numo = CreateObject(1245,0,0,1000,0,0,0);	DestroyObject(numo);
		new nump = CreatePickup(371,2,0,0,1000);	DestroyPickup(nump);
		new gz = GangZoneCreate(3,3,5,5);	GangZoneDestroy(gz);

		new model[250], nummodel;
		for(new i=1;i<TotalVehicles;i++) model[GetVehicleModel(i)-400]++;
		for(new i=0;i<250;i++) { if(model[i]!=0) {	nummodel++;	}	}

		print(" ===========================================================================");
		printf("                           Server Info:");
		format(string2,sizeof(string2),"[ Jugadores Conectados: %d || Jugadores Máximos: %d ] [Ratio %0.2f ]",ConnectedPlayers(),GetMaxPlayers(),Float:ConnectedPlayers() / Float:GetMaxPlayers() );
		printf(string2);
		format(string2,sizeof(string2),"[ Vehículos: %d || Modelos %d || Jugadores en Vehículos: %d ]",TotalVehicles-1,nummodel, InVehCount() );
		printf(string2);
		format(string2,sizeof(string2),"[ En Auto %d  ||  En Moto/Bice %d ]",InCarCount(),OnBikeCount() );
		printf(string2);
		format(string2,sizeof(string2),"[ Objetos: %d || Pickups %d  || Gangzones %d]",numo-1, nump, gz);
		printf(string2);
		format(string2,sizeof(string2),"[ Jugadores Arrestados %d || Jugadores Congelados %d || Muteadosd %d ]",JailedPlayers(),FrozenPlayers(), MutedPlayers() );
	    printf(string2);
	    format(string2,sizeof(string2),"[ Administradores ON-LINE %d  RCON Admins ON-LINE %d ]",AdminCount(), RconAdminCount() );
	    printf(string2);
		print(" ===========================================================================");
		return true;
	}

	if(!strcmp(cmd, "pm", .length = 2))
	{
	    new arg_1 = argpos(cmd), arg_2 = argpos(cmd, arg_1),targetid = strval(cmd[arg_1]), message[128];

    	if ( !cmd[arg_1] || cmd[arg_1] < '0' || cmd[arg_1] > '9' || targetid > MAX_PLAYERS || targetid < 0 || !cmd[arg_2])
	        print("Use: \"pm <jugador> <mensaje>\"");

	    else if ( !IsPlayerConnected(targetid) ) print("Este jugador no está conectado!");
    	else
	    {
	        format(message, sizeof(message), "[RCON] PM: %s", cmd[arg_2]);
	        SendClientMessage(targetid, COLOR_WHITE, message);
   	        printf("Rcon PM '%s' sent", cmd[arg_1] );
    	}
	    return true;
	}

	if(!strcmp(cmd, "asay", .length = 4))
	{
	    new arg_1 = argpos(cmd), message[128];

    	if ( !cmd[arg_1] || cmd[arg_1] < '0') print("Use: \"asay  <mensaje>\" (MessageToAdmins)");
	    else
	    {
	        format(message, sizeof(message), "[RCON] MessageToAdmins: %s", cmd[arg_1]);
	        MessageToAdmins(COLOR_WHITE, message);
	        printf("Admin Message '%s' sent", cmd[arg_1] );
    	}
	    return true;
	}

	if(!strcmp(cmd, "ann", .length = 3))
	{
	    new arg_1 = argpos(cmd), message[128];
    	if ( !cmd[arg_1] || cmd[arg_1] < '0') print("Use: \"ann  <mensaje>\" (GameTextForAll)");
	    else
	    {
	        format(message, sizeof(message), "[RCON]: %s", cmd[arg_1]);
	        GameTextForAll(message,3000,3);
	        printf("GameText Message '%s' sent", cmd[arg_1] );
    	}
	    return true;
	}

	if(!strcmp(cmd, "msg", .length = 3))
	{
	    new arg_1 = argpos(cmd), message[128];
    	if ( !cmd[arg_1] || cmd[arg_1] < '0') print("Use: \"msg  <mensaje>\" (SendClientMessageToAll)");
	    else
	    {
	        format(message, sizeof(message), "[RCON]: %s", cmd[arg_1]);
	        SendClientMessageToAll(COLOR_WHITE, message);
	        printf("MessageToAll '%s' sent", cmd[arg_1] );
    	}
	    return true;
	}

	if(strcmp(cmd, "uconfig", true)==0)
	{
		UpdateConfig();
		print("Configuración actualizada satifactoriamente");
		return true;
	}

	if(!strcmp(cmd, "aka", .length = 3))
	{
	    new arg_1 = argpos(cmd), targetid = strval(cmd[arg_1]);

    	if ( !cmd[arg_1] || cmd[arg_1] < '0' || cmd[arg_1] > '9' || targetid > MAX_PLAYERS || targetid < 0)
	        print("USA: aka <playerid>");
	    else if ( !IsPlayerConnected(targetid) ) print("Este jugador no está conectado!");
    	else
	    {
			new tmp3[50], playername[MAX_PLAYER_NAME];
	  		GetPlayerIp(targetid,tmp3,50);
			GetPlayerName(targetid, playername, sizeof(playername));
			printf("AKA: [%s id:%d] [%s] %s", playername, targetid, tmp3, dini_Get("ladmin/config/aka.txt",tmp3) );
    	}
	    return true;
	}

	if(!strcmp(cmd, "chat", .length = 4)) {
	for(new i = 1; i < MAX_CHAT_LINES; i++) print(Chat[i]);
    return true;
	}

	return 0;
}

//==============================================================================
//							Menus
//==============================================================================

#if defined USE_MENUS
public OnPlayerSelectedMenuRow(playerid, row) {
  	new Menu:Current = GetPlayerMenu(playerid);

    if(Current == LMainMenu) {
        switch(row)
		{
 			case 0:
			{
				if(PlayerInfo[playerid][pAdmin] >= 8) ShowMenuForPlayer(AdminEnable,playerid);
   				else {
   					SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 8] para Usar este Comando!.");
	   				TogglePlayerControllable(playerid,true);
   				}
			}
			case 1:
			{
				if(PlayerInfo[playerid][pAdmin] >= 8) ShowMenuForPlayer(AdminDisable,playerid);
   				else {
   					SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Game-Master [Lvl 8] para Usar este Comando!.");
	   				TogglePlayerControllable(playerid,true);
   				}
			}
 			case 2: ShowMenuForPlayer(LWeather,playerid);
 			case 3: ShowMenuForPlayer(LTime,playerid);
   			case 4:	ShowMenuForPlayer(LVehicles,playerid);
			case 5:	ShowMenuForPlayer(LCars,playerid);
 			case 6:
            {
				if(PlayerInfo[playerid][pAdmin] >= 2)
				{
        			if(IsPlayerInAnyVehicle(playerid))
					{
						new LVehicleID = GetPlayerVehicleID(playerid), LModel = GetVehicleModel(LVehicleID);
					    switch(LModel)
						{
							case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
							{
								SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Tú no tienes un vehículo para tunear");  TogglePlayerControllable(playerid,true);
								return 1;
							}
						}
					    TogglePlayerControllable(playerid,false);	ShowMenuForPlayer(LTuneMenu,playerid);
			        }
					else { SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Tú no tienes un vehículo para tunear"); TogglePlayerControllable(playerid,true); }
		    	} else { SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!"); TogglePlayerControllable(playerid,true);	}
			}
  			case 7:
	  		{
	  			if(PlayerInfo[playerid][pAdmin] >= 3) ShowMenuForPlayer(XWeapons,playerid);
			  	else SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 3] para Usar este Comando!"); TogglePlayerControllable(playerid,true);
			}
			case 8:	 ShowMenuForPlayer(LTele,playerid);
			case 9:
			{
				new Menu:Currentxmenu = GetPlayerMenu(playerid);
	    		HideMenuForPlayer(Currentxmenu,playerid);   TogglePlayerControllable(playerid,true);
		    }
		}
		return 1;
	}//-------------------------------------------------------------------------
	if(Current == AdminEnable) {
		new adminname[MAX_PLAYER_NAME], file[256]; GetPlayerName(playerid, adminname, sizeof(adminname));
		format(file,sizeof(file),"ladmin/config/Config.ini");
		switch(row){
			case 0: { ServerInfo[AntiSwear] = 1; dini_IntSet(file,"AntiSwear",1); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s habilitó el Antiswear",adminname); SendClientMessageToAll(blue,string2);	}
			case 1: { ServerInfo[NameKick] = 1; dini_IntSet(file,"NameKick",1); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s habilitó el Namekick",adminname); SendClientMessageToAll(blue,string2);	}
			case 2:	{ ServerInfo[AntiSpam] = 1; dini_IntSet(file,"AntiSpam",1); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s habilitó el Antispam",adminname); SendClientMessageToAll(blue,string2);	}
			case 3:	{ ServerInfo[MaxPing] = 1000; dini_IntSet(file,"MaxPing",1000); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s habilitó el Ping Kick",adminname); SendClientMessageToAll(blue,string2);	}
			case 4:	{ ServerInfo[ReadCmds] = 1; dini_IntSet(file,"ReadCmds",1); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s habilitó el Reading Commands",adminname); MessageToAdmins(green,string2);	}
			case 5:	{ ServerInfo[ReadPMs] = 1; dini_IntSet(file,"ReadPMs",1); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s habilitó Reading Pms",adminname); MessageToAdmins(green,string2); }
			case 6:	{ ServerInfo[NoCaps] = 0; dini_IntSet(file,"NoCaps",0); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha permitido la Mayúscula en el Chat",adminname); SendClientMessageToAll(blue,string2); }
			case 7:	{ ServerInfo[ConnectMessages] = 1; dini_IntSet(file,"ConnectMessages",1); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s habilitó el Connect Messages",adminname); SendClientMessageToAll(blue,string2); }
			case 8:	{ ServerInfo[AdminCmdMsg] = 1; dini_IntSet(file,"AdminCmdMessages",1); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s habilitó el Admin Command Messages",adminname); MessageToAdmins(green,string2); }
			case 9:	{ ServerInfo[AutoLogin] = 1; dini_IntSet(file,"AutoLogin",1); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s habilitó el Auto Login",adminname); SendClientMessageToAll(blue,string2); }
            case 10: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}//------------------------------------------------------------------------
	if(Current == AdminDisable) {
		new adminname[MAX_PLAYER_NAME], file[256]; GetPlayerName(playerid, adminname, sizeof(adminname));
		format(file,sizeof(file),"ladmin/config/Config.ini");
		switch(row){
			case 0: { ServerInfo[AntiSwear] = 0; dini_IntSet(file,"AntiSwear",0); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha desactivado el Antiswear",adminname); SendClientMessageToAll(blue,string2);	}
			case 1: { ServerInfo[NameKick] = 0; dini_IntSet(file,"NameKick",0); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha desactivado el Namekick",adminname); SendClientMessageToAll(blue,string2);	}
			case 2:	{ ServerInfo[AntiSpam] = 0; dini_IntSet(file,"AntiSpam",0); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha desactivado el Antispam",adminname); SendClientMessageToAll(blue,string2);	}
			case 3:	{ ServerInfo[MaxPing] = 0; dini_IntSet(file,"MaxPing",0); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha desactivado el Ping Kick",adminname); SendClientMessageToAll(blue,string2);	}
			case 4:	{ ServerInfo[ReadCmds] = 0; dini_IntSet(file,"ReadCmds",0); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha desactivado el Reading Commands",adminname); MessageToAdmins(green,string2);	}
			case 5:	{ ServerInfo[ReadPMs] = 0; dini_IntSet(file,"ReadPMs",0); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha desactivado el Reading Pms",adminname); MessageToAdmins(green,string2); }
			case 6:	{ ServerInfo[NoCaps] = 1; dini_IntSet(file,"NoCaps",1); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha desactivado la Mayúscula en el Chat",adminname); SendClientMessageToAll(blue,string2); }
			case 7:	{ ServerInfo[ConnectMessages] = 0; dini_IntSet(file,"ConnectMessages",0); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha desactivado el Connect Messages",adminname); SendClientMessageToAll(blue,string2); }
			case 8:	{ ServerInfo[AdminCmdMsg] = 0; dini_IntSet(file,"AdminCmdMessages",0); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha desactivado el Admin Command Messages",adminname); MessageToAdmins(green,string2); }
			case 9:	{ ServerInfo[AutoLogin] = 0; dini_IntSet(file,"AutoLogin",0); format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha desactivado el Auto Login",adminname); SendClientMessageToAll(blue,string2); }
            case 10: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}//-------------------------------------------------------------------------
	if(Current==LVehicles){
		switch(row){
			case 0: ChangeMenu(playerid,Current,twodoor);
			case 1: ChangeMenu(playerid,Current,fourdoor);
			case 2: ChangeMenu(playerid,Current,fastcar);
			case 3: ChangeMenu(playerid,Current,Othercars);
			case 4: ChangeMenu(playerid,Current,bikes);
			case 5: ChangeMenu(playerid,Current,boats);
			case 6: ChangeMenu(playerid,Current,planes);
			case 7: ChangeMenu(playerid,Current,helicopters);
			case 8: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return 1;
	}
	if(Current==twodoor){
		new vehid;
		switch(row){
			case 0: vehid = 533;
			case 1: vehid = 439;
			case 2: vehid = 555;
			case 3: vehid = 422;
			case 4: vehid = 554;
			case 5: vehid = 575;
			case 6: vehid = 536;
			case 7: vehid = 535;
			case 8: vehid = 576;
			case 9: vehid = 401;
			case 10: vehid = 526;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==fourdoor){
		new vehid;
		switch(row){
			case 0: vehid = 404;
			case 1: vehid = 566;
			case 2: vehid = 412;
			case 3: vehid = 445;
			case 4: vehid = 507;
			case 5: vehid = 466;
			case 6: vehid = 546;
			case 7: vehid = 511;
			case 8: vehid = 467;
			case 9: vehid = 426;
			case 10: vehid = 405;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==fastcar){
		new vehid;
		switch(row){
			case 0: vehid = 480;
			case 1: vehid = 402;
			case 2: vehid = 415;
			case 3: vehid = 587;
			case 4: vehid = 494;
			case 5: vehid = 411;
			case 6: vehid = 603;
			case 7: vehid = 506;
			case 8: vehid = 451;
			case 9: vehid = 477;
			case 10: vehid = 541;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==Othercars){
		new vehid;
		switch(row){
			case 0: vehid = 556;
			case 1: vehid = 408;
			case 2: vehid = 431;
			case 3: vehid = 437;
			case 4: vehid = 427;
			case 5: vehid = 432;
			case 6: vehid = 601;
			case 7: vehid = 524;
			case 8: vehid = 455;
			case 9: vehid = 424;
			case 10: vehid = 573;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==bikes){
		new vehid;
		switch(row){
			case 0: vehid = 581;
			case 1: vehid = 481;
			case 2: vehid = 462;
			case 3: vehid = 521;
			case 4: vehid = 463;
			case 5: vehid = 522;
			case 6: vehid = 461;
			case 7: vehid = 448;
			case 8: vehid = 471;
			case 9: vehid = 468;
			case 10: vehid = 586;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==boats){
		new vehid;
		switch(row){
			case 0: vehid = 472;
			case 1: vehid = 473;
			case 2: vehid = 493;
			case 3: vehid = 595;
			case 4: vehid = 484;
			case 5: vehid = 430;
			case 6: vehid = 453;
			case 7: vehid = 452;
			case 8: vehid = 446;
			case 9: vehid = 454;
			case 10: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==planes){
		new vehid;
		switch(row){
			case 0: vehid = 592;
			case 1: vehid = 577;
			case 2: vehid = 511;
			case 3: vehid = 512;
			case 4: vehid = 593;
			case 5: vehid = 520;
			case 6: vehid = 553;
			case 7: vehid = 476;
			case 8: vehid = 519;
			case 9: vehid = 460;
			case 10: vehid = 513;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==helicopters){
		new vehid;
		switch(row){
			case 0: vehid = 548;
			case 1: vehid = 425;
			case 2: vehid = 417;
			case 3: vehid = 487;
			case 4: vehid = 488;
			case 5: vehid = 497;
			case 6: vehid = 563;
			case 7: vehid = 447;
			case 8: vehid = 469;
			case 9: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}

	if(Current==XWeapons){
		switch(row){
			case 0: { GivePlayerWeapon(playerid,24,500); }
			case 1: { GivePlayerWeapon(playerid,31,500); }
			case 2: { GivePlayerWeapon(playerid,26,500); }
			case 3: { GivePlayerWeapon(playerid,27,500); }
			case 4: { GivePlayerWeapon(playerid,28,500); }
			case 5: { GivePlayerWeapon(playerid,35,500); }
			case 6: { GivePlayerWeapon(playerid,38,1000); }
			case 7: { GivePlayerWeapon(playerid,34,500); }
			case 8: return ChangeMenu(playerid,Current,XWeaponsBig);
        	case 9: return ChangeMenu(playerid,Current,XWeaponsSmall);
        	case 10: return ChangeMenu(playerid,Current,XWeaponsMore);
        	case 11: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}

	if(Current==XWeaponsBig){
		switch(row){
			case 0: { GivePlayerWeapon(playerid,25,500);  }
			case 1: { GivePlayerWeapon(playerid,30,500); }
			case 2: { GivePlayerWeapon(playerid,33,500); }
			case 3: { GivePlayerWeapon(playerid,36,500); }
			case 4: { GivePlayerWeapon(playerid,37,500); }
			case 5: { GivePlayerWeapon(playerid,29,500); }
			case 6: { GivePlayerWeapon(playerid,32,1000); }
			case 7: return ChangeMenu(playerid,Current,XWeapons);
		}
		return TogglePlayerControllable(playerid,true);
	}

	if(Current==XWeaponsSmall){
		switch(row){
			case 0: { GivePlayerWeapon(playerid,22,500); }//9mm
			case 1: { GivePlayerWeapon(playerid,23,500); }//s9
			case 2: { GivePlayerWeapon(playerid,18,500); }// MC
			case 3: { GivePlayerWeapon(playerid,42,500); }//FE
			case 4: { GivePlayerWeapon(playerid,41,500); }//spraycan
			case 5: { GivePlayerWeapon(playerid,16,500); }//grenade
			case 6: { GivePlayerWeapon(playerid,8,500); }//Katana
			case 7: { GivePlayerWeapon(playerid,9,1000); }//chainsaw
			case 8: return ChangeMenu(playerid,Current,XWeapons);
		}
		return TogglePlayerControllable(playerid,true);
	}

	if(Current==XWeaponsMore){
		switch(row){
			case 0: SetPlayerSpecialAction(playerid, 2);
			case 1: GivePlayerWeapon(playerid,4,500);
			case 2: GivePlayerWeapon(playerid,14,500);
			case 3: GivePlayerWeapon(playerid,43,500);
			case 4: GivePlayerWeapon(playerid,7,500);
			case 5: GivePlayerWeapon(playerid,5,500);
			case 6: GivePlayerWeapon(playerid,2,1000);
			case 7: MaxAmmo(playerid);
			case 8: return ChangeMenu(playerid,Current,XWeapons);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LTele)
	{
        switch(row)
		{
			case 0: ChangeMenu(playerid,Current,LasVenturasMenu);
			case 1: ChangeMenu(playerid,Current,LosSantosMenu);
			case 2: ChangeMenu(playerid,Current,SanFierroMenu);
			case 3: ChangeMenu(playerid,Current,DesertMenu);
			case 4: ChangeMenu(playerid,Current,FlintMenu);
			case 5: ChangeMenu(playerid,Current,MountChiliadMenu);
			case 6: ChangeMenu(playerid,Current,InteriorsMenu);
			case 7: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return 1;
	}

    if(Current == LasVenturasMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,2037.0,1343.0,12.0); SetPlayerInterior(playerid,0); }// strip
			case 1: { SetPlayerPos(playerid,2163.0,1121.0,23); SetPlayerInterior(playerid,0); }// come a lot
			case 2: { SetPlayerPos(playerid,1688.0,1615.0,12.0); SetPlayerInterior(playerid,0); }// lv airport
			case 3: { SetPlayerPos(playerid,2503.0,2764.0,10.0); SetPlayerInterior(playerid,0); }// military fuel
			case 4: { SetPlayerPos(playerid,1418.0,2733.0,10.0); SetPlayerInterior(playerid,0); }// golf lv
			case 5: { SetPlayerPos(playerid,1377.0,2196.0,9.0); SetPlayerInterior(playerid,0); }// pitch match
			case 6: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LosSantosMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,2495.0,-1688.0,13.0); SetPlayerInterior(playerid,0); }// ganton
			case 1: { SetPlayerPos(playerid,1979.0,-2241.0,13.0); SetPlayerInterior(playerid,0); }// ls airport
			case 2: { SetPlayerPos(playerid,2744.0,-2435.0,15.0); SetPlayerInterior(playerid,0); }// docks
			case 3: { SetPlayerPos(playerid,1481.0,-1656.0,14.0); SetPlayerInterior(playerid,0); }// square
			case 4: { SetPlayerPos(playerid,1150.0,-2037.0,69.0); SetPlayerInterior(playerid,0); }// veradant bluffs
			case 5: { SetPlayerPos(playerid,425.0,-1815.0,6.0); SetPlayerInterior(playerid,0); }// santa beach
			case 6: { SetPlayerPos(playerid,1240.0,-744.0,95.0); SetPlayerInterior(playerid,0); }// mullholland
			case 7: { SetPlayerPos(playerid,679.0,-1070.0,49.0); SetPlayerInterior(playerid,0); }// richman
			case 8: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == SanFierroMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,-1990.0,137.0,27.0); SetPlayerInterior(playerid,0); } // sf station
			case 1: { SetPlayerPos(playerid,-1528.0,-206.0,14.0); SetPlayerInterior(playerid,0); }// sf airport
			case 2: { SetPlayerPos(playerid,-2709.0,198.0,4.0); SetPlayerInterior(playerid,0); }// ocean flats
			case 3: { SetPlayerPos(playerid,-2738.0,-295.0,6.0); SetPlayerInterior(playerid,0); }// avispa country club
			case 4: { SetPlayerPos(playerid,-1457.0,465.0,7.0); SetPlayerInterior(playerid,0); }// easter basic docks
			case 5: { SetPlayerPos(playerid,-1853.0,1404.0,7.0); SetPlayerInterior(playerid,0); }// esplanadae north
			case 6: { SetPlayerPos(playerid,-2620.0,1373.0,7.0); SetPlayerInterior(playerid,0); }// battery point
			case 7: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == DesertMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,416.0,2516.0,16.0); SetPlayerInterior(playerid,0); } // plane graveyard
			case 1: { SetPlayerPos(playerid,81.0,1920.0,17.0); SetPlayerInterior(playerid,0); }// area51
			case 2: { SetPlayerPos(playerid,-324.0,1516.0,75.0); SetPlayerInterior(playerid,0); }// big ear
			case 3: { SetPlayerPos(playerid,-640.0,2051.0,60.0); SetPlayerInterior(playerid,0); }// dam
			case 4: { SetPlayerPos(playerid,-766.0,1545.0,27.0); SetPlayerInterior(playerid,0); }// las barrancas
			case 5: { SetPlayerPos(playerid,-1514.0,2597.0,55.0); SetPlayerInterior(playerid,0); }// el qyebrados
			case 6: { SetPlayerPos(playerid,442.0,1427.0,9.0); SetPlayerInterior(playerid,0); }// actane springs
			case 7: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == FlintMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,-849.0,-1940.0,13.0);  SetPlayerInterior(playerid,0); }// lake
			case 1: { SetPlayerPos(playerid,-1107.0,-1619.0,76.0);  SetPlayerInterior(playerid,0); }// leafy hollow
			case 2: { SetPlayerPos(playerid,-1049.0,-1199.0,128.0);  SetPlayerInterior(playerid,0); }// the farm
			case 3: { SetPlayerPos(playerid,-1655.0,-2219.0,32.0);  SetPlayerInterior(playerid,0); }// shady cabin
			case 4: { SetPlayerPos(playerid,-375.0,-1441.0,25.0); SetPlayerInterior(playerid,0); }// flint range
			case 5: { SetPlayerPos(playerid,-367.0,-1049.0,59.0); SetPlayerInterior(playerid,0); }// beacon hill
			case 6: { SetPlayerPos(playerid,-494.0,-555.0,25.0); SetPlayerInterior(playerid,0); }// fallen tree
			case 7: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == MountChiliadMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,-2308.0,-1657.0,483.0);  SetPlayerInterior(playerid,0); }// chiliad jump
			case 1: { SetPlayerPos(playerid,-2331.0,-2180.0,35.0); SetPlayerInterior(playerid,0); }// bottom chiliad
			case 2: { SetPlayerPos(playerid,-2431.0,-1620.0,526.0);  SetPlayerInterior(playerid,0); }// highest point
			case 3: { SetPlayerPos(playerid,-2136.0,-1775.0,208.0);  SetPlayerInterior(playerid,0); }// chiliad path
			case 4: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == InteriorsMenu)
	{
        switch(row)
		{
			case 0: {	SetPlayerPos(playerid,386.5259, 173.6381, 1008.3828);	SetPlayerInterior(playerid,3); }
			case 1: {	SetPlayerPos(playerid,288.4723, 170.0647, 1007.1794);	SetPlayerInterior(playerid,3); }
			case 2: {	SetPlayerPos(playerid,372.5565, -131.3607, 1001.4922);	SetPlayerInterior(playerid,5); }
			case 3: {	SetPlayerPos(playerid,-1129.8909, 1057.5424, 1346.4141);	SetPlayerInterior(playerid,10); }
			case 4: {	SetPlayerPos(playerid,2233.9363, 1711.8038, 1011.6312);	SetPlayerInterior(playerid,1); }
			case 5: {	SetPlayerPos(playerid,2536.5322, -1294.8425, 1044.125);	SetPlayerInterior(playerid,2); }
			case 6: {	SetPlayerPos(playerid,1267.8407, -776.9587, 1091.9063);	SetPlayerInterior(playerid,5); }
  			case 7: {	SetPlayerPos(playerid,-1421.5618, -663.8262, 1059.5569);	SetPlayerInterior(playerid,4); }
   			case 8: {	SetPlayerPos(playerid,-1401.067, 1265.3706, 1039.8672);	SetPlayerInterior(playerid,16); }
   			case 9: {	SetPlayerPos(playerid,285.8361, -39.0166, 1001.5156);	SetPlayerInterior(playerid,1); }
    		case 10: {	SetPlayerPos(playerid,1727.2853, -1642.9451, 20.2254);	SetPlayerInterior(playerid,18); }
			case 11: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LWeather)
	{
		new adminname[MAX_PLAYER_NAME]; GetPlayerName(playerid, adminname, sizeof(adminname));
        switch(row)
		{
			case 0:	{	SetWeather(5);	PlayerPlaySound(playerid,1057,0.0,0.0,0.0);	CMDMessageToAdmins(playerid,"SETWEATHER");  format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado el Clima",adminname); SendClientMessageToAll(blue,string2); }
   			case 1:	{	SetWeather(19); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado el Clima",adminname); SendClientMessageToAll(blue,string2); }
			case 2:	{	SetWeather(8);  PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado el Clima",adminname); SendClientMessageToAll(blue,string2); }
			case 3:	{	SetWeather(20);	PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado el Clima",adminname); SendClientMessageToAll(blue,string2); }
			case 4:	{	SetWeather(9);  PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado el Clima",adminname); SendClientMessageToAll(blue,string2); }
			case 5:	{	SetWeather(16); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado el Clima",adminname); SendClientMessageToAll(blue,string2); }
			case 6:	{	SetWeather(45); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado el Clima",adminname); SendClientMessageToAll(blue,string2); }
			case 7:	{	SetWeather(44); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado el Clima",adminname); SendClientMessageToAll(blue,string2); }
			case 8:	{	SetWeather(22); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado el Clima",adminname); SendClientMessageToAll(blue,string2); }
			case 9:	{	SetWeather(11); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado el Clima",adminname); SendClientMessageToAll(blue,string2); }
			case 10: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LTuneMenu)
	{
        switch(row)
		{
			case 0:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1010); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,ColorAdmin,"Vehicle Component Added");	}
   			case 1:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1087); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,ColorAdmin,"Vehicle Component Added"); }
			case 2:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1081); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,ColorAdmin,"Vehicle Component Added");	}
			case 3: {	AddVehicleComponent(GetPlayerVehicleID(playerid),1078); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,ColorAdmin,"Vehicle Component Added");	}
			case 4:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1098); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,ColorAdmin,"Vehicle Component Added");	}
			case 5:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1074); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,ColorAdmin,"Vehicle Component Added");	}
			case 6:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1082); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,ColorAdmin,"Vehicle Component Added");	}
			case 7:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1085); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,ColorAdmin,"Vehicle Component Added");	}
			case 8:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1025); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,ColorAdmin,"Vehicle Component Added");	}
			case 9:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1077); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,ColorAdmin,"Vehicle Component Added");	}
			case 10: return ChangeMenu(playerid,Current,PaintMenu);
			case 11: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == PaintMenu)
	{
        switch(row)
		{
			case 0:	{ ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),0); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,ColorAdmin,"Vehicle Paint Changed To Paint Job 1"); }
			case 1:	{ ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,ColorAdmin,"Vehicle Paint Changed To Paint Job 2"); }
			case 2:	{ ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),2); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,ColorAdmin,"Vehicle Paint Changed To Paint Job 3"); }
			case 3:	{ ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,ColorAdmin,"Vehicle Paint Changed To Paint Job 4"); }
			case 4:	{ ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),4); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,ColorAdmin,"Vehicle Paint Changed To Paint Job 5"); }
			case 5:	{ ChangeVehicleColor(GetPlayerVehicleID(playerid),0,0); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,ColorAdmin,"Vehicle Paint Colour Changed To Black"); }
			case 6:	{ ChangeVehicleColor(GetPlayerVehicleID(playerid),1,1); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,ColorAdmin,"Vehicle Paint Colour Changed To White"); }
			case 7:	{ ChangeVehicleColor(GetPlayerVehicleID(playerid),79,158); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,ColorAdmin,"Vehicle Paint Colour Changed To Black"); }
			case 8:	{ ChangeVehicleColor(GetPlayerVehicleID(playerid),146,183); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,ColorAdmin,"Vehicle Paint Colour Changed To Black"); }
			case 9: return ChangeMenu(playerid,Current,LTuneMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LTime)
	{
		new adminname[MAX_PLAYER_NAME]; GetPlayerName(playerid, adminname, sizeof(adminname));
        switch(row)
		{
			case 0:	{ for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetWorldTime(7);	PlayerPlaySound(playerid,1057,0.0,0.0,0.0);	CMDMessageToAdmins(playerid,"LTIME MENU");	format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado el Tiempo",adminname); SendClientMessageToAll(blue,string2); }
   			case 1:	{ for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetWorldTime(12); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"LTIME MENU");	format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado el Tiempo",adminname); SendClientMessageToAll(blue,string2); }
			case 2:	{ for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetWorldTime(16);  PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"LTIME MENU");	format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado el Tiempo",adminname); SendClientMessageToAll(blue,string2); }
			case 3:	{ for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetWorldTime(20);	PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"LTIME MENU");	format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado el Tiempo",adminname); SendClientMessageToAll(blue,string2); }
			case 4:	{ for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetWorldTime(0);  PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"LTIME MENU");	format(string2,sizeof(string2),"{0000FF}[INFO]: {FF4000}El Administrador %s ha cambiado el Tiempo",adminname); SendClientMessageToAll(blue,string2); }
			case 5: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LCars)
	{
		new vehid;
        switch(row) {
			case 0: vehid = 451;//Turismo
			case 1: vehid = 568;//Bandito
			case 2: vehid = 539;//Vortex
			case 3: vehid = 522;//nrg
			case 4: vehid = 601;//s.w.a.t
			case 5: vehid = 425; //hunter
			case 6: vehid = 493;//jetmax
			case 7: vehid = 432;//rhino
			case 8: vehid = 444; //mt
			case 9: vehid = 447; //sea sparrow
			case 10: return ChangeMenu(playerid,Current,LCars2);
			case 11: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return SelectCar(playerid,vehid,Current);
	}

    if(Current == LCars2)
	{
		new vehid;
        switch(row) {
			case 0: vehid = 406;// dumper
			case 1: vehid = 564; //rc tank
			case 2: vehid = 441;//RC Bandit
			case 3: vehid = 464;// rc baron
			case 4: vehid = 501; //rc goblin
			case 5: vehid = 465; //rc raider
			case 6: vehid = 594; // rc cam
			case 7: vehid = 449; //tram
			case 8: return ChangeMenu(playerid,Current,LCars);
		}
		return SelectCar(playerid,vehid,Current);
	}

	return 1;
}

//==============================================================================
public OnPlayerExitedMenu(playerid)
{
    new Menu:Current = GetPlayerMenu(playerid);
    HideMenuForPlayer(Current,playerid);
    return TogglePlayerControllable(playerid,true);
}
//==============================================================================

ChangeMenu(playerid,Menu:oldmenu,Menu:newmenu)
{
	if(IsValidMenu(oldmenu)) {
		HideMenuForPlayer(oldmenu,playerid);
		ShowMenuForPlayer(newmenu,playerid);
	}
	return 1;
}

CloseMenu(playerid,Menu:oldmenu)
{
	HideMenuForPlayer(oldmenu,playerid);
	TogglePlayerControllable(playerid,1);
	return 1;
}
SelectCar(playerid,vehid,Menu:menu)
{
	CloseMenu(playerid,menu);
	SetCameraBehindPlayer(playerid);
	CarSpawner(playerid,vehid);
	return 1;
}
#endif

//==============================================================================
forward countdown();
public countdown()
{
	if(CountDown==6) GameTextForAll("~p~Comenzando...",1000,6);

	CountDown--;
	if(CountDown==0)
	{
		GameTextForAll("~g~GO~ r~!",1000,6);
		CountDown = -1;
		for(new i = 0; i < MAX_PLAYERS; i++) {
			TogglePlayerControllable(i,true);
			PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
		}
		return 0;
	}
	else
	{
		new text[7]; format(text,sizeof(text),"~w~%d",CountDown);
		for(new i = 0; i < MAX_PLAYERS; i++) {
			PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
			TogglePlayerControllable(i,false);
		}
	 	GameTextForAll(text,1000,6);
	}

	SetTimer("countdown",1000,0);
	return 0;
}

//==================== [ Jail & Freeze ]========================================

forward Jail1(player1);
public Jail1(player1)
{
	TogglePlayerControllable(player1,false);
	new Float:x, Float:y, Float:z;	GetPlayerPos(player1,x,y,z);
	SetPlayerCameraPos(player1,x+10,y,z+10);SetPlayerCameraLookAt(player1,x,y,z);
	SetTimerEx("Jail2",1000,0,"d",player1);
}

forward Jail2(player1);
public Jail2(player1)
{
	new Float:x, Float:y, Float:z; GetPlayerPos(player1,x,y,z);
	SetPlayerCameraPos(player1,x+7,y,z+5); SetPlayerCameraLookAt(player1,x,y,z);
	if(GetPlayerState(player1) == PLAYER_STATE_ONFOOT) SetPlayerSpecialAction(player1,SPECIAL_ACTION_HANDSUP);
	GameTextForPlayer(player1,"~r~Atrapado",3000,3);
	SetTimerEx("Jail3",1000,0,"d",player1);
}

forward Jail3(player1);
public Jail3(player1)
{
	new Float:x, Float:y, Float:z; GetPlayerPos(player1,x,y,z);
	SetPlayerCameraPos(player1,x+3,y,z); SetPlayerCameraLookAt(player1,x,y,z);
}

forward JailPlayer(player1);
public JailPlayer(player1)
{
	new RandomJail = random(6);
	if(RandomJail == 0){SetPlayerPos(player1, -2429.84473, -710.46161, 133.34726);}
	else if(RandomJail == 1){SetPlayerPos(player1, -2397.02222, -680.76733, 133.34726);}
	else if(RandomJail == 2){SetPlayerPos(player1, -2397.76440, -688.91748, 133.34726);}
	else if(RandomJail == 3){SetPlayerPos(player1, -2398.33008, -695.92950, 133.34726);}
	else if(RandomJail == 4){SetPlayerPos(player1, -2399.21704, -705.70197, 133.34726);}
	else if(RandomJail == 5){SetPlayerPos(player1, -2419.47729, -711.60034, 133.34726);}
	SetPlayerInterior(player1,0);
	SetPlayerVirtualWorld(player1,8);
	ResetPlayerWeapons(player1);
	TogglePlayerControllable(player1,true);
	SetCameraBehindPlayer(player1);
	JailTimer[player1] = SetTimerEx("JailRelease",PlayerInfo[player1][JailTime],0,"d",player1);
	PlayerInfo[player1][Jailed] = 1;
}

forward JailRelease(player1);
public JailRelease(player1)
{
	KillTimer( JailTimer[player1] );
	PlayerInfo[player1][JailTime] = 0;  PlayerInfo[player1][Jailed] = 0;
	SetPlayerInterior(player1,0);
	SetPlayerVirtualWorld(player1,0);
	SetPlayerPos(player1, 0.0, 0.0, 0.0);
	SpawnPlayer(player1);
	PlayerPlaySound(player1,1057,0.0,0.0,0.0);
	GameTextForPlayer(player1,"~g~Libre ~n~de la carcel",3000,3);
}

forward MutePlayer(player1);
public MutePlayer(player1)
{
	MuteTimer[player1] = SetTimerEx("MuteRelease",PlayerInfo[player1][MuteTime],0,"d",player1);
	PlayerInfo[player1][Muted] = 1;
}

forward MuteRelease(player1);
public MuteRelease(player1)
{
	KillTimer(MuteTimer[player1]);
	PlayerInfo[player1][MuteTime] = 0;
	PlayerInfo[player1][Muted] = 0;
	PlayerPlaySound(player1,1057,0.0,0.0,0.0);
	GameTextForPlayer(player1,"~g~Se Termino El Tiempo ~n~Estas Unmuteado!",3000,3);
}
//------------------------------------------------------------------------------
forward UnFreezeMe(player1);
public UnFreezeMe(player1)
{
	KillTimer( FreezeTimer[player1] );
	TogglePlayerControllable(player1,true);   PlayerInfo[player1][Frozen] = 0;
	PlayerPlaySound(player1,1057,0.0,0.0,0.0);	GameTextForPlayer(player1,"~g~Descongelado",3000,3);
}

//==============================================================================
forward RepairCar(playerid);
public RepairCar(playerid)
{
	if(IsPlayerInAnyVehicle(playerid)) SetVehiclePos(GetPlayerVehicleID(playerid),Pos[playerid][0],Pos[playerid][1],Pos[playerid][2]+0.5);
	SetVehicleZAngle(GetPlayerVehicleID(playerid), Pos[playerid][3]);
	SetCameraBehindPlayer(playerid);
}
//==============================================================================
//============================ [ Timers ]=======================================

forward PingKick();
public PingKick()
{
	if(ServerInfo[MaxPing] != 0)
	{
		for(new i=0; i<MAX_PLAYERS; i++)
		{
			PlayerInfo[i][pPing][PingPos] = GetPlayerPing(i);

		    if(GetPlayerPing(i) > ServerInfo[MaxPing])
			{
				if(PlayerInfo[i][PingCount] == 0) PlayerInfo[i][PingTime] = TimeStamp();

	   			PlayerInfo[i][PingCount]++;
				if(TimeStamp() - PlayerInfo[i][PingTime] > PING_TIMELIMIT)
				{
	    			PlayerInfo[i][PingTime] = TimeStamp();
					PlayerInfo[i][PingCount] = 1;
				}
				else if(PlayerInfo[i][PingCount] >= PING_MAX_EXCEEDS)
				{
				    new Sum, x;
					while (x < PING_MAX_EXCEEDS) {
						Sum += PlayerInfo[i][pPing][x];
						x++;
					}
					format(string2,sizeof(string2),"%s ha sido Kickeado del Server. Razón: Ping Alto [%d] | Máximo Permitido [%d] |", PlayerName2(i), GetPlayerPing(i),ServerInfo[MaxPing] );
  		    		SendClientMessageToAll(red,string2);
					SaveToFile("KickLog",string2);
					ShowPlayerDialog(i, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Revolucion Latina","{FFFFFF} Has sido Kickeado del Servidor \n\n{FF0000}Razón: {FFFFFF}Ping Alto \n\nFavor intente bajar su Ping, cierre programas q usen Internet, \nrevise su conección e intente nuevamente a entrar al Servidor.", "Aceptar", "") ;
					Kick(i);
				}
			}
			else if(GetPlayerPing(i) < 1 && ServerInfo[AntiBot] == 1)
		    {
				PlayerInfo[i][BotPing]++;
				if(PlayerInfo[i][BotPing] >= 3) BotCheck(i);
		    }
		    else
			{
				PlayerInfo[i][BotPing] = 0;
			}
		}
	}

	#if defined ANTI_MINIGUN
	new weap, ammo;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && PlayerInfo[i][pAdmin] == 0)
		{
			GetPlayerWeaponData(i, 7, weap, ammo);
			if(ammo > 1 && weap == 38) {
				format(string2,sizeof(string2),"[INFO]: El player %s [%d] tiene una minigun con %d municiones", PlayerName2(i),playerid,ammo); MessageToAdmins(yellow,string2);
			}
		}
	}
	#endif
}

//==============================================================================
forward GodUpdate();
public GodUpdate()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && PlayerInfo[i][God] == 1)
		{
			SetPlayerHealth(i,100000);
		}
		if(IsPlayerConnected(i) && PlayerInfo[i][GodCar] == 1 && IsPlayerInAnyVehicle(i))
		{
			SetVehicleHealth(GetPlayerVehicleID(i),10000);
			RepairVehicle(GetPlayerVehicleID(i));
		}
	}
}
//==========================VDColor=============================================
forward ColorVIP(playerid);
public ColorVIP(playerid)
{
	if(PlayerInfo[playerid][pVip] == 9)
	{
		if(ColorRandom[playerid] == 1)
		{
			new RandomColor = random(9);
			if(RandomColor == 0)
			{
				SetPlayerColor(playerid, 0xFF0000FF); // Rojo
			}
			else if(RandomColor == 1)
			{
				SetPlayerColor(playerid, 0x00FF00FF); // Verde
			}
			else if(RandomColor == 2)
			{
				SetPlayerColor(playerid, 0x0000FFFF); // Azul
			}
			else if(RandomColor == 3)
			{
				SetPlayerColor(playerid, 0xffff00ff); // Amarillo
			}
			else if(RandomColor == 4)
			{
				SetPlayerColor(playerid, 0x00ffffff); // Celeste
			}
			else if(RandomColor == 5)
			{
				SetPlayerColor(playerid, 0xffffffff); // Blanco
			}
			else if(RandomColor == 6)
			{
				SetPlayerColor(playerid, 0x1C1C1Cff); // Negro
			}
			else if(RandomColor == 7)
			{
				SetPlayerColor(playerid, 0x999999ff); // Gris
			}
            else if(RandomColor == 8)
			{
				SetPlayerColor(playerid, 0x8B4513FF); // Marron
			}
		}
	}
	return 1;
}
//==========================[ Server Info  ]====================================
forward ConnectedPlayers();
public ConnectedPlayers()
{
	new Connected;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) Connected++;
	return Connected;
}

forward JailedPlayers();
public JailedPlayers()
{
	new JailedCount;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Jailed] == 1) JailedCount++;
	return JailedCount;
}

forward FrozenPlayers();
public FrozenPlayers()
{
	new FrozenCount; for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Frozen] == 1) FrozenCount++;
	return FrozenCount;
}

forward MutedPlayers();
public MutedPlayers()
{
	new Count; for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Muted] == 1) Count++;
	return Count;
}

forward InVehCount();
public InVehCount()
{
	new InVeh; for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i)) InVeh++;
	return InVeh;
}

forward OnBikeCount();
public OnBikeCount()
{
	new BikeCount;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i)) {
		new LModel = GetVehicleModel(GetPlayerVehicleID(i));
		switch(LModel)
		{
			case 448,461,462,463,468,471,509,510,521,522,523,581,586:  BikeCount++;
		}
	}
	return BikeCount;
}

forward InCarCount();
public InCarCount()
{
	new PInCarCount;
	for(new i = 0; i < MAX_PLAYERS; i++) {
		if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i)) {
			new LModel = GetVehicleModel(GetPlayerVehicleID(i));
			switch(LModel)
			{
				case 448,461,462,463,468,471,509,510,521,522,523,581,586: {}
				default: PInCarCount++;
			}
		}
	}
	return PInCarCount;
}

forward AdminCount();
public AdminCount()
{
	new LAdminCount;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][pAdmin] >= 1)	LAdminCount++;
	return LAdminCount;
}

forward RconAdminCount();
public RconAdminCount()
{
	new rAdminCount;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IsPlayerAdmin(i)) rAdminCount++;
	return rAdminCount;
}

//==========================[ Remote Console ]==================================
forward PrintWarning(const string[]);
public PrintWarning(const string[])
{
    new str[128];
    print("\n\n>		WARNING:\n");
    format(str, sizeof(str), " El archivo %s no existe en la carpeta scriptfiles", string);
    print(str);
    print("\n Por favor cree el archivo necesario y reinicie el ladmin\n\n");
}
//============================[ Bot Check ]=====================================
forward BotCheck(playerid);
public BotCheck(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(GetPlayerPing(playerid) < 1 || GetPlayerPing(playerid) > 100000)
		{
			new ip[20];  GetPlayerIp(playerid,ip,sizeof(ip));
			format(string2,sizeof(string2),"BOT: %s ID:%d IP: %s PING: %d",PlayerName2(playerid),playerid,ip,GetPlayerPing(playerid));
			SaveToFile("BotKickLog",string2);
		    SaveToFile("KickLog",string2);
			printf("[ADMIN]: Posible BOT detectado [Kicked %s ~ ID:%d]", PlayerName2(playerid), playerid);
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Revolucion Latina","{FFFFFF} Has sido Kickeado del Servidor \n\n{FF0000}Razón: {FFFFFF}Posible BOT detectado", "Aceptar", "") ;
			SetTimerEx("KickearPlayer", 50, 0, "i", playerid);
		}
	}
}

//==============================================================================
forward PutAtPos(playerid);
public PutAtPos(playerid)
{
	if (dUserINT(PlayerName2(playerid)).("x")!=0) {
     	SetPlayerPos(playerid, float(dUserINT(PlayerName2(playerid)).("x")), float(dUserINT(PlayerName2(playerid)).("y")), float(dUserINT(PlayerName2(playerid)).("z")) );
 		SetPlayerInterior(playerid,	(dUserINT(PlayerName2(playerid)).("interior"))	);
	}
}

forward PutAtDisconectPos(playerid);
public PutAtDisconectPos(playerid)
{
	if (dUserINT(PlayerName2(playerid)).("x1")!=0) {
    	SetPlayerPos(playerid, float(dUserINT(PlayerName2(playerid)).("x1")), float(dUserINT(PlayerName2(playerid)).("y1")), float(dUserINT(PlayerName2(playerid)).("z1")) );
		SetPlayerInterior(playerid,	(dUserINT(PlayerName2(playerid)).("interior1"))	);
	}
}

TotalGameTime(playerid, &h=0, &m=0, &s=0)
{
    PlayerInfo[playerid][TotalTime] = ( (gettime() - PlayerInfo[playerid][ConnectTime]) + (PlayerInfo[playerid][hours]*60*60) + (PlayerInfo[playerid][mins]*60) + (PlayerInfo[playerid][secs]) );

    h = floatround(PlayerInfo[playerid][TotalTime] / 3600, floatround_floor);
    m = floatround(PlayerInfo[playerid][TotalTime] / 60,   floatround_floor) % 60;
    s = floatround(PlayerInfo[playerid][TotalTime] % 60,   floatround_floor);

    return PlayerInfo[playerid][TotalTime];
}

//==============================================================================
MaxAmmo(playerid)
{
	new slot, weap, ammo;
	for (slot = 0; slot < 14; slot++)
	{
    	GetPlayerWeaponData(playerid, slot, weap, ammo);
		if(IsValidWeapon(weap))
		{
		   	GivePlayerWeapon(playerid, weap, 99999);
		}
	}
	return 1;
}

//Para los cmds q no se puedan usar seguidamente
stock ListoT(playerid)
    {
        if(GetTickCount() - UsarCMDT[playerid] < 30000)
        return 1;

        return 0;
    }
    
stock cmdflood(playerid)
    {
        if(GetTickCount() - floodcmd[playerid] < 1000)
        return 1;

        return 0;
    }

stock PlayerName2(playerid) {
  new name[MAX_PLAYER_NAME];
  GetPlayerName(playerid, name, sizeof(name));
  return name;
}

stock pName(playerid)
{
  new name[MAX_PLAYER_NAME];
  GetPlayerName(playerid, name, sizeof(name));
  return name;
}

stock GetWeaponModel(weaponid)
{
        switch(weaponid)
        {
            case 1:
                return 331;

                case 2..8:
                    return weaponid+331;

        case 9:
                    return 341;

                case 10..15:
                        return weaponid+311;

                case 16..18:
                    return weaponid+326;

                case 22..29:
                    return weaponid+324;

                case 30,31:
                    return weaponid+325;

                case 32:
                    return 372;

                case 33..45:
                    return weaponid+324;

                case 46:
                    return 371;
        }
      return 0;
}
        
stock TimeStamp()
{
	new time = GetTickCount() / 1000;
	return time;
}

stock PlayerSoundForAll(SoundID)
{
	for(new i = 0; i < MAX_PLAYERS; i++) PlayerPlaySound(i, SoundID, 0.0, 0.0, 0.0);
}

stock IsValidWeapon(weaponid)
{
    if (weaponid > 0 && weaponid < 19 || weaponid > 21 && weaponid < 47) return 1;
    return 0;
}

stock E_Kick(player1)
{
return SetTimerEx("kicktimer", 50, false, "u", player1);
}

stock IsValidSkin(SkinID)
{
	if((SkinID == 0)||(SkinID == 7)||(SkinID >= 9 && SkinID <= 41)||(SkinID >= 43 && SkinID <= 64)||(SkinID >= 66 && SkinID <= 73)||(SkinID >= 75 && SkinID <= 85)||(SkinID >= 87 && SkinID <= 118)||(SkinID >= 120 && SkinID <= 148)||(SkinID >= 150 && SkinID <= 207)||(SkinID >= 209 && SkinID <= 264)||(SkinID >= 274 && SkinID <= 288)||(SkinID >= 290 && SkinID <= 299)) return true;
	else return false;
}

stock IsNumeric(string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}

stock AddAreaCheck(Float:x_min,Float:x_max,Float:y_min,Float:y_max) {
	AREACHECK_Coords[AREACHECK_Count][0]=x_min;
	AREACHECK_Coords[AREACHECK_Count][1]=x_max;
	AREACHECK_Coords[AREACHECK_Count][2]=y_min;
	AREACHECK_Coords[AREACHECK_Count][3]=y_max;
	AREACHECK_Count++;
	return AREACHECK_Count;
}

stock ReturnPlayerID(PlayerName[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(strfind(pName(i),PlayerName,true)!=-1) return i;
		}
	}
	return INVALID_PLAYER_ID;
}

GetVehicleModelIDFromName(vname[])
{
	for(new i = 0; i < 211; i++)
	{
		if ( strfind(VehicleNames[i], vname, true) != -1 )
			return i + 400;
	}
	return -1;
}

stock GetWeaponIDFromName(WeaponName[])
{
	if(strfind("molotov",WeaponName,true)!=-1) return 18;
	for(new i = 0; i <= 46; i++)
	{
		switch(i)
		{
			case 0,19,20,21,44,45: continue;
			default:
			{
				new name[32]; GetWeaponName(i,name,32);
				if(strfind(name,WeaponName,true) != -1) return i;
			}
		}
	}
	return -1;
}

stock DisableWord(const badword[], text[])
{
   	for(new i=0; i<256; i++)
   	{
		if (strfind(text[i], badword, true) == 0)
		{
			for(new a=0; a<256; a++)
			{
				if (a >= i && a < i+strlen(badword)) text[a]='*';
			}
		}
	}
}

argpos(const string[], idx = 0, sep = ' ')
{
    for(new i = idx, j = strlen(string); i < j; i++)
        if (string[i] == sep && string[i+1] != sep)
            return i+1;

    return -1;
}

//==============================================================================
forward MessageToAdminsT(const string[]);
public MessageToAdminsT(const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][pAdmin] >= 1) GameTextForPlayer(i,string,7000,3);
	}
	return 1;
}

forward MessageToAdminsD(color,const string[]);
public MessageToAdminsD(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][pAdmin] == 10) SendClientMessage(i, color, string);
	}
	return 1;
}

forward MessageToAdmins(color,const string[]);
public MessageToAdmins(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][pAdmin] >= 1) SendClientMessage(i, color, string);
	}
	return 1;
}

forward MessageToOwners(color,const string[]);
public MessageToOwners(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][pAdmin] >= 10) SendClientMessage(i, color, string);
	}
	return 1;
}

forward MessageToHighAdmins(color,const string[]);
public MessageToHighAdmins(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
    	new pame[MAX_PLAYERS];
    	GetPlayerName(i, pame, sizeof(pame));
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][pAdmin] >= 8) SendClientMessage(i, color, string);
	}
	return 1;
}

forward MessageToDuenos(color,const string[]);
public MessageToDuenos(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
    	new pame[MAX_PLAYERS];
    	GetPlayerName(i, pame, sizeof(pame));
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][pAdmin] == 10) SendClientMessage(i, color, string);
	}
	return 1;
}

forward MessageToVips(color,const string[]);
public MessageToVips(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1) if(PlayerInfo[i][pVip] >=1) SendClientMessage(i, color, string);
	}
	return 1;
}

stock CMDMessageToAdmins(playerid,command[])
{
	if(ServerInfo[AdminCmdMsg] == 0) return 1;
	new string[1000];
	new TxAdm[1000];
	switch(PlayerInfo[playerid][pAdmin])
	{
	case 0: TxAdm = "Normal";
	case 1: TxAdm = "Level 1";
	case 2: TxAdm = "Level 2";
	case 3: TxAdm = "Level 3";
	case 4: TxAdm = "Level 4";
	case 5: TxAdm = "Level 5";
	case 6: TxAdm = "Level 6";
	case 7: TxAdm = "Level 7";
	case 8: TxAdm = "Level 8";
	case 9: TxAdm = "Level 9";
	case 10: TxAdm = "Level 10";
	}
	GetPlayerName(playerid,string,sizeof(string));
	format(string,sizeof(string),"{FF0000}[INFO]: {FF99FF}El Administrador %s %s [%d] uso el comando {FFFFFF}%s",TxAdm,string,playerid,command);
	SaveToFile("AdminCommandLog",string);
	return MessageToAdmins(ColorAdmin,string);
}

stock CMDMessageToVips(playerid,command[])
{
	if(ServerInfo[AdminCmdMsg] == 0) return 1;
	new string[1000];
	new Vip[100];
	switch(PlayerInfo[playerid][pVip])
	{
	case 1: Vip = "Silver";
	case 2: Vip = "Gold";
	case 3: Vip = "Premium";
	case 4: Vip = "Platinum";
	case 5: Vip = "Esmeralda";
	case 6: Vip = "Diamond";
	case 7: Vip = "Extremo";
	case 8: Vip = "Legendario";
	case 9: Vip = "Dios";
	}
	GetPlayerName(playerid,string,sizeof(string));
	format(string,sizeof(string),"{0000FF}[INFO]: {FF80C0}El USER VIP %s %s [%d] Ha Usado El Comando {99FF00}%s",Vip,string,playerid,command);
	SaveToFile("VipCommandLog",string);
	return MessageToAdmins(0xFF9900FF,string);
}
//==============================================================================
SavePlayer(playerid)
{
   	dUserSetINT(PlayerName2(playerid)).("money",GetPlayerMoney(playerid));
   	dUserSetINT(PlayerName2(playerid)).("Banka",PlayerInfo[playerid][Banka]);
   	dUserSetINT(PlayerName2(playerid)).("kills",PlayerInfo[playerid][Kills]);
   	dUserSetINT(PlayerName2(playerid)).("deaths",PlayerInfo[playerid][Deaths]);
   	dUserSetINT(PlayerName2(playerid)).("nivel",PlayerInfo[playerid][Nivel]);
   	dUserSetINT(PlayerName2(playerid)).("experiencia",PlayerInfo[playerid][Experiencia]);
   	dUserSetINT(PlayerName2(playerid)).("RaceScore",PlayerInfo[playerid][ScoreRace]);
   	dUserSetINT(PlayerName2(playerid)).("ScoreDueloWin",PlayerInfo[playerid][ScoreDueloWin]);
   	dUserSetINT(PlayerName2(playerid)).("ScoreDueloLose",PlayerInfo[playerid][ScoreDueloLose]);
   	dUserSetINT(PlayerName2(playerid)).("Warns",PlayerInfo[playerid][Warnings]);
   	dUserSetINT(PlayerName2(playerid)).("Kicks",PlayerInfo[playerid][Kicks]);
   	dUserSetINT(PlayerName2(playerid)).("TieneTrans",PlayerInfo[playerid][Transformer]);
   	dUserSetINT(PlayerName2(playerid)).("TieneLinerunner",PlayerInfo[playerid][TieneLinerunner]);
   	dUserSetINT(PlayerName2(playerid)).("TieneBullet",PlayerInfo[playerid][TieneBullet]);
   	dUserSetINT(PlayerName2(playerid)).("TieneBanshee",PlayerInfo[playerid][TieneBanshee]);
   	dUserSetINT(PlayerName2(playerid)).("TienePatriot",PlayerInfo[playerid][TienePatriot]);
   	dUserSetINT(PlayerName2(playerid)).("TieneMonster",PlayerInfo[playerid][TieneMonster]);
   	dUserSetINT(PlayerName2(playerid)).("TieneBuffalo",PlayerInfo[playerid][TieneBuffalo]);
   	dUserSetINT(PlayerName2(playerid)).("TieneInfernus",PlayerInfo[playerid][TieneInfernus]);
   	dUserSetINT(PlayerName2(playerid)).("AdmWarn",PlayerInfo[playerid][AdminWarn]);

	new h, m, s;
    TotalGameTime(playerid, h, m, s);

	dUserSetINT(PlayerName2(playerid)).("hours", h);
	dUserSetINT(PlayerName2(playerid)).("minutes", m);
	dUserSetINT(PlayerName2(playerid)).("seconds", s);

   	new Float:x,Float:y,Float:z, interior;
   	GetPlayerPos(playerid,x,y,z);	interior = GetPlayerInterior(playerid);
    dUserSetINT(PlayerName2(playerid)).("x1",floatround(x));
	dUserSetINT(PlayerName2(playerid)).("y1",floatround(y));
	dUserSetINT(PlayerName2(playerid)).("z1",floatround(z));
    dUserSetINT(PlayerName2(playerid)).("interior1",interior);

	new weap1, ammo1, weap2, ammo2, weap3, ammo3, weap4, ammo4, weap5, ammo5, weap6, ammo6;
	GetPlayerWeaponData(playerid,2,weap1,ammo1);// hand gun
	GetPlayerWeaponData(playerid,3,weap2,ammo2);//shotgun
	GetPlayerWeaponData(playerid,4,weap3,ammo3);// SMG
	GetPlayerWeaponData(playerid,5,weap4,ammo4);// AK47 / M4
	GetPlayerWeaponData(playerid,6,weap5,ammo5);// rifle
	GetPlayerWeaponData(playerid,7,weap6,ammo6);// rocket launcher
   	dUserSetINT(PlayerName2(playerid)).("weap1",weap1); dUserSetINT(PlayerName2(playerid)).("weap1ammo",ammo1);
  	dUserSetINT(PlayerName2(playerid)).("weap2",weap2);	dUserSetINT(PlayerName2(playerid)).("weap2ammo",ammo2);
  	dUserSetINT(PlayerName2(playerid)).("weap3",weap3);	dUserSetINT(PlayerName2(playerid)).("weap3ammo",ammo3);
	dUserSetINT(PlayerName2(playerid)).("weap4",weap4); dUserSetINT(PlayerName2(playerid)).("weap4ammo",ammo4);
  	dUserSetINT(PlayerName2(playerid)).("weap5",weap5);	dUserSetINT(PlayerName2(playerid)).("weap5ammo",ammo5);
	dUserSetINT(PlayerName2(playerid)).("weap6",weap6); dUserSetINT(PlayerName2(playerid)).("weap6ammo",ammo6);

	new	Float:health;	GetPlayerHealth(playerid, Float:health);
	new	Float:armour;	GetPlayerArmour(playerid, Float:armour);
	new year,month,day;	getdate(year, month, day);
	new strdate[20];	format(strdate, sizeof(strdate), "%d.%d.%d",day,month,year);
	new file[256]; 		format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName2(playerid)) );

	dUserSetINT(PlayerName2(playerid)).("health",floatround(health));
    dUserSetINT(PlayerName2(playerid)).("armour",floatround(armour));
	dini_Set(file,"LastOn",strdate);
	dUserSetINT(PlayerName2(playerid)).("TimesOnServer",(dUserINT(PlayerName2(playerid)).("TimesOnServer"))+1);
}

//==============================================================================
#if defined USE_MENUS
DestroyAllMenus()
{
	DestroyMenu(LVehicles); DestroyMenu(twodoor); DestroyMenu(fourdoor); DestroyMenu(fastcar); DestroyMenu(Othercars);
	DestroyMenu(bikes); DestroyMenu(boats); DestroyMenu(planes); DestroyMenu(helicopters ); DestroyMenu(LTime);
	DestroyMenu(XWeapons); DestroyMenu(XWeaponsBig); DestroyMenu(XWeaponsSmall); DestroyMenu(XWeaponsMore);
	DestroyMenu(LWeather); DestroyMenu(LTuneMenu); DestroyMenu(PaintMenu); DestroyMenu(LCars); DestroyMenu(LCars2);
	DestroyMenu(LTele); DestroyMenu(LasVenturasMenu); DestroyMenu(LosSantosMenu); DestroyMenu(SanFierroMenu);
	DestroyMenu(LMainMenu); DestroyMenu(DesertMenu); DestroyMenu(FlintMenu); DestroyMenu(MountChiliadMenu); DestroyMenu(InteriorsMenu);
	DestroyMenu(AdminEnable); DestroyMenu(AdminDisable);
}
#endif

//==============================================================================
#if defined DISPLAY_CONFIG
stock ConfigInConsole()
{
	print(" ________ Configuracion ___________\n");
	print(" __________ Chat & Messages ______");
	if(ServerInfo[AntiSwear] == 0) print("  Anti Swear:              Disabled "); else print("  Anti Swear:             Enabled ");
	if(ServerInfo[AntiSpam] == 0)  print("  Anti Spam:               Disabled "); else print("  Anti Spam:              Enabled ");
	if(ServerInfo[ReadCmds] == 0)  print("  Read Cmds:               Disabled "); else print("  Read Cmds:              Enabled ");
	if(ServerInfo[ReadPMs] == 0)   print("  Read PMs:                Disabled "); else print("  Read PMs:               Enabled ");
	if(ServerInfo[ConnectMessages] == 0) print("  Connect Messages:        Disabled "); else print("  Connect Messages:       Enabled ");
  	if(ServerInfo[AdminCmdMsg] == 0) print("  Admin Cmd Messages:     Disabled ");  else print("  Admin Cmd Messages:     Enabled ");
	if(ServerInfo[ReadPMs] == 0)   print("  Anti capital letters:    Disabled \n"); else print("  Anti capital letters:   Enabled \n");
	print(" __________ Skins ________________");
	if(ServerInfo[AdminOnlySkins] == 0) print("  AdminOnlySkins:         Disabled "); else print("  AdminOnlySkins:         Enabled ");
	printf("  Admin Skin 1 is:         %d", ServerInfo[AdminSkin] );
	printf("  Admin Skin 2 is:         %d\n", ServerInfo[AdminSkin2] );
	print(" ________ Server Protection ______");
	if(ServerInfo[AntiBot] == 0) print("  Anti Bot:                Disabled "); else print("  Anti Bot:                Enabled ");
	if(ServerInfo[NameKick] == 0) print("  Bad Name Kick:           Disabled\n"); else print("  Bad Name Kick:           Enabled\n");
	print(" __________ Ping Control _________");
	if(ServerInfo[MaxPing] == 0) print("  Ping Control:            Disabled"); else print("  Ping Control:            Enabled");
	printf("  Max Ping:                %d\n", ServerInfo[MaxPing] );
	print(" __________ Players ______________");
	print(" __________ Other ________________");
	printf("  Max Admin Level:         %d", ServerInfo[MaxAdminLevel] );
	if(ServerInfo[Locked] == 0) print("  Server Locked:           No"); else print("  Server Locked:           Yes");
	if(ServerInfo[AutoLogin] == 0) print("  Auto Login:             Disabled\n"); else print("  Auto Login:              Enabled\n");
}
#endif

//=====================[ Configuration ] =======================================
stock UpdateConfig()
{
	new file[256], File:file2, string[100]; format(file,sizeof(file),"ladmin/config/Config.ini");
	ForbiddenWordCount = 0;
	BadNameCount = 0;
	BadPartNameCount = 0;
	for(new i; i != MAX_VEHICLES; i++) if(!EsVehiculoOcupado(i)) SetVehicleToRespawn(i);

    if(!dini_Exists("ladmin/config/TempBans.txt")) {dini_Create("ladmin/config/TempBans.txt");}
	if(!dini_Exists("ladmin/config/aka.txt")) dini_Create("ladmin/config/aka.txt");

	if(!dini_Exists(file))
	{
		dini_Create(file);
		print("\n >Archivo de configuracion creado exitosamente");
	}

	if(!dini_Isset(file,"MaxPing")) dini_IntSet(file,"MaxPing",800);
	if(!dini_Isset(file,"ReadPms")) dini_IntSet(file,"ReadPMs",1);
	if(!dini_Isset(file,"ReadCmds")) dini_IntSet(file,"ReadCmds",1);
	if(!dini_Isset(file,"MaxAdminLevel")) dini_IntSet(file,"MaxAdminLevel",10);
	if(!dini_Isset(file,"AdminOnlySkins")) dini_IntSet(file,"AdminOnlySkins",0);
	if(!dini_Isset(file,"AdminSkin")) dini_IntSet(file,"AdminSkin",217);
	if(!dini_Isset(file,"AdminSkin2")) dini_IntSet(file,"AdminSkin2",214);
	if(!dini_Isset(file,"AntiBot")) dini_IntSet(file,"AntiBot",1);
	if(!dini_Isset(file,"AntiSpam")) dini_IntSet(file,"AntiSpam",1);
	if(!dini_Isset(file,"AntiSwear")) dini_IntSet(file,"AntiSwear",1);
	if(!dini_Isset(file,"NameKick")) dini_IntSet(file,"NameKick",1);
 	if(!dini_Isset(file,"PartNameKick")) dini_IntSet(file,"PartNameKick",1);
	if(!dini_Isset(file,"NoCaps")) dini_IntSet(file,"NoCaps",0);
	if(!dini_Isset(file,"Locked")) dini_IntSet(file,"Locked",0);
	if(!dini_Isset(file,"SaveMoney")) dini_IntSet(file,"SaveMoney",1);
	if(!dini_Isset(file,"ConnectMessages")) dini_IntSet(file,"ConnectMessages",1);
	if(!dini_Isset(file,"AdminCmdMessages")) dini_IntSet(file,"AdminCmdMessages",1);
	if(!dini_Isset(file,"AutoLogin")) dini_IntSet(file,"AutoLogin",0);
	if(!dini_Isset(file,"MaxMuteWarnings")) dini_IntSet(file,"MaxMuteWarnings",3);
	if(!dini_Isset(file,"MustLogin")) dini_IntSet(file,"MustLogin",1);
	if(!dini_Isset(file,"MustRegister")) dini_IntSet(file,"MustRegister",0);

	if(dini_Exists(file))
	{
		ServerInfo[MaxPing] = dini_Int(file,"MaxPing");
		ServerInfo[ReadPMs] = dini_Int(file,"ReadPMs");
		ServerInfo[ReadCmds] = dini_Int(file,"ReadCmds");
		ServerInfo[MaxAdminLevel] = dini_Int(file,"MaxAdminLevel");
		ServerInfo[AdminOnlySkins] = dini_Int(file,"AdminOnlySkins");
		ServerInfo[AdminSkin] = dini_Int(file,"AdminSkin");
		ServerInfo[AdminSkin2] = dini_Int(file,"AdminSkin2");
		ServerInfo[AntiBot] = dini_Int(file,"AntiBot");
		ServerInfo[AntiSpam] = dini_Int(file,"AntiSpam");
		ServerInfo[AntiSwear] = dini_Int(file,"AntiSwear");
		ServerInfo[NameKick] = dini_Int(file,"NameKick");
		ServerInfo[PartNameKick] = dini_Int(file,"PartNameKick");
		ServerInfo[NoCaps] = dini_Int(file,"NoCaps");
		ServerInfo[Locked] = dini_Int(file,"Locked");
		ServerInfo[GiveMoney] = dini_Int(file,"SaveMoney");
		ServerInfo[ConnectMessages] = dini_Int(file,"ConnectMessages");
		ServerInfo[AdminCmdMsg] = dini_Int(file,"AdminCmdMessages");
		ServerInfo[AutoLogin] = dini_Int(file,"AutoLogin");
		ServerInfo[MaxMuteWarnings] = dini_Int(file,"MaxMuteWarnings");
		ServerInfo[MustLogin] = dini_Int(file,"MustLogin");
		ServerInfo[MustRegister] = dini_Int(file,"MustRegister");
		print("\n -Configuracion LadminD2 Cargada Exitosamente");
	}

	//forbidden names
	if((file2 = fopen("ladmin/config/ForbiddenNames.cfg",io_read)))
	{
		while(fread(file2,string))
		{
		    for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == '\n' || string[i] == '\r') string[i] = '\0';
            BadNames[BadNameCount] = string;
            BadNameCount++;
		}
		fclose(file2);	printf(" -%d Nicks Bloqueados", BadNameCount);
	}
	
	//TEMPBAN
    if (!fexist("ladmin/config/TempBans.ban"))
    {
    new File:open = fopen("ladmin/config/TempBans.ban",io_write);
    if (open) fclose(open);
    }
    
	//forbidden part of names
	if((file2 = fopen("ladmin/config/ForbiddenPartNames.cfg",io_read)))
	{
		while(fread(file2,string))
		{
		    for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == '\n' || string[i] == '\r') string[i] = '\0';
            BadPartNames[BadPartNameCount] = string;
            BadPartNameCount++;
		}
		fclose(file2);	printf(" -%d Tags Bloqueados", BadPartNameCount);
	}

	//forbidden words
	if((file2 = fopen("ladmin/config/ForbiddenWords.cfg",io_read)))
	{
		while(fread(file2,string))
		{
		    for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == '\n' || string[i] == '\r') string[i] = '\0';
            ForbiddenWords[ForbiddenWordCount] = string;
            ForbiddenWordCount++;
		}
		fclose(file2);	printf(" -%d Palabras censuradas", ForbiddenWordCount);
	}
}
//==============================================================================
public OnRconLoginAttempt(ip[], password[], success)
{
    if(!success)
    {
        new playersIP[17], playerid;

        for(; playerid < MAX_PLAYERS; playerid++)
        {
            GetPlayerIp(playerid, playersIP, 17);
            if(!strcmp(ip, playersIP))
            {
                break;
            }
        }

        rconAttempts[playerid]++;

        if(rconAttempts[playerid] >= 1)
        {
            Ban(playerid);
        }
    }

    return 1;
}
//------------------------------------------------------------------------------
public ImpulsarSaltos(playerid)
{
   	if(IsPlayerConnected(playerid) && SaltarMas[playerid] > 0)
   	{
		new Float:x,Float:y,Float:z;
		GetPlayerVelocity(playerid,x,y,z);
		if(z < 0) return Saltos[playerid] = 0;
		SetPlayerVelocity(playerid,x,y,z+z);
		Saltos[playerid]++;
		if(Saltos[playerid] < MAXIMOS_METROS)
		{
			SetTimerEx("ImpulsarSaltos",100,0,"d",playerid);
		}
		else if(Saltos[playerid] == MAXIMOS_METROS)
		{
			Saltos[playerid] = 0;
		}
	}
	return 1;
}

//=====================[ SAVING DATA ] =========================================

forward SaveToFile(filename[],text[]);
public SaveToFile(filename[],text[])
{
	#if defined SAVE_LOGS
	new File:LAdminfile, filepath[256], year,month,day, hour,minute,second;
	getdate(year,month,day); gettime(hour,minute,second);

	format(filepath,sizeof(filepath),"ladmin/logs/%s.txt",filename);
	LAdminfile = fopen(filepath,io_append);
	format(string2,sizeof(string2),"[%d.%d.%d %d:%d:%d] %s\r\n",day,month,year,hour,minute,second,text);
	fwrite(LAdminfile,string2);
	fclose(LAdminfile);
	#endif

	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
    new PlayerColors[100] = {
    0xE600FF88,0x00E1FF88,0x20B2AA88,0xDC143C88,0x6495ED88,0xf0e68c88,0x77889988,0xFF149388,0xF4A46088,0xEE82EE88,0xFFD72088,
    0x89951388,0x4949A088,0x148b8b88,0x14ff7f88,0x556b2f88,0x0FD9FA88,0x10DC2988,0x53408188,0x0495CD88,0xEF6CE888,0xBD34DA88,
    0x247C1B88,0x0C8E5D88,0x635B0388,0xCB7ED388,0x65ADEB88,0x5C1ACC88,0xF2F85388,0x11F89188,0x7B39AA88,0x53EB1088,0x54137D88,
    0x27522288,0xF09F5B88,0x3D0A4F88,0x22F76788,0xD6303488,0x9A698088,0xDFB93588,0x3793FA88,0x90239D88,0xE9AB2F88,0xAF2FF388,
    0x057F9488,0xB9851988,0x388EEA88,0x02815188,0xA5504388,0x0DE01888,0x93AB1C88,0x95BAF088,0x36997688,0x18F71F88,0x4B898788,
    0x491B9E88,0x829DC788,0xBCE63588,0xCEA6DF88,0x20D4AD88,0x2D74FD88,0x3C1C0D88,0x12D6D488,0x48C00088,0x2A51E288,0xE3AC1288,
    0xFC42A888,0x2FC82788,0x1A30BF88,0xB740C288,0x42ACF588,0x2FD9DE88,0xFAFB7188,0x05D1CD88,0xC471BD88,0x94436E88,0xC1F7EC88,
    0xCE79EE88,0xBD1EF288,0x93B7E488,0x3214AA88,0x184D3B88,0xAE4B9988,0x7E49D788,0x4C436E88,0xFA24CC88,0xCE76BE88,0xA04E0A88,
    0x9F945C88,0xDCDE3D88,0x10C9C588,0x70524D88,0x0BE47288,0x8A2CD788,0x6152C288,0xCF72A988,0xE5933888,0xEEDC2D88,0xD8C76288,
    0x3FE65C88
    };
	SetPlayerColor(playerid, PlayerColors[random(100)]);
	TextDrawHideForPlayer(playerid, BARRAINICIO1);
	TextDrawHideForPlayer(playerid, BARRAINICIO2);
	TextDrawHideForPlayer(playerid, TEXTOINICIO1);
	TextDrawHideForPlayer(playerid, TEXTOINICIO3);
    ramped[playerid] = 0;
    TogglePlayerClock(playerid,1);

    if(ServerInfo[AdminOnlySkins] == 1)
	{
		if( (GetPlayerSkin(playerid) == ServerInfo[AdminSkin]) || (GetPlayerSkin(playerid) == ServerInfo[AdminSkin2]) )
		{
			if(PlayerInfo[playerid][pAdmin] >= 1)
				GameTextForPlayer(playerid,"~b~Bienvenido~n~~w~Administrador",3000,1);
			else {
				GameTextForPlayer(playerid,"~r~Este skin es para~n~Administradores~n~únicamente",4000,1);
				SetTimerEx("DelayKillPlayer", 2500,0,"d",playerid);
				return 1;
			}
		}
	}


	if(HoraFelizRL == 1)
	{
	SendClientMessage(playerid, COLOR_ROJO,"{FF0000}Revolucion {FFFFFF}Latina: Hora Feliz {00FF00}ON");
    ResetPlayerWeapons(playerid);
    GameTextForPlayer(playerid,"~w~Hora Feliz ~b~Activada", 3000, 3);
	PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	GivePlayerWeapon(playerid, 38, 500);
    GivePlayerWeapon(playerid, 36, 500);
	GivePlayerWeapon(playerid, 16, 500);
	}
	
    SaltosBici[playerid] = 0;
    return 1;
}
//--------------------------------------------------------------------------------
stock JugadorEnBici(playerid)
{
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 509 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 510) return 1;
	}
	return 0;
}
//--------------------------------------------------------------------------------
forward SaltosBiciTimer(playerid);
public SaltosBiciTimer(playerid)
{
	if(IsPlayerConnected(playerid) && JugadorEnBici(playerid))
	{
		if(SaltosBici[playerid] == 2)
		{
			new Float:x,Float:y,Float:z;
			GetVehicleVelocity(GetPlayerVehicleID(playerid),x,y,z);
			if(z < 0) return SaltosBici[playerid] = 1;
			SetVehicleVelocity(GetPlayerVehicleID(playerid),x,y,z+(z*4));
			SetTimerEx("SaltosBiciTimer",4000,0,"d",playerid);
			SaltosBici[playerid] = 3;
		}
		else if(SaltosBici[playerid] == 3) SaltosBici[playerid] = 1;
	}
	return 1;
}
//====================================================================================
stock TempBanCheck(playerid)
{
new str[1000];
new ip[15];
new File:Sfile;
new load[4][32];
new ban_day, ban_month, ban_year, ban_ip[15];
GetPlayerIp(playerid, ip, sizeof ip);
new year, month, day;
getdate(year, month, day);
Sfile = fopen("ladmin/config/TempBans.ban",io_read);
if (Sfile)
{
while (fread(Sfile, str, sizeof str))
{
split(str, load, '|');

ban_day = strval(load[0]);
ban_month = strval(load[1]);
ban_year = strval(load[2]);
strmid(ban_ip, load[3], 0, strlen(load[3])-1, 15);
if (!(year >= ban_year && month >= ban_month && day >= ban_day) && !strcmp(ban_ip, ip, true))
{
format(str, sizeof str, "[INFO]: El usuario %s Está Baneado Temporalmente del Servidor Hasta El: [%d/%d/%d]. ||  A Continuación Dicho usuario será Kickeado", pname, ban_day, ban_month, ban_year);
SendClientMessageToAll(red, str);
return SetTimerEx("KickearPlayer", 500, 0, "i", playerid);
}
}
}
return true;
}

split(const strsrc[], strdest[][], delimiter)
{
new i, li,aNum,len;
while(i <= strlen(strsrc))
{
if(strsrc[i]==delimiter || i==strlen(strsrc))
{
len = strmid(strdest[aNum], strsrc, li, i, 128);
strdest[aNum][len] = 0;
li = i+1;
aNum++;
}
i++;
}
return aNum;
}

stock IsMonth31(month)
{
switch (month)
{
case 1: return 1;
case 3: return 1;
case 5: return 1;
case 7: return 1;
case 8: return 1;
case 10: return 1;
case 12: return 1;
default: return 0;
}
return 0;
}

stock IsMonth29(year)
{
new y = 2000;
for(new i = 4; i < 3000; i += 4) if ((y+i) == year) return 1;
return 0;
}
stock strtok2(const string[], &idx)
{
new length = strlen(string);
while ((idx < length) && (string[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[128];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = string[idx];
idx++;
}
result[idx - offset] = EOS;
return result;
}

stock ReturnUser(text[], playerid = INVALID_PLAYER_ID)
{
        new pos = 0;
        while (text[pos] < 0x21)
        {
                if (text[pos] == 0) return INVALID_PLAYER_ID;
                pos++;
        }
        new userid = INVALID_PLAYER_ID;
        if (IsNumeric(text[pos]))
        {
                userid = strval(text[pos]);
                if (userid >=0 && userid < MAX_PLAYERS)
                {
                        if(!IsPlayerConnected(userid))
                        {
                                userid = INVALID_PLAYER_ID;
                        }
                        else
                        {
                                return userid;
                        }
                }
        }
        new len = strlen(text[pos]);
        new conteo = 0;
        new name[MAX_PLAYER_NAME];
        for (new i = 0; i < MAX_PLAYERS; i++)
        {
                if (IsPlayerConnected(i))
                {
                        GetPlayerName(i, name, sizeof (name));
                        if (strcmp(name, text[pos], true, len) == 0)
                        {
                                if (len == strlen(name))
                                {
                                        return i;
                                }
                                else
                                {
								        conteo++;
                                        userid = i;
                                }
                        }
                }
        }
        if (conteo != 1)
        {
                if (playerid != INVALID_PLAYER_ID)
                {
                        if (conteo)
                        {
                        }
                        else
                        {
                        }
                }
                userid = INVALID_PLAYER_ID;
        }
        return userid;
}

forward SaveIn(filename[],text[]);
public SaveIn(filename[],text[])
{
new File:Lfile;
new filepath[256];
new string[256];
new year,month,day;
new hour,minute,second;

getdate(year,month,day);
gettime(hour,minute,second);
format(filepath,sizeof(filepath),"ladmin/logs/%s.txt",filename);
Lfile = fopen(filepath,io_append);
format(string,sizeof(string),"[%02d/%02d/%02d | %02d:%02d:%02d] %s ",day,month,year,hour,minute,second,text);
fwrite(Lfile,string);
fclose(Lfile);
return 1;
}
//Para los cmds q no se puedan usar seguidamente
stock Ya(playerid)
    {
        if(GetTickCount() - UsarNombre[playerid] < 30000)
        return 1;

        return 0;
    }
//-------------------------------------------------------------------------------
stock YaPM(playerid)
    {
        if(GetTickCount() - APM[playerid] < 5000)
        return 1;

        return 0;
    }
//-------------------------------------------------------------------------------
stock ReportYa(playerid)
    {
        if(GetTickCount() - UsarReport[playerid] < 20000)
        return 1;

        return 0;
    }
//-------------------------------------------------------------------------------
stock Listo(playerid)
    {
        if(GetTickCount() - UsarCMD[playerid] < 300000)
        return 1;

        return 0;
    }
//==
stock SetPlayerVip(playerid)
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
	new SuScore, archivo[256];
	SuScore=GetPlayerScore(playerid);
	if(90000 < SuScore >= 90000)
	{
		if(PlayerInfo[playerid][pVip] < 8)
		{
			GameTextForPlayer(playerid,"~r~>> ~b~Felicidades! Vip ~y~~h~Legendario ~r~<<", 2000, 3);
			format(archivo, 256, "ladmin/users/%s.sav", PlayerName2(playerid));
            dini_IntSet(archivo, "AccountType", 8);
			PlayerInfo[playerid][pVip] = 8;
			SendClientMessage(playerid,0x33AA33AA,"Tú cuenta ahora es vip 'LEGENDARIO'");
			SavePlayer(playerid);
		}
		return 0;
	}
		else if(15000 < SuScore >= 15000 )
	{
		if(PlayerInfo[playerid][pVip] < 7)
		{
			GameTextForPlayer(playerid,"~r~>> ~b~Felicidades! vip ~y~~h~Extremo ~r~<<", 2000, 3);
			format(archivo, 256, "ladmin/users/%s.sav", PlayerName2(playerid));
            dini_IntSet(archivo, "AccountType", 7);
			PlayerInfo[playerid][pVip] = 7;
			SendClientMessage(playerid,0x33AA33AA,"Tú cuenta ahora es vip 'EXTREMO'");
			SavePlayer(playerid);
		}
		return 0;
	}
	else if(10000 < SuScore >= 10000 )
	{
		if(PlayerInfo[playerid][pVip] < 6)
		{
			GameTextForPlayer(playerid,"~r~>> ~b~Felicidades! vip ~y~~h~Diamond ~r~<<", 2000, 3);
			format(archivo, 256, "ladmin/users/%s.sav", PlayerName2(playerid));
            dini_IntSet(archivo, "AccountType", 6);
			PlayerInfo[playerid][pVip] = 6;
			SendClientMessage(playerid,0x33AA33AA,"Tú cuenta ahora es vip 'DIAMOND'");
			SavePlayer(playerid);
		}
		return 0;
	}
	else if(7000 < SuScore >= 7000 )
	{
		if(PlayerInfo[playerid][pVip] < 5)
		{
			GameTextForPlayer(playerid,"~r~>> ~b~Felicidades! vip ~y~~h~Platinum ~r~<<", 2000, 3);
			format(archivo, 256, "ladmin/users/%s.sav", PlayerName2(playerid));
            dini_IntSet(archivo, "AccountType", 5);
			PlayerInfo[playerid][pVip] = 5;
			SendClientMessage(playerid,0x33AA33AA,"Tú cuenta ahora es vip 'PLATINUM'");
			SavePlayer(playerid);
		}
		return 0;
	}
	else if(5000 < SuScore >= 5000 )
	{
		if(PlayerInfo[playerid][pVip] < 4)
		{
			GameTextForPlayer(playerid,"~r~>> ~b~Felicidades! vip ~y~~h~Esmeralda ~r~<<", 2000, 3);
			format(archivo, 256, "ladmin/users/%s.sav", PlayerName2(playerid));
            dini_IntSet(archivo, "AccountType", 4);
			PlayerInfo[playerid][pVip] = 4;
			SendClientMessage(playerid,0x33AA33AA,"Tú cuenta ahora es vip 'ESMERALDA'");
			SavePlayer(playerid);
		}
		return 0;
	}
	else if(3500 < SuScore >= 3500 )
	{
		if(PlayerInfo[playerid][pVip] < 3)
		{
			GameTextForPlayer(playerid,"~r~>> ~b~Felicidades! vip ~y~~h~premium ~r~<<", 2000, 3);
			format(archivo, 256, "ladmin/users/%s.sav", PlayerName2(playerid));
            dini_IntSet(archivo, "AccountType", 3);
			PlayerInfo[playerid][pVip] = 3;
			SendClientMessage(playerid,0x33AA33AA,"Tú cuenta ahora es vip 'PREMIUM'");
			SavePlayer(playerid);
		}
		return 0;
	}
	else if(2500 < SuScore >= 2500 )
	{
		if(PlayerInfo[playerid][pVip] < 2)
		{
			GameTextForPlayer(playerid,"~r~>> ~b~Felicidades!, VIP ~y~~h~gold ~r~<<", 2000, 3);
			format(archivo, 256, "ladmin/users/%s.sav", PlayerName2(playerid));
        	dini_IntSet(archivo, "AccountType", 2);
			PlayerInfo[playerid][pVip] = 2;
			SendClientMessage(playerid,0x33AA33AA,"Tú cuenta ahora es vip 'GOLD'");
			SavePlayer(playerid);
		}
		return 0;
	}
	else if(SuScore >= 1000 )
	{
		if(PlayerInfo[playerid][pVip] < 1)
		{
			GameTextForPlayer(playerid,"~r~>> ~b~Felicidades! Vip ~y~~h~silver ~r~<<", 2000, 3);
			format(archivo, 256, "ladmin/users/%s.sav", PlayerName2(playerid));
            dini_IntSet(archivo, "AccountType", 1);
			PlayerInfo[playerid][pVip] = 1;
			SendClientMessage(playerid,0x33AA33AA,"Tú cuenta Ahora es Vip 'SILVER'");
			SavePlayer(playerid);
		}
		return 0;
	}
	}
	return 0;
}
//====================SISTEMA DE CONTEO=========================
forward Nr5(playerid);
public Nr5(playerid)
{
   for(new i = 0; i < MAX_PLAYERS; i++)
   {
       PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
   }
   GameTextForAll("~r~5!", 1000, 4);
   SetTimerEx("Nr4", 1000, 0, "d", playerid);
   return 1;
}

forward Nr4(playerid);
public Nr4(playerid)
{
   for(new i = 0; i < MAX_PLAYERS; i++)
   {
       PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
   }
   GameTextForAll("~w~4!", 1000, 4);
   SetTimerEx("Nr3", 1000, 0, "d", playerid);
   return 1;
}

forward Nr3(playerid);
public Nr3(playerid)
{
   for(new i = 0; i < MAX_PLAYERS; i++)
   {
       PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
   }
   GameTextForAll("~r~3!", 1000, 4);
   SetTimerEx("Nr2", 1000, 0, "d", playerid);
   return 1;
}

forward Nr2(playerid);
public Nr2(playerid)
{
   for(new i = 0; i < MAX_PLAYERS; i++)
   {
       PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
   }
   GameTextForAll("~w~2!", 1000, 4);
   SetTimerEx("Nr1", 1000, 0, "d", playerid);
   return 1;
}

forward Nr1(playerid);
public Nr1(playerid)
{
   for(new i = 0; i < MAX_PLAYERS; i++)
   {
       PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
   }
   GameTextForAll("~r~1!", 1000, 4);
   SetTimerEx("NrYa", 1000, 0, "d", playerid);
   return 1;
}

forward NrYa(playerid);
public NrYa(playerid)
{
   for(new i = 0; i < MAX_PLAYERS; i++)
   {
       PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
   }
   GameTextForAll("~w~Ya~r~ya~w~ya~r~!", 1000, 4);
   Iniciado = 0;
   return 1;
}

forward VoteTimer(playerid);
public VoteTimer(playerid)
{
	new TempPlayerCount = PlayerCount;
	TempPlayerCount /= 2;
	if(Votes > TempPlayerCount)
	{
		format(string2, sizeof(string2), "[INFO]: {FFFFFF}%s [%d] Ha sido Kickeado del Servidor. [Razón: VoteKick]",Name(playerid), playerid);
		SendClientMessageToAll(red, string2);
		ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Revolucion Latina","{FFFFFF} Has sido Kickeado del Servidor \n\n{FF0000}Razón: {FFFFFF}VoteKick", "Aceptar", "") ;
		SetTimerEx("KickearPlayer", 50, 0, "i", playerid);
	}
	else
	{
	    format(string2, sizeof(string2), "El Player %s no fue Kickeado, porque no había suficientes Votos.", Name(playerid));
	    SendClientMessageToAll(yellow, string2);
	}
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
	    Voted[i] = 0;
	}
	Votes = 0;
	VoteKick = 0;
	AutorVote[playerid] = 0;
	return 1;
}

forward WaitT(playerid);
public WaitT(playerid)
{
	Wait[playerid] = 0;
	return 1;
}

stock Name(playerid)
{
	new plname[24];
    GetPlayerName(playerid, plname, sizeof(plname));
    return plname;
}

stock DetectarSpam(SPAM[])
{
    new SSPAM;
    new CUENTAP,CUENTAN,CUENTAW,CUENTADP,CUENTAGB;
	for(SSPAM = 0; SSPAM < strlen(SPAM); SSPAM ++)
	{
	    if(SPAM[SSPAM] == '.') CUENTAP ++; //Cuenta los Puntos
	    if(SPAM[SSPAM] == '0' || SPAM[SSPAM] == '1' || SPAM[SSPAM] == '2' || SPAM[SSPAM] == '3' || SPAM[SSPAM] == '4' || SPAM[SSPAM] == '5' || SPAM[SSPAM] == '6' || SPAM[SSPAM] == '7' || SPAM[SSPAM] == '8' || SPAM[SSPAM] == '9') CUENTAN ++; //Cuenta los Numeros
	    if(SPAM[SSPAM] == ':') CUENTADP ++; //Cuenta los ":"
	    if(SPAM[SSPAM] == '_') CUENTAGB ++; //Cuenta los "_"
	}
 	if(CUENTAP >= 4 && CUENTAN >= 4) return 1;
 	if(CUENTAW >= 3) return 1;
 	if(CUENTAN >= 8) return 1;
 	if(CUENTAGB >= 2 && CUENTAN >= 3) return 1;
 	if(strfind(SPAM, ".com", true) != -1 || strfind(SPAM, ".com.ar", true) != -1 || strfind(SPAM, ".org", true) != -1 || strfind(SPAM, "www.", true) != -1 || strfind(SPAM, ".net", true) != -1 || strfind(SPAM, ".es", true) != -1 || strfind(SPAM, ".tk", true) != -1) return 1;
 	if(CUENTADP >= 1 && CUENTAN >= 4) return 1;
 	return 0;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(CPProgess[playerid] == TotalCP -1)
	{
		new
		    TimeStamp2,
		    TotalRaceTime,
		    rFile[256],
		    pName2[MAX_PLAYER_NAME],
			rTime[3],
			Prize[2],
			TempTotalTime,
			TempTime[3]
		;
		Position++;
		GetPlayerName(playerid, pName2, sizeof(pName2));
		TimeStamp2 = GetTickCount();
		TotalRaceTime = TimeStamp2 - RaceTick;
		ConvertTime(var, TotalRaceTime, rTime[0], rTime[1], rTime[2]);
		switch(Position)
		{
		    case 1: Prize[0] = (random(random(5000)) + 10000), Prize[1] = 10;
		    case 2: Prize[0] = (random(random(4500)) + 9000), Prize[1] = 9;
		    case 3: Prize[0] = (random(random(4000)) + 8000), Prize[1] = 8;
		    case 4: Prize[0] = (random(random(3500)) + 7000), Prize[1] = 7;
		    case 5: Prize[0] = (random(random(3000)) + 6000), Prize[1] = 6;
		    case 6: Prize[0] = (random(random(2500)) + 5000), Prize[1] = 5;
		    case 7: Prize[0] = (random(random(2000)) + 4000), Prize[1] = 4;
		    case 8: Prize[0] = (random(random(1500)) + 3000), Prize[1] = 3;
		    case 9: Prize[0] = (random(random(1000)) + 2000), Prize[1] = 2;
		    default: Prize[0] = random(random(1000)), Prize[1] = 1;
		}
		format(string2, sizeof(string2), "{FFFFFF}[CARRERA]: %s {00FF00}ha terminado en la posición {FF0000}%d°", pName2, Position);
		SendClientMessageToAll(-1, string2);
		format(string2, sizeof(string2), "{FFFFFF}[CARRERA]: Tiempo Final: {00EEFF}%d:%d.%d {FFFFFF}* Premio: {0EEFFF}$%d {FFFFFF}y {00EEFF}+%d {FFFFFF}de Score Race", rTime[0], rTime[1], rTime[2], Prize[0], Prize[1]);
		SendClientMessageToAll(-1, string2);
		if(FinishCount <= 5)
		{
			format(rFile, sizeof(rFile), "/ladmin/rRaceSystem/%s.RRACE", RaceName);
		    format(string2, sizeof(string2), "BestRacerTime_%d", TimeProgress);
		    TempTotalTime = dini_Int(rFile, string2);
		    ConvertTime(var1, TempTotalTime, TempTime[0], TempTime[1], TempTime[2]);
		    if(TotalRaceTime <= dini_Int(rFile, string2) || TempTotalTime == 0)
		    {
		        dini_IntSet(rFile, string2, TotalRaceTime);
				format(string2, sizeof(string2), "BestRacer_%d", TimeProgress);
		        if(TempTotalTime != 0) format(string2, sizeof(string2), "[CARRERA]: \"%s\" rompió el record de \"%s\" con \"%d\" segundos más rápido en la \"%d\"!", pName2, dini_Get(rFile, string2), -(rTime[1] - TempTime[1]), TimeProgress+1);
				else format(string2, sizeof(string2), "[CARRERA]: \"%s\" rompió un nuevo record en la \"%d\"' posición!", pName2, TimeProgress+1);
				SendClientMessageToAll(green, string2);
				format(string2, sizeof(string2), "BestRacer_%d", TimeProgress);
				dini_Set(rFile, string2, pName2);
				TimeProgress++;
		    }
		}
		#if defined USE_STATS
		FinishCount++;
		GivePlayerMoney(playerid, Prize[0]);
		PlayerInfo[playerid][ScoreRace]=PlayerInfo[playerid][ScoreRace]+ Prize[1];
		#endif
        SavePlayer(playerid);
        ActualizarInformacion(playerid);
		DisablePlayerRaceCheckpoint(playerid);
		CPProgess[playerid]++;
		if(FinishCount >= JoinCount) return StopRace();
    }
	else
	{
		CPProgess[playerid]++;
		CPCoords[CPProgess[playerid]][3]++;
		RacePosition[playerid] = floatround(CPCoords[CPProgess[playerid]][3], floatround_floor);
	    SetCP(playerid, CPProgess[playerid], CPProgess[playerid]+1, TotalCP, RaceType);
	    PlayerPlaySound(playerid, 1137, 0.0, 0.0, 0.0);
   		new TimeStamp2, TotalRaceTime, rTime[3];
		TimeStamp2 = GetTickCount();
		TotalRaceTime = TimeStamp2 - RaceTick;
		ConvertTime(var, TotalRaceTime, rTime[0], rTime[1], rTime[2]);
   		format(string2, sizeof(string2), "{FFFFFF}[CARRERA]: {00FF00}Tiempo Actual: {00EEFF}%d:%d.%d", rTime[0], rTime[1], rTime[2]);
		SendClientMessage(playerid, -1, string2);
	}
    return 1;
}

function LoadRaceNames()
{
	new
	    rNameFile[64]
	;
	format(rNameFile, sizeof(rNameFile), "/ladmin/rRaceSystem/RaceNames/RaceNames.txt");
	TotalRaces = dini_Int(rNameFile, "TotalRaces");
	Loop(x, TotalRaces)
	{
	    format(string2, sizeof(string2), "Race_%d", x), strmid(RaceNames[x], dini_Get(rNameFile, string2), 0, 20, sizeof(RaceNames));
	    printf(">> Loaded Races: %s", RaceNames[x]);
	}
	return 1;
}


function LoadRace(playerid, rName[])
{
	if(AceleracionBrutal[playerid] == true) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Sacate la /velocidad para hacer este Evento/Carrera!");
	if(SEVENTO == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}Hay un Evento o Carrera en Progreso!");
	new
		rFile[256]
	;
	format(rFile, sizeof(rFile), "/ladmin/rRaceSystem/%s.RRACE", rName);
	if(!dini_Exists(rFile)) return SendClientMessage(playerid,red, "<!> El nombre de la Carrera no se encuentra en la base de datos"),  SendClientMessage(playerid,orange, "<!> Puedes usar /racenames para ver las Carreras disponibles."), printf("Race \"%s\" no encontrada!", rName);
	strmid(RaceName, rName, 0, strlen(rName), sizeof(RaceName));
	RaceVehicle = dini_Int(rFile, "vModel");
	RaceType = dini_Int(rFile, "rType");
	TotalCP = dini_Int(rFile, "TotalCP");

	#if DEBUG_RACE == 1
	printf("VehicleModel: %d", RaceVehicle);
	printf("RaceType: %d", RaceType);
	printf("TotalCheckpoints: %d", TotalCP);
	#endif

	Loop(x, 2)
	{
		format(string2, sizeof(string2), "vPosX_%d", x), RaceVehCoords[x][0] = dini_Float(rFile, string2);
		format(string2, sizeof(string2), "vPosY_%d", x), RaceVehCoords[x][1] = dini_Float(rFile, string2);
		format(string2, sizeof(string2), "vPosZ_%d", x), RaceVehCoords[x][2] = dini_Float(rFile, string2);
		format(string2, sizeof(string2), "vAngle_%d", x), RaceVehCoords[x][3] = dini_Float(rFile, string2);
		#if DEBUG_RACE == 1
		printf("VehiclePos %d: %f, %f, %f, %f", x, RaceVehCoords[x][0], RaceVehCoords[x][1], RaceVehCoords[x][2], RaceVehCoords[x][3]);
		#endif
	}
	Loop(x, TotalCP)
	{
 		format(string2, sizeof(string2), "CP_%d_PosX", x), CPCoords[x][0] = dini_Float(rFile, string2);
 		format(string2, sizeof(string2), "CP_%d_PosY", x), CPCoords[x][1] = dini_Float(rFile, string2);
 		format(string2, sizeof(string2), "CP_%d_PosZ", x), CPCoords[x][2] = dini_Float(rFile, string2);
 		#if DEBUG_RACE == 1
 		printf("RaceCheckPoint %d: %f, %f, %f", x, CPCoords[x][0], CPCoords[x][1], CPCoords[x][2]);
 		#endif
	}
	Position = 0;
	FinishCount = 0;
	JoinCount = 0;
	Loop(x, 2) PlayersCount[x] = 0;
	Joined[playerid] = true;
	DisableRemoteVehicleCollisions(playerid, 1);
	CountAmount = COUNT_DOWN_TILL_RACE_START;
	RaceTime = MAX_RACE_TIME;
	RaceBusy = 0x01;
	TimeProgress = 0;
	SEVENTO = 1;
	SetupRaceForPlayer(playerid);
	CMDMessageToAdmins(playerid,"RLEVENTOS");
	CountTimer = SetTimer("CountTillRace", 999, 1);
    for(new i = 0; i < GetMaxPlayers(); i ++)
    {
    StopAudioStreamForPlayer(i);
	new RACESONGRL=random(3);
	if (RACESONGRL==0) {PlayAudioStreamForPlayer(i, "http://www.dropbox.com/s/9i3cfz3qu1lifzq/Evento%20de%20carrera.mp3?dl=1");}
	else if (RACESONGRL==1) {PlayAudioStreamForPlayer(i, "http://www.dropbox.com/s/9i3cfz3qu1lifzq/Evento%20de%20carrera.mp3?dl=1");}
	else if (RACESONGRL==2) {PlayAudioStreamForPlayer(i, "http://www.dropbox.com/s/9i3cfz3qu1lifzq/Evento%20de%20carrera.mp3?dl=1");}
	}
	return 1;
}

function SetCP(playerid, PrevCP, NextCP, MaxCP, Type)
{
	if(Type == 0)
	{
		if(NextCP == MaxCP) SetPlayerRaceCheckpoint(playerid, 1, CPCoords[PrevCP][0], CPCoords[PrevCP][1], CPCoords[PrevCP][2], CPCoords[NextCP][0], CPCoords[NextCP][1], CPCoords[NextCP][2], RACE_CHECKPOINT_SIZE);
			else SetPlayerRaceCheckpoint(playerid, 0, CPCoords[PrevCP][0], CPCoords[PrevCP][1], CPCoords[PrevCP][2], CPCoords[NextCP][0], CPCoords[NextCP][1], CPCoords[NextCP][2], RACE_CHECKPOINT_SIZE);
	}
	else if(Type == 3)
	{
		if(NextCP == MaxCP) SetPlayerRaceCheckpoint(playerid, 4, CPCoords[PrevCP][0], CPCoords[PrevCP][1], CPCoords[PrevCP][2], CPCoords[NextCP][0], CPCoords[NextCP][1], CPCoords[NextCP][2], RACE_CHECKPOINT_SIZE);
			else SetPlayerRaceCheckpoint(playerid, 3, CPCoords[PrevCP][0], CPCoords[PrevCP][1], CPCoords[PrevCP][2], CPCoords[NextCP][0], CPCoords[NextCP][1], CPCoords[NextCP][2], RACE_CHECKPOINT_SIZE);
	}
	return 1;
}

function SetupRaceForPlayer(playerid)
{
	#if defined RACE_IN_OTHER_WORLD
	SetPlayerVirtualWorld(playerid, 10);
	#endif
	CPProgess[playerid] = 0;
	TogglePlayerControllable(playerid, false);
	ramped[playerid] = 1;
	CPCoords[playerid][3] = 0;
	SetCP(playerid, CPProgess[playerid], CPProgess[playerid]+1, TotalCP, RaceType);
	if(IsOdd(playerid)) Index2 = 1;
	    else Index2 = 0;

	switch(Index2)
	{
		case 0:
		{
		    if(PlayersCount[0] == 1)
		    {
				RaceVehCoords[0][0] -= (6 * floatsin(-RaceVehCoords[0][3], degrees));
		 		RaceVehCoords[0][1] -= (6 * floatcos(-RaceVehCoords[0][3], degrees));
		   		CreatedRaceVeh[playerid] = CreateVehicle(RaceVehicle, RaceVehCoords[0][0], RaceVehCoords[0][1], RaceVehCoords[0][2]+2, RaceVehCoords[0][3], random(126), random(126), (60 * 60));
				SetPlayerPos(playerid, RaceVehCoords[0][0], RaceVehCoords[0][1], RaceVehCoords[0][2]+2);
				SetVehicleHealth(CreatedRaceVeh[playerid], 7500);
				SetPlayerFacingAngle(playerid, RaceVehCoords[0][3]);
				#if defined RACE_IN_OTHER_WORLD
				SetVehicleVirtualWorld(CreatedRaceVeh[playerid], 10) && PutPlayerInVehicle(playerid, CreatedRaceVeh[playerid], 0);
				#else
				PutPlayerInVehicle(playerid, CreatedRaceVeh[playerid], 0);
				#endif
				AddVehicleComponent(CreatedRaceVeh[playerid], 1010) && PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
				Camera(playerid, RaceVehCoords[0][0], RaceVehCoords[0][1], RaceVehCoords[0][2], RaceVehCoords[0][3], 20);
			}
		}
		case 1:
 		{
 		    if(PlayersCount[1] == 1)
 		    {
				RaceVehCoords[1][0] -= (6 * floatsin(-RaceVehCoords[1][3], degrees));
		 		RaceVehCoords[1][1] -= (6 * floatcos(-RaceVehCoords[1][3], degrees));
		   		CreatedRaceVeh[playerid] = CreateVehicle(RaceVehicle, RaceVehCoords[1][0], RaceVehCoords[1][1], RaceVehCoords[1][2]+2, RaceVehCoords[1][3], random(126), random(126), (60 * 60));
				SetPlayerPos(playerid, RaceVehCoords[1][0], RaceVehCoords[1][1], RaceVehCoords[1][2]+2);
				SetVehicleHealth(CreatedRaceVeh[playerid], 7500);
				SetPlayerFacingAngle(playerid, RaceVehCoords[1][3]);
				#if defined RACE_IN_OTHER_WORLD
				SetVehicleVirtualWorld(CreatedRaceVeh[playerid], 10) && PutPlayerInVehicle(playerid, CreatedRaceVeh[playerid], 0);
				#else
				PutPlayerInVehicle(playerid, CreatedRaceVeh[playerid], 0);
				#endif
				AddVehicleComponent(CreatedRaceVeh[playerid], 1010) && PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
				Camera(playerid, RaceVehCoords[1][0], RaceVehCoords[1][1], RaceVehCoords[1][2], RaceVehCoords[1][3], 20);
    		}
 		}
	}
	switch(Index2)
	{
	    case 0:
		{
			if(PlayersCount[0] != 1)
			{
		   		CreatedRaceVeh[playerid] = CreateVehicle(RaceVehicle, RaceVehCoords[0][0], RaceVehCoords[0][1], RaceVehCoords[0][2]+2, RaceVehCoords[0][3], random(126), random(126), (60 * 60));
				SetPlayerPos(playerid, RaceVehCoords[0][0], RaceVehCoords[0][1], RaceVehCoords[0][2]+2);
				SetPlayerFacingAngle(playerid, RaceVehCoords[0][3]);
				#if defined RACE_IN_OTHER_WORLD
				SetVehicleVirtualWorld(CreatedRaceVeh[playerid], 10) && PutPlayerInVehicle(playerid, CreatedRaceVeh[playerid], 0);
				#else
				PutPlayerInVehicle(playerid, CreatedRaceVeh[playerid], 0);
				#endif
				AddVehicleComponent(CreatedRaceVeh[playerid], 1010) && PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
				Camera(playerid, RaceVehCoords[0][0], RaceVehCoords[0][1], RaceVehCoords[0][2], RaceVehCoords[0][3], 20);
			    PlayersCount[0] = 1;
		    }
	    }
	    case 1:
	    {
			if(PlayersCount[1] != 1)
			{
		   		CreatedRaceVeh[playerid] = CreateVehicle(RaceVehicle, RaceVehCoords[1][0], RaceVehCoords[1][1], RaceVehCoords[1][2]+2, RaceVehCoords[1][3], random(126), random(126), (60 * 60));
				SetPlayerPos(playerid, RaceVehCoords[1][0], RaceVehCoords[1][1], RaceVehCoords[1][2]+2);
				SetPlayerFacingAngle(playerid, RaceVehCoords[1][3]);
				#if defined RACE_IN_OTHER_WORLD
				SetVehicleVirtualWorld(CreatedRaceVeh[playerid], 10) && PutPlayerInVehicle(playerid, CreatedRaceVeh[playerid], 0);
				#else
				PutPlayerInVehicle(playerid, CreatedRaceVeh[playerid], 0);
				#endif
				AddVehicleComponent(CreatedRaceVeh[playerid], 1010) && PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
				Camera(playerid, RaceVehCoords[1][0], RaceVehCoords[1][1], RaceVehCoords[1][2], RaceVehCoords[1][3], 20);
				PlayersCount[1] = 1;
		    }
   		}
	}
	if(JoinCount == 1) format(string2, sizeof(string2), "", RaceName, CPProgess[playerid], TotalCP, TimeConvert(RaceTime));
		else format(string2, sizeof(string2), "", RaceName, CPProgess[playerid], TotalCP, TimeConvert(RaceTime), RacePosition[playerid], JoinCount);

	JoinCount++;
	return 1;
}

forward CountTillEvento(playerid);
public CountTillEvento(playerid)
{
    format(string2,sizeof(string2),"~r~Nuevo Evento!~n~~w~El Evento ~r~\"%s\" ~w~Empieza en %d Segundos~n~Use ~r~/irevento ~w~Para Entrar!",EventInfo[Nome],CountAmountEvento);
    TextDrawSetString(Textdrawrace,string2);
    EnviarComandoRace2(playerid,"Irevento");
    TextDrawShowForAll(Textdrawrace);
    TextDrawShowForAll(Textdrawrace2);
    TextDrawShowForAll(Textdrawrace3);
    TextDrawShowForAll(Textdrawrace4);
    TextDrawShowForAll(Textdrawrace5);
	if(CountAmountEvento == 0)
	{
		EventInfo[Cerrado] = 1;
		TextDrawHideForAll(Textdrawrace);
		TextDrawHideForAll(Textdrawrace2);
		TextDrawHideForAll(Textdrawrace3);
		TextDrawHideForAll(Textdrawrace4);
		TextDrawHideForAll(Textdrawrace5);
		KillTimer(CountTimerEvento);
		foreach(Player, i)
		{
			if(PlayerInfoE[i][NoEvento] == 0)
		    {
				format(string2,sizeof(string2), "[INFO]: Ud ya no puede unirse al Evento, Pues ya ha Comenzado!");
				SendClientMessage(i,red, string2);
			}
		}
	}
	return CountAmountEvento--;
}

forward CountTillRace(playerid);
public CountTillRace(playerid)
{
    format(string2,sizeof(string2),"~r~Nueva Carrera!~n~~w~La Carrera ~r~\"%s\" ~w~Empieza en %d Segundos~n~Use ~r~/Unirme ~w~Para Entrar!",RaceName,CountAmount);
    TextDrawSetString(Textdrawrace,string2);
    EnviarComandoRace2(playerid,"Unirme");
    TextDrawShowForAll(Textdrawrace);
    TextDrawShowForAll(Textdrawrace2);
    TextDrawShowForAll(Textdrawrace3);
    TextDrawShowForAll(Textdrawrace4);
    TextDrawShowForAll(Textdrawrace5);
	if(CountAmount == 0)
	{
		TextDrawHideForAll(Textdrawrace);
		TextDrawHideForAll(Textdrawrace2);
		TextDrawHideForAll(Textdrawrace3);
		TextDrawHideForAll(Textdrawrace4);
		TextDrawHideForAll(Textdrawrace5);
		KillTimer(CountTimer);
		StartRace();
		foreach(Player, i)
		{
			if(Joined[i] == false)
		    {
				format(string2,sizeof(string2), "[INFO]: Ud ya no puede unirse a la Carrera, Pues ya ha Comenzado!");
				SendClientMessage(i,red, string2);
			}
		}
	}
	return CountAmount--;
}

function StartRace()
{
	ForEach(i, MAX_PLAYERS)
	{
	    if(Joined[i] == true)
	    {
            TogglePlayerControllable(i, true);
	        PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
  			GameTextForPlayer(i, "~g~GO GO GO", 2000, 5);
  			PlayerInfo[i][GodCar] = 0;
			SetCameraBehindPlayer(i);
	    }
	}
	rCounter = SetTimer("RaceCounter", 900, 1);
	RaceTick = GetTickCount();
	RaceStarted = 1;
	KillTimer(CountTimer);
	return 1;
}

function StopRace()
{
	KillTimer(rCounter);
	RaceStarted = 0;
	RaceTick = 0;
	RaceBusy = 0x00;
	JoinCount = 0;
	FinishCount = 0;
    TimeProgress = 0;
    SEVENTO = 0;

	ForEach(i, MAX_PLAYERS)
	{
	    if(Joined[i] == true)
	    {
	    	DisablePlayerRaceCheckpoint(i);
	    	DestroyVehicle(CreatedRaceVeh[i]);
	    	Joined[i] = false;
	    	PlayerInfo[i][GodCar] = 0;
	    	ramped[i] = 0;
			CPProgess[i] = 0;
			KillTimer(InfoTimer[i]);
			#if defined RACE_IN_OTHER_WORLD
			SetPlayerVirtualWorld(i, 0);
			DisableRemoteVehicleCollisions(i, 0);
			#endif
		}
	}
	return 1;
}

function RaceCounter()
{
	if(RaceStarted == 1)
	{
		RaceTime--;
		if(JoinCount <= 0)
		{
			StopRace();
			SendClientMessageToAll(red, "[CARRERA]: {FFFFFF}Carrera terminada. No queda nadie en la Carrera!");
		}
	}
	if(RaceTime <= 0)
	{
	    StopRace();
	}
	return 1;
}

function Camera(playerid, Float:X, Float:Y, Float:Z, Float:A, Mul)
{
	SetPlayerCameraLookAt(playerid, X, Y, Z);
	SetPlayerCameraPos(playerid, X + (Mul * floatsin(-A, degrees)), Y + (Mul * floatcos(-A, degrees)), Z+6);
}

stock IsValidVehicle(vehicleid)
{
	if(vehicleid < 400 || vehicleid > 611) return false;
	    else return true;
}

TimeConvert(seconds)
{
	new tmp[16];
 	new minutes = floatround(seconds/60);
  	seconds -= minutes*60;
   	format(tmp, sizeof(tmp), "%d:%02d", minutes, seconds);
   	return tmp;
}

function IsPlayerInRace(playerid)
{
	if(Joined[playerid] == true) return true;
	    else return false;
}

//========================[Funciones]===========================//
public ColocarBomba(playerid)
{
    new Float:X, Float:Y, Float:Z;
    GetPlayerPos(playerid, X, Y, Z);
    GetXYInFrontOfPlayer(playerid, X,Y,0.7);
	ObjetoBomba[playerid] = CreateObject(1252, X,Y,Z-1,0,0,0);
	Colocada[playerid] = 1;
}
public PrenderExplosion(playerid)
{
    CMDMessageToVips(playerid,"DETONAR");
    SendClientMessage(playerid, AZUL_OSCURO, "La bomba explotará dentro de 5 segundos!!!");
	SetTimerEx("ExplosionFinal",5000,0,"d",playerid);
	Colocada[playerid] = 0;
}
public ExplosionFinal(playerid)
{
    new Float:X, Float:Y, Float:Z;
    GetObjectPos(ObjetoBomba[playerid],X,Y,Z);
	CreateExplosion(X,Y,Z,0,9999999);
	CreateExplosion(X,Y,Z,1,9999999);
	CreateExplosion(X,Y,Z,2,9999999);
	CreateExplosion(X,Y,Z,3,9999999);
	CreateExplosion(X,Y,Z,4,9999999);
	CreateExplosion(X,Y,Z,5,9999999);
	CreateExplosion(X,Y,Z,6,9999999);
	CreateExplosion(X,Y,Z,7,9999999);
	CreateExplosion(X,Y,Z,8,9999999);
	CreateExplosion(X,Y,Z,9,9999999);
	CreateExplosion(X,Y,Z,10,9999999);
	CreateExplosion(X,Y,Z,11,9999999);
	CreateExplosion(X,Y,Z,12,9999999);
	CreateExplosion(X,Y,Z,13,9999999);
	DestroyObject(ObjetoBomba[playerid]);
}

GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	GetPlayerFacingAngle(playerid, a);
	if (GetPlayerVehicleID(playerid))
	{
	    GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	}
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
}

//=================================================================================
SendClientAudioMessage(playerid, language[], texto[])
{
    #if !defined MAX_SPEECH
    #define MAX_SPEECH 256
    #endif
	#pragma unused language

    static
        string[MAX_SPEECH]
    ;

    format(string, MAX_SPEECH, "http://audio1.spanishdict.com/audio?lang=es&voice=Ximena&speed=25&text=%s", texto);

    return PlayAudioStreamForPlayer(playerid, string);
}

stock IsPlayerFlooding(playerid)
{
	if(GetTickCount() - iPlayerChatTime[playerid] < 3000)
	    return 1;

	return 0;
}

stock crashear(player1)
	{
	ApplyAnimation(player1,"Fuck", "M_smkasdf_loop_", 4.0, 1, 0, 0, 0, 0);
	ApplyAnimation(player1,"PorFavor", "sdgsdf_", 4.0, 1, 0, 0, 0, 0);
	GameTextForPlayer(player1, "¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 1000, 0);
	ApplyAnimation(player1,"jejesicrasheaxD", "M_smkleafds_", 4.0, 1, 0, 0, 0, 0);
	}
//============================================================================//
stock TeleportPlayer(playerid, Float:x,Float:y,Float:z)
{
   new cartype = GetPlayerVehicleID(playerid);
   new State=GetPlayerState(playerid);

   if(State!=PLAYER_STATE_DRIVER)
   {
      SetPlayerPos(playerid,x,y,z);
   }

   else if(IsPlayerInVehicle(playerid, cartype) == 1)
   {
      SetVehiclePos(cartype,x,y,z);
   }

   else
   {
      SetPlayerPos(playerid,x,y,z);
   }

   SetPlayerInterior(playerid,0);
}
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
forward TerminarEfectoDeLaDroga(playerid);
public TerminarEfectoDeLaDroga(playerid)
{
    InfoDrogas[playerid][UsaDrogas] = 0;
    SetPlayerWeather(playerid, 3);
    SetPlayerTime(playerid,24,0);
    SetPlayerDrunkLevel(playerid, 0);
    ApplyAnimation(playerid, "SMOKING", "M_smk_out", 4.000000, 0, 1, 1, 0, 0);
    SendClientMessage(playerid, COLOR_INACTIVO, "{FF0000}<!> {FFFFFF}El efecto de la droga a terminado.");
    GameTextForPlayer(playerid,"~g~~h~~h~]]]~n~~r~El efecto de la droga a terminado~n~~g~~h~~h~]]]",5000,3);
	return 1;
}
//------------------------------------------------------------------------------
forward ComenzarEfectoDeDroga(playerid);
public ComenzarEfectoDeDroga(playerid)
{
    InfoDrogas[playerid][UsaDrogas] = 1;
    return 1;
}

//==============================================================================
forward Cuenta(playerid);
public Cuenta(playerid)
{
     new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
     new pame[MAX_PLAYER_NAME];
     GetPlayerName(playerid, pame, sizeof(pame));
    new dialogstr[100000];
	if(!udb_Exists(PlayerName2(playerid)))
	{
//	format(dialogstr,sizeof(dialogstr),"{00EEFF}Hola {00EEFF}%s!\n\n{FFFFFF}Bienvenido a {FF0000}Revolucion {FFFFFF}Latina\n{FFFFFF}Cuenta {FF0000}NO REGISTRADA {FFFFFF}Pon Una Contraseña\nY Guarda Datos RL:\n\n{00EEFF}*Score\n{00EEFF}*VIP\n{00EEFF}*Dinero\n{00EEFF}*Admin\n{00EEFF}*Nivel\n{00EEFF}*Experiencia\n\n {00FF00}Esperamos Que Te Diviertas Al Maximo\n              {FFFFFF}Revolucion {FF0000}Latina {00EEFF}2015!", pame);
//	ShowPlayerDialog(playerid,9049,DIALOG_STYLE_PASSWORD, "{FF0000}|| Revolucion Latina FR ||", dialogstr, "Registrar", "");
	}
	else
	{
	format(dialogstr,sizeof(dialogstr),"{00EEFF}Hola {00FF00}%s!\n\n{FFFFFF}Bienvenido a {FF0000}Revolucion {FFFFFF}Latina\n{FFFFFF}Cuenta {00FF00}REGISTRADA {FFFFFF}Ingresa Tu Contraseña\n Para Entrar A Tus Datos RL:\n\n{00EEFF}*Score\n{00EEFF}*VIP\n{00EEFF}*Dinero\n{00EEFF}*Admin\n{00EEFF}*Nivel\n{00EEFF}*Experiencia\n\n {00FF00}Gracias Por Entrar A Nuestro Servidor\n              {FFFFFF}Revolucion {FF0000}Latina {00EEFF}2015!", pame);
	ShowPlayerDialog(playerid, 9048, DIALOG_STYLE_PASSWORD, "{00FF00}|| Revolucion Latina FR ||", dialogstr, "Entrar", "");
	}
	return 1;
}
//==============================================================================
public EnviarComandoRace(playerid,command[])
	{
		format(string2,sizeof(string2),"~r~Nueva Carrera!~n~~w~En ~r~%d ~w~Empieza La Carrera ~r~%s ~n~~w~Usa ~r~/%s ~w~Para Entrar!",CountAmount,RaceName,command);
		if (textosr==0) {TextDrawSetString(Textdrawrace,string2); TextDrawShowForAll(Textdrawrace); textosr=1; SetTimerEx("OcultarComandoRace", 6000, 0,"d",playerid); }
        TextDrawShowForAll(Textdrawrace3);
        TextDrawShowForAll(Textdrawrace4);
        TextDrawShowForAll(Textdrawrace5);
		return 1;
	}

	public OcultarComandoRace(playerid)
	{
	TextDrawHideForAll(Textdrawrace);
	TextDrawHideForAll(Textdrawrace2);
	TextDrawHideForAll(Textdrawrace3);
	TextDrawHideForAll(Textdrawrace4);
	TextDrawHideForAll(Textdrawrace5);
	textosr=0;
	}
//==============================================================================
public EnviarComandoRace2(playerid,command[])
	{
		format(string2,sizeof(string2),"________________________________________________/%s",command);
		if (textosr2==0) {TextDrawSetString(Textdrawrace2,string2); TextDrawShowForAll(Textdrawrace2); textosr2=1; SetTimerEx("OcultarComandoRace2", 30000, 0,"d",playerid); }

		return 1;
	}

	public OcultarComandoRace2(playerid)
	{
	TextDrawHideForAll(Textdrawrace);
	TextDrawHideForAll(Textdrawrace2);
	TextDrawHideForAll(Textdrawrace3);
	TextDrawHideForAll(Textdrawrace4);
	TextDrawHideForAll(Textdrawrace5);
	textosr2=0;
	}
//================================================================================
stock RangeBan(playerid)
{
new pos, oldpos,tmp[128], ip[15], ip2[15];

GetPlayerIp(playerid, ip, sizeof(ip));

pos = strfind(ip, ".", true);
pos++;

for(new i = 0; i < pos; i++)
{
ip2[i] = ip[pos-pos+i];
}

pos--;

ip[pos] = ' ';

oldpos = pos;
oldpos++;

pos = strfind(ip, ".", true);
pos++;

for(new i = oldpos; i < pos; i++)
{
ip2[i] = ip[pos-pos+i];
}

format(ip2, sizeof(ip2), "%s*.*", ip2);
format(tmp, sizeof(tmp), "banip %s", ip2);
SendRconCommand(tmp);
SaveToRBan(ip2);
SetTimerEx("StartKick", 5000, false, "d", playerid);
return ip2;
}

stock SaveToRBan(IpBan[])
{
	new File:LAdminfile, filepath[256];
	format(filepath,sizeof(filepath),"ladmin/config/RangeBan.txt",IpBan);
	LAdminfile = fopen(filepath,io_append);
	format(string2,sizeof(string2),"%s\r\n",IpBan);
	fwrite(LAdminfile,string2);
	fclose(LAdminfile);
	return 1;
}
//==============================================================================
forward ActualizarInformacion(playerid);
public ActualizarInformacion(playerid)
{
    new rango[24];
if((PlayerInfo[playerid][Experiencia]>= 0 && PlayerInfo[playerid][Experiencia] <= 1000)) { rango = "Noob"; }
    else if((PlayerInfo[playerid][Experiencia]>= 1001 && PlayerInfo[playerid][Experiencia] <= 2000)) { rango = "Semi-Novato"; }
    else if((PlayerInfo[playerid][Experiencia]>= 2001 && PlayerInfo[playerid][Experiencia] <= 3500)) { rango = "Aprendíz"; }
    else if((PlayerInfo[playerid][Experiencia]>= 3501 && PlayerInfo[playerid][Experiencia] <= 5000)) { rango = "Novato"; }
    else if((PlayerInfo[playerid][Experiencia]>= 5001 && PlayerInfo[playerid][Experiencia] <= 6500)) { rango = "Veterano"; }
    else if((PlayerInfo[playerid][Experiencia]>= 6501 && PlayerInfo[playerid][Experiencia] <= 7000)) { rango = "Psicópata"; }
    else if((PlayerInfo[playerid][Experiencia]>= 7001 && PlayerInfo[playerid][Experiencia] <= 7500)) { rango = "Loco extremo"; }
    else if((PlayerInfo[playerid][Experiencia]>= 7501 && PlayerInfo[playerid][Experiencia] <= 8000)) { rango = "Asesino"; }
    else if((PlayerInfo[playerid][Experiencia]>= 8001 && PlayerInfo[playerid][Experiencia] <= 10000)) { rango = "Sicario Novato"; }
    else if((PlayerInfo[playerid][Experiencia]>= 10001 && PlayerInfo[playerid][Experiencia] <= 11500)) { rango = "Sicario"; }
    else if((PlayerInfo[playerid][Experiencia]>= 11501 && PlayerInfo[playerid][Experiencia] <= 12000)) { rango = "Asesino Pro"; }
    else if((PlayerInfo[playerid][Experiencia]>= 12001 && PlayerInfo[playerid][Experiencia] <= 13000)) { rango = "Rambo ._.!"; }
    else if((PlayerInfo[playerid][Experiencia]>= 13001 && PlayerInfo[playerid][Experiencia] <= 14500)) { rango = "Pro Killer"; }
    else if((PlayerInfo[playerid][Experiencia]>= 14501 && PlayerInfo[playerid][Experiencia] <= 25000)) { rango = "Kratos"; }
    else if((PlayerInfo[playerid][Experiencia]>= 25001 && PlayerInfo[playerid][Experiencia] <= 90000)) { rango = "DiosRL"; }
new Vip[50];
switch(PlayerInfo[playerid][pVip])
{
case 0: Vip = "{FFFFFF}Ninguno";
case 1: Vip = "{3C3214}Silver";
case 2: Vip = "{C3D5DF}Gold";
case 3: Vip = "{DFC418}Premium";
case 4: Vip = "{209193}Platinum";
case 5: Vip = "{FF0000}Esmeralda";
case 6: Vip = "{0C242E}Diamond";
case 7: Vip = "{FF0000}Extremo";
case 8: Vip = "{00FF00}Legendario";
case 9: Vip = "{FFFF00}Dios";
}
}
// ¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤ [ sql verzion ] ¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤
stock
	IpToCountry_db(IpInfo[])
{
	new
		DB:database,
		DBResult:result,
		query[256];

	database = db_open(DATABASENAME);
	if(database)
	{
		if(strcmp("127.0.0.1", IpInfo, true) == 0)
		{
			query = "Localhost";
		} else {
			new
				IPsplit[4][10];
			if(sscanf(IpInfo, "p<.>s[10]s[10]s[10]s[10]", IPsplit[0], IPsplit[1], IPsplit[2], IPsplit[3])) { query = "Invalid IP"; }
			else {
				format(query, sizeof query, "\
				SELECT `Country`\
				FROM `countrydetected`\
				WHERE `Ip_From` <= ((16777216*%d) + (65536*%d) + (256*%d) + %d)\
				AND `Ip_to` >= ((16777216*%d) + (65536*%d) + (256*%d) + %d) LIMIT 1",
				strval(IPsplit[0]), strval(IPsplit[1]), strval(IPsplit[2]), strval(IPsplit[3]),
				strval(IPsplit[0]), strval(IPsplit[1]), strval(IPsplit[2]), strval(IPsplit[3]));

				result = db_query(database, query);
				if(!db_get_field_assoc(result, "Country", query, sizeof query))
				{
					query = "Desconocido";
				}
				db_free_result(result);
			}
		}
		db_close(database);
	} else query = "Failed. Not Open "DATABASENAME"";
	return query;
}
//==============================================================================
forward SetDuel(id1,id2,armas,arena);
public SetDuel(id1,id2,armas,arena)
{
    SetPlayerVirtualWorld(id1,12);
    SetPlayerVirtualWorld(id2,12);
    SetPlayerInterior(id1,0);
    SetPlayerInterior(id2,0);
	ResetPlayerWeapons(id1);
	ResetPlayerWeapons(id2);
	SetPlayerHealth(id1,100);
	SetPlayerHealth(id2,100);
	SetPlayerArmour(id1,100);
	SetPlayerArmour(id2,100);
	TogglePlayerControllable(id2,0);
	TogglePlayerControllable(id1,0);
	SetCameraBehindPlayer(id1);
	SetCameraBehindPlayer(id2);
	switch (arena)
	{
	  case 1: {SetPlayerPos(id1,2646.0796,1232.5236,26.9182); SetPlayerFacingAngle(id1,180.4801); SetPlayerPos(id2,2646.4988,1189.6237,26.9182); SetPlayerFacingAngle(id2,1.9051); SetObjectPos(p1duelo1, 2646.205811, 1230.074219, 26.962353); SetObjectPos(p2duelo1, 2646.165771, 1191.811157, 26.957216);}
	  case 2: {SetPlayerPos(id1,2763.5015,-1466.2859,66.8605); SetPlayerFacingAngle(id1,4.7661); SetPlayerPos(id2,2763.3494,-1437.7561,66.8672); SetPlayerFacingAngle(id2,184.7496); SetObjectPos(p1duelo2, 2763.49682600,-1463.63659600,66.96044900); SetObjectPos(p2duelo2, 2763.64697200,-1440.12060500,66.89225000);}
  	  case 3: {SetPlayerPos(id1,-2053.3076,-220.9531,35.3274); SetPlayerFacingAngle(id1,2.5526); SetPlayerPos(id2,-2053.9373,-164.5784,35.3203); SetPlayerFacingAngle(id2,180.5042); SetObjectPos(p1duelo3, -2053.42382800,-219.36978100,35.57739200); SetObjectPos(p2duelo3, -2053.72045800,-166.42074500,35.57031200);}
  	  case 4: {SetPlayerPos(id1,1060.5912,1778.2770,10.8203); SetPlayerFacingAngle(id1,181.3750); SetPlayerPos(id2,1059.0099,1750.3965,10.8203); SetPlayerFacingAngle(id2,359.0133); SetObjectPos(p1duelo4, 1060.63281200,1776.76892000,10.87031100); SetObjectPos(p2duelo4, 1059.23596100,1752.42065400,10.82031200);}
  	  case 5: {SetPlayerPos(id1,2450.1492,1042.8912,57.5016); SetPlayerFacingAngle(id1,270.6992); SetPlayerPos(id2,2490.7896,1043.3682,57.5016); SetPlayerFacingAngle(id2,88.9876); SetObjectPos(p1duelo5, 2452.48120100,1043.03442300,57.50162500); SetObjectPos(p2duelo5, 2488.49853500,1043.49841300,57.52662600);}
  	  case 6: {SetPlayerPos(id1,2464.0400,2263.6338,92.0987); SetPlayerFacingAngle(id1,5.8872); SetPlayerPos(id2,2463.7119,2320.0164,92.1062); SetPlayerFacingAngle(id2,181.6689); SetObjectPos(p1duelo6, 2463.60009700,2266.80004800,91.59999800); SetObjectPos(p2duelo6, 2463.80004800,2317.00000000,91.59999800);}
	}
	switch (armas)
	{
		case 1: {GivePlayerWeapon(id1,22,1000); GivePlayerWeapon(id2,22,1000); GivePlayerWeapon(id1,26,1000); GivePlayerWeapon(id2,26,1000); GivePlayerWeapon(id1,32,1000); GivePlayerWeapon(id2,32,1000); SetTimerEx("ComenzarDuelo",5000,false,"iii",id1,id2,arena); }
		case 2: {GivePlayerWeapon(id1,24,1000); GivePlayerWeapon(id2,24,1000); GivePlayerWeapon(id1,27,1000); GivePlayerWeapon(id2,27,1000); GivePlayerWeapon(id1,29,1000); GivePlayerWeapon(id2,29,1000); SetTimerEx("ComenzarDuelo",5000,false,"iii",id1,id2,arena); }
		case 3: {GivePlayerWeapon(id1,24,1000); GivePlayerWeapon(id2,24,1000); GivePlayerWeapon(id1,25,1000); GivePlayerWeapon(id2,25,1000); GivePlayerWeapon(id1,26,1000); GivePlayerWeapon(id2,26,1000); GivePlayerWeapon(id1,32,1000); GivePlayerWeapon(id2,32,1000); SetTimerEx("ComenzarDuelo",5000,false,"iii",id1,id2,arena); }
		case 4: {GivePlayerWeapon(id1,24,1000); GivePlayerWeapon(id2,24,1000); SetTimerEx("ComenzarDuelo",5000,false,"iii",id1,id2,arena); }
		case 5: {GivePlayerWeapon(id1,26,1000); GivePlayerWeapon(id2,26,1000); SetTimerEx("ComenzarDuelo",5000,false,"iii",id1,id2,arena); }
		case 6: {GivePlayerWeapon(id1,25,1000); GivePlayerWeapon(id2,25,1000); SetTimerEx("ComenzarDuelo",5000,false,"iii",id1,id2,arena); }
		case 7: {GivePlayerWeapon(id1,32,1000); GivePlayerWeapon(id2,32,1000); SetTimerEx("ComenzarDuelo",5000,false,"iii",id1,id2,arena); }
		case 8: {GivePlayerWeapon(id1,34,1000); GivePlayerWeapon(id2,34,1000); SetTimerEx("ComenzarDuelo",5000,false,"iii",id1,id2,arena); }
		case 9: {GivePlayerWeapon(id1,31,1000); GivePlayerWeapon(id2,31,1000); SetTimerEx("ComenzarDuelo",5000,false,"iii",id1,id2,arena); }
		case 10: {GivePlayerWeapon(id1,33,1000); GivePlayerWeapon(id2,33,1000); SetTimerEx("ComenzarDuelo",5000,false,"iii",id1,id2,arena); }
		case 11: {GivePlayerWeapon(id1,27,1000); GivePlayerWeapon(id2,27,1000); SetTimerEx("ComenzarDuelo",5000,false,"iii",id1,id2,arena); }
	}
}

forward ComenzarDuelo(id1,id2,arena);
public ComenzarDuelo(id1,id2,arena)
{
   	TogglePlayerControllable(id2,1);
	TogglePlayerControllable(id1,1);
	switch (arena)
	{
		case 1: {MoveObject(p1duelo1,2646.205811, 1230.074219, (26.962353+5),1); MoveObject(p2duelo1,2646.165771, 1191.811157, (26.957216+5),1);}
		case 2: {MoveObject(p1duelo2,2763.49682600,-1463.63659600, (66.96044900+5),1); MoveObject(p2duelo2,2763.64697200,-1440.12060500, (66.89225000+5),1);}
		case 3: {MoveObject(p1duelo3,-2053.42382800,-219.36978100, (35.57739200+5),1); MoveObject(p2duelo3,-2053.72045800,-166.42074500, (35.57031200+5),1);}
		case 4: {MoveObject(p1duelo4,1060.63281200,1776.76892000, (10.87031100+5),1); MoveObject(p2duelo4,1059.23596100,1752.42065400, (10.82031200+5),1);}
		case 5: {MoveObject(p1duelo5,2452.48120100,1043.03442300, (57.50162500+5),1); MoveObject(p2duelo5,2488.49853500,1043.49841300, (57.52662600+5),1);}
		case 6: {MoveObject(p1duelo6,2463.60009700,2266.80004800, (91.59999800+5),1); MoveObject(p2duelo6,2463.80004800,2317.00000000, (91.59999800+5),1);}
	}
}

dcmd_duelo(playerid,params[])
{
	new index = 0, tmp[256];
	tmp = strtok(params,index);
	if (!strlen(tmp)) return SendClientMessage(playerid,COLOR_ROJO,"¡Duelo!: Modo de uso correcto /duelo [invitar/ver]");
	if (!strcmp("invitar",tmp,false))
	{
	    if (EnDuelo[playerid] == 1) return SendClientMessage(playerid,COLOR_ROJO,"¡Error!: {FFFFFF}Estás en un duelo, termina el duelo antes de iniciar otro.");
		ShowPlayerDialog(playerid, DUELOSMENU2, DIALOG_STYLE_LIST,"Escoje Una Arena","Arena 1 [Las Venturas]\nArena 2 [Los Santos]\nArena 3 [San Fierro]\nArena 4 [Las Venturas]\nArena 5 [Las Venturas]\nArena 6 [San Fierro] [Pro]","Escojer", "Cancelar");
		return 1;
	}
	if (!strcmp("ver",tmp,false))
	{
	    if (EnDuelo[playerid]==1) return SendClientMessage(playerid,COLOR_ROJO,"¡Error!: {FFFFFF}No puedes usar este comando si estás en duelo.");
        ShowPlayerDialog(playerid, DUELOSMENU+3, DIALOG_STYLE_LIST,"Escoje Una Arena Para Ver","Arena 1 [Las Venturas]\nArena 2 [Los Santos]\nArena 3 [San Fierro]\nArena 4 [Las Venturas]\nArena 5 [Las Venturas]\nArena 6 [San Fierro] [Pro]","Escojer", "Cancelar");
        return 1;
	}
    return SendClientMessage(playerid,COLOR_ROJO,"¡Duelo!: Modo de uso correcto /duelo [invitar/ver]");
}
	dcmd_noduelo(playerid,params[]) {
    #pragma unused params
    if(	NODUEL[playerid] == 0)
	{
	NODUEL[playerid] = 1;
	return SendClientMessage(playerid,COLOR_ROJO,"[DUELO]: {FFFFFF}Ahora No Recibirás Duelos!");
	}
    else return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Ya Estás En NoDuelo Usa /SiDuelo Para Recibir Duelos");
	}

	dcmd_siduelo(playerid,params[]) {
    #pragma unused params
    if(	NODUEL[playerid] == 1)
	{
	NODUEL[playerid] = 0;
	return SendClientMessage(playerid,COLOR_ROJO,"[DUELO]: {FFFFFF}Ahora Recibirás Duelos!");
	}
    else return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}Ya Estás En SiDuelo Usa /NoDuelo Para No Recibir Duelos");
	}
//==============================================================================
dcmd_mievento(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}Necesitas ser Operador [Lvl 2] para Usar este Comando!");
	if(RaceBusy == 0x01 || RaceStarted == 1) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}No puedes Crear un Evento cuado hay una Carrera activa. Espera primero a que termine!");
	new Mensagem[603];
	strcat(Mensagem, "Crear Evento\nIr a la Posicion del Evento\n");
	strcat(Mensagem, "Dar Armas para todos los Jugadores del Evento\nDar un Carro para todos los Jugador del Evento\nDestruir/Finalizar Evento\nDefinir Vida a los Vehículos del Evento\nKickear un Jugador del Evento\n");
	strcat(Mensagem, "Definir Vida y Chaleco a los Jugadores del Evento\nDefinir Skin a los Jugadores del Evento\nCongelar a los Jugadores del Evento\nDescongelar a los Jugadores del Evento\nResetar Armas a los Jugadores del Evento\nTraer a Todos a los Jugadores del Evento");
	if(EventInfo[Criado] == 0)
	{
		ShowPlayerDialog(playerid, DIALOG_EVENTO, DIALOG_STYLE_LIST, "{00FF00}Evento Propio: {FF0000}Cerrado", Mensagem, "Selecionar", "Cancelar");
	}
	else if(EventInfo[Criado] == 1)
	{
		new StrE[1000];
		format(StrE,sizeof(StrE),"{00FF00}Evento Propio: {FFFFFF}Abierto por %s",EventInfo[Admin]);
		ShowPlayerDialog(playerid, DIALOG_EVENTO, DIALOG_STYLE_LIST, StrE, Mensagem, "Selecionar", "Cancelar");
	}
	return 1;
}

dcmd_irevento(playerid,params[])
{
	#pragma unused params
	if(EventInfo[Cerrado] == 1) return SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}Un Administrador Desactivó el Cmd para ir al Evento!");
	if(SaltarMas[playerid] == 1) return SendClientMessage(playerid, red, "[ERROR]: {FFFFFF}Usa /supersaltosff (Para desactivar los supersaltos e ir al evento)!");
	if(EventInfo[Criado] == 0)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}No existe ningún Evento creado!");
	if(EventInfo[Aberto] == 0)	return	SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}El Evento está Fechado!");
	if(balason[playerid] == 0) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva las balas explosivas! (/balase)");
       if(vKnockOut[playerid] == 1) return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}¡Desactiva el VKNOCKOUT para ir al evento!");
	if(PlayerInfoE[playerid][NoEvento] == 1) return SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}Ya estás en el Evento!");
	SetPlayerVirtualWorld(playerid, EventInfo[VirtualWorld]);
	SetPlayerInterior(playerid, EventInfo[Interior]);
	SetPlayerHealth(playerid, 100);
	SetPlayerArmour(playerid, 100);
	ResetPlayerWeapons(playerid);
	SetPlayerPos(playerid, EventInfo[Xq], EventInfo[Yq], EventInfo[Zq]);
	SetPlayerFacingAngle(playerid, EventInfo[Aq]);
	new string8[1500];
	format(string8, sizeof(string8), "{FF0000}[Evento %s]: {FFFFFF}%s {00EEFF}ha entrado al Evento!", EventInfo[Nome], pName(playerid));
	SendClientMessageToAll(naranja,string8);
	PlayerInfoE[playerid][NoEvento] = 1;
	return 1;
}


dcmd_salirevento(playerid,params[])
{
	#pragma unused params
	if(PlayerInfoE[playerid][NoEvento] == 0) return SendClientMessage(playerid, COR_ERRO, "[ERROR]: {FFFFFF}No estás en el Evento!");
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	SpawnPlayer(playerid);
	PlayerInfoE[playerid][NoEvento] = 0;
	if(PlayerInfoE[playerid][Carro] >= 1)
	{
		DestroyVehicle(PlayerInfoE[playerid][Carro]);
		PlayerInfoE[playerid][Carro] = 0;
	}
	SendClientMessage(playerid, COR_INFO, "[INFO]: Has salido del Evento!");
	return 1;
}

stock DestruirEvento(playerid)
{
	EventInfo[Xq] = 0;
	EventInfo[Yq] = 0;
	EventInfo[Zq] = 0;
	EventInfo[Aq] = 0;
	EventInfo[VirtualWorld] = 0;
	EventInfo[Interior] = 0;
	EventInfo[Criado] = 0;
	EventInfo[Aberto] = 0;
	EventInfo[Cerrado] = 0;
	EventInfo[Premio1] = 0;
	EventInfo[Premio2] = 0;
	EventInfo[Premio3] = 0;
	EventInfo[PremioS] = 0;
	EventInfo[PremioN] = 0;
	EventInfo[Carro] = 0;
	EventInfo[Cor1] = 0;
	EventInfo[Cor2] = 0;
	EventInfo[Arma] = 0;
	EventInfo[Vida] = 0;
	SEVENTO = 0;
	for(new p = 0; p < MAX_PLAYERS; p++)
    {
       	if(PlayerInfoE[p][NoEvento] == 1)
		{
			SetPlayerVirtualWorld(p, 0);
			SetPlayerInterior(p, 0);
			SpawnPlayer(p);
			PlayerInfoE[p][NoEvento] = 0;
			if(PlayerInfoE[p][Carro] >= 1)
			{
				DestroyVehicle(PlayerInfoE[p][Carro]);
				PlayerInfoE[p][Carro] = 0;
			}
		}
    }
	GetPlayerName(playerid, NomePlayer, MAX_PLAYER_NAME);
	format(Format, sizeof(Format), "[EVENTO]: EL Administrador %s Cerró/Finalizó el Evento!", NomePlayer);
	SendClientMessageToAll(COR_EVENTO, Format);
	return 1;
}

stock SendEventMessage(color, string[])
{
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
		if(IsPlayerConnected(p))
		{
		    if(PlayerInfoE[p][NoEvento] == 1)
		    {
				SendClientMessage(p, color, string);
			}
		}
	}
	return 1;
}

stock EsVehiculoOcupado(vehicleid)
{
for(new i=0; i<GetMaxPlayers(); i++) if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == PLAYER_STATE_DRIVER) return 1;
return 0;
}
//==============================================================================
forward Speed();
public Speed()
{
	for(new p = 0; p < GetMaxPlayers(); p++) if(IsPlayerConnected(p) && !IsPlayerNPC(p))
	{
		new vehicleid = GetPlayerVehicleID(p);
		if(vehicleid)
		{
	        new string[128], Float:X, Float:Y, Float:Z, Float:PointToPoint, Float:vhealth;
         	GetVehicleVelocity(vehicleid, X, Y, Z);
         	PointToPoint = (floatsqroot(floatpower(X, 2) + floatpower(Y, 2) + floatpower(Z, 2)))*100;
			GetVehicleHealth(vehicleid,vhealth);
			format(string,sizeof string ,"{FF0000}Vehículo: {FFFFFF}%s\n{FF0000}Vida: {FFFFFF}%.2f\n{FF0000}Velocidad: {FFFFFF}%ikm/h", VehicleName[GetVehicleModel(vehicleid)-400], vhealth, floatround(PointToPoint, floatround_floor));
			DeletePlayer3DTextLabel(p, speedo3Dtext);
	    	speedo3Dtext = CreatePlayer3DTextLabel(p, string, speedcolor, 0.0,-1.6,-0.35,20.0, INVALID_PLAYER_ID, vehicleid);
		} else if(p) { DeletePlayer3DTextLabel(p, speedo3Dtext); }
	}
}
//==============================================================================

	public TIMER_DCallbacks() {
		new i,z;
		new Float:x,Float:y,Float:zcoord;
		for (i=0;i<MAX_PLAYERS;i++) {
			if (IsPlayerConnected(i)) {
				GetPlayerPos(i,x,y,zcoord);
				for (z=0;z<AREACHECK_Count;z++) {
					if ( (AREACHECK_Coords[z][0]<x)&&(AREACHECK_Coords[z][1]>x) &&
						(AREACHECK_Coords[z][2]<y)&&(AREACHECK_Coords[z][3]>y) ) {
						if (z!=AREACHECK_Player[i]-1) {
							AREACHECK_Player[i]=z+1;
							OnPlayerEnterArea(i,z+1);
						}
					} else {
						if (z==AREACHECK_Player[i]-1) {
							OnPlayerLeaveArea(i,z+1);
							AREACHECK_Player[i]=0;
						}
					}
				}
			}
		}
	}

	public JoinGang(playerid, gangid)
{
	new name[MAX_PLAYER_NAME];
	new gfile[100];
	format(gfile, sizeof(gfile), GANG_FILE, gangid);
	GetPlayerName(playerid, name, sizeof(name));
	dUserSetINT(PlayerName2(playerid)).("clan",gangid);
	dUserSetINT(PlayerName2(playerid)).("lider",0);
    new stringeng[100];
	PlayerGang[playerid] = gangid;
	GangInfo[gangid][GANG_MEMBERS]++;
	format(string2, sizeof(string2), "[CLAN]: Tú Has Entrado Al Clan %s, Miembros: %d", GangInfo[gangid][GANG_NAME], GangInfo[gangid][GANG_MEMBERS]);
	SendClientMessage(playerid, COLOR_GREEN, string2);
	format(stringeng, sizeof(stringeng), "[CLAN]: %s A Entrado Al Clan %s", name , GangInfo[gangid][GANG_NAME]);
	SendClientMessageToAll(COLOR_GREEN, stringeng);
	SetPlayerColor(playerid, GangInfo[gangid][GANG_COLOR]);
	SpawnPlayer(playerid);

	dini_IntSet(gfile, "GANG_MEMBERS", GangInfo[gangid][GANG_MEMBERS]);
	return 1;
}

//---- Gang Radar Timer
public GangRadar(playerid)
{
    for(new i; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i)) continue;
		if(PlayerGang[playerid] != PlayerGang[i] && gradar[playerid] == 1) SetPlayerMarkerForPlayer(playerid, i, (GetPlayerColor(i) & 0xFFFFFF00));
	}
}
//---- Lasciare Gang
public LeaveGang(playerid, gangid)
{
	new name[MAX_PLAYER_NAME];
	new gfile[100];
	format(gfile, sizeof(gfile), GANG_FILE, gangid);
	GetPlayerName(playerid, name, sizeof(name));
	dUserSetINT(PlayerName2(playerid)).("clan",0);
	dUserSetINT(PlayerName2(playerid)).("lider",0);
	new stringeng[100];
	format(string2, sizeof(string2), "[CLAN]: Tú Has Salido Del Clan %s", GangInfo[gangid][GANG_NAME]);
	SendClientMessage(playerid, COLOR_ROJO, string2);
	format(stringeng, sizeof(stringeng), "[CLAN]: %s ha Salido Del Clan %s", name , GangInfo[gangid][GANG_NAME]);
	SendClientMessageToAll(COLOR_ROJO, stringeng);
	PlayerGang[playerid] = 0;
	PlayerLider[playerid] = 0;
	SpawnPlayer(playerid);
	GangInfo[gangid][GANG_MEMBERS]--;
	if(GangInfo[gangid][GANG_MEMBERS] == 0) {
		format(stringeng, sizeof(stringeng), "[INFO]: El Clan %s a Sido Abandonado", GangInfo[gangid][GANG_NAME]);
		SendClientMessageToAll(COLOR_ROJO, stringeng);
		return 1;//dini_Remove(gfile);
	}
	dini_IntSet(gfile, "GANG_MEMBERS", GangInfo[gangid][GANG_MEMBERS]);
	return 1;
}

//---- AREACHECK
OnPlayerEnterArea(playerid,areaid) {
	new gangid = PlayerGang[playerid];
	if(gangid != ZoneInfo[areaid][ZONE_GANGID] && gangid != 0 && GetPlayerVirtualWorld(playerid) == 0) Invaders[gangid][areaid]++;
	if(Invaders[gangid][areaid] >= CONQUISTADORES)
	{

	    GangZoneFlashForAll(ZoneInfo[areaid][ZONE_GZID],GangInfo[gangid][GANG_COLOR]);
	    if(ZoneInfo[areaid][ZONE_GANGID] != 0) GangTimer[gangid][areaid] = SetTimerEx("ConquistaGZ", 50000, false, "ii", areaid, gangid);
		else GangTimer[gangid][areaid] = SetTimerEx("ConquistaGZ", 50000, false, "ii", areaid, gangid);
	    for(new i; i < MAX_PLAYERS; i++)
	    {
	        if(IsPlayerConnected(i) && PlayerGang[i] == ZoneInfo[areaid][ZONE_GANGID] && PlayerGang[playerid] != ZoneInfo[areaid][ZONE_GANGID] && PlayerGang[i] != 0)
	        {

					SendClientMessage(i, COLOR_ROJO, "¡Info!: La Zona De Tu Clan Está Siendo Atacada");
	            format(string2, sizeof(string2), "X: %f, Y: %f, Área ID: %d", ZoneInfo[areaid][ZONE_X1], ZoneInfo[areaid][ZONE_Y1], areaid);
	            //if(IsPlayerAdmin(i)) SendClientMessage(i, COLOR_ROJO, string2);
			}
		}
	}

	if(ZoneInfo[areaid][ZONE_GANGID] != 0)
	{

	     format(string2, sizeof(string2), "~r~zona  ~n~~b~____________%s", GangInfo[ZoneInfo[areaid][ZONE_GANGID]][GANG_NAME]);
	    TextDrawSetString(Information[playerid],string2);
	    TextDrawShowForPlayer(playerid, Information[playerid]);
	}

	if(ZoneInfo[areaid][ZONE_GANGID] == 0)
	{

	    format(string2, sizeof(string2), "~r~_______zona ~n~________~r~sin ~n~conquistar");
	    TextDrawSetString(Information[playerid],string2);
	    TextDrawShowForPlayer(playerid, Information[playerid]);
	}
}

OnPlayerLeaveArea(playerid,areaid) {
    TextDrawHideForPlayer(playerid, Information[playerid]);
	new gangid = PlayerGang[playerid];
	if(Invaders[gangid][areaid] >= CONQUISTADORES)
	{
		KillTimer(GangTimer[gangid][areaid]);
		GangZoneStopFlashForAll(ZoneInfo[areaid][ZONE_GZID]);
	}
	if(gangid != ZoneInfo[areaid][ZONE_GANGID] && gangid != 0 && GetPlayerVirtualWorld(playerid) == 0) Invaders[gangid][areaid]--; //---- Togliere un invasor

}

public ConquistaGZ(areaid, gangid)
{
    GangZoneStopFlashForAll(ZoneInfo[areaid][ZONE_GZID]);
    ZoneInfo[areaid][ZONE_GANGID] = gangid;
    new file[100];
	format(file, sizeof(file), ZONE_FILE, areaid);
	dini_IntSet(file, "ZONE_GANGID", ZoneInfo[areaid][ZONE_GANGID]);
	ZoneInfo[areaid][ZONE_COLOR] = GangInfo[gangid][GANG_COLOR];

	for(new i; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && PlayerGang[i] == gangid)
	    {
	    GivePlayerMoney(i, 1000);
	    if(ZoneInfo[areaid][ZONE_GANGID] != 0)
	{

	}
		}
	}
	for(new i = 0; i <= ZONE_NUMBER; i++)
	{
	    GangZoneDestroy(ZoneInfo[i][ZONE_GZID]);
	    format(file, sizeof(file), ZONE_FILE, i);
		if(dini_Exists(file))
		{
		    ZoneInfo[i][ZONE_GANGID] = dini_Int(file,"ZONE_GANGID");
			ZoneInfo[i][ZONE_ID] = i;
			ZoneInfo[i][ZONE_COLOR] = RandomColors[ZoneInfo[i][ZONE_GANGID]];
			ZoneInfo[i][ZONE_X1] = dini_Float(file,"ZONE_X1");
			ZoneInfo[i][ZONE_Y1] = dini_Float(file,"ZONE_Y1");
			ZoneInfo[i][ZONE_X2] = dini_Float(file,"ZONE_X2");
			ZoneInfo[i][ZONE_Y2] = dini_Float(file,"ZONE_Y2");
			ZoneInfo[i][ZONE_GZID] = GangZoneCreate(ZoneInfo[i][ZONE_X1], ZoneInfo[i][ZONE_Y1], ZoneInfo[i][ZONE_X2], ZoneInfo[i][ZONE_Y2]);
			GangZoneShowForAll(ZoneInfo[i][ZONE_GZID], ZoneInfo[i][ZONE_COLOR]);
		}
	}
	return 1;
}

stock token_by_delim(const string[], return_str[], delim, start_index)
	{
	new x=0;
	while(string[start_index] != EOS && string[start_index] != delim) {
	    return_str[x] = string[start_index];
	    x++;
	    start_index++;
	}
	return_str[x] = EOS;
	if(string[start_index] == EOS) start_index = (-1);
	return start_index;
	}

	stock IsValidName(string[])
	{
	    for(new i = 0, j = strlen(string); i < j; i++)
	    {
	        switch(string[i])
	        {
	            case '0' .. '9': continue;
	            case 'a' .. 'z': continue;
	            case 'A' .. 'Z': continue;
	            case '_': continue;
	            case '$': continue;
	            case '.': continue;
	            case '=': continue;
	            case '(': continue;
	            case ')': continue;
	            case '[': continue;
	            case ']': continue;
	            default: return 0;
	        }
	    }
	    return 1;
	}

stock GetName(playerid)
	{
	     new n[MAX_PLAYER_NAME];
	     GetPlayerName(playerid,n,MAX_PLAYER_NAME);
	     return n;
	}

    dcmd_deletezone(playerid,params[]) {
	new tmp[256] , Index21; tmp = strtok(params,Index21);
	new id = strval(tmp);
	new string[22];
	if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_ROJO, "USA: /deletezone [ID]");
	if(PlayerInfo[playerid][pAdmin] >= 3) return SendClientMessage(playerid, COLOR_ROJO, "Solo Admins");
	new file[100];
	format(file, sizeof(file), ZONE_FILE, id);
	GangZoneDestroy(ZoneInfo[id][ZONE_GZID]);
	dini_Remove(file);
	format(string, sizeof(string), "[INFO]: GangZone removido.", zoneid);
	SendClientMessage(playerid, COLOR_ROJO, string);
	return 1;
	}
	
	dcmd_clan(playerid,params[]) {
	new tmp[256], tmp2[256], Index21; tmp = strtok(params,Index21), tmp2 = strtok(params,Index21);
	if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_ROJO, "USE: /Clan [Crear/Invitar/DarLider/QuitarLider/Expulsar/Color/Salir/Stats/Radar/Info]");

    //---- Creazone Gang
 	if(strcmp(tmp, "crear", true) == 0)
	{
		if(!strlen(tmp2)) return SendClientMessage(playerid, COLOR_ROJO, "USE: /Clan Crear [NOMBRE]");
		if(!udb_Exists(PlayerName2(playerid))) return SendClientMessage(playerid, COLOR_GREEN, "[ERROR]: {FFFFFF}Usted debe estar registrado {0000FF}(/register)");
		if(PlayerGang[playerid] == 1)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}¡Ya tienes clan! Usa para salir /Clan salir");
		if(GetPlayerScore(playerid)<=1000) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Necesitas 1000 De score para crear un clan!");
		if(SClan == 0) return SendClientMessage(playerid,red, "[ERROR]: {FFFFFF}La creación de Clanes está desactivada!");
		if(strfind(tmp2, "[", true) != -1 || strfind(tmp2, "]", true) != -1 || strfind(tmp2, "=", true) != -1 || strfind(tmp2, "(", true) != -1 || strfind(tmp2, ")", true) != -1 ) return SendClientMessage(playerid, COLOR_ROJO, "Sin '[' ']' (corchetes).");
		if(IsValidName(tmp2)){
		if(strlen(tmp2) < 2 || strlen(tmp2) > 5) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}El nombre debe Ser De 2 a 5 Carácteres!");
		  if(GANG_NUMBER >= MAX_GANG)
		{
			new file[30];
			for(new i = 0; i <= GANG_NUMBER; i++)
			{
				format(file, sizeof(file), GANG_FILE, i);
				if(dini_Exists(file) && dini_Int(file,"GANG_MEMBERS") <= 1)
				{
					dini_Remove(file);
					format(string2, sizeof(string2), "ID: %d, Miembros: %d, Nombre: %s", i, GangInfo[i][GANG_MEMBERS], GangInfo[i][GANG_NAME]);
					SendClientMessage(playerid, COLOR_ROJO, string2);
					format(string2, sizeof(string2), "[INFO]: ¡El Clan %s está vacío!", GangInfo[i][GANG_NAME]);
					SendClientMessageToAll(COLOR_ROJO, string2);
					for(new p; p < MAX_PLAYERS; p++)
					{
	        			if(PlayerGang[p] == i && IsPlayerConnected(p))
						{
			   				dUserSetINT(PlayerName2(playerid)).("clan",0);
			   				dUserSetINT(PlayerName2(playerid)).("lider",0);
							PlayerGang[p] = 0;
							PlayerLider[p] = 0;
						}
					}
				}
			}
		}
		}
		else
		{SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Nombre de clan inválido (Signos inválidos/Signos extraños)"); return 1;}
		new gangid = 0;
		for(new i; i < GANG_NUMBER; i++)
  		{

		    new file[100];
			format(file, sizeof(file), GANG_FILE, i);
			if(dini_Exists(file))
			{
	   			new gname[15];
				strcat(gname, dini_Get(file, "GANG_NAME"),15);

				if(strfind(tmp2, gname, true) == 0)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}¡Ya hay un clan con ese nombre!");

			}
			else if(!dini_Exists(file) && i != 0) gangid = i;

		}

       	if(gangid == 0) {
			GANG_NUMBER++;
			gangid = GANG_NUMBER;
		}
		dini_IntSet(CFG,"GANG_NUMBER",GANG_NUMBER);

  		new gfile[100];
		format(gfile, sizeof(gfile), GANG_FILE, gangid);
		dini_Create(gfile);
  		format(GangInfo[gangid][GANG_NAME], sizeof(tmp2), "%s", tmp2);
		dini_Set(gfile, "GANG_NAME", GangInfo[gangid][GANG_NAME]);
		dini_IntSet(gfile, "GANG_ID", gangid);
		dini_IntSet(gfile,"GANG_MEMBERS",0);
		dini_IntSet(gfile,"GANG_SCORE",0);
		dini_IntSet(gfile,"COLOR",0xFFFFFF88);
		GangInfo[gangid][GANG_ID] = gangid;
		GangInfo[gangid][GANG_MEMBERS] = 0;
		GangInfo[gangid][GANG_COLOR] = 0xFFFFFF88;

		format(string2, sizeof(string2), "[INFO]: Clan Creado!. Nombre: %s, ID: %d, ScoreClan: %d", GangInfo[gangid][GANG_NAME], GangInfo[gangid][GANG_ID], GangInfo[gangid][GANG_SCORE]);
  		SendClientMessage(playerid, COLOR_ROJO, string2);


		new name[MAX_PLAYER_NAME],stringcol[300];
	    GetPlayerName(playerid, name, sizeof(name));
	    dUserSetINT(PlayerName2(playerid)).("clan",gangid);
	    dUserSetINT(PlayerName2(playerid)).("lider",1);
        new stringeng[100];
	    PlayerGang[playerid] = gangid;
	    GangInfo[gangid][GANG_MEMBERS]++;
	    format(string2, sizeof(string2), "[CLAN]: Tú has creado y entrado al Clan %s, miembros: %d", GangInfo[gangid][GANG_NAME], GangInfo[gangid][GANG_MEMBERS]);
	    SendClientMessage(playerid, COLOR_GREEN, string2);
	    format(stringcol, sizeof(stringcol), "[CLAN]: Cambia el color de tu clan con {FFFFFF}/Clan Color!");
	    SendClientMessage(playerid, COLOR_GREEN, stringcol);
	    format(stringeng, sizeof(stringeng), "[CLAN]: %s a creado el Clan %s", name , GangInfo[gangid][GANG_NAME]);
	    SendClientMessageToAll(COLOR_GREEN, stringeng);
        SetPlayerColor(playerid, GangInfo[gangid][GANG_COLOR]);
	    SpawnPlayer(playerid);
     dini_IntSet(gfile, "GANG_MEMBERS", GangInfo[gangid][GANG_MEMBERS]);
		return 1;
	}
	//---- Invito
	if(strcmp(tmp, "invitar", true) == 0)
	{
		if(!strlen(tmp2)) return SendClientMessage(playerid, COLOR_ROJO, "Usa /Clan Invitar [ID]");
		if(PlayerGang[playerid] == 0)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Tú no tienes Clan!");
		if(PlayerLider[playerid] == 0)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Tú no eres el líder!");
		if(GangInfo[PlayerGang[playerid]][GANG_MEMBERS] > MAX_USERS)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}El Clan Ya Está Lleno! (500 Users)");
		new id = strval(tmp2);
		if (id == playerid) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No puedes Invitarte a ti mismo al Clan.");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}ID Inválida");
		new name22[MAX_PLAYER_NAME];
		new name1[MAX_PLAYER_NAME];
        GetPlayerName(id, name22, sizeof(name22));
        GetPlayerName(playerid, name1, sizeof(name1));
		invited[id] = PlayerGang[playerid];
		if(PlayerGang[id] >= 1) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}El Player ya está en un Clan!");
		format(string2, sizeof(string2), "Tú Has Sido Invitado Por %s Al Clan %s.", name1, GangInfo[PlayerGang[playerid]][GANG_NAME]);
		ShowPlayerDialog(id, INVITAR, DIALOG_STYLE_MSGBOX, "{ffb800}|| Invitación de Clan ||", string2, "Aceptar", "Rechazar");
		format(string2, sizeof(string2), "[CLAN]: Tú Invistaste a %s a Tu Clan!", name22);
		SendClientMessage(playerid, COLOR_ROJO, string2);
		return 1;
 }
	//---- Lasciare Gang
	if(strcmp(tmp, "salir", true) == 0)
	{
	new gangid = PlayerGang[playerid];
	    //if(PlayerLider[playerid] == 0)return SendClientMessage(playerid, COLOR_ROJO, "[Revolucion Latina]: {FFFFFF}El Lider no puede salir de su propio Clan por Seguridad!");
		if(PlayerGang[playerid] == 0){
  			dUserSetINT(PlayerName2(playerid)).("clan",0);
  			dUserSetINT(PlayerName2(playerid)).("lider",0);
			PlayerGang[playerid] = 0;
			PlayerLider[playerid] = 0;
			invited[playerid] = 0;
			GangInfo[gangid][GANG_MEMBERS]--;
			if(PlayerGang[playerid] == 0)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Tú No Tienes Clan!");
		}
		LeaveGang(playerid, PlayerGang[playerid]);
		return 1;
	}

	if(strcmp(tmp, "darlider", true) == 0)
	{
		if(!strlen(tmp2)) return SendClientMessage(playerid, COLOR_ROJO, "Usa /Clan DarLider [ID]");
		if(PlayerGang[playerid] == 0)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Tú No Tienes Clan!");
		if(PlayerLider[playerid] == 0)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Tú No Eres el Lider!");
		if(GangInfo[PlayerGang[playerid]][GANG_MEMBERS] > MAX_USERS)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}El Clan Ya Está Lleno! (500 Users)");
		new id = strval(tmp2);
		if(id == playerid) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No puedes darte a ti mismo el Lider.");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}ID Inválida");
		if(PlayerGang[playerid] != PlayerGang[id]) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}El usuario no es de tu Clan!");
		if(PlayerLider[id] == 1) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}El usuario ya tiene Lider!");
		new name22[MAX_PLAYER_NAME];
		new name1[MAX_PLAYER_NAME];
        GetPlayerName(id, name22, sizeof(name22));
        GetPlayerName(playerid, name1, sizeof(name1));
	    PlayerLider[id] = 1;
	    new string9[1000];
        dUserSetINT(PlayerName2(playerid)).("lider",1);
        dUserSetINT(PlayerName2(id)).("lider",1);
		format(string2, sizeof(string2), "[CLAN]: %s Te ha dado Lider Del Clan %s.", name1, GangInfo[PlayerGang[playerid]][GANG_NAME]);
        SendClientMessage(id, COLOR_VERDE, "[CLAN]: Ahora eres Lider del clan, Puedes expulsar, darlider, etc.!");
		format(string9, sizeof(string9), "[CLAN]: Le has dado Lider del clan a %s!", name22);
		SendClientMessage(id, COLOR_VERDE, string2);
		SendClientMessage(playerid, COLOR_VERDE, string9);
		return 1;
	}

    if(strcmp(tmp, "quitarlider", true) == 0)
	{
 		if(PlayerLider[playerid] == 1)
 		{
		if(!strlen(tmp2)) return SendClientMessage(playerid, COLOR_ROJO, "Usa: /Clan quitarlider [ID]");
		if(PlayerGang[playerid] == 0)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Tú No Tienes Clan!");
		if(PlayerLider[playerid] == 0)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Tú No Eres el Lider!");
		new id = strval(tmp2);
		new string9[1000];
		new name22[MAX_PLAYER_NAME];
		new name1[MAX_PLAYER_NAME];
        GetPlayerName(id, name22, sizeof(name22));
        GetPlayerName(playerid, name1, sizeof(name1));
		if(id == playerid) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No puedes quitarte a ti mismo el Lider.");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}ID Inválida");
		format(string2, sizeof(string2), "El Lider %s te ha quitado el lider del Clan %s!",name1, GangInfo[PlayerGang[playerid]][GANG_NAME]);
		SendClientMessage(id, COLOR_VERDE, string2);
		PlayerLider[id] = 0;
		dUserSetINT(PlayerName2(id)).("lider",0);
		format(string9, sizeof(string9), "[CLAN]: Le has quitado el liderazgo del clan a %s!",  name22);
		SendClientMessage(playerid, COLOR_VERDE, string9);
		} else return SendClientMessage(playerid, COLOR_RED, "[ERROR]: Tú No Eres el Lider!");
	return 1;
}

	if(strcmp(tmp, "expulsar", true) == 0)
	{
		if(!strlen(tmp2)) return SendClientMessage(playerid, COLOR_ROJO, "Usa /Clan Expulsar [ID]");
		if(PlayerGang[playerid] == 0)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Tú No Tienes Clan!");
		if(PlayerLider[playerid] == 0)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Tú No Eres el Lider!");
		new id = strval(tmp2);
		if(id == playerid) return SendClientMessage(playerid,COLOR_ROJO,"[ERROR]: {FFFFFF}No puedes expulsarte a ti mismo del clan!");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}ID Inválida");
		if(PlayerGang[playerid] != PlayerGang[id]) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}El usuario no es de tu Clan!");
		new name22[MAX_PLAYER_NAME];
		new name1[MAX_PLAYER_NAME];
        new gangid = PlayerGang[playerid];
        GetPlayerName(id, name22, sizeof(name22));
        GetPlayerName(playerid, name1, sizeof(name1));
		if(dUserINT(PlayerName2(id)).("clan") == gangid)
        {
  		format(string2, sizeof(string2), "[CLAN]: %s Ha sido Expulsado del Clan %s", name22, GangInfo[PlayerGang[playerid]][GANG_NAME]);
		dUserSetINT(PlayerName2(id)).("clan",0);
		dUserSetINT(PlayerName2(id)).("lider",0);
		PlayerGang[id] = 0;
		PlayerLider[id] = 0;
		invited[id] = 0;
		SetPlayerColor(id, RandomColors[id]);
		GangInfo[gangid][GANG_MEMBERS]--;
	    SpawnPlayer(id);
		format(string2, sizeof(string2), "[CLAN]: Tu expulsaste a %s de Tu Clan!", name22);
		SendClientMessage(playerid, COLOR_VERDE, string2);
		new gfile[100];
		format(gfile, sizeof(gfile), GANG_FILE, gangid);
		dini_IntSet(gfile, "GANG_MEMBERS", GangInfo[gangid][GANG_MEMBERS]);
		}
		else return SendClientMessage(playerid, COLOR_ROJO,"[ERROR]: {FFFFFF}El player no esta en el Clan!");
		return 1;
	}

 	if(strcmp(tmp, "color", true) == 0)
    {
        if(!strlen(tmp2))return SendClientMessage(playerid, red, "[USO]: /clan color [ID COLOR]") &&
	    SendClientMessage(playerid, orange, "Colores: 0=negro 1=blanco 2=rojo 3=naranja 4=amarillo 5=verde 6=azul 7=purpura 8=marron 9=rosa");
		if(PlayerGang[playerid] == 0)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Tú No Tienes Clan!");
		if(PlayerLider[playerid] == 0)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Tú No Eres el Lider!");
        new gangid = PlayerGang[playerid];
		new Colour = strval(tmp2);
		new colour2[50];
        if(IsPlayerConnected(playerid) && PlayerLider[playerid] == 1)
		{
			for(new i = 0; i <= GANG_NUMBER; i++)
	        {
			new file[100];
			format(file, sizeof(file), GANG_FILE, i);
			if(dini_Exists(file))
			{
			switch (Colour)
			{
			    case 0: { GangInfo[gangid][GANG_COLOR] = 0xFFFFFFFF; dini_IntSet(file, "COLOR", GangInfo[gangid][GANG_COLOR]); SetPlayerColor(playerid,0xFFFFFFFF); colour2 = "Blanco"; }
			    case 1: { GangInfo[gangid][GANG_COLOR] = 0x000000FF; dini_IntSet(file, "COLOR", GangInfo[gangid][GANG_COLOR]); SetPlayerColor(playerid,0x000000FF); colour2 = "Negro"; }
			    case 2: { GangInfo[gangid][GANG_COLOR] = 0xFF0000FF; dini_IntSet(file, "COLOR", GangInfo[gangid][GANG_COLOR]); SetPlayerColor(playerid,0xFF0000FF); colour2 = "Rojo"; }
			    case 3: { GangInfo[gangid][GANG_COLOR] = 0xFF7D00FF; dini_IntSet(file, "COLOR", GangInfo[gangid][GANG_COLOR]); SetPlayerColor(playerid,0xFF7D00FF); colour2 = "Naranja"; }
				case 4: { GangInfo[gangid][GANG_COLOR] = 0xFFFF00FF; dini_IntSet(file, "COLOR", GangInfo[gangid][GANG_COLOR]); SetPlayerColor(playerid,0xFFFF00FF); colour2 = "Amarillo"; }
				case 5: { GangInfo[gangid][GANG_COLOR] = 0x00CB38FF; dini_IntSet(file, "COLOR", GangInfo[gangid][GANG_COLOR]); SetPlayerColor(playerid,0x00CB38FF); colour2 = "Verde"; }
				case 6: { GangInfo[gangid][GANG_COLOR] = 0x0000FFFF; dini_IntSet(file, "COLOR", GangInfo[gangid][GANG_COLOR]); SetPlayerColor(playerid,0x0000FFFF); colour2 = "Azul"; }
				case 7: { GangInfo[gangid][GANG_COLOR] = 0x800080AA; dini_IntSet(file, "COLOR", GangInfo[gangid][GANG_COLOR]); SetPlayerColor(playerid,0x800080AA); colour2 = "Purpura"; }
				case 8: { GangInfo[gangid][GANG_COLOR] = 0xA52A2AAA; dini_IntSet(file, "COLOR", GangInfo[gangid][GANG_COLOR]); SetPlayerColor(playerid,0xA52A2AAA); colour2 = "Marron"; }
				case 9: { GangInfo[gangid][GANG_COLOR] = 0xFF00FFFF; dini_IntSet(file, "COLOR", GangInfo[gangid][GANG_COLOR]); SetPlayerColor(playerid,0xFF00FFFF); colour2 = "Rosa"; }
				case 10: { if(!strcmp("Carlosxp",pName(playerid),true) || !strcmp("Sr.[F]ran",pName(playerid),true)) { GangInfo[gangid][GANG_COLOR] = 0x00FFFFFF; dini_IntSet(file, "COLOR", GangInfo[gangid][GANG_COLOR]); SetPlayerColor(playerid,0x00FFFFFF); colour2 = "Cian (Oculto)"; } }
			}
			}
			}
			format(string2, sizeof(string2), "[CLAN]: Has puesto el color del clan en '%s' ",colour2);
   			return SendClientMessage(playerid,ColorAdmin,string2);
	    } else return SendClientMessage(playerid,red,"[ERROR]: {FFFFFF}El jugador no está conectado");
    }

	//---- Stats
	if(strcmp(tmp, "stats", true) == 0)
	{
       	new player1;
	    if(!strlen(tmp2)) player1 = playerid;
	    else player1 = strval(tmp2);

	    if(IsPlayerConnected(player1)) {
		if(PlayerGang[player1] == 0)return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No Tiene Clan!");
		new gangid = PlayerGang[player1];
		GangInfo[gangid][GANG_NZONE] = 0;
		for(new i = 0; i <= ZONE_NUMBER; i++)
		{
			new file[100];
			format(file, sizeof(file), ZONE_FILE, i);
			if(dini_Exists(file) && GangInfo[gangid][GANG_ID] == dini_Int(file,"ZONE_GANGID")) GangInfo[gangid][GANG_NZONE]++;

		}

		format(string2, sizeof(string2), "Nick: %s \nClan ID: %d \nClan: %s \nMiembros: %d \nZonas conquistadas: %d\nScore Clan: %d",PlayerName2(player1), gangid, GangInfo[gangid][GANG_NAME], GangInfo[gangid][GANG_MEMBERS], GangInfo[gangid][GANG_NZONE], GangInfo[gangid][GANG_SCORE]);
        ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{ffb800}|| Info del Clan ||", string2, "OK", "");
        } else return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}Jugador no conectado");
		return 1;

	}
	//---- Delete Inactive
	if(strcmp(tmp, "di", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] <= 9) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No puedes usar este comando.");
		new file[30];
		for(new i = 0; i <= GANG_NUMBER; i++)
		{
			format(file, sizeof(file), GANG_FILE, i);
			if(dini_Exists(file) && dini_Int(file,"GANG_MEMBERS") <= 2)
			{
				dini_Remove(file);
				format(string2, sizeof(string2), "[INFO]: Clan Eliminado: ID:%d, Miembros: %d, Nombre: %s", i, GangInfo[i][GANG_MEMBERS], GangInfo[i][GANG_NAME]);
				SendClientMessage(playerid, COLOR_ROJO, string2);
				for(new p; p < MAX_PLAYERS; p++)
				{
        			if(PlayerGang[p] == i && IsPlayerConnected(p))
					{
		   				dUserSetINT(PlayerName2(playerid)).("clan",0);
		   				dUserSetINT(PlayerName2(playerid)).("lider",0);
						PlayerGang[p] = 0;
					}
				}
			}
		}
		return 1;
	}


	if(strcmp(tmp, "radar", true) == 0)
	{
	    if(PlayerGang[playerid] == 0) return SendClientMessage(playerid, COLOR_ROJO, "[ERROR]: {FFFFFF}No perteneces a ningún clan!");
		if(gradar[playerid] == 0)
		{
   			for(new i; i < MAX_PLAYERS; i++)
			{

	     		if(PlayerGang[playerid] != PlayerGang[i] && IsPlayerConnected(i)) SetPlayerMarkerForPlayer(playerid, i, (GetPlayerColor(i) & 0xFFFFFF00));
			}
			gradar[playerid] = 1;
			gradartimer[playerid] = SetTimerEx("GangRadar", 1000, true, "i", playerid);
		}
		else
		{
        	for(new i; i < MAX_PLAYERS; i++) SetPlayerMarkerForPlayer(playerid, i, GetPlayerColor(i));
   			gradar[playerid] = 0;
   			KillTimer(gradartimer[playerid]);
		}
		return 1;
	}
		//---- Lasciare Gang
	if(strcmp(tmp, "info", true) == 0)
	{
	new string[800];
	strcat(string, "{06FF24}>> Info del Clan:\n\n");
	strcat(string, "{FF0000}* {FF8801}Para crear un clan usa /clan crear.\n\n");
	strcat(string, "{FF0000}* {FF8801}Para invitar a alguien al Clan usa /clan invitar.\n\n");
	strcat(string, "{FF0000}* {FF8801}Para salir del Clan usa /clan salir.\n\n");
	strcat(string, "{FF0000}* {FF8801}Para ver info de tu clan usa /clan stats.\n\n");
	strcat(string, "{FF0000}* {FF8801}Sólo puedes tener hasta 300 miembros máximo.\n\n");
	strcat(string, "{FF0000}* {FF8801}Para ver la ubicación de los otros de tu Clan usa /clan radar.\n\n\n");
	strcat(string, "{06FF24}>> Info del Zonas:\n\n");
	strcat(string, "{FF0000}* {FF8801}Para conquistar una zona debes quedarte en ella por 1 minuto con 2 intregantes más.\n\n");
	strcat(string, "{FF0000}* {FF8801}Para invadir una zona debes hacer lo mismo nombrado anteriormente.\n\n");
	strcat(string, "{FF0000}* {FF8801}Si tu zona está siendo atacada debes ir allá y matar a los adversarios.\n\n");
	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{ffb800}|| Info de Clanes ||", string, "Aceptar", "");
	return 1;
	}
	else SendClientMessage(playerid, COLOR_ROJO, "USE: /Clan [Crear/Invitar/DarLider/QuitarLider/Expulsar/Color/Salir/Stats/Radar/Info]");
	return 1;
	}

forward Message2Gang(gangid, text[]);
public Message2Gang(gangid, text[])
{
	for(new i; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i)){
	    if(PlayerInfo[i][pAdmin] > 3) SendClientMessage(i,lightblue,text);
		else if(PlayerGang[i] == gangid) SendClientMessage(i, GangInfo[gangid][GANG_COLOR], text);
	}
	}
	return 1;
}
//==================== Anti Bullet Crasher Created By  Versión Beta ======================//
  public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
if( !( 22 <= weaponid <= 34 ) && weaponid != 38 ) //Detecta el weapon crasher
Kick(playerid);// Queda el usuario baneado en rango (ban por ip, usuario y parte de la localización donde se encuentra el usuario)

if(balason[playerid] == 1) return 1;
CreateExplosion(fX, fY, fZ, 12, 1.0);

return 1;
}
//=============================================================================//
stock GetPlayerHighestScores(array[][rankingEnum], left, right)
{
    new
        tempLeft = left,
        tempRight = right,
        pivot = array[(left + right) / 2][player_Score],
        tempVar
    ;
    while(tempLeft <= tempRight)
    {
        while(array[tempLeft][player_Score] > pivot) tempLeft++;
        while(array[tempRight][player_Score] < pivot) tempRight--;

        if(tempLeft <= tempRight)
        {
            tempVar = array[tempLeft][player_Score], array[tempLeft][player_Score] = array[tempRight][player_Score], array[tempRight][player_Score] = tempVar;
            tempVar = array[tempLeft][player_ID], array[tempLeft][player_ID] = array[tempRight][player_ID], array[tempRight][player_ID] = tempVar;
            tempLeft++, tempRight--;
        }
    }
    if(left < tempRight) GetPlayerHighestScores(array, left, tempRight);
    if(tempLeft < right) GetPlayerHighestScores(array, tempLeft, right);
}

//================================================================================
public PowrotFloat(playerid)
{
	SetPlayerPos(playerid,FlatX[playerid],FlatY[playerid],FlatZ[playerid]);
	SetPlayerHealth(playerid, PlayerHealthFLO[playerid]);
	SendClientMessage(playerid, COLOR_AZUL, "[INFO]: Fuiste desbugeado.");
	return 1;
}
//===============================================================================
    ////////////////////////////////////////////////////////////////////////////
    IsPlayerInInvalidNeonVehicle(playerid,vehicleid)
    {
    #define MAX_INVALID_NEON_VEHICLES 77
    new InvalidNeonVehicles[MAX_INVALID_NEON_VEHICLES] =
    {
   592,577,511,512,593,520,553,476,519,460,513,441,464,424,
   465,501,564,594,548,425,417,587,488,497,563,447,469,568,
   538,539,583,449,574,572,571,434,537,530,532,457,485,481,
   509,510,462,488,581,522,461,521,523,463,586,468,471,472,
   473,493,595,484,430,453,452,446,454,435,450,591,606,607,
   610,569,590,584,570,608,611
    };
    vehicleid = GetPlayerVehicleID(playerid);
    if(IsPlayerInVehicle(playerid,vehicleid))
    {
    for(new i = 0; i < MAX_INVALID_NEON_VEHICLES; i++)
    {
    if(GetVehicleModel(vehicleid) == InvalidNeonVehicles[i])
    {
    return true;
    }
    }
    }
    return false;
    }
    IsPlayerInInvalidLuzVehicle(playerid,vehicleid)
    {
    #define MAX_INVALID_LUZ_VEHICLES 77
    new InvalidLuzVehicles[MAX_INVALID_LUZ_VEHICLES] =
    {
   592,577,511,512,593,520,553,476,519,460,513,441,464,424,
   465,501,564,594,548,425,417,587,488,497,563,447,469,568,
   538,539,583,449,574,572,571,434,537,530,532,457,485,481,
   509,510,462,488,581,522,461,521,523,463,586,468,471,472,
   473,493,595,484,430,453,452,446,454,435,450,591,606,607,
   610,569,590,584,570,608,611
    };
    vehicleid = GetPlayerVehicleID(playerid);
    if(IsPlayerInVehicle(playerid,vehicleid))
    {
    for(new i = 0; i < MAX_INVALID_LUZ_VEHICLES; i++)
    {
    if(GetVehicleModel(vehicleid) == InvalidLuzVehicles[i])
    {
    return true;
    }
    }
    }
    return false;
    }
//===============================================================================
//textos automáticos q aparecen en el chat
forward GlobalAnnouncement();
public GlobalAnnouncement()
{
	switch (Msg)
    {
  case 0:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}.:||{C50404}R{0700D7}L{0ED59C}||:.{098BEE}: {F5970C}Foro del servidor: {EE1257}www.axone12.zz.mu/RevolucionLatina/{F5970C}.");
      Msg++;}

      case 1:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}.:||{C50404}R{0700D7}L{0ED59C}||:.{098BEE}: {F5970C}Desafía a un usuario a través de Duelos, usa: {EE1257}/Duelo Invitar{F5970C}.");
      Msg++;}

      case 2:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}.:||{C50404}R{0700D7}L{0ED59C}||:.{098BEE}: {F5970C}Para reportar infracción de /Reglas, usa: {EE1257}/Reportar [ID] [MOTIVO]{F5970C}.");
      Msg++;}

      case 3:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}.:||{C50404}R{0700D7}L{0ED59C}||:.{098BEE}: {F5970C}Si contienes una duda del servidor, usa {00FF00}/Ayuda {F5970C}-{EE1257} /Pregunta{F5970C}.");
      Msg++;}

      case 4:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}.:||{C50404}R{0700D7}L{0ED59C}||:.{098BEE}: {F5970C}Pedir un rango exclusivo, atrae las sanciones. Usa:{EE1257} /Reglas{F5970C}.");
      Msg++;}

      case 5:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}.:||{C50404}R{0700D7}L{0ED59C}||:.{098BEE}: {F5970C}¿Viste a un superior abusando?, podés reportarlo a través de nuestro grupo{F5970C}.");
      Msg++;}

      case 6:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}.:||{C50404}R{0700D7}L{0ED59C}||:.{098BEE}: {F5970C}Para evitar sanciones, recomendamos que leas las {29FF0D}/Reglas{F5970C}.");
      Msg++;}

      case 7:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}.:||{C50404}R{0700D7}L{0ED59C}||:.{098BEE}: {F5970C}¡Conoce más el servidor!, usa {EE1257}/Creditos{F5970C}.");
      Msg++;}

      case 8:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}.:||{C50404}R{0700D7}L{0ED59C}||:.{098BEE}: {F5970C}Únete al grupo del servidor: {0700D7}www.facebook.com/groups/revolucionlatina2016{F5970C}.");
      Msg++;}

      case 9:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}.:||{C50404}R{0700D7}L{0ED59C}||:.{098BEE}: {F5970C}Si gustas en sacar vehículos, usa:{29FF0D} /Autos{F5970C}.");
      Msg++;}

      case 10:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}|-:-|{C50404}R{FFFFFF}L{0ED59C}|-:-|{098BEE}: {F5970C}Si gustas en comprar armas, usa: {EE1257} /Armas{F5970C}.");
      Msg++;}

      case 11:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}|-:-|{C50404}R{FFFFFF}L{0ED59C}|-:-|{098BEE}: {F5970C}Para ver los requisitos de VIP, usa: {EE1257} /Cmds7{F5970C}.");
      Msg++;}

      case 12:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}|-:-|{C50404}R{FFFFFF}L{0ED59C}|-:-|{098BEE}: {F5970C}Para ver los comandos disponibles en los Clanes, usa: {EE1257} /Clan{F5970C}.");
      Msg++;}

      case 13:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}|-:-|{C50404}R{FFFFFF}L{0ED59C}|-:-|{098BEE}: {F5970C}Si te gusta el Stunt podrás divertirte, usando {EE1257}/Stunt{F5970C}.");
      Msg++;}

      case 14:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}|-:-|{C50404}R{FFFFFF}L{0ED59C}|-:-|{098BEE}: {F5970C}El Servidor ahora es {EE1257}SkinShoot{F5970C}. Se tendrá que disparar al skin{F5970C}.");
      Msg++;}

      case 15:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}|-:-|{C50404}R{FFFFFF}L{0ED59C}|-:-|{098BEE}: {F5970C}Si sos nuevo en SA:MP, te damos la información de él. Usa: {F5970C} /Sampinfo{F5970C}.");
      Msg++;}

      case 16:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}|-:-|{C50404}R{FFFFFF}L{0ED59C}|-:-|{098BEE}: {F5970C}Poner el comando {F5970C}/Q{F5970C} o{F5970C} /Adios{F5970C} causa la salida del servidor, ¡no hacer caso si no los precisas!{F5970C}.");
      Msg++;}

      case 17:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}|-:-|{C50404}R{FFFFFF}L{0ED59C}|-:-|{098BEE}: {F5970C}¡Los dueños del Servidor son:{F5970C} Sr.[F]ran{F5970C},{F5970C} [PFP]Scarface(Jefe){F5970C} y{F5970C} [SpT]Jehu[O]!{F5970C}.");
      Msg++;}

      case 18:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}|-:-|{C50404}R{FFFFFF}L{0ED59C}|-:-|{098BEE}: {F5970C}La ip del servidor es: {F5970C}74.91.121.59:6666{F5970C} ¡Agrégala en la parte de favoritos!{F5970C}.");
      Msg++;}

      case 19:
      {SendClientMessageToAll(COLOR_AMARILLO, "{0ED59C}|-:-|{C50404}R{FFFFFF}L{0ED59C}|-:-|{098BEE}: {F5970C}Para cambiar tú Nick, usa: {F5970C}/nombre{F5970C}, ponerlo largo causa la pérdida de cuenta permanentemente{F5970C}.");
      Msg = 0;}
   }
   return 1;
}

stock Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1h,Float:y1h,Float:z1h,Float:x2h,Float:y2h,Float:z2h;

	if (!IsPlayerConnected(p1) || !IsPlayerConnected(p2)){
		return -1.00;
	}
	GetPlayerPos(p1,x1h,y1h,z1h);
	GetPlayerPos(p2,x2h,y2h,z2h);
	return floatsqroot(floatpower(floatabs(floatsub(x2h,x1h)),2)+floatpower(floatabs(floatsub(y2h,y1h)),2)+floatpower(floatabs(floatsub(z2h,z1h)),2));
}

 public NuevoConcurso()
    {
            RespuestaConcurso = MINIMUM_VALUE + random(MAXIMUM_VALUE-MINIMUM_VALUE);
            format(string2,sizeof string2,"{00FF00}[TEST-REACCIÓN]: {00EEFF}Un nuevo Test de reacción a empezado. El primero que escriba {FFFFFF}%d {00FF00}gana $%d {FF0000}y + 3 nivel.{FF0000}|Administradores no participan| ",RespuestaConcurso,PREMIO_CONCURSO);
            SendClientMessageToAll(COLOR_AMARILLO,string2);
            return 1;
    }

    public JugadorGanaConcurso(playerid)
    {
            new pNameS[MAX_PLAYER_NAME];
            GetPlayerName(playerid,pNameS,sizeof pNameS);
            format(string2,sizeof string2,"{00FF00}[INFO]: {00EEFF}El jugador {FFFFFF}%s [%d] {00FF00}ganó el Test de reacción {00EEFF}[Premio: $%d +3 Nivel]",pNameS,playerid,PREMIO_CONCURSO);
            SendClientMessageToAll(COLOR_VERDE,string2);
            GivePlayerMoney(playerid,PREMIO_CONCURSO);
            PlayerInfo[playerid][Nivel]++;
            PlayerInfo[playerid][Nivel]++;
            PlayerInfo[playerid][Nivel]++;
			RespuestaConcurso = -1;
            return 1;
    }

//------------------------------------------------------------------------------
public BorrarRampa(playerid)
{
	if (jumped[playerid] != -1) {
	    DestroyObject(jumped[playerid]);
	    jumped[playerid] = -1;
	    ramped[playerid]=0;
	}
}
Float:GetRampDistance(playerid)
{
	new ping = GetPlayerPing(playerid), Float:dist;
	dist = floatpower(ping, 0.25);
	dist = dist*4.0;
	dist = dist+5.0;
	return dist;
}

Float:GetPosInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	if (IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	else GetPlayerFacingAngle(playerid, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return a;
}
//========================== Antibot ===========================================
/*antiKick
forward CrashPlayer(playerid, playerIP[]);
public CrashPlayer(playerid, playerIP[])
{
	format(string2,sizeof(string2),"[ANTI-BOT]: Bot/Kick [Flooder Reconexión] %s [%i] a Sido Baneado!",PlayerName2(playerid),playerid);
 	SendClientMessageToAll(red,string2);
 	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, " {FF0000}Advertencia - RL","{FFFFFF} Has sido Baneado del Servidor \n\n{FF0000}Razón: {FFFFFF}Flooder Reconexión", "Aceptar", "") ;
	Ban(playerid);
	return true;
}
forward ARKick(playerid);
public ARKick(playerid)
{
	if(!IPDATA[playerid][Ignore])
	{
		GetPlayerIp(playerid, IPDATA[playerid][IP_ADDRESS], 16);
		new rchck = RESET_CHECK;
		if(rchck != 0) SetTimerEx("ResetIPSlot", RESET_CHECK*1000, false, "d", playerid);
	}
	printf("[ANTI-BOT]: El ID %i Usó Antikick",playerid);
	Kick(playerid);
	return true;
}
forward ResetIPSlot(ipslotid);
public ResetIPSlot(ipslotid)
{
	printf("[ANTI-BOT] Slot Reseteado Por AntiKick Fail %i [%s]",ipslotid, IPDATA[ipslotid][IP_ADDRESS]);
	format(IPDATA[ipslotid][IP_ADDRESS],16,"_");
	return true;
}*/
//==============================================================================
stock GetNumberOfPlayersOnThisIP(test_ip[])
{
	new against_ip[32+1];
	new x = 0;
	new ip_count = 0;
	for(x=0; x<MAX_PLAYERS; x++) {
		if(IsPlayerConnected(x)) {
		    GetPlayerIp(x,against_ip,32);
		    if(!strcmp(against_ip,test_ip)) ip_count++;
		}
	}
	return ip_count;
}

forward GuardarAntiBot(filename[],text[]);
public GuardarAntiBot(filename[],text[])
{
	#if defined Guardar_Logs
	new File:LAdminfile, file[256], year,month,day, hour,minute,second;
	getdate(year,month,day); gettime(hour,minute,second);

	format(file,sizeof(file),"%s.txt",filename);
	LAdminfile = fopen(file,io_append);
	format(string2,sizeof(string2),"[%d.%d.%d %d:%d:%d] %s\r\n",day,month,year,hour,minute,second,text);
	fwrite(LAdminfile,string2);
	fclose(LAdminfile);
	#endif

	return 1;
}

stock NickSpam(SPAM[])
	{

    new SSPAM;
    new CUENTAP,CUENTAN,CUENTAGB;
	for(SSPAM = 0; SSPAM < strlen(SPAM); SSPAM ++)
	{
	    if(SPAM[SSPAM] == '.') CUENTAP ++;
	    if(SPAM[SSPAM] == '0' || SPAM[SSPAM] == '1' || SPAM[SSPAM] == '2' || SPAM[SSPAM] == '3' || SPAM[SSPAM] == '4' || SPAM[SSPAM] == '5' || SPAM[SSPAM] == '6' || SPAM[SSPAM] == '7' || SPAM[SSPAM] == '8' || SPAM[SSPAM] == '9') CUENTAN ++;
	    if(SPAM[SSPAM] == '_') CUENTAGB ++;
	}
 	if(CUENTAP >= 3 && CUENTAN >= 7) return 1;
 	if(CUENTAGB >= 1 && CUENTAN >= 7) return 1;
 	if((strfind(SPAM, ".com", true) != -1 || strfind(SPAM, ".com.ar", true) != -1 || strfind(SPAM, ".org", true) != -1 || strfind(SPAM, ".net", true) != -1 || strfind(SPAM, ".es", true) != -1 || strfind(SPAM, ".tk", true) != -1)) return 1;
	return 0;
	}

stock Flood(playerid)
    {
        if(GetTickCount() - AntiFlood[playerid] < 2000)
        return 1;

        return 0;
    }

public VidaHold(playerid)
	{
	    RemovePlayerAttachedObject(playerid, 0);
	    return 1;
	}

	public ChalecoHold(playerid)
	{
	    RemovePlayerAttachedObject(playerid, 0);
	    return 1;
	}
	
	iswheelmodel(modelid) {
    new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
    for(new wm; wm < sizeof(wheelmodels); wm++) {
        if (modelid == wheelmodels[wm])
            return true;
    }
    return false;
}

IllegalCarNitroIde(carmodel) {
    new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
    for(new iv; iv < sizeof(illegalvehs); iv++) {
        if (carmodel == illegalvehs[iv])
            return true;
    }
    return false;
}

stock pNombre(playerid)
{
	new Nombre[MAX_PLAYER_NAME];
	GetPlayerName(playerid, Nombre, sizeof(Nombre));
	return Nombre;
}

stock islegalcarmod(vehicleide, componentid) {
    new modok = false;
    if ( (iswheelmodel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010))) {
        new nosblocker = IllegalCarNitroIde(vehicleide);
        if (!nosblocker)
            modok = true;
    } else {
        for(new lm; lm < sizeof(legalmods); lm++) {
            if (legalmods[lm][0] == vehicleide) {
                for(new J = 1; J < 22; J++) {
                    if (legalmods[lm][J] == componentid)
                        modok = true;
                }
            }
        }
    }
    return modok;
}
//==============================================================================
public EnviarComando(playerid,command[])
	{
		format(string2,sizeof(string2),"%s ~n~%s",PlayerName2(playerid),command);
		if (textos==0) {TextDrawSetString(Textdraw0000000000,EStexto(string2)); TextDrawShowForAll(Textdraw0000000000); textos=1; SetTimerEx("OcultarComando", 5000, 0,"d",playerid); }
		else if (textos2==0) {TextDrawSetString(Textdraw1111111111,EStexto(string2)); TextDrawShowForAll(Textdraw1111111111); textos2=1; SetTimerEx("OcultarComando2", 5000, 0,"d",playerid); }
		else if (textos3==0) {TextDrawSetString(Textdraw2222222222,EStexto(string2)); TextDrawShowForAll(Textdraw2222222222); textos3=1; SetTimerEx("OcultarComando3", 5000, 0,"d",playerid); }
		return 1;
	}

	public OcultarComando(playerid)
	{
	TextDrawHideForAll(Textdraw0000000000);
	textos=0;
	}

	public OcultarComando2(playerid)
	{
	TextDrawHideForAll(Textdraw1111111111);
	textos2=0;
	}

	public OcultarComando3(playerid)
	{
	TextDrawHideForAll(Textdraw2222222222);
	textos3=0;
	}
//==============================================================================
public EnviarComando1(playerid,command[])
	{
		format(string2,sizeof(string2),"%s ~n~%s",PlayerName2(playerid),command);
		if (textosa==0) {TextDrawSetString(Textdrawvvvvvvvvvv,string2);  TextDrawShowForAll(Textdrawvvvvvvvvvv); textosa=1; SetTimerEx("OcultarComando1", 5000, 0,"d",playerid); }
		return 1;
	}

	public OcultarComando1(playerid)
	{
	TextDrawHideForAll(Textdrawvvvvvvvvvv);
	textosa=0;
	}
//==============================================================================
public EnviarComandoTele(playerid,command[])
	{
	    new string0[2500];
		format(string0,sizeof(string0),"~b~[TELE]: ~w~%s Se Fue A ~r~/%s",PlayerName2(playerid),command);
		if (ido==0) {TextDrawSetString(Tele,EStexto(string0)); TextDrawShowForAll(Tele); ido=1; SetTimerEx("OcultarComandoTele", 5000, 0,"d",playerid); }
		else if (ido1==0) {TextDrawSetString(Tele1,EStexto(string0)); TextDrawShowForAll(Tele1); ido1=1; SetTimerEx("OcultarComandoTele1", 5000, 0,"d",playerid); }
		else if (ido2==0) {TextDrawSetString(Tele2,EStexto(string0)); TextDrawShowForAll(Tele2); ido2=1; SetTimerEx("OcultarComandoTele2", 5000, 0,"d",playerid); }
		return 1;
	}

	public OcultarComandoTele(playerid)
	{
	TextDrawHideForAll(Tele);
	ido=0;
	}

	public OcultarComandoTele1(playerid)
	{
	TextDrawHideForAll(Tele1);
	ido1=0;
	}

	public OcultarComandoTele2(playerid)
	{
	TextDrawHideForAll(Tele2);
	ido2=0;
	}
	
public EnviarComandoDM(playerid,command[])
	{
	    new string0[2500];
		format(string0,sizeof(string0),"~r~[DM] ~w~%s Ha Ido A ~p~/%s",PlayerName2(playerid),command);
		if (ido==0) {TextDrawSetString(Tele,EStexto(string0)); TextDrawShowForAll(Tele); ido=1; SetTimerEx("OcultarComandoDM", 5000, 0,"d",playerid); }
		else if (ido1==0) {TextDrawSetString(Tele1,EStexto(string0)); TextDrawShowForAll(Tele1); ido1=1; SetTimerEx("OcultarComandoDM1", 5000, 0,"d",playerid); }
		else if (ido2==0) {TextDrawSetString(Tele2,EStexto(string0)); TextDrawShowForAll(Tele2); ido2=1; SetTimerEx("OcultarComandoDM2", 5000, 0,"d",playerid); }
		return 1;
	}

	public OcultarComandoDM(playerid)
	{
	TextDrawHideForAll(Tele);
	ido=0;
	}

	public OcultarComandoDM1(playerid)
	{
	TextDrawHideForAll(Tele1);
	ido1=0;
	}

	public OcultarComandoDM2(playerid)
	{
	TextDrawHideForAll(Tele2);
	ido2=0;
	}
//==============================================================================
forward AntiSpawnKill(playerid);
public AntiSpawnKill(playerid)
{
    SetPlayerHealth(playerid,100);
    SendClientMessage(playerid,COLOR_NARANJA,"{FF0000}[INFO]: {FFFFFF}La Protección {00FF00}Anti-SpawnKill {FFFFFF}Ha Terminado!");
    return 1;
 }
//==============================================================================
forward HideMessageDeath(playerid);
public HideMessageDeath(playerid)
{
	TextDrawHideForPlayer(playerid, Death0[playerid]);
	TextDrawHideForPlayer(playerid, Death1);
}
//========================================================================================================
forward MinigameWinner(player);
public MinigameWinner(player)
	{
		format(string2,sizeof(string2), "{00FF00}[Ganador]: {FFFFFF}%s {00EEFF}ha Ganado el Minijuego No te Mojes! {00FF00}}[Premio: $100000]",pName(player));
		SendClientMessageToAll(verde,string2);
		TextDrawHideForAll(ConcText);
	    new strev[1000];
		format(strev,sizeof(strev),"~b~Ganador: ~n~~w~%s",pName(player));
		TextDrawSetString(GanoText,strev);
		TextDrawShowForAll(GanoText);
		TextDrawShowForAll(GanoText2);
		SetTimer("SacarGano",12000,0);
		GivePlayerMoney(player,100000);
	 	Minigamer_{player} = false;
	 	PlayerInfo[player][EnEvento] = 0;
		Iter_Remove(_Minigamer,player);
		SetCameraBehindPlayer(player);
	   	SetPlayerVirtualWorld(player,0);
	   	SpawnPlayer(player);
	   	PlayerInfo[player][pScoreEvento]=PlayerInfo[player][pScoreEvento]+ 1;
        if(PlayerInfo[player][LoggedIn] == 1) SavePlayer(player);
		SetTimer("EndMinigame",1700,0);
	}
	
forward DJTimer(playerid);
public DJTimer(playerid)
{
	if(IsADJ[playerid] == 1)
	{
	    new string[128];
	    IsADJ[playerid] = 0;
	    PartyStarted = 0;
	    PartyPrepared = 0;
	    CurrentParticipants = 0;
	    format(string, sizeof(string), ".:|INFO|:. Al jugador %s, se le ha removido el rango DJ porque el tiempo expiró.", N(playerid));
	    SendClientMessageToAll(azulcito, string);
	}
	return 1;
}


forward MinigameCountdown();
public MinigameCountdown()
	{
		if( Iter_Count(_Minigamer) < 2)
		{
			SendClientMessageToAll(0xFF0000AA, "[Evento NoTeMojes]: {00EEFF}Evento Cancelado. Razón: No había suficientes Players. [mínimo = 2]");
			foreach(_Minigamer,i) Minigamer_{i} = false;
			TextDrawHideForAll(ConcText);
			TextDrawHideForAll(Textdrawrace);
			TextDrawHideForAll(Textdrawrace2);
			TextDrawHideForAll(Textdrawrace3);
			TextDrawHideForAll(Textdrawrace4);
			TextDrawHideForAll(Textdrawrace5);
			foreach(_Minigamer,i) PlayerInfo[i][EnEvento] = 0;
			return EndMinigame();
		}
		if( inProgress != 2)
		{
		    new spot;
			foreach(_Minigamer,i)
			{
	  			PlayerInfo[i][EnEvento] = 1;
	  			SetPlayerVirtualWorld(i,7);
				ResetPlayerWeapons(i);
				SetPlayerInterior(i,0);
				spot = Iter_Random(_Objects);
	     		GameTextForPlayer(i,pReadyText[random(sizeof(pReadyText))],2050,3);
	     		Iter_Remove(_Objects,spot);
	     		SetPlayerCameraPos(i,-5298.4814,-218.4391,42.1386);
	     		SetPlayerCameraLookAt(i,-5298.1616,-189.6903,23.6564);
	     		TogglePlayerControllable(i,false);
				SetPlayerPos(i,gCoords[spot][0],gCoords[spot][1],gCoords[spot][2]+0.5);
			}
			Iter_Clear(_Objects);
			for(new i; i < MAX_SLOTS; i++) Iter_Add(_Objects,i);
			SetTimer("MinigameCountdown",2000,0);
			inProgress = 2;
		}
		else
		{
			foreach(_Minigamer,i)
			{
			    if(!VIEW_FROM_ABOVE)
				SetCameraBehindPlayer(i);
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				TogglePlayerControllable(i,true);
			}
			uTimer = SetTimer("MinigameUpdate", 2500,1);
		}
		return 1;
	}
forward MinigameUpdate();
public MinigameUpdate()
	{
		if(Iter_Count(_Minigamer) < 1) return EndMinigame();

		new Float:playerx, Float:playery, Float:playerz[MAX_PLAYERS];
		foreach(_Minigamer,i)
		{
			GetPlayerPos(i,playerx,playery,playerz[i]);
			if( playerz[i] < 2.0)
			{
				format(string2,sizeof(string2),"{00FF00}[Evento NoTeMojes]: {FFFFFF}%s {00EEFF}Ha Salido Fuera Del Cuadrilátero {00FF00}[Rank %d]",pName(i),Iter_Count(_Minigamer ) );
				SendClientMessageToAll(azulcito,string2);
				GameTextForPlayer(i,pFellOffText[random(sizeof(pFellOffText))],2500,3);
				Iter_Remove(_Minigamer,i);
				Minigamer_{i} = false;
				PlayerInfo[i][EnEvento] = 0;
				SetCameraBehindPlayer(i);
	   	        SetPlayerVirtualWorld(i,0);
	   	        SpawnPlayer(i);
			}
		}
		if(Iter_Count(_Minigamer) < 2)
		{
	 		foreach(_Minigamer,i) MinigameWinner(i);
		}
	 	new objectid,Float:ObjectX,Float:ObjectY,Float:ObjectZ;
	    if(!VIEW_FROM_ABOVE)
	    {
		 	foreach(_Objects,i)
			{
				if(isodd(random(10)))
				{
			 	    GetObjectPos(Objects_[0][i],ObjectX,ObjectY,ObjectZ);
					MoveObject(Objects_[0][i],ObjectX,ObjectY,ObjectZ -1.5,0.2);
		   			MoveObject(Objects_[1][i],ObjectX,ObjectY,ObjectZ -1.5,0.2);
				}
				else
				{
					GetObjectPos(Objects_[0][i],ObjectX,ObjectY,ObjectZ);
					MoveObject(Objects_[0][i],ObjectX,ObjectY,ObjectZ +1.5,0.2);
					MoveObject(Objects_[1][i],ObjectX,ObjectY,ObjectZ +1.5,0.2);
				}
			}
		}
	 	objectid = Iter_Random(_Objects);
		GetObjectPos(Objects_[0][objectid],ObjectX,ObjectY,ObjectZ);
		SetTimerEx("SpeedUp", 500, 0, "ifff", objectid,ObjectX,ObjectY,ObjectZ);
		MoveObject(Objects_[0][objectid],ObjectX,ObjectY,ObjectZ -5,1);
		if(!VIEW_FROM_ABOVE)
		MoveObject(Objects_[1][objectid],ObjectX,ObjectY,ObjectZ -5,1);
	    Iter_Remove(_Objects,objectid);
		return 1;
	}
forward SpeedUp(object,Float:x,Float:y,Float:z);
public SpeedUp(object,Float:x,Float:y,Float:z)
	{
		MoveObject(Objects_[0][object],x,y,z -150,20);
		if(!VIEW_FROM_ABOVE)
		MoveObject(Objects_[1][object],x,y,z -150,20);
		foreach(_Minigamer,i) PlayerPlaySound(i,1039,0.0,0.0,0.0);
	}
forward EndMinigame();
public EndMinigame()
	{
		for(new i; i < MAX_SLOTS; i++)
	 	{
	 	    DestroyObject(Objects_[0][i]);
	 	    if(!VIEW_FROM_ABOVE)
	 	    DestroyObject(Objects_[1][i]);
	 	}
	 	inProgress = 0;
	 	GT = 0;
	 	SEVENTO = 0;
		Iter_Clear(_Objects);
		Iter_Clear(_Minigamer);
  KillTimer(uTimer);
		return 1;
	}

//=======================================================================================
forward StartDerby();
public StartDerby()
{
	if(startvar[4] == 1)
	{
		if( derbyrank <= 1 )
		{
		    SendClientMessageToAll(0xFF0000AA, "[Evento Derby]: {00EEFF}Evento Cancelado. Razón: No había suficientes Players. [mínimo = 2]");
		    derbyplaying = 0;
		    derbyrank = 0;
		    derbyon = 0;
		    SDERBY = 0;
		    SEVENTO = 0;
			ArenaDerby1 = 0;
			ArenaDerby2 = 0;
		    startvar[4] = 0;
			TextDrawHideForAll(ConcText);
			TextDrawHideForAll(Textdrawrace);
			TextDrawHideForAll(Textdrawrace2);
			TextDrawHideForAll(Textdrawrace3);
			TextDrawHideForAll(Textdrawrace4);
			TextDrawHideForAll(Textdrawrace5);
		    KillTimer(derbytimer);
	    	foreach(Player, i)
			{
				if(IsPlayerConnected(i))
				{
					if (PlayerInfo[i][PlayerinDerby] == 1)
					{
					    PlayerInfo[i][PlayerinDerby] = 0;
					    PlayerInfo[i][EnEvento] = 0;
						SetPlayerVirtualWorld(i,0);
						SetPlayerInterior(i, 0);
						SetPlayerHealth(i,100);
					    SpawnPlayer(i);
					    TogglePlayerControllable(i, 1);
					    SetCameraBehindPlayer(i);
					}
				}
			}
		    return 1;
	 	}
		format(string2, sizeof(string2), "_~n~_~n~~r~Preparensen");
        foreach(Player, i)
		{
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinDerby] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
		startvar[4] = 2;
		SetTimer("StartDerby", 2000, 0);
	}
	else if(startvar[4] == 2)
	{
		format(string2, sizeof(string2), "_~n~_~n~~r~Listos?");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinDerby] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
					CarSpawnerEx(i);
				}
			}
		}
        startvar[4] = 3;
		SetTimer("StartDerby", 2000, 0);
	}
	else if(startvar[4] == 3)
	{
		format(string2, sizeof(string2), "_~n~_~n~~g~Derribalos!");
		derbyplaying = 1;
        foreach(Player, i)
		{
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinDerby] == 1)
				{
					if(!IsPlayerInAnyVehicle(i))
					{
						CarSpawnerEx(i);
					}
					GameTextForPlayer(i, string2, 5000, 6);
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
                    StopAudioStreamForPlayer(i);
					TogglePlayerControllable(i, 1);
					SetCameraBehindPlayer(i);
				}
			}
		}
		TimerDerby = SetTimer("DerbyUpdate",2500,true);
		startvar[4] = 0;
		KillTimer(derbytimer);
	}
	return 1;
}

forward DerbyUpdate();
public DerbyUpdate()
{
	new Float:jX, Float:jY, Float:jZ[MAX_PLAYERS];
    foreach(Player, i)
	{
		if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinDerby] == 1)
		{
			GetPlayerPos(i, jX, jY, jZ[i]);
			if(jZ[i] < 12.0)
			{
				format(string2, sizeof(string2), "{FF0000}[Evento Derby]: {FFFFFF}%s {00EEFF}ha sido Eliminado del Derby {FFFFFF}[Rank: %d]", pName(i), derbyrank);
				SendClientMessageToAll(0x33AA33AA, string2);
				CarDeleter(PlayerInfo[i][pCar]);
				PlayerInfo[i][PlayerinDerby] = 0;
				PlayerInfo[i][EnEvento] = 0;
				derbyrank--;
				new strev[1000];
				format(strev,sizeof(strev),"~b~Concursantes: ~w~%d",derbyrank);
				TextDrawSetString(ConcText,strev);
				TextDrawShowForAll(ConcText);
				SetCameraBehindPlayer(i);
	   	        SetPlayerVirtualWorld(i,0);
	   	        SpawnPlayer(i);
			}
		}
	}
	if(derbyrank < 2)
	{
	    foreach(Player, i)
		{
			if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinDerby] == 1)
			{
				DerbyWinner(i);
			}
		}
	}
   	return 1;
}

forward DerbyWinner(playerid);
public DerbyWinner(playerid)
{
	RewardCalc(playerid,2000,20000);
	format(string2, sizeof(string2), "{FF0000}[Evento Derby]: {FFFFFF}%s {00EEFF}ha ganado el evento Derby Premio: {FFFFFF}[$%d] [+10 de Score]", pName(playerid), reward);
	SendClientMessageToAll(0x33AA33AA, string2);
	TextDrawHideForAll(ConcText);
	new strev[1000];
	format(strev,sizeof(strev),"~b~Ganador: ~n~~w~%s",pName(playerid));
	TextDrawSetString(GanoText,strev);
	TextDrawShowForAll(GanoText);
	TextDrawShowForAll(GanoText2);
	SetTimer("SacarGano",12000,0);
	GivePlayerMoney(playerid,reward);
	SetPlayerScore(playerid, GetPlayerScore(playerid) +10);
	PlayerInfo[playerid][Kills]=PlayerInfo[playerid][Kills]+10;
	PlayerInfo[playerid][PlayerinDerby] = 0;
	PlayerInfo[playerid][EnEvento] = 0;
	CarDeleter(PlayerInfo[playerid][pCar]);
	SetPlayerVirtualWorld(playerid,0);
	SetPlayerInterior(playerid, 0);
	SpawnPlayer(playerid);
	PlayerInfo[playerid][pScoreEvento]=PlayerInfo[playerid][pScoreEvento]+ 1;
	if(PlayerInfo[playerid][LoggedIn] == 1) SavePlayer(playerid);
	derbyplaying = 0;
	derbyrank = 0;
	derbyon = 0;
	KillTimer(derbytimer);
	KillTimer(TimerDerby);
	SDERBY = 0;
	SEVENTO = 0;
    ArenaDerby1 = 0;
	ArenaDerby2 = 0;
	foreach(Player, i)
	{
		if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinDerby] == 1)
		{
			PlayerInfo[i][PlayerinDerby] = 0;
			PlayerInfo[i][EnEvento] = 0;
			SetPlayerVirtualWorld(i,0);
			SetPlayerInterior(i, 0);
			SetPlayerColor(i,RandomColors[i]);
			CarDeleter(PlayerInfo[i][pCar]);
			SpawnPlayer(i);
			SetPlayerTeam(i, 255);
		}
	}
	derbyplaying = 0;
	derbyrank = 0;
	derbyon = 0;
	KillTimer(derbytimer);
	KillTimer(CountTimerDerby);
	SDERBY = 0;
	SEVENTO = 0;
	ArenaDerby1 = 0;
	ArenaDerby2 = 0;
 	for(new i; i != MAX_VEHICLES; i++) if(!EsVehiculoOcupado(i)) SetVehicleToRespawn(i);
	return 1;
}

forward CountTillDerby(playerid);
public CountTillDerby(playerid)
{
    format(string2,sizeof(string2),"~r~Nuevo evento!~n~~w~El Evento ~r~Derby ~w~Empieza en %d Segundos~n~Use ~r~/Derby ~w~Para Entrar!",CountAmountDerby);
    TextDrawSetString(Textdrawrace,string2);
    EnviarComandoRace2(playerid,"Derby");
    TextDrawShowForAll(Textdrawrace);
    TextDrawShowForAll(Textdrawrace2);
    TextDrawShowForAll(Textdrawrace3);
    TextDrawShowForAll(Textdrawrace4);
    TextDrawShowForAll(Textdrawrace5);
	if(CountAmountDerby == 0)
	{
		KillTimer(CountTimerDerby);
		TextDrawHideForAll(Textdrawrace);
		TextDrawHideForAll(Textdrawrace2);
		TextDrawHideForAll(Textdrawrace3);
		TextDrawHideForAll(Textdrawrace4);
		TextDrawHideForAll(Textdrawrace5);
		foreach(Player, i)
		{
			if(PlayerInfo[i][PlayerinDerby] == 0 && derbyrank >= 1)
		    {
				format(string2,sizeof(string2), "[INFO]: Ud ya no puede unirse a Evento de Derby, Pues ya ha Comenzado!");
				SendClientMessage(i,red, string2);
			}
		}
	}
	return CountAmountDerby--;
}

forward CarSpawnerEx(playerid);
public CarSpawnerEx(playerid)
{
   	new Float:x, Float:y, Float:z, Float:angle;
 	GetPlayerPos(playerid, x, y, z);
 	GetPlayerFacingAngle(playerid, angle);
	if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
	new dveh=1;
	new vr = random(sizeof(VehDerby));
    dveh = VehDerby[vr];
	new vehicleid=CreateVehicle(dveh, x, y, z, angle, -1, -1, -1);
	SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
	LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
	PutPlayerInVehicle(playerid, vehicleid, 0);
	ChangeVehicleColor(vehicleid,0,7);
    PlayerInfo[playerid][pCar] = vehicleid;
	return 1;
}

forward StartSwat();
public StartSwat()
{
	if(startvar[1] == 1)
	{
		if( swatrank <= 1 )
		{
		    SendClientMessageToAll(0xFF0000AA, "[Evento Swat]: {00EEFF}Evento Cancelado. Razón: No había suficientes Players. [mínimo = 2]");
		    swatplaying = 0;
		    swatrank = 0;
		    swaton = 0;
		    SSWAT = 0;
		    SEVENTO = 0;
		    ArenaSwat1 = 0;
		    ArenaSwat2 = 0;
		    startvar[1] = 0;
		    KillTimer(swattimer);
			TextDrawHideForAll(ConcText);
			TextDrawHideForAll(Textdrawrace);
			TextDrawHideForAll(Textdrawrace2);
			TextDrawHideForAll(Textdrawrace3);
			TextDrawHideForAll(Textdrawrace4);
			TextDrawHideForAll(Textdrawrace5);
			foreach(Player, i){
				if(IsPlayerConnected(i))
				{
					if (PlayerInfo[i][PlayerinSwat] == 1)
					{
					    PlayerInfo[i][PlayerinSwat] = 0;
					    PlayerInfo[i][EnEvento] = 0;
						SetPlayerVirtualWorld(i,0);
						SetPlayerInterior(i, 0);
					    SpawnPlayer(i);
					    TogglePlayerControllable(i, 1);
					    SetCameraBehindPlayer(i);
					}
				}
			}
			return 1;
	 	}
		format(string2, sizeof(string2), "_~n~_~n~~r~Preparensen");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinSwat] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
		startvar[1] = 2;
		SetTimer("StartSwat", 2000, 0);
	} else if(startvar[1] == 2) {
		format(string2, sizeof(string2), "_~n~_~n~~r~Listos?");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinSwat] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
        startvar[1] = 3;
		SetTimer("StartSwat", 2000, 0);
	} else if(startvar[1] == 3) {
		format(string2, sizeof(string2), "_~n~_~n~~g~A matar al ~n~Equipo Contrario!");
		swatplaying = 1;
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinSwat] == 1)
				{
					GameTextForPlayer(i, string2, 5000, 6);
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					TogglePlayerControllable(i, 1);
					SetCameraBehindPlayer(i);
				}
			}
		}
		startvar[1] = 0;
		KillTimer(swattimer);
	}
	return 1;
}

forward Starttdm();
public Starttdm()
{
	if(startvar[1] == 1)
	{
		if( tdmrank <= 1 )
		{
		    SendClientMessageToAll(0xFF0000AA, "[Evento OP7]: {00EEFF}Evento Cancelado. Razón: No había suficientes Players. [mínimo = 2]");
		    tdmplaying = 0;
		    tdmrank = 0;
		    tdmon = 0;
		    SOP7 = 0;
		    SEVENTO = 0;
		    RushChallenge = 0;
		    DeathSquare = 0;
		    Otro = 0;
		    startvar[1] = 0;
		    KillTimer(tdmtimer);
			TextDrawHideForAll(ConcText);
			TextDrawHideForAll(Textdrawrace);
			TextDrawHideForAll(Textdrawrace2);
			TextDrawHideForAll(Textdrawrace3);
			TextDrawHideForAll(Textdrawrace4);
			TextDrawHideForAll(Textdrawrace5);
            foreach(Player, i){
				if(IsPlayerConnected(i))
				{
					if (PlayerInfo[i][PlayerinTdm] == 1)
					{
					    PlayerInfo[i][PlayerinTdm] = 0;
					    PlayerInfo[i][EnEvento] = 0;
						SetPlayerVirtualWorld(i,0);
						SetPlayerInterior(i, 0);
					    SpawnPlayer(i);
					    TogglePlayerControllable(i, 1);
					    SetCameraBehindPlayer(i);
					}
				}
			}
			return 1;
	 	}
		format(string2, sizeof(string2), "_~n~_~n~~r~Preparensen");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinTdm] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
		startvar[1] = 2;
		SetTimer("Starttdm", 2000, 0);
	} else if(startvar[1] == 2) {
		format(string2, sizeof(string2), "_~n~_~n~~r~Listos?");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinTdm] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
        startvar[1] = 3;
		SetTimer("Starttdm", 2000, 0);
	} else if(startvar[1] == 3) {
		format(string2, sizeof(string2), "_~n~_~n~~g~A matar al ~n~Equipo Contrario!");
		tdmplaying = 1;
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinTdm] == 1)
				{
					GameTextForPlayer(i, string2, 5000, 6);
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					TogglePlayerControllable(i, 1);
					SetCameraBehindPlayer(i);
				}
			}
		}
		startvar[1] = 0;
		KillTimer(tdmtimer);
	}
	return 1;
}
forward StartBox();
public StartBox()
{
	if(startvar[4] == 1)
	{
		if( boxrank <= 1 )
		{
		    SendClientMessageToAll(0xFF0000AA, "[Evento Supervivencia]: {00EEFF}Evento Cancelado. Razón: No había suficientes Players. [mínimo = 2]");
		    boxplaying = 0;
		    boxrank = 0;
		    boxon = 0;
		    arenabox1 = 0;
		    arenabox2 = 0;
		    SBOX = 0;
		    SEVENTO = 0;
		    Pala = 0;
			Dildo = 0;
			Bate = 0;
			Golf = 0;
			Puno = 0;
			Nmm = 0;
			Desert = 0;
			Shotgun = 0;
			Spray = 0;
		    startvar[4] = 0;
			TextDrawHideForAll(ConcText);
			TextDrawHideForAll(Textdrawrace);
			TextDrawHideForAll(Textdrawrace2);
			TextDrawHideForAll(Textdrawrace3);
			TextDrawHideForAll(Textdrawrace4);
			TextDrawHideForAll(Textdrawrace5);
		    KillTimer(boxtimer);
	    	foreach(Player, i){
				if(IsPlayerConnected(i))
				{
					if (PlayerInfo[i][PlayerinBox] == 1)
					{
					    PlayerInfo[i][PlayerinBox] = 0;
					    PlayerInfo[i][EnEvento] = 0;
						SetPlayerVirtualWorld(i,0);
						SetPlayerInterior(i, 0);
						SetPlayerHealth(i,100);
					    SpawnPlayer(i);
					    TogglePlayerControllable(i, 1);
					    SetCameraBehindPlayer(i);
					}
				}
			}
		    return 1;
	 	}
		format(string2, sizeof(string2), "_~n~_~n~~r~Preparensen");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinBox] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
		startvar[4] = 2;
		SetTimer("StartBox", 2000, 0);
	} else if(startvar[4] == 2) {
		format(string2, sizeof(string2), "_~n~_~n~~r~Listos?");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinBox] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
        startvar[4] = 3;
		SetTimer("StartBox", 2000, 0);
	} else if(startvar[4] == 3) {
		format(string2, sizeof(string2), "_~n~_~n~~g~Matalos!");
		boxplaying = 1;
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinBox] == 1)
				{
					GameTextForPlayer(i, string2, 5000, 6);
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
                    StopAudioStreamForPlayer(i);
					TogglePlayerControllable(i, 1);
					SetCameraBehindPlayer(i);
				}
			}
		}
		startvar[4] = 0;
		KillTimer(boxtimer);
	}
	return 1;
}

forward StartHg();
public StartHg()
{
	if(startvar[4] == 1)
	{
		if( hgrank <= 1 )
		{
		    SendClientMessageToAll(0xFF0000AA, "[Evento Hunger Games]: {00EEFF}Evento Cancelado. Razón: No había suficientes Players. [mínimo = 2]");
		    hgplaying = 0;
		    hgrank = 0;
		    hgon = 0;
		    ArenaHG1 = 0;
		    ArenaHG2 = 0;
		    SHG = 0;
		    startvar[4] = 0;
			TextDrawHideForAll(ConcText);
			TextDrawHideForAll(Textdrawrace);
			TextDrawHideForAll(Textdrawrace2);
			TextDrawHideForAll(Textdrawrace3);
			TextDrawHideForAll(Textdrawrace4);
			TextDrawHideForAll(Textdrawrace5);
		    KillTimer(hgtimer);
	    	foreach(Player, i){
				if(IsPlayerConnected(i))
				{
					if (PlayerInfo[i][PlayerinHg] == 1)
					{
					    PlayerInfo[i][PlayerinHg] = 0;
					    PlayerInfo[i][EnEvento] = 0;
						SetPlayerVirtualWorld(i,0);
						SetPlayerInterior(i, 0);
						SetPlayerHealth(i,100);
					    SpawnPlayer(i);
					    TogglePlayerControllable(i, 1);
					    SetCameraBehindPlayer(i);
					}
				}
			}
		    return 1;
	 	}
		format(string2, sizeof(string2), "_~n~_~n~~r~Preparensen");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinHg] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
		startvar[4] = 2;
		SetTimer("StartHg", 2000, 0);
	} else if(startvar[4] == 2) {
		format(string2, sizeof(string2), "_~n~_~n~~r~Listos?");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinHg] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
        startvar[4] = 3;
		SetTimer("StartHg", 2000, 0);
	} else if(startvar[4] == 3) {
		format(string2, sizeof(string2), "_~n~_~n~~g~Sobrevive!");
		hgplaying = 1;
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinHg] == 1)
				{
					GameTextForPlayer(i, string2, 5000, 6);
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					TogglePlayerControllable(i, 1);
                    StopAudioStreamForPlayer(i);
					SetCameraBehindPlayer(i);
                    SetPlayerTime(i,24,0);
				}
			}
		}
		startvar[4] = 0;
		KillTimer(hgtimer);
	}
	return 1;
}



forward StartRhino();
public StartRhino()
{
	if(startvar[4] == 1)
	{
		if( rhinorank <= 1 )
		{
		    SendClientMessageToAll(0xFF0000AA, "[Evento Rhino]: {00EEFF}Evento Cancelado. Razón: No había suficientes Players, [mínimo = 2]");
			TextDrawHideForAll(ConcText);
			TextDrawHideForAll(Textdrawrace);
			TextDrawHideForAll(Textdrawrace2);
			TextDrawHideForAll(Textdrawrace3);
			TextDrawHideForAll(Textdrawrace4);
			TextDrawHideForAll(Textdrawrace5);
		    rhinoplaying = 0;
		    rhinorank = 0;
		    rhinoon = 0;
		    SRHINO = 0;
		    ArenaRhino1 = 0;
		    ArenaRhino2 = 0;
		    startvar[4] = 0;
		    KillTimer(rhinotimer);
	    	foreach(Player, i){
				if(IsPlayerConnected(i))
				{
					if (PlayerInfo[i][PlayerinRhino] == 1)
					{
					    PlayerInfo[i][PlayerinRhino] = 0;
					    PlayerInfo[i][EnEvento] = 0;
						SetPlayerVirtualWorld(i,0);
						SetPlayerInterior(i, 0);
						SetPlayerHealth(i,100);
					    SpawnPlayer(i);
					    TogglePlayerControllable(i, 1);
					    SetCameraBehindPlayer(i);
					}
				}
			}
		    return 1;
	 	}
		format(string2, sizeof(string2), "_~n~_~n~~r~Preparensen");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinRhino] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
					new Float:X, Float:Y, Float:Z;
					GetPlayerPos(i, X, Y, Z);
					SetPlayerPos(i, X, Y, Z+1);
				}
			}
		}
		startvar[4] = 2;
		SetTimer("StartRhino", 2000, 0);
	} else if(startvar[4] == 2) {
		format(string2, sizeof(string2), "_~n~_~n~~r~Listos?");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinRhino] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
					CarSpawner1(i,432);
				}
			}
		}
        startvar[4] = 3;
		SetTimer("StartRhino", 2000, 0);
	} else if(startvar[4] == 3) {
		format(string2, sizeof(string2), "_~n~_~n~~g~Destruyelos!");
		rhinoplaying = 1;
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinRhino] == 1)
				{
					if(!IsPlayerInAnyVehicle(i))
					{
						CarSpawner1(i,432);
					}
					GameTextForPlayer(i, string2, 5000, 6);
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					TogglePlayerControllable(i, 1);
					SetCameraBehindPlayer(i);
				}
			}
		}
		startvar[4] = 0;
		KillTimer(rhinotimer);
	}
	return 1;
}

forward StartZombie();
public StartZombie()
{
	if(startvar[1] == 1)
	{
		if( zombierank <= 1 )
		{
		    SendClientMessageToAll(0xFF0000AA, "[Evento Zombie]: {00EEFF}Evento Cancelado. Razón: No había suficientes Players. [mínimo = 2]");
		    zombieplaying = 0;
		    zombierank = 0;
		    zombieon = 0;
		    SZOMBIE = 0;
		    SEVENTO = 0;
		    ArenaZombie1 = 0;
		    ArenaZombie2 = 0;
		    startvar[1] = 0;
		    KillTimer(zombietimer);
			TextDrawHideForAll(ConcText);
			TextDrawHideForAll(Textdrawrace);
			TextDrawHideForAll(Textdrawrace2);
			TextDrawHideForAll(Textdrawrace3);
			TextDrawHideForAll(Textdrawrace4);
			TextDrawHideForAll(Textdrawrace5);
            foreach(Player, i){
				if(IsPlayerConnected(i))
				{
					if (PlayerInfo[i][PlayerinZombie] == 1)
					{
					    PlayerInfo[i][PlayerinZombie] = 0;
					    PlayerInfo[i][EnEvento] = 0;
						SetPlayerVirtualWorld(i,0);
						SetPlayerInterior(i, 0);
					    SpawnPlayer(i);
					    TogglePlayerControllable(i, 1);
					    SetCameraBehindPlayer(i);
					}
				}
			}
			return 1;
	 	}
		format(string2, sizeof(string2), "_~n~_~n~~r~Preparensen");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinZombie] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
		startvar[1] = 2;
		SetTimer("StartZombie", 2000, 0);
	} else if(startvar[1] == 2) {
		format(string2, sizeof(string2), "_~n~_~n~~r~Listos?");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinZombie] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
        startvar[1] = 3;
		SetTimer("StartZombie", 2000, 0);
	} else if(startvar[1] == 3) {
		format(string2, sizeof(string2), "_~n~_~n~~g~A matar al ~n~Equipo Contrario!");
		zombieplaying = 1;
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinZombie] == 1)
				{
					GameTextForPlayer(i, string2, 5000, 6);
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					TogglePlayerControllable(i, 1);
					SetCameraBehindPlayer(i);
				}
			}
		}
		startvar[1] = 0;
		KillTimer(zombietimer);
	}
	return 1;
}


forward StartParkour();
public StartParkour()
{
	if(startvar[4] == 1)
	{
		if(parkrank <= 1 )
		{
		    SendClientMessageToAll(0xFF0000AA, "[Evento Parkour]: {00EEFF}Evento Cancelado. Razón: No había suficientes Players. [mínimo = 2]");
		    parkplaying = 0;
		    parkrank = 0;
		    parkon = 0;
		    SPARK = 0;
		    SEVENTO = 0;
			ArenaP1 = 0;
		    ArenaP2 = 0;
		    startvar[4] = 0;
		    KillTimer(parktimer);
		    KillTimer(CountTimerParkour);
			TextDrawHideForAll(ConcText);
			TextDrawHideForAll(Textdrawrace);
			TextDrawHideForAll(Textdrawrace2);
			TextDrawHideForAll(Textdrawrace3);
			TextDrawHideForAll(Textdrawrace4);
			TextDrawHideForAll(Textdrawrace5);
	    	foreach(Player, i){
				if(IsPlayerConnected(i))
				{
					if (PlayerInfo[i][PlayerinParkour] == 1)
					{
					    PlayerInfo[i][PlayerinParkour] = 0;
					    PlayerInfo[i][EnEvento] = 0;
						SetPlayerVirtualWorld(i,0);
						SetPlayerInterior(i, 0);
						SetPlayerHealth(i,100);
					    SpawnPlayer(i);
					    TogglePlayerControllable(i, 1);
					    SetCameraBehindPlayer(i);
					}
				}
			}
		    return 1;
	 	}
		format(string2, sizeof(string2), "_~n~_~n~~r~Preparensen");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinParkour] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
		startvar[4] = 2;
		SetTimer("StartParkour", 2000, 0);
	} else if(startvar[4] == 2) {
		format(string2, sizeof(string2), "_~n~_~n~~r~Listos?");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinParkour] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
        startvar[4] = 3;
		SetTimer("StartParkour", 2000, 0);
	} else if(startvar[4] == 3) {
		format(string2, sizeof(string2), "_~n~_~n~~g~Corre!");
		parkplaying = 1;
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinParkour] == 1)
				{
					GameTextForPlayer(i, string2, 5000, 6);
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
                    StopAudioStreamForPlayer(i);
					TogglePlayerControllable(i, 1);
					SetCameraBehindPlayer(i);
				}
			}
		}
		startvar[4] = 0;
		KillTimer(parktimer);
	}
	return 1;
}

forward CountTillParkour(playerid);
public CountTillParkour(playerid)
{
    format(string2,sizeof(string2),"~w~El evento:~n~ ~r~Parkour ~w~Empieza en %d Segundos~n~Use ~r~/Park ~w~Para Entrar!",CountAmountParkour);
    TextDrawSetString(Textdrawrace,string2);
    EnviarComandoRace2(playerid,"Park");
    TextDrawShowForAll(Textdrawrace);
    TextDrawShowForAll(Textdrawrace2);
    TextDrawShowForAll(Textdrawrace3);
    TextDrawShowForAll(Textdrawrace4);
    TextDrawShowForAll(Textdrawrace5);
	if(CountAmountParkour == 0)
	{
	KillTimer(CountTimerParkour);
	TextDrawHideForAll(Textdrawrace);
	TextDrawHideForAll(Textdrawrace2);
	TextDrawHideForAll(Textdrawrace3);
	TextDrawHideForAll(Textdrawrace4);
	TextDrawHideForAll(Textdrawrace5);
	foreach(Player, i)
	{
	if(PlayerInfo[i][PlayerinParkour] == 0 && parkrank >= 1)
	{
	format(string2,sizeof(string2), "[INFO]: Ud ya no puede unirse a Evento de Parkour, Pues ya ha Comenzado!");
	SendClientMessage(i,red, string2);
	}
	}
	}
	return CountAmountParkour--;
}

forward StartLaberinto();
public StartLaberinto()
{
	if(startvar[4] == 1)
	{
		if(labrank <= 1 )
		{
		    SendClientMessageToAll(0xFF0000AA, "[Evento Laberinto]: {00EEFF}Evento Cancelado. Razón: No había suficientes Players. [mínimo = 2]");
		    labplaying = 0;
		    labrank = 0;
		    labon = 0;
		    SLAB = 0;
		    SEVENTO = 0;
			ArenaL1 = 0;
		    startvar[4] = 0;
		    KillTimer(labtimer);
			TextDrawHideForAll(ConcText);
			TextDrawHideForAll(Textdrawrace);
			TextDrawHideForAll(Textdrawrace2);
			TextDrawHideForAll(Textdrawrace3);
			TextDrawHideForAll(Textdrawrace4);
			TextDrawHideForAll(Textdrawrace5);
	    	foreach(Player, i){
				if(IsPlayerConnected(i))
				{
					if (PlayerInfo[i][PlayerinLaberinto] == 1)
					{
					    PlayerInfo[i][PlayerinLaberinto] = 0;
					    PlayerInfo[i][EnEvento] = 0;
						SetPlayerVirtualWorld(i,0);
						SetPlayerInterior(i, 0);
						SetPlayerHealth(i,100);
					    SpawnPlayer(i);
					    TogglePlayerControllable(i, 1);
					    SetCameraBehindPlayer(i);
					}
				}
			}
		    return 1;
	 	}
		format(string2, sizeof(string2), "_~n~_~n~~r~Preparensen");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinLaberinto] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
		startvar[4] = 2;
		SetTimer("StartLaberinto", 2000, 0);
	} else if(startvar[4] == 2) {
		format(string2, sizeof(string2), "_~n~_~n~~r~Listos?");
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinLaberinto] == 1)
				{
					GameTextForPlayer(i, string2, 2000, 6);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
        startvar[4] = 3;
		SetTimer("StartLaberinto", 2000, 0);
	} else if(startvar[4] == 3) {
		format(string2, sizeof(string2), "_~n~_~n~~g~Corre!");
		labplaying = 1;
        foreach(Player, i){
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][PlayerinLaberinto] == 1)
				{
					GameTextForPlayer(i, string2, 5000, 6);
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
                    StopAudioStreamForPlayer(i);
					TogglePlayerControllable(i, 1);
					SetCameraBehindPlayer(i);
				}
			}
		}
		startvar[4] = 0;
		KillTimer(labtimer);
	}
	return 1;
}

forward CountTillLaberinto(playerid);
public CountTillLaberinto(playerid)
{
    format(string2,sizeof(string2),"~r~Nuevo evento!~n~~w~El Evento ~r~Laberinto ~w~Empieza en %d Segundos~n~Use ~r~/Laberinto ~w~Para Entrar!",CountAmountLaberinto);
    TextDrawSetString(Textdrawrace,string2);
    EnviarComandoRace2(playerid,"Laberinto");
    TextDrawShowForAll(Textdrawrace);
    TextDrawShowForAll(Textdrawrace2);
    TextDrawShowForAll(Textdrawrace3);
    TextDrawShowForAll(Textdrawrace4);
    TextDrawShowForAll(Textdrawrace5);
	if(CountAmountLaberinto == 0)
	{
	KillTimer(CountTimerLaberinto);
	TextDrawHideForAll(Textdrawrace);
	TextDrawHideForAll(Textdrawrace2);
	TextDrawHideForAll(Textdrawrace3);
	TextDrawHideForAll(Textdrawrace4);
	TextDrawHideForAll(Textdrawrace5);
	foreach(Player, i)
	{
	if(PlayerInfo[i][PlayerinLaberinto] == 0 && labrank >= 1)
	{
	format(string2,sizeof(string2), "[INFO]: Ud ya no puede unirse a Evento de Laberinto, Pues ya ha Comenzado!");
	SendClientMessage(i,red, string2);
	}
	}
	}
	return CountAmountLaberinto--;
}

forward CountTillZombie(playerid);
public CountTillZombie(playerid)
{
    format(string2,sizeof(string2),"~r~Nuevo evento!~n~~w~El Evento ~r~Zombie ~w~Empieza en %d Segundos~n~Use ~r~/Zombie ~w~Para Entrar!",CountAmountZombie);
    TextDrawSetString(Textdrawrace,string2);
    EnviarComandoRace2(playerid,"Zombie");
    TextDrawShowForAll(Textdrawrace);
    TextDrawShowForAll(Textdrawrace2);
    TextDrawShowForAll(Textdrawrace3);
    TextDrawShowForAll(Textdrawrace4);
    TextDrawShowForAll(Textdrawrace5);
	if(CountAmountZombie == 0)
	{
	KillTimer(CountTimerZombie);
	TextDrawHideForAll(Textdrawrace);
	TextDrawHideForAll(Textdrawrace2);
	TextDrawHideForAll(Textdrawrace3);
	TextDrawHideForAll(Textdrawrace4);
	TextDrawHideForAll(Textdrawrace5);
	foreach(Player, i)
	{
	if(PlayerInfo[i][PlayerinZombie] == 0 && zombierank >= 1)
    {
	format(string2,sizeof(string2), "[INFO]: Ud ya no puede unirse a Evento de Zombie, Pues ya ha Comenzado!");
	SendClientMessage(i,red, string2);
	}
	}
	}
	return CountAmountZombie--;
}

forward CountTillHG(playerid);
public CountTillHG(playerid)
{
    format(string2,sizeof(string2),"~r~Nuevo evento!~n~~w~El Evento ~r~Hunger Games ~w~Empieza en %d Segundos~n~Use ~r~/HG ~w~Para Entrar!",CountAmountHg);
    TextDrawSetString(Textdrawrace,string2);
    EnviarComandoRace2(playerid,"Hg");
    TextDrawShowForAll(Textdrawrace);
    TextDrawShowForAll(Textdrawrace2);
    TextDrawShowForAll(Textdrawrace3);
    TextDrawShowForAll(Textdrawrace4);
    TextDrawShowForAll(Textdrawrace5);
	if(CountAmountHg == 0)
	{
	KillTimer(CountTimerHg);
	TextDrawHideForAll(Textdrawrace);
	TextDrawHideForAll(Textdrawrace2);
	TextDrawHideForAll(Textdrawrace3);
	TextDrawHideForAll(Textdrawrace4);
	TextDrawHideForAll(Textdrawrace5);
	foreach(Player, i)
	{
	if(PlayerInfo[i][PlayerinHg] == 0 && hgrank >= 1)
    {
	format(string2,sizeof(string2), "[INFO]: Ud ya no puede unirse a Evento de Hunger Games, Pues ya ha Comenzado!");
	SendClientMessage(i,red, string2);
	}
	}
	}
	return CountAmountHg--;
}

forward CountTillSurvival(playerid);
public CountTillSurvival(playerid)
{
    format(string2,sizeof(string2),"~r~Nuevo evento!~n~~w~El Evento ~r~Survival ~w~Empieza en %d Segundos~n~Use ~r~/Survival ~w~Para Entrar!",CountAmountSv);
	TextDrawSetString(Textdrawrace,string2);
    EnviarComandoRace2(playerid,"Survival");
    TextDrawShowForAll(Textdrawrace);
    TextDrawShowForAll(Textdrawrace2);
    TextDrawShowForAll(Textdrawrace3);
    TextDrawShowForAll(Textdrawrace4);
    TextDrawShowForAll(Textdrawrace5);
    if(CountAmountSv == 3)
	{
	foreach(Player, i){}
	}
	if(CountAmountSv == 0)
	{
	KillTimer(CountTimerSurvival);
	TextDrawHideForAll(Textdrawrace);
	TextDrawHideForAll(Textdrawrace2);
	TextDrawHideForAll(Textdrawrace3);
	TextDrawHideForAll(Textdrawrace4);
	TextDrawHideForAll(Textdrawrace5);
	foreach(Player, i)
	{
	if(PlayerInfo[i][PlayerinBox] == 0 && boxrank >= 1)
    {
	format(string2,sizeof(string2), "[INFO]: Ud ya no puede unirse a Evento de Supervivencia, Pues ya ha Comenzado!");
	SendClientMessage(i,red, string2);
	}
	}
	}
	return CountAmountSv--;
}

forward CountTillOP7(playerid);
public CountTillOP7(playerid)
{
    format(string2,sizeof(string2),"~r~Nuevo evento!~n~~w~El Evento ~r~Operation 7 ~w~Empieza en %d Segundos~n~Use ~r~/OP7 ~w~Para Entrar!",CountAmount7);
    TextDrawSetString(Textdrawrace,string2);
    EnviarComandoRace2(playerid,"Op7");
    TextDrawShowForAll(Textdrawrace);
    TextDrawShowForAll(Textdrawrace2);
    TextDrawShowForAll(Textdrawrace3);
    TextDrawShowForAll(Textdrawrace4);
    TextDrawShowForAll(Textdrawrace5);
    if(CountAmount7 == 3)
	{
	foreach(Player, i){}
	}
	if(CountAmount7 == 0)
	{
	KillTimer(CountTimerOP7);
	TextDrawHideForAll(Textdrawrace);
	TextDrawHideForAll(Textdrawrace2);
	TextDrawHideForAll(Textdrawrace3);
	TextDrawHideForAll(Textdrawrace4);
	TextDrawHideForAll(Textdrawrace5);
	foreach(Player, i)
	{
	if(PlayerInfo[i][PlayerinTdm] == 0 && tdmrank >= 1)
    {
	format(string2,sizeof(string2), "[INFO]: Ud ya no puede unirse a Evento de OP7, Pues ya ha Comenzado!");
	SendClientMessage(i,red, string2);
	}
	}
	}
	return CountAmount7--;
}

forward CountTillSwat(playerid);
public CountTillSwat(playerid)
{
    format(string2,sizeof(string2),"~r~Nuevo evento!~n~~w~El Evento ~r~Revolucion ~w~Empieza en %d Segundos~n~Use ~r~/Revolucion ~w~Para Entrar!",CountAmountSwat);
    TextDrawSetString(Textdrawrace,string2);
    EnviarComandoRace2(playerid,"Revolucion");
    TextDrawShowForAll(Textdrawrace);
    TextDrawShowForAll(Textdrawrace2);
    TextDrawShowForAll(Textdrawrace3);
    TextDrawShowForAll(Textdrawrace4);
    TextDrawShowForAll(Textdrawrace5);
    if(CountAmountSwat == 3)
	{
	foreach(Player, i){}
	}
	if(CountAmountSwat == 0)
	{
	KillTimer(CountTimerSwat);
	TextDrawHideForAll(Textdrawrace);
	TextDrawHideForAll(Textdrawrace2);
	TextDrawHideForAll(Textdrawrace3);
	TextDrawHideForAll(Textdrawrace4);
	TextDrawHideForAll(Textdrawrace5);
	foreach(Player, i)
	{
	if(PlayerInfo[i][PlayerinSwat] == 0 && swatrank >= 1)
    {
	format(string2,sizeof(string2), "[INFO]: Ud ya no puede unirse a Evento de Revolucion, Pues ya ha Comenzado!");
	SendClientMessage(i,red, string2);
	}
	}
	}
	return CountAmountSwat--;
}

forward CountTillGET(playerid);
public CountTillGET(playerid)
{
    format(string2,sizeof(string2),"~r~Nuevo evento!~n~~w~El Evento ~r~Notemojes ~w~Empieza en %d Segundos~n~Use ~r~/Notemojes ~w~Para Entrar!",CountAmountGet);
    TextDrawSetString(Textdrawrace,string2);
    EnviarComandoRace2(playerid,"Notemojes");
    TextDrawShowForAll(Textdrawrace);
    TextDrawShowForAll(Textdrawrace2);
    TextDrawShowForAll(Textdrawrace3);
    TextDrawShowForAll(Textdrawrace4);
    TextDrawShowForAll(Textdrawrace5);
	if(CountAmountGet == 0)
	{
	KillTimer(CountTimerGET);
	TextDrawHideForAll(Textdrawrace);
	TextDrawHideForAll(Textdrawrace2);
	TextDrawHideForAll(Textdrawrace3);
	TextDrawHideForAll(Textdrawrace4);
	TextDrawHideForAll(Textdrawrace5);
	foreach(Player, i)
	{
	if(Minigamer_{i} == false && Iter_Count(_Minigamer) >= 1)
    {
	format(string2,sizeof(string2), "[INFO]: Ud ya no puede unirse a Evento No Te Mojes, Pues ya ha Comenzado!");
	SendClientMessage(i,red, string2);
	}
	}
	}
	return CountAmountGet--;
}

forward CountTillRhino(playerid);
public CountTillRhino(playerid)
{
    format(string2,sizeof(string2),"~r~Nuevo evento!~n~~w~El Evento ~r~Rhino ~w~Empieza en %d Segundos~n~Use ~r~/Rhino ~w~Para Entrar!",CountAmountRhino);
    TextDrawSetString(Textdrawrace,string2);
    EnviarComandoRace2(playerid,"Rhino");
    TextDrawShowForAll(Textdrawrace);
    TextDrawShowForAll(Textdrawrace2);
    TextDrawShowForAll(Textdrawrace3);
    TextDrawShowForAll(Textdrawrace4);
    TextDrawShowForAll(Textdrawrace5);
	if(CountAmountRhino == 0)
	{
	KillTimer(CountTimerRhino);
	TextDrawHideForAll(Textdrawrace);
	TextDrawHideForAll(Textdrawrace2);
	TextDrawHideForAll(Textdrawrace3);
	TextDrawHideForAll(Textdrawrace4);
	TextDrawHideForAll(Textdrawrace5);
	foreach(Player, i)
	{
	if(PlayerInfo[i][PlayerinRhino] == 0 && rhinorank >= 1)
    {
	format(string2,sizeof(string2), "[INFO]: Ud ya no puede unirse a Evento de Rhinos, Pues ya ha Comenzado!");
	SendClientMessage(i,red, string2);
	}
	}
	}
	return CountAmountRhino--;
}

public ChangeTextWebsite(text[])
{
TextDrawHideForAll(TextDrawColoRamdon);
TextDrawSetString(TextDrawColoRamdon,text);
TextDrawShowForAll(TextDrawColoRamdon);
return 1;
}

public ChangeWebsite()
{
if(TextWebsiteCount > websitecount) TextWebsiteCount = 0;
switch(TextWebsiteCount)
{
case 0:{ChangeTextWebsite("~w~R~w~e~w~v~w~o~w~l~w~u~w~c~w~i~w~on ~r~L~r~a~r~t~r~i~r~n~r~a");}

case 1:{ChangeTextWebsite("~b~F~b~r~b~e~b~e~b~r~b~o~b~a~b~m ~w~E~w~s~w~p~w~a~w~n~w~o~w~l");}

case 2:{ChangeTextWebsite("~w~R~w~e~w~v~w~o~w~l~w~u~w~c~w~i~w~on ~r~L~r~a~r~t~r~i~r~n~r~a");}

case 3:{ChangeTextWebsite("~b~F~b~r~b~e~b~e~b~r~b~o~b~a~b~m ~w~E~w~s~w~p~w~a~w~n~w~o~w~l");}

case 4:{ChangeTextWebsite("~w~R~w~e~w~v~w~o~w~l~w~u~w~c~w~i~w~on ~r~L~r~a~r~t~r~i~r~n~r~a");}

case 5:{ChangeTextWebsite("~b~F~b~r~b~e~b~e~b~r~b~o~b~a~b~m ~w~E~w~s~w~p~w~a~w~n~w~o~w~l");}

case 6:{ChangeTextWebsite("~w~R~w~e~w~v~w~o~w~l~w~u~w~c~w~i~w~on ~r~L~r~a~r~t~r~i~r~n~r~a");}

case 7:{ChangeTextWebsite("~b~F~b~r~b~e~b~e~b~r~b~o~b~a~b~m ~w~E~w~s~w~p~w~a~w~n~w~o~w~l");}

case 8:{ChangeTextWebsite("~r~R");}

case 9:{ChangeTextWebsite("~r~R~r~E");}

case 10:{ChangeTextWebsite("~r~R~r~E~r~V");}

case 11:{ChangeTextWebsite("~r~R~r~E~r~V~r~O");}

case 12:{ChangeTextWebsite("~r~R~r~E~r~V~r~O~r~L");}

case 13:{ChangeTextWebsite("~r~R~r~E~r~V~r~O~r~L~r~U");}

case 14:{ChangeTextWebsite("~r~R~r~E~r~V~r~O~r~L~r~U~r~C");}

case 15:{ChangeTextWebsite("~r~R~r~E~r~V~r~O~r~L~r~U~r~C~r~I");}

case 16:{ChangeTextWebsite("~r~R~r~E~r~V~r~O~r~L~r~U~r~C~r~I~r~O");}

case 17:{ChangeTextWebsite("~r~R~r~E~r~V~r~O~r~L~r~U~r~C~r~I~r~O~r~N");}

case 18:{ChangeTextWebsite("~r~R~r~E~r~V~r~O~r~L~r~U~r~C~r~I~r~O~r~N ~w~L");}

case 19:{ChangeTextWebsite("~r~R~r~E~r~V~r~O~r~L~r~U~r~C~r~I~r~O~r~N ~w~L~w~A");}

case 20:{ChangeTextWebsite("~r~R~r~E~r~V~r~O~r~L~r~U~r~C~r~I~r~O~r~N ~w~L~w~A~w~T");}

case 21:{ChangeTextWebsite("~r~R~r~E~r~V~r~O~r~L~r~U~r~C~r~I~r~O~r~N ~w~L~w~A~w~T~w~I");}

case 22:{ChangeTextWebsite("~r~R~r~E~r~V~r~O~r~L~r~U~r~C~r~I~r~O~r~N ~w~L~w~A~w~T~w~I~w~N");}

case 23:{ChangeTextWebsite("~r~R~r~E~r~V~r~O~r~L~r~U~r~C~r~I~r~O~r~N ~w~L~w~A~w~T~w~I~w~N~w~A");}

}
TextWebsiteCount++;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{

if(pickupid == parkour2g)
{
SendClientMessage(playerid,green,"¡FELICIDADES! Ganaste el parkour 2 y te llevas 15 de score + $25000 + vida y chaleco restaurados");
SetPlayerHealth(playerid,100);
SetPlayerArmour(playerid,100);
GivePlayerMoney(playerid,25000);
SetPlayerScore(playerid, GetPlayerScore(playerid) + 15);
SetPlayerPos(playerid,2493.9609,-1685.3671, 13.5114);
InformacionL[playerid][PAR] = 0;
SetPlayerVirtualWorld(playerid,0);
PlayerInfo[playerid][Kills] = PlayerInfo[playerid][Kills]+ 15;
GameTextForPlayer(playerid,"~b~FELI ~r~CIDA ~b~DES ~n~~y~GANASTE PARKOUR 2",4000,3);
}

if(pickupid == parkour1g)
{
SendClientMessage(playerid,green,"¡FELICIDADES! Ganaste el parkour y te llevas 15 de score + $25000 + vida y chaleco restaurados");
SetPlayerHealth(playerid,100);
SetPlayerArmour(playerid,100);
GivePlayerMoney(playerid,25000);
SetPlayerScore(playerid, GetPlayerScore(playerid) + 15);
SetPlayerPos(playerid,2058.01, 2433.56, 165.67);
SendClientMessage(playerid,azulcito,"[INFO]: ¡Bienvenido a PARKOUR2! A ganar.");
InformacionL[playerid][PAR] = 1;
SetPlayerVirtualWorld(playerid,5);
PlayerInfo[playerid][Kills] = PlayerInfo[playerid][Kills]+ 15;
GameTextForPlayer(playerid,"~b~FELI ~r~CIDA ~b~DES ~n~~y~GANASTE PARKOUR Y AHORA ESTAS EN PARKOUR2",4000,3);
}



new Doorstring[248];
//------- parkour premio
if(ParkourPremio == pickupid)
{
   for(new i = 0; i < MAX_PLAYERS; i++)
   {
     if(IsPlayerConnected(i))
      {
        if(SPARK == 1)
			{
			SetPlayerVirtualWorld(i,0);
			}
     }
}

    Run++;
    if(Run <= 10)
	{
 	    format(Doorstring, sizeof(Doorstring), ">> %s {ffffff}Gano el evento {80FF80}|Parkour| {ffffff}Premio: $10000 +10 Score {FF0000}(Juego Terminado)",PlayerName2(playerid),Run);
        SendClientMessageToAll(0x80FF80C8, Doorstring);
 		SpawnPlayer(playerid);
	    SetPlayerScore(playerid, GetPlayerScore(playerid) +10); SavePlayer(playerid);
        parkon = 0;
        #if defined USE_STATS
        PlayerInfo[playerid][Kills] = PlayerInfo[playerid][Kills]+10;
        #endif
 		GivePlayerMoney(playerid, 10000);
	}
}

if(ParkourLose == pickupid)
{
SendClientMessage(playerid,0x80FF80C8, "Tu no has ganado en el evento |parkour| {ffffff}Suerte a la Proxima");
SpawnPlayer(playerid);
}
//OnWeaponDropPickup(playerid, pickupid);

new propid = -1;
for(new id; id<MAX_PROPERTIES; id++)
{
	if(PropInfo[id][PickupNr] == pickupid)
	{
		propid = id;
        break;
	}
}
if(propid != -1)
{
    new str[1000], str1[1000], str2[1000], str3[1000];
	SendClientMessage(playerid, -1, "||====== Info. Propiedades ======||");
	format(str, sizeof(str), "{00FF00}Nombre Propiedad: {FF7D00}%s", PropInfo[propid][PropName]);
	SendClientMessage(playerid, -1, str);
	format(str1, sizeof(str1), "{00FF00}Valor: {FF0000}$%d", PropInfo[propid][PropValue]);
	SendClientMessage(playerid, -1, str1);
	format(str2, sizeof(str2), "{00FF00}Ganancias: {00CB38}$%d", PropInfo[propid][PropEarning]);
	SendClientMessage(playerid, -1, str2);
	format(str3, sizeof(str3), "{00FF00}Propietario: {0000FF}%s", PropInfo[propid][PropOwner]);
	SendClientMessage(playerid, -1, str3);
	SendClientMessage(playerid, -1, "||========= {FF0000}R{FFFFFF}L {00FF00}2015 {FFFFFF}==========||");
}

/*if(MPick == pickupid)
{
	new strm[1000];
	RewardCalc(playerid,200000,2000000);
	format(strm,sizeof(strm),"[MiniEvento]: {FFFFFF}El Player %s ha Encontrado el Maletin y se lleva: $%d, 50 de Score y 450 Exp.",PlayerName2(playerid),reward);
	SendClientMessageToAll(COLOR_AMARILLO,"[MiniEvento]: {FFFFFF}El Player que Encuentre el Maletin se Ganara Score, Dinero y Experiencia!");
	GivePlayerMoney(playerid,reward);
	SetPlayerScore(playerid,GetPlayerScore(playerid)+50);
	PlayerInfo[playerid][Kills]=PlayerInfo[playerid][Kills]+50;
	PlayerInfo[playerid][Experiencia]=PlayerInfo[playerid][Experiencia]+450;
	SavePlayer(playerid);
	DestroyPickup(MPick);
	foreach(Player, i)
	{
	    DisablePlayerCheckpoint(i);
	}
}*/

if(ParkPick1 == pickupid || ParkPick2 == pickupid)
{
	if(PlayerInfo[playerid][PlayerinParkour] == 1)
	{
		new strwin[1000];
	    RewardCalc(playerid,20000,200000);
		format(strwin,sizeof(strwin),"{FF0000}[Evento Parkour]: {00FF00}%s {FFFFFF}Ha ganado el Evento Parkour! {00EEFF}[Premio: $%d]",pName(playerid), reward);
		SendClientMessageToAll(-1,strwin);
		GivePlayerMoney(playerid,reward);
		TextDrawHideForAll(ConcText);
        new strev[1000];
		format(strev,sizeof(strev),"~b~Ganador: ~n~~w~%s",pName(playerid));
		TextDrawSetString(GanoText,strev);
		TextDrawShowForAll(GanoText);
		TextDrawShowForAll(GanoText2);
		SetTimer("SacarGano",12000,0);
		if(ArenaP1==1) {DestroyPickup(ParkPick1);}
		else if(ArenaP2==1) {DestroyPickup(ParkPick2);}
		parkplaying = 0;
		parkrank = 0;
		parkon = 0;
		SPARK = 0;
		SEVENTO = 0;
		ArenaP1 = 0;
		ArenaP2 = 0;
		startvar[4] = 0;
		KillTimer(parktimer);
	    foreach(Player, i)
		{
			if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinParkour] == 1)
			{
			 	PlayerInfo[i][PlayerinParkour] = 0;
				PlayerInfo[i][EnEvento] = 0;
				SetPlayerVirtualWorld(i,0);
				SetPlayerInterior(i, 0);
				SetPlayerHealth(i,100);
				SpawnPlayer(i);
				TogglePlayerControllable(i, 1);
				SetCameraBehindPlayer(i);
			}
		}
	}
}

if(LabPick1 == pickupid)
{
	if(PlayerInfo[playerid][PlayerinLaberinto] == 1)
	{
		new strwin[1000];
	    RewardCalc(playerid,20000,200000);
		format(strwin,sizeof(strwin),"{FF0000}[Evento Laberinto]: {00FF00}%s {FFFFFF}Ha ganado el Evento Laberinto! {00EEFF}[Premio: $%d]",pName(playerid), reward);
		SendClientMessageToAll(-1,strwin);
		GivePlayerMoney(playerid,reward);
		TextDrawHideForAll(ConcText);
        new strev[1000];
		format(strev,sizeof(strev),"~b~Ganador: ~n~~w~%s",pName(playerid));
		TextDrawSetString(GanoText,strev);
		TextDrawShowForAll(GanoText);
		TextDrawShowForAll(GanoText2);
		SetTimer("SacarGano",12000,0);
		if(ArenaL1==1) {DestroyPickup(LabPick1);}
		labplaying = 0;
		labrank = 0;
		labon = 0;
		SLAB = 0;
		SEVENTO = 0;
		ArenaL1 = 0;
		startvar[4] = 0;
		KillTimer(parktimer);
	    foreach(Player, i)
		{
			if(IsPlayerConnected(i) && PlayerInfo[i][PlayerinLaberinto] == 1)
			{
			 	PlayerInfo[i][PlayerinLaberinto] = 0;
				PlayerInfo[i][EnEvento] = 0;
				SetPlayerVirtualWorld(i,0);
				SetPlayerInterior(i, 0);
				SetPlayerHealth(i,100);
				SpawnPlayer(i);
				TogglePlayerControllable(i, 1);
				SetCameraBehindPlayer(i);
			}
		}
	}
}

if(PickPara1 == pickupid || PickPara2 == pickupid)
{
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~g~Has Terminado Paracaidismo!~n~~b~Premio: $10000 + 25 Score");
GameTextForPlayer(playerid,string,8000,6);
SendClientMessage(playerid,COLOR_VERDE,"[INFO]: {FFFFFF}Felicidades por terminar Paracaidismo! {0000FF}[Premio: $10000 + 25 Score]");
SetPlayerScore(playerid,GetPlayerScore(playerid)+25);
PlayerInfo[playerid][Kills]=PlayerInfo[playerid][Kills]+25;
GivePlayerMoney(playerid,GetPlayerMoney(playerid)+10000);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
InformacionL[playerid][PAR] = 0;
Minijuego[playerid] = 0;
SavePlayer(playerid);
SpawnPlayer(playerid);
return 1;
}

if(PickPara1 == pickupid)
{
SendClientMessage(playerid,0x00FF80C8, "Tu no has ganado en el evento |Paracaidismo| {ffffff}Suerte a la Proxima");
SpawnPlayer(playerid);
}

if(Arma1 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~MP5 con~n~~b~200 municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,29,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma2 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~M4 con~n~~b~200 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,31,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma3 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~9mm con~n~~b~200 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,22,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma4 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~Rifle con~n~~b~200 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,33,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma5 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~Shotgun con~n~~b~200 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,25,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma6 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~Katana con~n~~b~0 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,8,1);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma7 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~Desert con~n~~b~200 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,24,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma8 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~Aka 47 con~n~~b~200 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,30,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma9 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~Knife con~n~~b~0 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,4,1);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma10 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~Sawn Off con~n~~b~200 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,26,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma11 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~MP5 con ~b~~n~200 municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,29,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma12 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~M4 con~n~~b~200 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,31,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma13 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~9mm con~n~~b~200 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,22,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma14 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~Rifle con~n~~b~200 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,33,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma15 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~Shotgun con~n~~b~200 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,25,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma16 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~Katana con~n~~b~0 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,8,1);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma17 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~Desert con~n~~b~200 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,24,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma18 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~Aka 47 con~n~~b~200 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,30,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma19 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~Knife con~n~~b~0 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,4,1);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(Arma20 == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~Sawn Off con~n~~b~200 Municiones!");
GameTextForPlayer(playerid,string,8000,6);
GivePlayerWeapon(playerid,26,200);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(VidaHg == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~r~Botiquin Vida~n~~b~Vida Regenerada!");
GameTextForPlayer(playerid,string,8000,6);
SetPlayerHealth(playerid,100);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(ChalecoHg == pickupid)
{
if(PlayerInfo[playerid][PlayerinHg] == 0) return 1;
new string[500];
format(string,sizeof(string),"_~n~_~n~_~n~_~n~_~n~_~n~~b~has agarrado~n~~w~Equipacion Chaleco~n~~b~Chaleco Regenerado!");
GameTextForPlayer(playerid,string,8000,6);
SetPlayerArmour(playerid,100);
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(SPW1 == pickupid || SPW2 == pickupid || SPW3 == pickupid || SPW4 == pickupid || SPW5 == pickupid || SPW6 == pickupid || SPW7 == pickupid || SPW8 == pickupid || SPW9 == pickupid)
{
new iString[1000];
strcat(iString, "{FFFFFF}San Fierro\n");
strcat(iString, "{FFFFFF}Los Santos\n");
strcat(iString, "{FFFFFF}Las Venturas\n");
strcat(iString, "{FFFFFF}Desmadre\n");
strcat(iString, "{FFFFFF}Aeropuerto SF\n");
strcat(iString, "{FFFFFF}Aeropuerto LS\n");
strcat(iString, "{FFFFFF}Aeropuerto LV\n");
strcat(iString, "{FFFFFF}Aeropuerto Aband.\n");
strcat(iString, "{FFFFFF}Avion\n");
strcat(iString, "{FFFFFF}Bosque\n");
strcat(iString, "{FFFFFF}Colador\n");
strcat(iString, "{FFFFFF}Bosque\n");
strcat(iString, "{FFFFFF}Amor");
ShowPlayerDialog(playerid, 9145, DIALOG_STYLE_LIST, "{ffb800}Teles Menu:", iString, "Ok", "");
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}

if(SPW == pickupid)
{
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
SetPlayerPos(playerid, 255.9986, 1711.9020, -11.2200);
SetPlayerInterior(playerid, 0);
SetPlayerVirtualWorld(playerid, 0);
SetPlayerTime(playerid,24,0);
return 1;
}

if(ARMS1 == pickupid || ARMS2 == pickupid || ARMS3 == pickupid || ARMS4 == pickupid || ARMS5 == pickupid || ARMS6 == pickupid || ARMS7 == pickupid || ARMS8 == pickupid || ARMS9 == pickupid)
{
CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/armas");
PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
}
return 1;
}

forward FinCastigo(playerid);
public FinCastigo(playerid)
{
	NoChat[playerid] = 0;
	SendClientMessage(playerid, green, "[INFO]: {FFFFFF}Se termino tu Castigo. Intenta no volver a Hacerlo!");
	return 1;
}

forward VolverRegenerar(playerid);
public VolverRegenerar(playerid)
{
	UsoRegenerar[playerid] = 0;
	SendClientMessage(playerid, orange,"[INFO]: Ya puedes volver a usar /Regenerar!");
	return 1;
}

forward VolverInfibalas(playerid);
public VolverInfibalas(playerid)
{
	UsoInfibalas[playerid] = 0;
	SendClientMessage(playerid, orange,"[INFO]: Ya puedes volver a usar /Infibalas!");
	return 1;
}

forward VolverSolicitar(playerid);
public VolverSolicitar(playerid)
{
	YaSolicito[playerid] = 0;
	SendClientMessage(playerid, green,"[INFO]: ¡Ya puedes volver a usar /Solicitar!");
	return 1;
}

forward VolverGuerra(playerid);
public VolverGuerra(playerid)
{
	UsoGuerra[playerid] = 0;
	SendClientMessage(playerid, orange,"[INFO]: Ya puedes volver a usar /Mguerra!");
	return 1;
}

forward VolverAnuncio(playerid);
public VolverAnuncio(playerid)
{
	UsoAnuncio[playerid] = 0;
	return 1;
}

forward VolverTienda(playerid);
public VolverTienda(playerid)
{
	YaUsoTienda[playerid] = 0;
	SendClientMessage(playerid,COLOR_NARANJA,"[INFO]: {FFFFFF}Ya puedes volver a usar /Tienda!");
	return 1;
}

forward VolverPesada(playerid);
public VolverPesada(playerid)
{
	YaUsoPesada[playerid] = 0;
	SendClientMessage(playerid,COLOR_NARANJA,"[INFO]: {FFFFFF}Ya puedes volver a usar /Armaspesada!");
	return 1;
}

forward Bajaymas(playerid);
public Bajaymas(playerid)
{
MoveObject(Palo, 82.35, 87.96, 990.31,5.0);
MoveObject(Palo2, 82.35, 90.20, 990.31, 5.0);
MoveObject(Palo3, 82.35, 92.32, 990.31, 5.0);
MoveObject(Palo4, 82.35, 94.54, 990.31, 5.0);
MoveObject(Palo5, 82.45, 96.77, 990.31, 5.0);
MoveObject(Palo6, 82.34, 98.90, 990.31, 5.0);
MoveObject(Palo7, 82.36, 100.99, 990.31, 5.0);
MoveObject(Palo8, 82.36, 102.76, 990.31, 5.0);

return 1;
}

forward Sevahumo(playerid);
public Sevahumo(playerid)
{
DestroyObject(Maquina);
DestroyObject(Maquina1);
DestroyObject(Maquina2);
DestroyObject(Maquina3);
DestroyObject(Maquina4);
DestroyObject(Maquina5);
DestroyObject(Maquina6);
DestroyObject(Maquina7);
DestroyObject(Maquina8);
DestroyObject(Maquina9);
DestroyObject(Maquina10);
return 1;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pVip] >= 9)
	{
		new Float:health;
		GetPlayerHealth(playerid,health);
		if(health >= 70)
		{
			TeleportPlayer(playerid, fX, fY, fZ+1);
		}
		else
		GameTextForPlayer(playerid,"_~n~_~n~~w~llene su ~r~vida",4000,6);
	}
  	return 1;
}

forward KickearPlayer(playerid);
public KickearPlayer(playerid)
{
	Kick(playerid);
	return 1;
}

forward BanearPlayer(playerid);
public BanearPlayer(playerid)
{
	Ban(playerid);
	return 1;
}

forward RBanearPlayer(playerid);
public RBanearPlayer(playerid)
{
	RangeBan(playerid);
	return 1;
}
forward Vuelveltune(playerid);
public Vuelveltune(playerid)
{
	Usoltune[playerid] = 0;
	SendClientMessage(playerid,green,"[INFO]: Ya puedes usar /ltune de nuevo.");
	return 1;
}

forward noche(playerid);
public noche(playerid)
{
for(new i = 0; i < GetMaxPlayers(); i ++)
{
SetPlayerTime(i,24,0);
SetPlayerAttachedObject(i,9,19528,2,0.170000,0.000000,0.000000);
}
return 1;
}

forward UsodeComando(playerid);
public UsodeComando(playerid)
{
	Saludos[playerid]=0;
	return 1;
}

forward EliminarSaludo(playerid);
public EliminarSaludo(playerid)
{
	TextDrawHideForAll(SaludoTexto);
	TextDrawSetString(SaludoTexto,"");
	TextDrawHideForAll(Z1);
	return 1;
}

forward TimerAdios(playerid);
public TimerAdios(playerid)
{
	TextDrawHideForAll(DespedidaTexto);
	TextDrawSetString(DespedidaTexto,"");
	TextDrawHideForAll(Z3);
	return 1;
}



stock ObtenerVelocidad(playerid)
{
	//new Float:PosX, Float:PosY, Float:PosZ;
	new Float:PlayerSpeedDistance;
	GetVehicleVelocity(GetPlayerVehicleID(playerid), PosX, PosY, PosZ);
	PlayerSpeedDistance = floatmul(floatsqroot(floatadd(floatadd(floatpower( PosX, 2), floatpower(PosY, 2)), floatpower(PosZ, 2))), 170.0);
	new spe = floatround(PlayerSpeedDistance * 1);
	return spe;
}

public DB_OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
        if(((newkeys & KEY_SUBMISSION) && !(oldkeys & KEY_SUBMISSION)) || ((newkeys & 1024) && !(oldkeys & 1024)) )
        {
        if(DBP_Stats[playerid] == -1) return 1;
        ShowPlayerDialog(playerid, DB_DIALOG+1, DIALOG_STYLE_MSGBOX, "Derby", "Leave Derby area??", "Ok", "No");
        }
        return 1;
}

public DBP_Spawn(playerid)
{
    if(DBP_Stats[playerid] == -1) return 1;
        new RandomDerby = random(10);

    SetPlayerPosEx(playerid, DB_Spawns[DBP_Stats[playerid]][RandomDerby][0], DB_Spawns[DBP_Stats[playerid]][RandomDerby][1], DB_Spawns[DBP_Stats[playerid]][RandomDerby][2]+2, random(360), 0, 1);

        DestroyVehicle(DBP_Vehicle[playerid]);
        DBP_Vehicle[playerid] = CreateVehicle(DB_VehicleID,DB_Spawns[DBP_Stats[playerid]][RandomDerby][0], DB_Spawns[DBP_Stats[playerid]][RandomDerby][1], DB_Spawns[DBP_Stats[playerid]][RandomDerby][2]+2,0,random(126), random(126),50000);

        ResetPlayerWeapons(playerid);
        SetVehicleVirtualWorld(DBP_Vehicle[playerid],GetPlayerVirtualWorld(playerid));
        LinkVehicleToInterior(DBP_Vehicle[playerid],GetPlayerInterior(playerid));
        PutPlayerInVehicle(playerid, DBP_Vehicle[playerid], 0);
        return 1;
}

public DBP_Exit(playerid)
{
        if(DBP_Stats[playerid] == -1) return 1;
        DestroyVehicle(DBP_Vehicle[playerid]);
        DBP_Stats[playerid] = -1;
        SpawnPlayer(playerid);
        return 1;
}

public SetPlayerPosEx(playerid, Float:x, Float:y, Float:z, Float:ang, int, vw)
{
        SetPlayerPos(playerid, x, y, z);
        SetPlayerFacingAngle(playerid, ang);
        SetPlayerInterior(playerid, int);
        SetPlayerVirtualWorld(playerid, vw);
        SetCameraBehindPlayer(playerid);
        return 1;
}

forward MapeoEvento();
public MapeoEvento()
{
	return 1;
}

/*forward RhinoDentro(playerid);
public RhinoDentro(playerid)
{
	----------------------------------------------------
	new LVehicleID,Float:X,Float:Y,Float:Z, Float:Angle,int1;
	GetPlayerPos(playerid, X,Y,Z);
	GetPlayerFacingAngle(playerid,Angle);
	int1 = GetPlayerInterior(playerid);
	LVehicleID = CreateVehicle(432, X,Y,Z, Angle, -1, -1, -1);
	SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid));
	LinkVehicleToInterior(LVehicleID,int1);
	PutPlayerInVehicle(playerid,LVehicleID,0);
	----------------------------------------------------
    SetPlayerCameraPos(playerid, 1293.4463, 2749.2878, 63.4511);
    SetPlayerCameraLookAt(playerid, 1293.4631, 2750.2920, 62.6561);
	return 1;
}

forward RhinoDentro2(playerid);
public RhinoDentro2(playerid)
{
	----------------------------------------------------
	new LVehicleID,Float:X,Float:Y,Float:Z, Float:Angle,int1;
	GetPlayerPos(playerid, X,Y,Z);
	GetPlayerFacingAngle(playerid,Angle);
	int1 = GetPlayerInterior(playerid);
	LVehicleID = CreateVehicle(432, X,Y,Z, Angle, -1, -1, -1);
	SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid));
	LinkVehicleToInterior(LVehicleID,int1);
	PutPlayerInVehicle(playerid,LVehicleID,0);
	----------------------------------------------------
    SetPlayerCameraPos(playerid, -1284.3754, 2914.0706, 275.4362);
    SetPlayerCameraLookAt(playerid, -1284.4231, 2915.0679, 275.1311);
	return 1;
}*/

forward TeleportCam(playerid, step, Float:xg, Float:yg, Float:zg, Float:ag);
public TeleportCam(playerid, step, Float:xg, Float:yg, Float:zg, Float:ag)
{
switch (step)
{
case 1:
{
if(GetPVarInt(playerid,"ENDTP") > gettime() || IsPlayerInRangeOfPoint(playerid, 5.0, xg, yg, zg)) return true;
SetPVarInt(playerid,"ENDTP",gettime() + 10);
PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
tpp[playerid][0] = xg,tpp[playerid][1] = yg,tpp[playerid][2] = zg,tpp[playerid][3] = ag; // write end coords
GetPlayerPos(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]); // check start coords and write
if(IsPlayerInAnyVehicle(playerid) && 2 == GetPlayerState(playerid)) SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), playerid+1);
SetPlayerVirtualWorld(playerid,playerid+1);
TogglePlayerControllable(playerid,0);
SetPlayerCameraPos(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]+20);
SetPlayerCameraLookAt(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]);
SetTimerEx("TeleportCam",1000,false,"ii",playerid,2);
}
case 2:
{
PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
SetPlayerCameraPos(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]+50);
SetPlayerCameraLookAt(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]);
SetTimerEx("TeleportCam",1000,false,"ii",playerid,3);
}
case 3:
{
PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
SetPlayerCameraPos(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]+100);
SetPlayerCameraLookAt(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]);
SetTimerEx("TeleportCam",1000,false,"ii",playerid,4);
}
case 4:
{
PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
SetPlayerCameraPos(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]+200);
SetPlayerCameraLookAt(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]);
SetTimerEx("TeleportCam",1000,false,"ii",playerid,5);
}
case 5:
{
if(IsPlayerInAnyVehicle(playerid) && 2 == GetPlayerState(playerid))
{
SetVehiclePos(GetPlayerVehicleID(playerid),tpp[playerid][0],tpp[playerid][1],tpp[playerid][2]);
SetVehicleZAngle(GetPlayerVehicleID(playerid),tpp[playerid][3]);
}
else
{
SetPlayerPos(playerid,tpp[playerid][0],tpp[playerid][1],tpp[playerid][2]);
SetPlayerFacingAngle(playerid,tpp[playerid][3]);
}
InterpolateCameraPos(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]+200, tpp[playerid][0],tpp[playerid][1],tpp[playerid][2]+200, 3000);
InterpolateCameraLookAt(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2], tpp[playerid][0],tpp[playerid][1],tpp[playerid][2], 3000);
SetTimerEx("TeleportCam",4000,false,"ii",playerid,6);
}
case 6:
{
PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
SetPlayerCameraPos(playerid, tpp[playerid][0],tpp[playerid][1],tpp[playerid][2]+100);
SetPlayerCameraLookAt(playerid, tpp[playerid][0],tpp[playerid][1],tpp[playerid][2]);
SetTimerEx("TeleportCam",1000,false,"ii",playerid,7);
}
case 7:
{
PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
SetPlayerCameraPos(playerid, tpp[playerid][0],tpp[playerid][1],tpp[playerid][2]+50);
SetPlayerCameraLookAt(playerid, tpp[playerid][0],tpp[playerid][1],tpp[playerid][2]);
SetTimerEx("TeleportCam",1000,false,"ii",playerid,8);
}
case 8:
{
PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
TogglePlayerControllable(playerid, true);
SetPlayerVirtualWorld(playerid,0);
if(IsPlayerInAnyVehicle(playerid) && 2 == GetPlayerState(playerid)) SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
}
return true;
}

stock LoadProperties()
{
	if(fexist("PropertySystem/PropertyInfo.txt"))
	{
	    CountProperties();
		new Argument[9][70];
		new entry[256], BoughtProps;
		new File: propfile = fopen("PropertySystem/PropertyInfo.txt", io_read);
	    if (propfile)
		{
		    for(new id; id<PropertiesAmount; id++)
			{
				fread(propfile, entry);
				split(entry, Argument, ',');
				format(PropInfo[id][PropName], 64, "%s", Argument[0]);
				PropInfo[id][PropX] = floatstr(Argument[1]);
				PropInfo[id][PropY] = floatstr(Argument[2]);
				PropInfo[id][PropZ] = floatstr(Argument[3]);
				PropInfo[id][PropValue] = strval(Argument[4]);
				PropInfo[id][PropEarning] = strval(Argument[5]);
				format(PropInfo[id][PropOwner], MAX_PLAYER_NAME, "%s", Argument[6]);
				PropInfo[id][PropIsBought] = strval(Argument[7]);
				PropInfo[id][PickupNr] = CreatePickup(1273, 1, PropInfo[id][PropX], PropInfo[id][PropY], PropInfo[id][PropZ]);
    			if(PropInfo[id][PropIsBought] == 1)
				{
				    BoughtProps++;
				}
			}
			fclose(propfile);
			printf("===================================");
			printf("||    Create %d Propiedades        ||", PropertiesAmount);
			printf("||%d de las propiedades se compran ||", BoughtProps);
			printf("===================================");
		}
	}
}

stock SaveProperties()
{
	new entry[256];
	new File: propfile = fopen("PropertySystem/PropertyInfo.txt", io_write);
	for(new id; id<PropertiesAmount; id++)
	{
	    format(entry, 128, "%s,%.2f,%.2f,%.2f,%d,%d,%s,%d \r\n",PropInfo[id][PropName], PropInfo[id][PropX], PropInfo[id][PropY], PropInfo[id][PropZ], PropInfo[id][PropValue], PropInfo[id][PropEarning], PropInfo[id][PropOwner], PropInfo[id][PropIsBought]);
		fwrite(propfile, entry);
	}
	printf("Saved %d Properties!", PropertiesAmount);
	fclose(propfile);
}

/*forward split(const strsrc[], strdest[][], delimiter);
public split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
	    if(strsrc[i]==delimiter || i==strlen(strsrc)){
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}*/

stock CountProperties()
{
    new entry[256];
	new File: propfile = fopen("PropertySystem/PropertyInfo.txt", io_read);
	while(fread(propfile, entry, 256))
	{
		PropertiesAmount++;
  	}
  	fclose(propfile);
}

forward IsPlayerNearProperty(playerid);
public IsPlayerNearProperty(playerid)
{
	new Float:Distance;
	for(new prop; prop<PropertiesAmount; prop++)
	{
	    Distance = GetDistanceToProperty(playerid, prop);
	    if(Distance < 1.0)
	    {
	        return prop;
		}
	}
	return -1;
}

forward Float:GetDistanceToProperty(playerid, Property);
public Float:GetDistanceToProperty(playerid, Property)
{
	GetPlayerPos(playerid,x1,y1,z1);
	x2 = PropInfo[Property][PropX];
	y2 = PropInfo[Property][PropY];
	z2 = PropInfo[Property][PropZ];
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

stock GetPlayerID(const Name[])
{
	for(new i; i<MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			GetPlayerName(i, pname, sizeof(pname));
	        if(strcmp(Name, pname, true)==0)
	        {
	            return i;
			}
		}
	}
	return -1;
}

stock SendClientMessageToAllEx(exeption, color, const message[])
{
	for(new i; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(i != exeption)
		    {
		        SendClientMessage(i, color, message);
			}
		}
	}
}

stock encodepass(buf[]) {
	new length=strlen(buf);
    new s1 = 1;
    new s2 = 0;
    new n;
    for (n=0; n<length; n++)
    {
       s1 = (s1 + buf[n]) % 65521;
       s2 = (s2 + s1)     % 65521;
    }
    return (s2 << 16) + s1;
}

forward MapIconStreamer();
public MapIconStreamer()
{
	for(new i; i<MP; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new Float:SmallestDistance = 99999.9;
	        new CP, Float:OldDistance;
	        for(new propid; propid<PropertiesAmount; propid++)
	        {
	            OldDistance = GetDistanceToProperty(i, propid);
	            if(OldDistance < SmallestDistance)
	            {
	                SmallestDistance = OldDistance;
	                CP = propid;
				}
			}
			RemovePlayerMapIcon(i, 31);
			if(PropInfo[CP][PropIsBought] == 1)
			{
                SetPlayerMapIcon(i, 31, PropInfo[CP][PropX], PropInfo[CP][PropY], PropInfo[CP][PropZ], 32, 0);
			}
			else
			{
			    SetPlayerMapIcon(i, 31, PropInfo[CP][PropX], PropInfo[CP][PropY], PropInfo[CP][PropZ], 31, 0);
			}
		}
	}
}

forward PropertyPayout();
public PropertyPayout()
{
	new str[150];
	for(new i; i<MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerProps[i] > 0)
	        {
	            GivePlayerMoney(i, EarningsForPlayer[i]);
				format(str, 150, "{f20000}[INFO]: {00FF00}Usted recibio {00FF00}$%d {00FF00}de sus Propiedades!", EarningsForPlayer[i]);
				SendClientMessage(i, 0xFFFF00AA, str);
			}
		}
	}
}

//============================================================================
public Color1(playerid)
{
   new vehicleid = GetPlayerVehicleID(playerid);
   KillTimer(Tiempo1);
   ChangeVehicleColor(vehicleid, 1, 1);
   Tiempo2 = SetTimerEx("Color2", 1, 0, "d" ,playerid);
}

public Color2(playerid)
{
   new vehicleid = GetPlayerVehicleID(playerid);
   KillTimer(Tiempo2);
   ChangeVehicleColor(vehicleid, 2, 2);
   Tiempo3 = SetTimerEx("Color3", 1, 0, "d" ,playerid);
}

public Color3(playerid)
{
   new vehicleid = GetPlayerVehicleID(playerid);
   KillTimer(Tiempo3);
   ChangeVehicleColor(vehicleid, 3, 3);
   Tiempo4 = SetTimerEx("Color4", 1, 0, "d", playerid);
}

public Color4(playerid)
{
   new vehicleid = GetPlayerVehicleID(playerid);
   KillTimer(Tiempo4);
   ChangeVehicleColor(vehicleid, 4, 4);
   Tiempo5 = SetTimerEx("Color5", 1, 0, "d" ,playerid);
}

public Color5(playerid)
{
   new vehicleid = GetPlayerVehicleID(playerid);
   KillTimer(Tiempo5);
   ChangeVehicleColor(vehicleid, 5, 5);
   SetTimerEx("Color1", 1, 0, "d" ,playerid);
}
//*==========================================================================*//
public TimeNickAnn()
{
    TextDrawHideForAll(ByNickAnn);
    TextDrawSetString(ByNickAnn,"");
    TextDrawHideForAll(ByNickAnn1);
    TextDrawSetString(ByNickAnn1,"");
    return 1;
}

forward SacarGano();
public SacarGano()
{
	TextDrawHideForAll(GanoText);
	TextDrawHideForAll(GanoText2);
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	new str[1000],pDeaths,IPA[16];
    GetPlayerIp(clickedplayerid, IPA, sizeof IPA);
	if(PlayerInfo[clickedplayerid][Deaths] == 0) pDeaths = 1; else pDeaths = PlayerInfo[clickedplayerid][Deaths];

	new Vip[100];
	new rango[24];
if((PlayerInfo[clickedplayerid][Experiencia]>= 0 && PlayerInfo[clickedplayerid][Experiencia] <= 1000)) { rango = "Noob"; }
    else if((PlayerInfo[clickedplayerid][Experiencia]>= 1001 && PlayerInfo[clickedplayerid][Experiencia] <= 2000)) { rango = "Semi-Novato"; }
    else if((PlayerInfo[clickedplayerid][Experiencia]>= 2001 && PlayerInfo[clickedplayerid][Experiencia] <= 3500)) { rango = "Aprendíz"; }
    else if((PlayerInfo[clickedplayerid][Experiencia]>= 3501 && PlayerInfo[clickedplayerid][Experiencia] <= 5000)) { rango = "Novato"; }
    else if((PlayerInfo[clickedplayerid][Experiencia]>= 5001 && PlayerInfo[clickedplayerid][Experiencia] <= 6500)) { rango = "Veterano"; }
    else if((PlayerInfo[clickedplayerid][Experiencia]>= 6501 && PlayerInfo[clickedplayerid][Experiencia] <= 7000)) { rango = "Psicópata"; }
    else if((PlayerInfo[clickedplayerid][Experiencia]>= 7001 && PlayerInfo[clickedplayerid][Experiencia] <= 7500)) { rango = "Loco extremo"; }
    else if((PlayerInfo[clickedplayerid][Experiencia]>= 7501 && PlayerInfo[clickedplayerid][Experiencia] <= 8000)) { rango = "Asesino"; }
    else if((PlayerInfo[clickedplayerid][Experiencia]>= 8001 && PlayerInfo[clickedplayerid][Experiencia] <= 10000)) { rango = "Sicario Novato"; }
    else if((PlayerInfo[clickedplayerid][Experiencia]>= 10001 && PlayerInfo[clickedplayerid][Experiencia] <= 11500)) { rango = "Sicario"; }
    else if((PlayerInfo[clickedplayerid][Experiencia]>= 11501 && PlayerInfo[clickedplayerid][Experiencia] <= 12000)) { rango = "Asesino Pro"; }
    else if((PlayerInfo[clickedplayerid][Experiencia]>= 12001 && PlayerInfo[clickedplayerid][Experiencia] <= 13000)) { rango = "Rambo ._.!"; }
    else if((PlayerInfo[clickedplayerid][Experiencia]>= 13001 && PlayerInfo[clickedplayerid][Experiencia] <= 14500)) { rango = "Pro Killer"; }
    else if((PlayerInfo[clickedplayerid][Experiencia]>= 14501 && PlayerInfo[clickedplayerid][Experiencia] <= 25000)) { rango = "Kratos"; }
    else if((PlayerInfo[clickedplayerid][Experiencia]>= 25001 && PlayerInfo[clickedplayerid][Experiencia] <= 90000)) { rango = "DiosRL"; }
	new h, m, s;
    TotalGameTime(clickedplayerid, h, m, s);

	dUserSetINT(PlayerName2(clickedplayerid)).("hours", h);
	dUserSetINT(PlayerName2(clickedplayerid)).("minutes", m);
	dUserSetINT(PlayerName2(clickedplayerid)).("seconds", s);

	switch(PlayerInfo[clickedplayerid][pVip])
	{
	case 0: Vip = "{FFFFFF}Ninguno";
	case 1: Vip = "{3C3214}Silver";
	case 2: Vip = "{C3D5DF}Gold";
	case 3: Vip = "{DFC418}Premium";
	case 4: Vip = "{209193}Platinum";
	case 5: Vip = "{FF0000}Esmeralda";
	case 6: Vip = "{0C242E}Diamond";
	case 7: Vip = "{FF0000}Extremo";
	case 8: Vip = "{00FF00}Legendario";
	case 9: Vip = "{FFFF00}Dios";
	}
	
	format(string2, sizeof(string2), "{39EB16}%s {BCC3E1}",PlayerName2(clickedplayerid));
	format(str,sizeof(str),"{29FF0D}» Asesinatos: %d\n{0700D7}» Muertes: %d\n{0700D7}» Score Race: %d\n{29FF0D}» Duelos Ganados: %d\n{FF0000}» Duelos Perdidos: %d\n{29FF0D}» Score Evento: %d\n{0700D7}» Experiencia: %d\n{FF0000}» Nivel: %d\n{FFFF00}» AxoneCash: {0700D7}%d\n{FF8040}» KDR: %0.2f\n{29FF0D}» Rango: %s\n{0700D7}» Dinero: $%d\n{29FF0D}» Vip: %s\n{0700D7}» Tiempo SV: %d H. %d M. y %d S.\n{29FF0D}» Advertencias: %d\n{FF0000}» Kicks: %d",
	PlayerInfo[clickedplayerid][Kills],PlayerInfo[clickedplayerid][Deaths],PlayerInfo[clickedplayerid][ScoreRace],PlayerInfo[clickedplayerid][ScoreDueloWin],PlayerInfo[clickedplayerid][ScoreDueloLose],PlayerInfo[clickedplayerid][pScoreEvento],
	PlayerInfo[clickedplayerid][Experiencia],PlayerInfo[clickedplayerid][Nivel],PlayerInfo[clickedplayerid][AxoneCash],Float:PlayerInfo[clickedplayerid][Kills]/Float:pDeaths,rango,GetPlayerMoney(clickedplayerid),Vip,h,m,s,PlayerInfo[clickedplayerid][Warnings],PlayerInfo[clickedplayerid][Kicks]);
	return ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,string2,str,"Aceptar","");
}
public TimerMR(playerid)
{
 	TextDrawSetString(Textdraw2, RDTX[random(sizeof(RDTX))]);
	TextDrawSetString(Textdraw1, MR[random(sizeof(MR))]);
	return 1;
}
stock GetPlayerFirstName(playerid)
{
    new NickName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, NickName, MAX_PLAYER_NAME);
    strdel(NickName, strfind(NickName, "_"), strlen(NickName));
    return NickName;
}
stock GetPlayerLastName(playerid)
{
	new namestring[2][MAX_PLAYER_NAME];
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid,name,MAX_PLAYER_NAME);
	split(name, namestring, '_');
	return namestring[1];
}
stock N(playerid)
{
	new NA[200];
	format(NA, sizeof(NA), "%s %s", GetPlayerFirstName(playerid), GetPlayerLastName(playerid));
	return NA;
}
stock IsPlayerInFrontVehicle(playerid,vehicleid,Float:radius,Float:vehiclelength)
{
  new Float:x,Float:y,Float:z,Float:a;
  GetVehiclePos(vehicleid, x, y, z);
  GetPlayerFacingAngle(vehicleid, a);
  x += (vehiclelength* floatsin(-a, degrees));
  y += (vehiclelength* floatcos(-a, degrees));
  return IsPlayerInRangeOfPoint(playerid,radius,x,y,z);
}
/* ======================================================= © Copyright 2015 - Revolucion Latina 2015 ==============================================================*/
